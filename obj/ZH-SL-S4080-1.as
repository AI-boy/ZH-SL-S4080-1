opt subtitle "Microchip Technology Omniscient Code Generator (PRO mode) build 55553"

opt pagewidth 120

	opt pm

	processor	16F1938
clrc	macro
	bcf	3,0
	endm
clrz	macro
	bcf	3,2
	endm
setc	macro
	bsf	3,0
	endm
setz	macro
	bsf	3,2
	endm
skipc	macro
	btfss	3,0
	endm
skipz	macro
	btfss	3,2
	endm
skipnc	macro
	btfsc	3,0
	endm
skipnz	macro
	btfsc	3,2
	endm
pushw	macro
	movwi fsr1++
	endm
popw	macro
	moviw --fsr1
	endm
indf	equ	0
indf0	equ	0
indf1	equ	1
pc	equ	2
pcl	equ	2
status	equ	3
fsr0l	equ	4
fsr0h	equ	5
fsr1l	equ	6
fsr1h	equ	7
bsr	equ	8
wreg	equ	9
intcon	equ	11
c	equ	1
z	equ	0
pclath	equ	10
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 16 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 16 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x02,0x58,0x00,0x21,0x64,0x64,0x64,0x64 ;# 
# 18 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 18 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x32,0x01,0x01,0x01,0x05,0x05,0x01,0x01 ;# 
# 20 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 20 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 22 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 22 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 24 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 24 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 26 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 26 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 28 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 28 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 30 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
psect eeprom_data,class=EEDATA,delta=2,space=3 ;# 
# 30 "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
# 46 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF0 equ 00h ;# 
# 65 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INDF1 equ 01h ;# 
# 84 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCL equ 02h ;# 
# 103 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS equ 03h ;# 
# 166 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L equ 04h ;# 
# 185 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H equ 05h ;# 
# 207 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L equ 06h ;# 
# 226 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H equ 07h ;# 
# 245 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR equ 08h ;# 
# 296 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG equ 09h ;# 
# 315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH equ 0Ah ;# 
# 334 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
INTCON equ 0Bh ;# 
# 411 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTA equ 0Ch ;# 
# 472 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTB equ 0Dh ;# 
# 533 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTC equ 0Eh ;# 
# 594 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PORTE equ 010h ;# 
# 614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR1 equ 011h ;# 
# 675 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR2 equ 012h ;# 
# 731 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIR3 equ 013h ;# 
# 776 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR0 equ 015h ;# 
# 795 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1 equ 016h ;# 
# 801 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1L equ 016h ;# 
# 820 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR1H equ 017h ;# 
# 839 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1CON equ 018h ;# 
# 910 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T1GCON equ 019h ;# 
# 986 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR2 equ 01Ah ;# 
# 1005 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR2 equ 01Bh ;# 
# 1024 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T2CON equ 01Ch ;# 
# 1094 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON0 equ 01Eh ;# 
# 1153 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CPSCON1 equ 01Fh ;# 
# 1192 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISA equ 08Ch ;# 
# 1253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISB equ 08Dh ;# 
# 1314 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISC equ 08Eh ;# 
# 1375 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TRISE equ 090h ;# 
# 1395 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE1 equ 091h ;# 
# 1456 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE2 equ 092h ;# 
# 1512 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PIE3 equ 093h ;# 
# 1557 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OPTION_REG equ 095h ;# 
# 1639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCON equ 096h ;# 
# 1689 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WDTCON equ 097h ;# 
# 1747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCTUNE equ 098h ;# 
# 1804 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCCON equ 099h ;# 
# 1875 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
OSCSTAT equ 09Ah ;# 
# 1936 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRES equ 09Bh ;# 
# 1942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESL equ 09Bh ;# 
# 1961 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADRESH equ 09Ch ;# 
# 1980 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON0 equ 09Dh ;# 
# 2068 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ADCON1 equ 09Eh ;# 
# 2139 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATA equ 010Ch ;# 
# 2200 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATB equ 010Dh ;# 
# 2261 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATC equ 010Eh ;# 
# 2322 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LATE equ 0110h ;# 
# 2342 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON0 equ 0111h ;# 
# 2398 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM1CON1 equ 0112h ;# 
# 2463 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON0 equ 0113h ;# 
# 2519 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CM2CON1 equ 0114h ;# 
# 2584 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CMOUT equ 0115h ;# 
# 2609 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BORCON equ 0116h ;# 
# 2635 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FVRCON equ 0117h ;# 
# 2710 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON0 equ 0118h ;# 
# 2770 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
DACCON1 equ 0119h ;# 
# 2821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON0 equ 011Ah ;# 
# 2891 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SRCON1 equ 011Bh ;# 
# 2952 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
APFCON equ 011Dh ;# 
# 3007 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELA equ 018Ch ;# 
# 3064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ANSELB equ 018Dh ;# 
# 3121 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADR equ 0191h ;# 
# 3127 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRL equ 0191h ;# 
# 3146 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEADRH equ 0192h ;# 
# 3165 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDAT equ 0193h ;# 
# 3171 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATL equ 0193h ;# 
# 3176 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATA equ 0193h ;# 
# 3208 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EEDATH equ 0194h ;# 
# 3227 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON1 equ 0195h ;# 
# 3288 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
EECON2 equ 0196h ;# 
# 3307 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCREG equ 0199h ;# 
# 3326 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXREG equ 019Ah ;# 
# 3345 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRG equ 019Bh ;# 
# 3351 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGL equ 019Bh ;# 
# 3356 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRG equ 019Bh ;# 
# 3360 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGL equ 019Bh ;# 
# 3404 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SP1BRGH equ 019Ch ;# 
# 3409 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SPBRGH equ 019Ch ;# 
# 3441 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
RCSTA equ 019Dh ;# 
# 3502 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TXSTA equ 019Eh ;# 
# 3563 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BAUDCON equ 019Fh ;# 
# 3614 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUB equ 020Dh ;# 
# 3683 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WPUE equ 0210h ;# 
# 3703 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPBUF equ 0211h ;# 
# 3722 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPADD equ 0212h ;# 
# 3741 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPMSK equ 0213h ;# 
# 3760 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPSTAT equ 0214h ;# 
# 3821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON1 equ 0215h ;# 
# 3826 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON equ 0215h ;# 
# 3942 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON2 equ 0216h ;# 
# 4003 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
SSPCON3 equ 0217h ;# 
# 4064 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1 equ 0291h ;# 
# 4070 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1L equ 0291h ;# 
# 4089 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR1H equ 0292h ;# 
# 4108 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1CON equ 0293h ;# 
# 4189 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM1CON equ 0294h ;# 
# 4253 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP1AS equ 0295h ;# 
# 4258 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP1AS equ 0295h ;# 
# 4374 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR1CON equ 0296h ;# 
# 4417 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2 equ 0298h ;# 
# 4423 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2L equ 0298h ;# 
# 4442 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR2H equ 0299h ;# 
# 4461 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2CON equ 029Ah ;# 
# 4542 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM2CON equ 029Bh ;# 
# 4603 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP2AS equ 029Ch ;# 
# 4608 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP2AS equ 029Ch ;# 
# 4724 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR2CON equ 029Dh ;# 
# 4767 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS0 equ 029Eh ;# 
# 4854 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPTMRS1 equ 029Fh ;# 
# 4887 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3 equ 0311h ;# 
# 4893 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3L equ 0311h ;# 
# 4912 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR3H equ 0312h ;# 
# 4931 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3CON equ 0313h ;# 
# 4997 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PWM3CON equ 0314h ;# 
# 5058 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP3AS equ 0315h ;# 
# 5063 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
ECCP3AS equ 0315h ;# 
# 5179 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PSTR3CON equ 0316h ;# 
# 5222 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4 equ 0318h ;# 
# 5228 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4L equ 0318h ;# 
# 5247 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR4H equ 0319h ;# 
# 5266 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP4CON equ 031Ah ;# 
# 5315 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5 equ 031Ch ;# 
# 5321 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5L equ 031Ch ;# 
# 5340 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCPR5H equ 031Dh ;# 
# 5359 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
CCP5CON equ 031Eh ;# 
# 5413 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBP equ 0394h ;# 
# 5482 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBN equ 0395h ;# 
# 5551 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
IOCBF equ 0396h ;# 
# 5620 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR4 equ 0415h ;# 
# 5639 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR4 equ 0416h ;# 
# 5658 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T4CON equ 0417h ;# 
# 5728 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TMR6 equ 041Ch ;# 
# 5747 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PR6 equ 041Dh ;# 
# 5766 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
T6CON equ 041Eh ;# 
# 5836 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCON equ 0791h ;# 
# 5906 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDPS equ 0792h ;# 
# 5975 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDREF equ 0793h ;# 
# 6026 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDCST equ 0794h ;# 
# 6065 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDRL equ 0795h ;# 
# 6142 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE0 equ 0798h ;# 
# 6203 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDSE1 equ 0799h ;# 
# 6264 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA0 equ 07A0h ;# 
# 6325 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA1 equ 07A1h ;# 
# 6386 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA3 equ 07A3h ;# 
# 6447 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA4 equ 07A4h ;# 
# 6508 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA6 equ 07A6h ;# 
# 6569 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA7 equ 07A7h ;# 
# 6630 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA9 equ 07A9h ;# 
# 6691 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
LCDDATA10 equ 07AAh ;# 
# 6752 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STATUS_SHAD equ 0FE4h ;# 
# 6783 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
WREG_SHAD equ 0FE5h ;# 
# 6802 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
BSR_SHAD equ 0FE6h ;# 
# 6821 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
PCLATH_SHAD equ 0FE7h ;# 
# 6840 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0L_SHAD equ 0FE8h ;# 
# 6859 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR0H_SHAD equ 0FE9h ;# 
# 6878 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1L_SHAD equ 0FEAh ;# 
# 6897 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
FSR1H_SHAD equ 0FEBh ;# 
# 6916 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
STKPTR equ 0FEDh ;# 
# 6935 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSL equ 0FEEh ;# 
# 6954 "D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h"
TOSH equ 0FEFh ;# 
DABS 1,1568,48	;_adc_buffer
DABS 1,1440,80	;_adc_buffer
	FNCALL	_main,_Key_Menu
	FNCALL	_main,_application_init
	FNCALL	_main,_driver_init
	FNCALL	_main,_handle_ad_loop
	FNCALL	_main,_handle_task_process
	FNCALL	_main,_handle_uart_rx_buf
	FNCALL	_main,_middle_init
	FNCALL	_main,_scan_key_value
	FNCALL	_scan_key_value,_Disable_Bost_Pwm1
	FNCALL	_scan_key_value,_Disable_Bost_Pwm2
	FNCALL	_scan_key_value,_Disable_Buck_Pwm
	FNCALL	_scan_key_value,_Enable_Bost_Pwm1
	FNCALL	_scan_key_value,_Enable_Bost_Pwm2
	FNCALL	_scan_key_value,_Set_Bost_Pwm1_Duty
	FNCALL	_scan_key_value,_Set_Bost_Pwm2_Duty
	FNCALL	_scan_key_value,_Set_Buck_Pwm_Duty
	FNCALL	_scan_key_value,_delay_ms
	FNCALL	_scan_key_value,_eeprom_write
	FNCALL	_middle_init,_auto_system
	FNCALL	_middle_init,_read_param_eeprom
	FNCALL	_read_param_eeprom,___awtoft
	FNCALL	_read_param_eeprom,___ftdiv
	FNCALL	_read_param_eeprom,___ftmul
	FNCALL	_read_param_eeprom,___lbtoft
	FNCALL	_read_param_eeprom,___lmul
	FNCALL	_read_param_eeprom,_eeprom_read
	FNCALL	_auto_system,___ftdiv
	FNCALL	_auto_system,___ftge
	FNCALL	_auto_system,___ftmul
	FNCALL	_auto_system,___lwtoft
	FNCALL	_auto_system,_delay_ms
	FNCALL	_auto_system,_eeprom_read
	FNCALL	_auto_system,_eeprom_write
	FNCALL	_auto_system,_start_ad_convert
	FNCALL	_handle_uart_rx_buf,_Disable_Bost_Pwm1
	FNCALL	_handle_uart_rx_buf,_Disable_Bost_Pwm2
	FNCALL	_handle_uart_rx_buf,_Disable_Buck_Pwm
	FNCALL	_handle_uart_rx_buf,_Enable_Bost_Pwm1
	FNCALL	_handle_uart_rx_buf,_Enable_Bost_Pwm2
	FNCALL	_handle_uart_rx_buf,_Set_Bost_Pwm1_Duty
	FNCALL	_handle_uart_rx_buf,_Set_Bost_Pwm2_Duty
	FNCALL	_handle_uart_rx_buf,_Set_Buck_Pwm_Duty
	FNCALL	_handle_uart_rx_buf,___awtoft
	FNCALL	_handle_uart_rx_buf,___ftdiv
	FNCALL	_handle_uart_rx_buf,___ftge
	FNCALL	_handle_uart_rx_buf,___ftmul
	FNCALL	_handle_uart_rx_buf,___fttol
	FNCALL	_handle_uart_rx_buf,___lbtoft
	FNCALL	_handle_uart_rx_buf,___lmul
	FNCALL	_handle_uart_rx_buf,___lwtoft
	FNCALL	_handle_uart_rx_buf,_crc16
	FNCALL	_handle_uart_rx_buf,_delay_ms
	FNCALL	_handle_uart_rx_buf,_eeprom_read
	FNCALL	_handle_uart_rx_buf,_eeprom_write
	FNCALL	_handle_uart_rx_buf,_memset
	FNCALL	___lbtoft,___ftpack
	FNCALL	_handle_task_process,_Disable_Bost_Pwm1
	FNCALL	_handle_task_process,_Disable_Bost_Pwm2
	FNCALL	_handle_task_process,_Disable_Buck_Pwm
	FNCALL	_handle_task_process,_Enable_Bost_Pwm1
	FNCALL	_handle_task_process,_Enable_Bost_Pwm2
	FNCALL	_handle_task_process,_Set_Bost_Pwm1_Duty
	FNCALL	_handle_task_process,_Set_Bost_Pwm2_Duty
	FNCALL	_handle_task_process,_Set_Buck_Pwm_Duty
	FNCALL	_handle_task_process,___ftadd
	FNCALL	_handle_task_process,___ftdiv
	FNCALL	_handle_task_process,___ftmul
	FNCALL	_handle_task_process,___fttol
	FNCALL	_handle_task_process,_delay_ms
	FNCALL	_handle_task_process,_eeprom_write
	FNCALL	_handle_task_process,_pid_init
	FNCALL	_handle_ad_loop,_Disable_Bost_Pwm1
	FNCALL	_handle_ad_loop,_Disable_Bost_Pwm2
	FNCALL	_handle_ad_loop,_Disable_Buck_Pwm
	FNCALL	_handle_ad_loop,_Enable_Bost_Pwm1
	FNCALL	_handle_ad_loop,_Enable_Bost_Pwm2
	FNCALL	_handle_ad_loop,_Enable_Buck_Pwm
	FNCALL	_handle_ad_loop,_Mppt_Charge
	FNCALL	_handle_ad_loop,_Set_Bost_Pwm1_Duty
	FNCALL	_handle_ad_loop,_Set_Bost_Pwm2_Duty
	FNCALL	_handle_ad_loop,_Set_Buck_Pwm_Duty
	FNCALL	_handle_ad_loop,___awtoft
	FNCALL	_handle_ad_loop,___ftadd
	FNCALL	_handle_ad_loop,___ftdiv
	FNCALL	_handle_ad_loop,___ftge
	FNCALL	_handle_ad_loop,___ftmul
	FNCALL	_handle_ad_loop,___fttol
	FNCALL	_handle_ad_loop,___lldiv
	FNCALL	_handle_ad_loop,___lwdiv
	FNCALL	_handle_ad_loop,___lwtoft
	FNCALL	_handle_ad_loop,___wmul
	FNCALL	_handle_ad_loop,_delay_ms
	FNCALL	_handle_ad_loop,_pid_calc
	FNCALL	_handle_ad_loop,_pid_calc_2
	FNCALL	_handle_ad_loop,_start_ad_convert
	FNCALL	_start_ad_convert,___lwdiv
	FNCALL	_pid_calc_2,___awtoft
	FNCALL	_pid_calc_2,___ftadd
	FNCALL	_pid_calc_2,___ftge
	FNCALL	_pid_calc_2,___ftmul
	FNCALL	_pid_calc_2,___ftsub
	FNCALL	_Mppt_Charge,_Set_Buck_Pwm_Duty
	FNCALL	_Mppt_Charge,___ftadd
	FNCALL	_Mppt_Charge,___ftge
	FNCALL	_Mppt_Charge,___fttol
	FNCALL	_Mppt_Charge,___lwtoft
	FNCALL	_Mppt_Charge,_pid_calc
	FNCALL	_pid_calc,___awtoft
	FNCALL	_pid_calc,___ftadd
	FNCALL	_pid_calc,___ftge
	FNCALL	_pid_calc,___ftmul
	FNCALL	_pid_calc,___ftsub
	FNCALL	___ftsub,___ftadd
	FNCALL	___awtoft,___ftpack
	FNCALL	___lwtoft,___ftpack
	FNCALL	_driver_init,_Init_Ird
	FNCALL	_driver_init,_init_adc
	FNCALL	_driver_init,_init_interrupt
	FNCALL	_driver_init,_init_key
	FNCALL	_driver_init,_init_osc
	FNCALL	_driver_init,_init_port
	FNCALL	_driver_init,_init_pwm
	FNCALL	_driver_init,_init_timer1
	FNCALL	_driver_init,_init_uart1
	FNCALL	_application_init,___ftadd
	FNCALL	_application_init,___ftdiv
	FNCALL	_application_init,___ftmul
	FNCALL	_application_init,_pid_init
	FNCALL	_pid_init,_memset
	FNCALL	_Key_Menu,_Disable_Bost_Pwm1
	FNCALL	_Key_Menu,_Disable_Bost_Pwm2
	FNCALL	_Key_Menu,_Disable_Buck_Pwm
	FNCALL	_Key_Menu,_Enable_Bost_Pwm1
	FNCALL	_Key_Menu,_Enable_Bost_Pwm2
	FNCALL	_Key_Menu,_Set_Bost_Pwm1_Duty
	FNCALL	_Key_Menu,_Set_Bost_Pwm2_Duty
	FNCALL	_Key_Menu,_Set_Buck_Pwm_Duty
	FNCALL	_Key_Menu,_delay_ms
	FNCALL	_Key_Menu,_eeprom_write
	FNCALL	___ftdiv,___ftpack
	FNCALL	___ftadd,___ftpack
	FNCALL	___ftmul,___ftpack
	FNROOT	_main
	FNCALL	_isr,i1_Disable_Bost_Pwm1
	FNCALL	_isr,i1_Disable_Bost_Pwm2
	FNCALL	_isr,i1_Set_Bost_Pwm1_Duty
	FNCALL	_isr,i1_Set_Bost_Pwm2_Duty
	FNCALL	intlevel1,_isr
	global	intlevel1
	FNROOT	intlevel1
	global	_light_pv
	global	_load_cc_I
	global	_step_05_load_percent
	global	_step_01_time_limit
	global	_step_02_time_limit
	global	_step_03_time_limit
	global	_step_04_time_limit
	global	_bt_id
	global	_volt_id
	global	_voltage_adjust_index
	global	_dianchi_guoya_baohu
	global	_shuchu_shortout_voltage
	global	_step_01_load_percent
	global	_step_02_load_percent
	global	_step_03_load_percent
	global	_step_04_load_percent
	global	_step_05_time_limit
	global	_KEY_VALUE
	global	_sys_temper_flag
	global	_charge_i_limit
	global	_dianchi_cv_level
	global	_dianchi_guoya_huifu
	global	_dianchi_qianya_baohu
	global	_dianchi_qianya_huifu
	global	_discharge_i_baohu
	global	_discharge_i_limit
	global	_light_off_pv_level
	global	_light_on_pv_level
	global	_shuchu_open_voltage
	global	_Load2_Pmax
	global	_Load_Pmax
	global	_bt_volt_00
	global	_bt_volt_20
	global	_bt_volt_40
	global	_bt_volt_60
	global	_bt_volt_80
	global	_ird_data
psect	idataBANK1,class=CODE,space=0,delta=2,noexec
global __pidataBANK1
__pidataBANK1:
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	73

;initializer for _light_pv
	retlw	0x0
	retlw	0x16
	retlw	0x44

	line	75

;initializer for _load_cc_I
	retlw	0x0
	retlw	0x5c
	retlw	0x43

	line	87

;initializer for _step_05_load_percent
	retlw	0x0
	retlw	0x48
	retlw	0x42

	line	89

;initializer for _step_01_time_limit
	retlw	05h
	retlw	0

	line	91

;initializer for _step_02_time_limit
	retlw	05h
	retlw	0

	line	93

;initializer for _step_03_time_limit
	retlw	01h
	retlw	0

	line	95

;initializer for _step_04_time_limit
	retlw	01h
	retlw	0

	line	101

;initializer for _bt_id
	retlw	01h
	line	99

;initializer for _volt_id
	retlw	01h
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	97

;initializer for _voltage_adjust_index
	retlw	01h
psect	idataBANK2,class=CODE,space=0,delta=2,noexec
global __pidataBANK2
__pidataBANK2:
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	96

;initializer for _dianchi_guoya_baohu
	retlw	0x33
	retlw	0x83
	retlw	0x41

	line	108

;initializer for _shuchu_shortout_voltage
	retlw	0x0
	retlw	0x20
	retlw	0x41

	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	79

;initializer for _step_01_load_percent
	retlw	0x0
	retlw	0xc8
	retlw	0x42

	line	81

;initializer for _step_02_load_percent
	retlw	0x0
	retlw	0xc8
	retlw	0x42

	line	83

;initializer for _step_03_load_percent
	retlw	0x0
	retlw	0xc8
	retlw	0x42

	line	85

;initializer for _step_04_load_percent
	retlw	0x0
	retlw	0xc8
	retlw	0x42

	line	97

;initializer for _step_05_time_limit
	retlw	01h
	retlw	0

	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	17

;initializer for _KEY_VALUE
	retlw	010h
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	83

;initializer for _sys_temper_flag
	retlw	01h
psect	idataBANK3,class=CODE,space=0,delta=2,noexec
global __pidataBANK3
__pidataBANK3:
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	106

;initializer for _charge_i_limit
	retlw	0x0
	retlw	0x40
	retlw	0x41

	line	104

;initializer for _dianchi_cv_level
	retlw	0x66
	retlw	0x82
	retlw	0x41

	line	98

;initializer for _dianchi_guoya_huifu
	retlw	0x9a
	retlw	0x81
	retlw	0x41

	line	100

;initializer for _dianchi_qianya_baohu
	retlw	0x0
	retlw	0x40
	retlw	0x41

	line	102

;initializer for _dianchi_qianya_huifu
	retlw	0x8f
	retlw	0x4a
	retlw	0x41

	line	112

;initializer for _discharge_i_baohu
	retlw	0x0
	retlw	0x90
	retlw	0x40

	line	114

;initializer for _discharge_i_limit
	retlw	0x0
	retlw	0x80
	retlw	0x40

	line	118

;initializer for _light_off_pv_level
	retlw	0x0
	retlw	0x20
	retlw	0x41

	line	116

;initializer for _light_on_pv_level
	retlw	0x0
	retlw	0xc0
	retlw	0x40

	line	110

;initializer for _shuchu_open_voltage
	retlw	0x0
	retlw	0x7c
	retlw	0x42

psect	idataBANK4,class=CODE,space=0,delta=2,noexec
global __pidataBANK4
__pidataBANK4:
	line	122

;initializer for _Load2_Pmax
	retlw	0x0
	retlw	0x24
	retlw	0x42

	line	121

;initializer for _Load_Pmax
	retlw	0x0
	retlw	0xa4
	retlw	0x42

	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	118

;initializer for _bt_volt_00
	retlw	0x0
	retlw	0x40
	retlw	0x41

	line	116

;initializer for _bt_volt_20
	retlw	0x14
	retlw	0x4e
	retlw	0x41

	line	114

;initializer for _bt_volt_40
	retlw	0x29
	retlw	0x5c
	retlw	0x41

	line	112

;initializer for _bt_volt_60
	retlw	0x3d
	retlw	0x6a
	retlw	0x41

	line	110

;initializer for _bt_volt_80
	retlw	0x52
	retlw	0x78
	retlw	0x41

psect	idataBANK5,class=CODE,space=0,delta=2,noexec
global __pidataBANK5
__pidataBANK5:
	line	163

;initializer for _ird_data
	retlw	0BFh
	retlw	040h
	retlw	0EDh
	retlw	010h

	global	_CRCHi
psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
global __pstringtext
__pstringtext:
	global    __stringtab
__stringtab:
	retlw	0
psect	stringtext
	global    __end_of__stringtab
__end_of__stringtab:
	file	"D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
	line	10
_CRCHi:
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	01h
	retlw	0C0h
	retlw	080h
	retlw	041h
	retlw	0
	retlw	0C1h
	retlw	081h
	retlw	040h
	global __end_of_CRCHi
__end_of_CRCHi:
	global	_CRCLo
psect	stringtext
	file	"D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
	line	40
_CRCLo:
	retlw	0
	retlw	0C0h
	retlw	0C1h
	retlw	01h
	retlw	0C3h
	retlw	03h
	retlw	02h
	retlw	0C2h
	retlw	0C6h
	retlw	06h
	retlw	07h
	retlw	0C7h
	retlw	05h
	retlw	0C5h
	retlw	0C4h
	retlw	04h
	retlw	0CCh
	retlw	0Ch
	retlw	0Dh
	retlw	0CDh
	retlw	0Fh
	retlw	0CFh
	retlw	0CEh
	retlw	0Eh
	retlw	0Ah
	retlw	0CAh
	retlw	0CBh
	retlw	0Bh
	retlw	0C9h
	retlw	09h
	retlw	08h
	retlw	0C8h
	retlw	0D8h
	retlw	018h
	retlw	019h
	retlw	0D9h
	retlw	01Bh
	retlw	0DBh
	retlw	0DAh
	retlw	01Ah
	retlw	01Eh
	retlw	0DEh
	retlw	0DFh
	retlw	01Fh
	retlw	0DDh
	retlw	01Dh
	retlw	01Ch
	retlw	0DCh
	retlw	014h
	retlw	0D4h
	retlw	0D5h
	retlw	015h
	retlw	0D7h
	retlw	017h
	retlw	016h
	retlw	0D6h
	retlw	0D2h
	retlw	012h
	retlw	013h
	retlw	0D3h
	retlw	011h
	retlw	0D1h
	retlw	0D0h
	retlw	010h
	retlw	0F0h
	retlw	030h
	retlw	031h
	retlw	0F1h
	retlw	033h
	retlw	0F3h
	retlw	0F2h
	retlw	032h
	retlw	036h
	retlw	0F6h
	retlw	0F7h
	retlw	037h
	retlw	0F5h
	retlw	035h
	retlw	034h
	retlw	0F4h
	retlw	03Ch
	retlw	0FCh
	retlw	0FDh
	retlw	03Dh
	retlw	0FFh
	retlw	03Fh
	retlw	03Eh
	retlw	0FEh
	retlw	0FAh
	retlw	03Ah
	retlw	03Bh
	retlw	0FBh
	retlw	039h
	retlw	0F9h
	retlw	0F8h
	retlw	038h
	retlw	028h
	retlw	0E8h
	retlw	0E9h
	retlw	029h
	retlw	0EBh
	retlw	02Bh
	retlw	02Ah
	retlw	0EAh
	retlw	0EEh
	retlw	02Eh
	retlw	02Fh
	retlw	0EFh
	retlw	02Dh
	retlw	0EDh
	retlw	0ECh
	retlw	02Ch
	retlw	0E4h
	retlw	024h
	retlw	025h
	retlw	0E5h
	retlw	027h
	retlw	0E7h
	retlw	0E6h
	retlw	026h
	retlw	022h
	retlw	0E2h
	retlw	0E3h
	retlw	023h
	retlw	0E1h
	retlw	021h
	retlw	020h
	retlw	0E0h
	retlw	0A0h
	retlw	060h
	retlw	061h
	retlw	0A1h
	retlw	063h
	retlw	0A3h
	retlw	0A2h
	retlw	062h
	retlw	066h
	retlw	0A6h
	retlw	0A7h
	retlw	067h
	retlw	0A5h
	retlw	065h
	retlw	064h
	retlw	0A4h
	retlw	06Ch
	retlw	0ACh
	retlw	0ADh
	retlw	06Dh
	retlw	0AFh
	retlw	06Fh
	retlw	06Eh
	retlw	0AEh
	retlw	0AAh
	retlw	06Ah
	retlw	06Bh
	retlw	0ABh
	retlw	069h
	retlw	0A9h
	retlw	0A8h
	retlw	068h
	retlw	078h
	retlw	0B8h
	retlw	0B9h
	retlw	079h
	retlw	0BBh
	retlw	07Bh
	retlw	07Ah
	retlw	0BAh
	retlw	0BEh
	retlw	07Eh
	retlw	07Fh
	retlw	0BFh
	retlw	07Dh
	retlw	0BDh
	retlw	0BCh
	retlw	07Ch
	retlw	0B4h
	retlw	074h
	retlw	075h
	retlw	0B5h
	retlw	077h
	retlw	0B7h
	retlw	0B6h
	retlw	076h
	retlw	072h
	retlw	0B2h
	retlw	0B3h
	retlw	073h
	retlw	0B1h
	retlw	071h
	retlw	070h
	retlw	0B0h
	retlw	050h
	retlw	090h
	retlw	091h
	retlw	051h
	retlw	093h
	retlw	053h
	retlw	052h
	retlw	092h
	retlw	096h
	retlw	056h
	retlw	057h
	retlw	097h
	retlw	055h
	retlw	095h
	retlw	094h
	retlw	054h
	retlw	09Ch
	retlw	05Ch
	retlw	05Dh
	retlw	09Dh
	retlw	05Fh
	retlw	09Fh
	retlw	09Eh
	retlw	05Eh
	retlw	05Ah
	retlw	09Ah
	retlw	09Bh
	retlw	05Bh
	retlw	099h
	retlw	059h
	retlw	058h
	retlw	098h
	retlw	088h
	retlw	048h
	retlw	049h
	retlw	089h
	retlw	04Bh
	retlw	08Bh
	retlw	08Ah
	retlw	04Ah
	retlw	04Eh
	retlw	08Eh
	retlw	08Fh
	retlw	04Fh
	retlw	08Dh
	retlw	04Dh
	retlw	04Ch
	retlw	08Ch
	retlw	044h
	retlw	084h
	retlw	085h
	retlw	045h
	retlw	087h
	retlw	047h
	retlw	046h
	retlw	086h
	retlw	082h
	retlw	042h
	retlw	043h
	retlw	083h
	retlw	041h
	retlw	081h
	retlw	080h
	retlw	040h
	global __end_of_CRCLo
__end_of_CRCLo:
	global	_CRCHi
	global	_CRCLo
	global	_ho_cnt
	global	_battery_voltage_value
	global	_Adjust_Pout_Flag
	global	_today_index
	global	_PWM
	global	_bost_pwm1_value
	global	_bost_pwm2_value
	global	_buck_pwm_value
	global	_charge_current_value
	global	_crc_data
	global	_discharge_current_value
	global	_load_voltage_value
	global	_mcu_value
	global	_pv_voltage_value
	global	_charge_index
	global	_device_status
	global	_discharge1_index
	global	_discharge2_index
	global	_have_person1_flag
	global	_have_person2_flag
	global	_led_out_ctrl
	global	_light2_mode
	global	_light_mode
	global	_mcu_temp_index
	global	_pid_index
	global	_system_status
	global	_t1
	global	_t2
	global	_t3
	global	_t4
	global	_uart1_receive_byte_count
	global	_work_mode
	global	_light_time
	global	_b_v
	global	_discharge_current2_value
	global	_load_voltage2_value
	global	_temperature_value
	global	_KEY_STATE
	global	_battery_voltage_status
	global	_handle_an0_process_flag
	global	_handle_an11_process_flag
	global	_handle_an1_process_flag
	global	_handle_an2_process_flag
	global	_handle_an3_process_flag
	global	_handle_an4_process_flag
	global	_handle_an8_process_flag
	global	_handle_an9_process_flag
	global	_handle_scan_key_flag
	global	_handle_short1_flag
	global	_handle_short2_flag
	global	_have_person1_time_count
	global	_have_person2_time_count
	global	_ird_receive_flag
	global	_ird_receive_time_count
	global	_ird_status
	global	_key1_index
	global	_key1_time_count
	global	_limit_power_pid2_flag
	global	_limit_power_pid_flag
	global	_mppt_status
	global	_nop_index
	global	_open_an0_time
	global	_open_an11_time
	global	_open_an1_time
	global	_open_an2_time
	global	_open_an3_time
	global	_open_an4_time
	global	_open_an8_time
	global	_open_an9_time
	global	_open_discharge_time
	global	_open_sleep_time
	global	_pv_index
	global	_pv_voltage_status
	global	_receive_bit_count
	global	_rx_frame_kind
	global	_scan_key_time_count
	global	_sys_mode
	global	_system_check_time
	global	_t5
	global	_temper_time_count
	global	_uart1_receive_flag
	global	_uart1_time_count
	global	_uart_send_byte_count
	global	_uart_send_delay_timer
	global	_uart_send_end_flag
	global	_uart_send_point
	global	_light_time_level
	global	_PWM2
	global	_bt_00_hv
	global	_bt_00_lv
	global	_I_prev
	global	_battery_low_time_count
	global	_load2_short_time_count
	global	_load_short_time_count
	global	_system_time_count
	global	_bt_time_count
	global	_mcu_t00_time_count
	global	_mcu_t01_time_count
	global	_mcu_t02_time_count
	global	_mcu_t03_time_count
	global	_over_temper_time_count
	global	_PID_CC_discharge
	global	_PWM_I
	global	_charge_I
	global	_load_I
	global	_load_v
	global	_p_v
	global	_an0_time_count
	global	_an11_time_count
	global	_an1_time_count
	global	_an2_time_count
	global	_an3_time_count
	global	_an4_time_count
	global	_an8_time_count
	global	_an9_time_count
	global	_mi_cnt
	global	_ms_cnt
	global	_se_cnt
	global	_PID_CC2_discharge
	global	_day_time_count
	global	_night_time_count
	global	_pv_time_count
	global	_PWM_I2
	global	_cv_level_time_count
	global	_index_01_count
	global	_index_02_count
	global	_index_03_count
	global	_index_04_count
	global	_index_05_count
	global	_index_06_count
	global	_involid_time_count
	global	_load2_open_time_count
	global	_load_open_time_count
	global	_mppt_time_count
	global	_over_load1_time_count
	global	_over_load2_time_count
	global	_sleep_time_count
	global	_PID_CV_charge
	global	_PID_CC_charge
	global	_uart1_tx_buf
	global	_uart1_rx_buf
	global	_adc_buffer
	global	_PIR1bits
_PIR1bits	set	0x11
	global	_PORTBbits
_PORTBbits	set	0xD
	global	_PORTCbits
_PORTCbits	set	0xE
	global	_PR2
_PR2	set	0x1B
	global	_T1CON
_T1CON	set	0x18
	global	_T1GCONbits
_T1GCONbits	set	0x19
	global	_T2CONbits
_T2CONbits	set	0x1C
	global	_TMR0
_TMR0	set	0x15
	global	_TMR1H
_TMR1H	set	0x17
	global	_TMR1L
_TMR1L	set	0x16
	global	_CARRY
_CARRY	set	0x18
	global	_GIE
_GIE	set	0x5F
	global	_IOCIE
_IOCIE	set	0x5B
	global	_IOCIF
_IOCIF	set	0x58
	global	_PEIE
_PEIE	set	0x5E
	global	_RA7
_RA7	set	0x67
	global	_RC1
_RC1	set	0x71
	global	_RCIF
_RCIF	set	0x8D
	global	_TMR0IE
_TMR0IE	set	0x5D
	global	_TMR0IF
_TMR0IF	set	0x5A
	global	_TMR1IF
_TMR1IF	set	0x88
	global	_TMR1ON
_TMR1ON	set	0xC0
	global	_TMR2IF
_TMR2IF	set	0x89
	global	_TMR2ON
_TMR2ON	set	0xE2
	global	_TMR4IF
_TMR4IF	set	0x99
	global	_TMR6IF
_TMR6IF	set	0x9B
	global	_TXIF
_TXIF	set	0x8C
	global	_ADCON0bits
_ADCON0bits	set	0x9D
	global	_ADCON1bits
_ADCON1bits	set	0x9E
	global	_ADRESL
_ADRESL	set	0x9B
	global	_OPTION_REGbits
_OPTION_REGbits	set	0x95
	global	_OSCCON
_OSCCON	set	0x99
	global	_PIE1bits
_PIE1bits	set	0x91
	global	_TRISAbits
_TRISAbits	set	0x8C
	global	_TRISBbits
_TRISBbits	set	0x8D
	global	_TRISCbits
_TRISCbits	set	0x8E
	global	_WDTCONbits
_WDTCONbits	set	0x97
	global	_ADRESH
_ADRESH	set	0x9C
	global	_PSA
_PSA	set	0x4AB
	global	_RCIE
_RCIE	set	0x48D
	global	_TMR0CS
_TMR0CS	set	0x4AD
	global	_TMR1IE
_TMR1IE	set	0x488
	global	_TXIE
_TXIE	set	0x48C
	global	_APFCONbits
_APFCONbits	set	0x11D
	global	_FVRCONbits
_FVRCONbits	set	0x117
	global	_LATAbits
_LATAbits	set	0x10C
	global	_LATCbits
_LATCbits	set	0x10E
	global	_EEADR
_EEADR	set	0x191
	global	_ANSELA
_ANSELA	set	0x18C
	global	_ANSELB
_ANSELB	set	0x18D
	global	_BAUDCON
_BAUDCON	set	0x19F
	global	_EECON1
_EECON1	set	0x195
	global	_EECON2
_EECON2	set	0x196
	global	_EEDATA
_EEDATA	set	0x193
	global	_RCREG
_RCREG	set	0x199
	global	_RCSTA
_RCSTA	set	0x19D
	global	_RCSTAbits
_RCSTAbits	set	0x19D
	global	_SP1BRGH
_SP1BRGH	set	0x19C
	global	_SP1BRGL
_SP1BRGL	set	0x19B
	global	_TXREG
_TXREG	set	0x19A
	global	_TXSTA
_TXSTA	set	0x19E
	global	_TXSTAbits
_TXSTAbits	set	0x19E
	global	_ANSA0
_ANSA0	set	0xC60
	global	_ANSA1
_ANSA1	set	0xC61
	global	_ANSA2
_ANSA2	set	0xC62
	global	_ANSA3
_ANSA3	set	0xC63
	global	_ANSA5
_ANSA5	set	0xC65
	global	_ANSB2
_ANSB2	set	0xC6A
	global	_ANSB3
_ANSB3	set	0xC6B
	global	_ANSB4
_ANSB4	set	0xC6C
	global	_RD
_RD	set	0xCA8
	global	_WR
_WR	set	0xCA9
	global	_WREN
_WREN	set	0xCAA
	global	_CCP1CONbits
_CCP1CONbits	set	0x293
	global	_CCPR1L
_CCPR1L	set	0x291
	global	_CCPTMRS0bits
_CCPTMRS0bits	set	0x29E
	global	_CCPTMRS1bits
_CCPTMRS1bits	set	0x29F
	global	_CCP3CONbits
_CCP3CONbits	set	0x313
	global	_CCP5CONbits
_CCP5CONbits	set	0x31E
	global	_CCPR3L
_CCPR3L	set	0x311
	global	_CCPR5L
_CCPR5L	set	0x31C
	global	_IOCBFbits
_IOCBFbits	set	0x396
	global	_IOCBNbits
_IOCBNbits	set	0x395
	global	_IOCBPbits
_IOCBPbits	set	0x394
	global	_IOCBF0
_IOCBF0	set	0x1CB0
	global	_IOCBF1
_IOCBF1	set	0x1CB1
	global	_IOCBF6
_IOCBF6	set	0x1CB6
	global	_IOCBF7
_IOCBF7	set	0x1CB7
	global	_PR4
_PR4	set	0x416
	global	_PR6
_PR6	set	0x41D
	global	_T4CONbits
_T4CONbits	set	0x417
	global	_T6CONbits
_T6CONbits	set	0x41E
	global	_TMR4ON
_TMR4ON	set	0x20BA
	global	_TMR6ON
_TMR6ON	set	0x20F2
; #config settings
global __CFG_CPD$OFF
__CFG_CPD$OFF equ 0x0
global __CFG_BOREN$ON
__CFG_BOREN$ON equ 0x0
global __CFG_IESO$OFF
__CFG_IESO$OFF equ 0x0
global __CFG_FOSC$INTOSC
__CFG_FOSC$INTOSC equ 0x0
global __CFG_FCMEN$OFF
__CFG_FCMEN$OFF equ 0x0
global __CFG_MCLRE$ON
__CFG_MCLRE$ON equ 0x0
global __CFG_WDTE$NSLEEP
__CFG_WDTE$NSLEEP equ 0x0
global __CFG_CP$OFF
__CFG_CP$OFF equ 0x0
global __CFG_PWRTE$OFF
__CFG_PWRTE$OFF equ 0x0
global __CFG_CLKOUTEN$OFF
__CFG_CLKOUTEN$OFF equ 0x0
global __CFG_PLLEN$ON
__CFG_PLLEN$ON equ 0x0
global __CFG_WRT$OFF
__CFG_WRT$OFF equ 0x0
global __CFG_STVREN$ON
__CFG_STVREN$ON equ 0x0
global __CFG_BORV$LO
__CFG_BORV$LO equ 0x0
global __CFG_VCAPEN$OFF
__CFG_VCAPEN$OFF equ 0x0
global __CFG_LVP$ON
__CFG_LVP$ON equ 0x0
	file	"ZH-SL-S4080-1.as"
	line	#
psect cinit,class=CODE,delta=2
global start_initialization
start_initialization:

global __initialization
__initialization:
DABS 1,9072,0,_adc_buffer	;BIGRAM
psect	bssCOMMON,class=COMMON,space=1,noexec
global __pbssCOMMON
__pbssCOMMON:
_ho_cnt:
       ds      2

psect	bssBANK0,class=BANK0,space=1,noexec
global __pbssBANK0
__pbssBANK0:
_battery_voltage_value:
       ds      2

_Adjust_Pout_Flag:
       ds      1

_today_index:
       ds      1

psect	bssBANK1,class=BANK1,space=1,noexec
global __pbssBANK1
__pbssBANK1:
_PWM:
       ds      3

_bost_pwm1_value:
       ds      2

_bost_pwm2_value:
       ds      2

_buck_pwm_value:
       ds      2

_charge_current_value:
       ds      2

_crc_data:
       ds      2

_discharge_current_value:
       ds      2

_load_voltage_value:
       ds      2

_mcu_value:
       ds      2

_pv_voltage_value:
       ds      2

_charge_index:
       ds      1

_device_status:
       ds      1

_discharge1_index:
       ds      1

_discharge2_index:
       ds      1

_have_person1_flag:
       ds      1

_have_person2_flag:
       ds      1

_led_out_ctrl:
       ds      1

_light2_mode:
       ds      1

_light_mode:
       ds      1

_mcu_temp_index:
       ds      1

_pid_index:
       ds      1

_system_status:
       ds      1

_t1:
       ds      1

_t2:
       ds      1

_t3:
       ds      1

_t4:
       ds      1

_uart1_receive_byte_count:
       ds      1

_work_mode:
       ds      1

_light_time:
       ds      2

psect	dataBANK1,class=BANK1,space=1,noexec
global __pdataBANK1
__pdataBANK1:
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	73
_light_pv:
       ds      3

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	75
_load_cc_I:
       ds      3

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	87
_step_05_load_percent:
       ds      3

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	89
_step_01_time_limit:
       ds      2

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	91
_step_02_time_limit:
       ds      2

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	93
_step_03_time_limit:
       ds      2

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	95
_step_04_time_limit:
       ds      2

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	101
_bt_id:
       ds      1

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	99
_volt_id:
       ds      1

psect	dataBANK1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	97
_voltage_adjust_index:
       ds      1

psect	bssBANK2,class=BANK2,space=1,noexec
global __pbssBANK2
__pbssBANK2:
_b_v:
       ds      3

_discharge_current2_value:
       ds      2

_load_voltage2_value:
       ds      2

_temperature_value:
       ds      2

_KEY_STATE:
       ds      1

_battery_voltage_status:
       ds      1

_handle_an0_process_flag:
       ds      1

_handle_an11_process_flag:
       ds      1

_handle_an1_process_flag:
       ds      1

_handle_an2_process_flag:
       ds      1

_handle_an3_process_flag:
       ds      1

_handle_an4_process_flag:
       ds      1

_handle_an8_process_flag:
       ds      1

_handle_an9_process_flag:
       ds      1

_handle_scan_key_flag:
       ds      1

_handle_short1_flag:
       ds      1

_handle_short2_flag:
       ds      1

_have_person1_time_count:
       ds      1

_have_person2_time_count:
       ds      1

_ird_receive_flag:
       ds      1

_ird_receive_time_count:
       ds      1

_ird_status:
       ds      1

_key1_index:
       ds      1

_key1_time_count:
       ds      1

_limit_power_pid2_flag:
       ds      1

_limit_power_pid_flag:
       ds      1

_mppt_status:
       ds      1

_nop_index:
       ds      1

_open_an0_time:
       ds      1

_open_an11_time:
       ds      1

_open_an1_time:
       ds      1

_open_an2_time:
       ds      1

_open_an3_time:
       ds      1

_open_an4_time:
       ds      1

_open_an8_time:
       ds      1

_open_an9_time:
       ds      1

_open_discharge_time:
       ds      1

_open_sleep_time:
       ds      1

_pv_index:
       ds      1

_pv_voltage_status:
       ds      1

_receive_bit_count:
       ds      1

_rx_frame_kind:
       ds      1

_scan_key_time_count:
       ds      1

_sys_mode:
       ds      1

_system_check_time:
       ds      1

_t5:
       ds      1

_temper_time_count:
       ds      1

_uart1_receive_flag:
       ds      1

_uart1_time_count:
       ds      1

_uart_send_byte_count:
       ds      1

_uart_send_delay_timer:
       ds      1

_uart_send_end_flag:
       ds      1

_uart_send_point:
       ds      1

psect	dataBANK2,class=BANK2,space=1,noexec
global __pdataBANK2
__pdataBANK2:
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	96
_dianchi_guoya_baohu:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	108
_shuchu_shortout_voltage:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	79
_step_01_load_percent:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	81
_step_02_load_percent:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	83
_step_03_load_percent:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	85
_step_04_load_percent:
       ds      3

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	97
_step_05_time_limit:
       ds      2

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	17
_KEY_VALUE:
       ds      1

psect	dataBANK2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	83
_sys_temper_flag:
       ds      1

psect	bssBANK3,class=BANK3,space=1,noexec
global __pbssBANK3
__pbssBANK3:
_light_time_level:
       ds      4

_PWM2:
       ds      3

_bt_00_hv:
       ds      3

_bt_00_lv:
       ds      3

_I_prev:
       ds      2

_battery_low_time_count:
       ds      2

_load2_short_time_count:
       ds      2

_load_short_time_count:
       ds      2

_system_time_count:
       ds      2

_bt_time_count:
       ds      1

_mcu_t00_time_count:
       ds      1

_mcu_t01_time_count:
       ds      1

_mcu_t02_time_count:
       ds      1

_mcu_t03_time_count:
       ds      1

_over_temper_time_count:
       ds      1

_PID_CC_discharge:
       ds      21

psect	dataBANK3,class=BANK3,space=1,noexec
global __pdataBANK3
__pdataBANK3:
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	106
_charge_i_limit:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	104
_dianchi_cv_level:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	98
_dianchi_guoya_huifu:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	100
_dianchi_qianya_baohu:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	102
_dianchi_qianya_huifu:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	112
_discharge_i_baohu:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	114
_discharge_i_limit:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	118
_light_off_pv_level:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	116
_light_on_pv_level:
       ds      3

psect	dataBANK3
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	110
_shuchu_open_voltage:
       ds      3

psect	bssBANK4,class=BANK4,space=1,noexec
global __pbssBANK4
__pbssBANK4:
_PWM_I:
       ds      3

_charge_I:
       ds      3

_load_I:
       ds      3

_load_v:
       ds      3

_p_v:
       ds      3

_an0_time_count:
       ds      2

_an11_time_count:
       ds      2

_an1_time_count:
       ds      2

_an2_time_count:
       ds      2

_an3_time_count:
       ds      2

_an4_time_count:
       ds      2

_an8_time_count:
       ds      2

_an9_time_count:
       ds      2

_mi_cnt:
       ds      2

_ms_cnt:
       ds      2

_se_cnt:
       ds      2

_PID_CC2_discharge:
       ds      21

psect	dataBANK4,class=BANK4,space=1,noexec
global __pdataBANK4
__pdataBANK4:
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	122
_Load2_Pmax:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h"
	line	121
_Load_Pmax:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	118
_bt_volt_00:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	116
_bt_volt_20:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	114
_bt_volt_40:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	112
_bt_volt_60:
       ds      3

psect	dataBANK4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	110
_bt_volt_80:
       ds      3

psect	bssBANK5,class=BANK5,space=1,noexec
global __pbssBANK5
__pbssBANK5:
_day_time_count:
       ds      4

_night_time_count:
       ds      4

_pv_time_count:
       ds      4

_PWM_I2:
       ds      3

_cv_level_time_count:
       ds      2

_index_01_count:
       ds      2

_index_02_count:
       ds      2

_index_03_count:
       ds      2

_index_04_count:
       ds      2

_index_05_count:
       ds      2

_index_06_count:
       ds      2

_involid_time_count:
       ds      2

_load2_open_time_count:
       ds      2

_load_open_time_count:
       ds      2

_mppt_time_count:
       ds      2

_over_load1_time_count:
       ds      2

_over_load2_time_count:
       ds      2

_sleep_time_count:
       ds      2

_PID_CV_charge:
       ds      21

psect	dataBANK5,class=BANK5,space=1,noexec
global __pdataBANK5
__pdataBANK5:
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	163
_ird_data:
       ds      4

psect	bssBANK6,class=BANK6,space=1,noexec
global __pbssBANK6
__pbssBANK6:
_PID_CC_charge:
       ds      21

psect	bssBANK7,class=BANK7,space=1,noexec
global __pbssBANK7
__pbssBANK7:
_uart1_tx_buf:
       ds      80

psect	bssBANK8,class=BANK8,space=1,noexec
global __pbssBANK8
__pbssBANK8:
_uart1_rx_buf:
       ds      80

	file	"ZH-SL-S4080-1.as"
	line	#
psect clrtext,class=CODE,delta=2
global clear_ram0
;	Called with FSR0 containing the base address, and
;	btemp/btemp+1 has the size to clear
clear_ram0:
	clrwdt			;clear the watchdog before getting into this loop
clrloop0:
	clrf	indf0		;clear RAM location pointed to by FSR
	addfsr	0,1
	movlw	1
	subwf	btemp,f
	movlw	0
	subwfb btemp+1,f
	movf btemp+1,w
	iorwf btemp,w
	skipz
	goto clrloop0	;have we reached the end yet?
	retlw	0		;all done for this memory range, return
; Clear objects allocated to BIGRAM
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBIGRAM
	movlw	low(__pbssBIGRAM)
	movwf	fsr0l
	movlw	high(__pbssBIGRAM)
	movwf	fsr0h
	movlw	low(080h)
	movwf	btemp
	movlw	high(080h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to COMMON
psect cinit,class=CODE,delta=2,merge=1
	global __pbssCOMMON
	clrf	((__pbssCOMMON)+0)&07Fh
	clrf	((__pbssCOMMON)+1)&07Fh
; Clear objects allocated to BANK0
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK0
	clrf	((__pbssBANK0)+0)&07Fh
	clrf	((__pbssBANK0)+1)&07Fh
	clrf	((__pbssBANK0)+2)&07Fh
	clrf	((__pbssBANK0)+3)&07Fh
; Clear objects allocated to BANK1
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK1
	movlw	low(__pbssBANK1)
	movwf	fsr0l
	movlw	high(__pbssBANK1)
	movwf	fsr0h
	movlw	low(029h)
	movwf	btemp
	movlw	high(029h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK2
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK2
	movlw	low(__pbssBANK2)
	movwf	fsr0l
	movlw	high(__pbssBANK2)
	movwf	fsr0h
	movlw	low(03Ah)
	movwf	btemp
	movlw	high(03Ah)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK3
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK3
	movlw	low(__pbssBANK3)
	movwf	fsr0l
	movlw	high(__pbssBANK3)
	movwf	fsr0h
	movlw	low(032h)
	movwf	btemp
	movlw	high(032h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK4
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK4
	movlw	low(__pbssBANK4)
	movwf	fsr0l
	movlw	high(__pbssBANK4)
	movwf	fsr0h
	movlw	low(03Ah)
	movwf	btemp
	movlw	high(03Ah)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK5
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK5
	movlw	low(__pbssBANK5)
	movwf	fsr0l
	movlw	high(__pbssBANK5)
	movwf	fsr0h
	movlw	low(040h)
	movwf	btemp
	movlw	high(040h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK6
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK6
	movlw	low(__pbssBANK6)
	movwf	fsr0l
	movlw	high(__pbssBANK6)
	movwf	fsr0h
	movlw	low(015h)
	movwf	btemp
	movlw	high(015h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK7
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK7
	movlw	low(__pbssBANK7)
	movwf	fsr0l
	movlw	high(__pbssBANK7)
	movwf	fsr0h
	movlw	low(050h)
	movwf	btemp
	movlw	high(050h)
	movwf	btemp+1
	fcall	clear_ram0
; Clear objects allocated to BANK8
psect cinit,class=CODE,delta=2,merge=1
	global __pbssBANK8
	movlw	low(__pbssBANK8)
	movwf	fsr0l
	movlw	high(__pbssBANK8)
	movwf	fsr0h
	movlw	low(050h)
	movwf	btemp
	movlw	high(050h)
	movwf	btemp+1
	fcall	clear_ram0
	line	#
psect inittext,class=CODE,delta=2
global init_ram,btemp
init_ram:
	movwf btemp,f
initloop:
	moviw fsr0++
	movwi fsr1++
	movlw 1
subwf btemp,f
movlw 0
subwfb btemp+1,f
	movf btemp+1,w
	iorwf btemp,w
	skipz
	goto initloop
	retlw 0
; Initialize objects allocated to BANK1
	global __pidataBANK1,__pdataBANK1
psect cinit,class=CODE,delta=2,merge=1
	movlw low(__pidataBANK1)
	movwf fsr0l
	movlw high(__pidataBANK1)|80h
	movwf fsr0h
	movlw low(__pdataBANK1)
	movwf fsr1l
	movlw high(__pdataBANK1)
	movwf fsr1h
	movlw high(014h)
	movwf btemp+1
	movlw low(014h)
	fcall init_ram
; Initialize objects allocated to BANK2
	global __pidataBANK2,__pdataBANK2
psect cinit,class=CODE,delta=2,merge=1
	movlw low(__pidataBANK2)
	movwf fsr0l
	movlw high(__pidataBANK2)|80h
	movwf fsr0h
	movlw low(__pdataBANK2)
	movwf fsr1l
	movlw high(__pdataBANK2)
	movwf fsr1h
	movlw high(016h)
	movwf btemp+1
	movlw low(016h)
	fcall init_ram
; Initialize objects allocated to BANK3
	global __pidataBANK3,__pdataBANK3
psect cinit,class=CODE,delta=2,merge=1
	movlw low(__pidataBANK3)
	movwf fsr0l
	movlw high(__pidataBANK3)|80h
	movwf fsr0h
	movlw low(__pdataBANK3)
	movwf fsr1l
	movlw high(__pdataBANK3)
	movwf fsr1h
	movlw high(01Eh)
	movwf btemp+1
	movlw low(01Eh)
	fcall init_ram
; Initialize objects allocated to BANK4
	global __pidataBANK4,__pdataBANK4
psect cinit,class=CODE,delta=2,merge=1
	movlw low(__pidataBANK4)
	movwf fsr0l
	movlw high(__pidataBANK4)|80h
	movwf fsr0h
	movlw low(__pdataBANK4)
	movwf fsr1l
	movlw high(__pdataBANK4)
	movwf fsr1h
	movlw high(015h)
	movwf btemp+1
	movlw low(015h)
	fcall init_ram
; Initialize objects allocated to BANK5
	global __pidataBANK5,__pdataBANK5
psect cinit,class=CODE,delta=2,merge=1
	movlb 5	; select bank5
	fcall	__pidataBANK5+0		;fetch initializer
	movwf	__pdataBANK5+0&07fh		
	fcall	__pidataBANK5+1		;fetch initializer
	movwf	__pdataBANK5+1&07fh		
	fcall	__pidataBANK5+2		;fetch initializer
	movwf	__pdataBANK5+2&07fh		
	fcall	__pidataBANK5+3		;fetch initializer
	movwf	__pdataBANK5+3&07fh		
psect cinit,class=CODE,delta=2,merge=1
global end_of_initialization,__end_of__initialization

;End of C runtime variable initialization code

end_of_initialization:
__end_of__initialization:movlb 0
ljmp _main	;jump to C main() function
psect	cstackBANK5,class=BANK5,space=1,noexec
global __pcstackBANK5
__pcstackBANK5:
	global	_handle_ad_loop$3196
_handle_ad_loop$3196:	; 3 bytes @ 0x0
	ds	3
	global	handle_ad_loop@data_cc_var
handle_ad_loop@data_cc_var:	; 3 bytes @ 0x3
	ds	3
psect	cstackBANK1,class=BANK1,space=1,noexec
global __pcstackBANK1
__pcstackBANK1:
	global	start_ad_convert@ch
start_ad_convert@ch:	; 1 bytes @ 0x0
	global	pid_calc@dError
pid_calc@dError:	; 3 bytes @ 0x0
	global	pid_calc_2@dError
pid_calc_2@dError:	; 3 bytes @ 0x0
	ds	1
	global	start_ad_convert@ad_h
start_ad_convert@ad_h:	; 2 bytes @ 0x1
	ds	2
	global	start_ad_convert@ad_l
start_ad_convert@ad_l:	; 2 bytes @ 0x3
	global	_pid_calc$3192
_pid_calc$3192:	; 3 bytes @ 0x3
	global	_pid_calc_2$3194
_pid_calc_2$3194:	; 3 bytes @ 0x3
	ds	2
	global	start_ad_convert@temp
start_ad_convert@temp:	; 2 bytes @ 0x5
	ds	1
	global	_pid_calc$3193
_pid_calc$3193:	; 3 bytes @ 0x6
	global	_pid_calc_2$3195
_pid_calc_2$3195:	; 3 bytes @ 0x6
	ds	1
	global	start_ad_convert@ad_ch
start_ad_convert@ad_ch:	; 1 bytes @ 0x7
	ds	1
	global	start_ad_convert@j
start_ad_convert@j:	; 1 bytes @ 0x8
	ds	1
	global	start_ad_convert@i
start_ad_convert@i:	; 1 bytes @ 0x9
	global	pid_calc@dk
pid_calc@dk:	; 3 bytes @ 0x9
	global	pid_calc_2@dk
pid_calc_2@dk:	; 3 bytes @ 0x9
	ds	3
	global	pid_calc@PWM_var
pid_calc@PWM_var:	; 3 bytes @ 0xC
	global	pid_calc_2@PWM_var
pid_calc_2@PWM_var:	; 3 bytes @ 0xC
	ds	3
	global	pid_calc_2@pp
pid_calc_2@pp:	; 1 bytes @ 0xF
	global	pid_calc@Error
pid_calc@Error:	; 3 bytes @ 0xF
	ds	1
	global	pid_calc_2@Error
pid_calc_2@Error:	; 3 bytes @ 0x10
	ds	3
psect	cstackCOMMON,class=COMMON,space=1,noexec
global __pcstackCOMMON
__pcstackCOMMON:
?_Disable_Bost_Pwm1:	; 0 bytes @ 0x0
?_Disable_Bost_Pwm2:	; 0 bytes @ 0x0
?_Disable_Buck_Pwm:	; 0 bytes @ 0x0
?_Enable_Bost_Pwm1:	; 0 bytes @ 0x0
?_Enable_Bost_Pwm2:	; 0 bytes @ 0x0
?_init_timer1:	; 0 bytes @ 0x0
?_init_uart1:	; 0 bytes @ 0x0
?_init_pwm:	; 0 bytes @ 0x0
?_handle_ad_loop:	; 0 bytes @ 0x0
?_handle_task_process:	; 0 bytes @ 0x0
?_handle_uart_rx_buf:	; 0 bytes @ 0x0
?_Mppt_Charge:	; 0 bytes @ 0x0
?_init_adc:	; 0 bytes @ 0x0
?_isr:	; 0 bytes @ 0x0
?_init_interrupt:	; 0 bytes @ 0x0
?_read_param_eeprom:	; 0 bytes @ 0x0
?_auto_system:	; 0 bytes @ 0x0
?_Init_Ird:	; 0 bytes @ 0x0
?_init_key:	; 0 bytes @ 0x0
?_scan_key_value:	; 0 bytes @ 0x0
?_init_osc:	; 0 bytes @ 0x0
?_init_port:	; 0 bytes @ 0x0
?_driver_init:	; 0 bytes @ 0x0
?_middle_init:	; 0 bytes @ 0x0
?_application_init:	; 0 bytes @ 0x0
?_Enable_Buck_Pwm:	; 0 bytes @ 0x0
?i1_Disable_Bost_Pwm1:	; 0 bytes @ 0x0
??i1_Disable_Bost_Pwm1:	; 0 bytes @ 0x0
?i1_Disable_Bost_Pwm2:	; 0 bytes @ 0x0
??i1_Disable_Bost_Pwm2:	; 0 bytes @ 0x0
?i1_Set_Bost_Pwm1_Duty:	; 0 bytes @ 0x0
?i1_Set_Bost_Pwm2_Duty:	; 0 bytes @ 0x0
?_eeprom_read:	; 1 bytes @ 0x0
?_main:	; 2 bytes @ 0x0
	global	i1Set_Bost_Pwm1_Duty@dduty
i1Set_Bost_Pwm1_Duty@dduty:	; 2 bytes @ 0x0
	global	i1Set_Bost_Pwm2_Duty@dduty
i1Set_Bost_Pwm2_Duty@dduty:	; 2 bytes @ 0x0
	ds	2
??i1_Set_Bost_Pwm1_Duty:	; 0 bytes @ 0x2
??i1_Set_Bost_Pwm2_Duty:	; 0 bytes @ 0x2
	ds	2
??_isr:	; 0 bytes @ 0x4
	ds	8
psect	cstackBANK0,class=BANK0,space=1,noexec
global __pcstackBANK0
__pcstackBANK0:
	global	isr@r1_data
isr@r1_data:	; 1 bytes @ 0x0
	ds	1
	global	isr@time_cnt
isr@time_cnt:	; 2 bytes @ 0x1
	ds	2
?_Set_Bost_Pwm1_Duty:	; 0 bytes @ 0x3
??_Disable_Bost_Pwm1:	; 0 bytes @ 0x3
?_Set_Bost_Pwm2_Duty:	; 0 bytes @ 0x3
??_Disable_Bost_Pwm2:	; 0 bytes @ 0x3
??_eeprom_read:	; 0 bytes @ 0x3
??_Disable_Buck_Pwm:	; 0 bytes @ 0x3
?_Set_Buck_Pwm_Duty:	; 0 bytes @ 0x3
??_Enable_Bost_Pwm1:	; 0 bytes @ 0x3
??_Enable_Bost_Pwm2:	; 0 bytes @ 0x3
??_init_timer1:	; 0 bytes @ 0x3
??_init_uart1:	; 0 bytes @ 0x3
??_init_pwm:	; 0 bytes @ 0x3
??_init_adc:	; 0 bytes @ 0x3
?_delay_ms:	; 0 bytes @ 0x3
??_init_interrupt:	; 0 bytes @ 0x3
??_Init_Ird:	; 0 bytes @ 0x3
??_init_key:	; 0 bytes @ 0x3
??_init_osc:	; 0 bytes @ 0x3
??_init_port:	; 0 bytes @ 0x3
??_driver_init:	; 0 bytes @ 0x3
??_Enable_Buck_Pwm:	; 0 bytes @ 0x3
?_memset:	; 2 bytes @ 0x3
	global	?_crc16
?_crc16:	; 2 bytes @ 0x3
	global	?___wmul
?___wmul:	; 2 bytes @ 0x3
	global	?___ftpack
?___ftpack:	; 3 bytes @ 0x3
	global	?___lldiv
?___lldiv:	; 4 bytes @ 0x3
	global	?___lmul
?___lmul:	; 4 bytes @ 0x3
	global	eeprom_read@addr
eeprom_read@addr:	; 1 bytes @ 0x3
	global	delay_ms@count
delay_ms@count:	; 2 bytes @ 0x3
	global	crc16@puchMsg
crc16@puchMsg:	; 2 bytes @ 0x3
	global	Set_Buck_Pwm_Duty@duty
Set_Buck_Pwm_Duty@duty:	; 2 bytes @ 0x3
	global	Set_Bost_Pwm1_Duty@dduty
Set_Bost_Pwm1_Duty@dduty:	; 2 bytes @ 0x3
	global	Set_Bost_Pwm2_Duty@dduty
Set_Bost_Pwm2_Duty@dduty:	; 2 bytes @ 0x3
	global	memset@p1
memset@p1:	; 2 bytes @ 0x3
	global	___wmul@multiplier
___wmul@multiplier:	; 2 bytes @ 0x3
	global	___ftpack@arg
___ftpack@arg:	; 3 bytes @ 0x3
	global	___lldiv@divisor
___lldiv@divisor:	; 4 bytes @ 0x3
	global	___lmul@multiplier
___lmul@multiplier:	; 4 bytes @ 0x3
	ds	2
??_Set_Bost_Pwm1_Duty:	; 0 bytes @ 0x5
??_Set_Bost_Pwm2_Duty:	; 0 bytes @ 0x5
??_Set_Buck_Pwm_Duty:	; 0 bytes @ 0x5
??_delay_ms:	; 0 bytes @ 0x5
	global	crc16@usDataLen
crc16@usDataLen:	; 1 bytes @ 0x5
	global	delay_ms@i
delay_ms@i:	; 2 bytes @ 0x5
	global	memset@c
memset@c:	; 2 bytes @ 0x5
	global	___wmul@multiplicand
___wmul@multiplicand:	; 2 bytes @ 0x5
	ds	1
??_crc16:	; 0 bytes @ 0x6
	global	___ftpack@exp
___ftpack@exp:	; 1 bytes @ 0x6
	global	crc16@uIndex
crc16@uIndex:	; 4 bytes @ 0x6
	ds	1
??___wmul:	; 0 bytes @ 0x7
	global	___ftpack@sign
___ftpack@sign:	; 1 bytes @ 0x7
	global	delay_ms@j
delay_ms@j:	; 2 bytes @ 0x7
	global	memset@n
memset@n:	; 2 bytes @ 0x7
	global	___wmul@product
___wmul@product:	; 2 bytes @ 0x7
	global	___lldiv@dividend
___lldiv@dividend:	; 4 bytes @ 0x7
	global	___lmul@multiplicand
___lmul@multiplicand:	; 4 bytes @ 0x7
	ds	1
??___ftpack:	; 0 bytes @ 0x8
	ds	1
??_memset:	; 0 bytes @ 0x9
	global	?___lwdiv
?___lwdiv:	; 2 bytes @ 0x9
	global	___lwdiv@divisor
___lwdiv@divisor:	; 2 bytes @ 0x9
	global	memset@p
memset@p:	; 2 bytes @ 0x9
	ds	1
	global	crc16@uchCRCHi
crc16@uchCRCHi:	; 1 bytes @ 0xA
	ds	1
?_pid_init:	; 0 bytes @ 0xB
??___lldiv:	; 0 bytes @ 0xB
??___lmul:	; 0 bytes @ 0xB
	global	?___awtoft
?___awtoft:	; 3 bytes @ 0xB
	global	?___lbtoft
?___lbtoft:	; 3 bytes @ 0xB
	global	crc16@uchCRCLo
crc16@uchCRCLo:	; 1 bytes @ 0xB
	global	pid_init@pp
pid_init@pp:	; 2 bytes @ 0xB
	global	___awtoft@c
___awtoft@c:	; 2 bytes @ 0xB
	global	___lwdiv@dividend
___lwdiv@dividend:	; 2 bytes @ 0xB
	global	___lldiv@quotient
___lldiv@quotient:	; 4 bytes @ 0xB
	global	___lmul@product
___lmul@product:	; 4 bytes @ 0xB
	ds	2
??_pid_init:	; 0 bytes @ 0xD
??___lwdiv:	; 0 bytes @ 0xD
	global	___lwdiv@counter
___lwdiv@counter:	; 1 bytes @ 0xD
	ds	1
??___awtoft:	; 0 bytes @ 0xE
	global	___awtoft@sign
___awtoft@sign:	; 1 bytes @ 0xE
	global	___lwdiv@quotient
___lwdiv@quotient:	; 2 bytes @ 0xE
	ds	1
??___lbtoft:	; 0 bytes @ 0xF
	global	___lbtoft@c
___lbtoft@c:	; 1 bytes @ 0xF
	global	___lldiv@counter
___lldiv@counter:	; 1 bytes @ 0xF
	ds	1
	global	?_start_ad_convert
?_start_ad_convert:	; 2 bytes @ 0x10
	global	?___lwtoft
?___lwtoft:	; 3 bytes @ 0x10
	global	___lwtoft@c
___lwtoft@c:	; 2 bytes @ 0x10
	ds	2
??_start_ad_convert:	; 0 bytes @ 0x12
	ds	1
??___lwtoft:	; 0 bytes @ 0x13
	global	?___ftmul
?___ftmul:	; 3 bytes @ 0x13
	global	___ftmul@f1
___ftmul@f1:	; 3 bytes @ 0x13
	ds	3
	global	___ftmul@f2
___ftmul@f2:	; 3 bytes @ 0x16
	ds	3
??___ftmul:	; 0 bytes @ 0x19
	ds	3
	global	___ftmul@exp
___ftmul@exp:	; 1 bytes @ 0x1C
	ds	1
	global	___ftmul@f3_as_product
___ftmul@f3_as_product:	; 3 bytes @ 0x1D
	ds	3
	global	___ftmul@cntr
___ftmul@cntr:	; 1 bytes @ 0x20
	ds	1
	global	___ftmul@sign
___ftmul@sign:	; 1 bytes @ 0x21
	ds	1
	global	?___ftadd
?___ftadd:	; 3 bytes @ 0x22
	global	?___ftdiv
?___ftdiv:	; 3 bytes @ 0x22
	global	___ftadd@f1
___ftadd@f1:	; 3 bytes @ 0x22
	global	___ftdiv@f2
___ftdiv@f2:	; 3 bytes @ 0x22
	ds	3
	global	___ftadd@f2
___ftadd@f2:	; 3 bytes @ 0x25
	global	___ftdiv@f1
___ftdiv@f1:	; 3 bytes @ 0x25
	ds	3
??___ftadd:	; 0 bytes @ 0x28
??___ftdiv:	; 0 bytes @ 0x28
	ds	3
	global	___ftadd@sign
___ftadd@sign:	; 1 bytes @ 0x2B
	global	___ftdiv@cntr
___ftdiv@cntr:	; 1 bytes @ 0x2B
	ds	1
	global	___ftadd@exp2
___ftadd@exp2:	; 1 bytes @ 0x2C
	global	___ftdiv@f3
___ftdiv@f3:	; 3 bytes @ 0x2C
	ds	1
	global	___ftadd@exp1
___ftadd@exp1:	; 1 bytes @ 0x2D
	ds	1
	global	?___ftsub
?___ftsub:	; 3 bytes @ 0x2E
	global	___ftsub@f2
___ftsub@f2:	; 3 bytes @ 0x2E
	ds	1
	global	___ftdiv@exp
___ftdiv@exp:	; 1 bytes @ 0x2F
	ds	1
	global	___ftdiv@sign
___ftdiv@sign:	; 1 bytes @ 0x30
	ds	1
??_read_param_eeprom:	; 0 bytes @ 0x31
??_application_init:	; 0 bytes @ 0x31
?___ftge:	; 1 bit 
	global	?___fttol
?___fttol:	; 4 bytes @ 0x31
	global	read_param_eeprom@byte_h
read_param_eeprom@byte_h:	; 1 bytes @ 0x31
	global	___ftge@ff1
___ftge@ff1:	; 3 bytes @ 0x31
	global	___ftsub@f1
___ftsub@f1:	; 3 bytes @ 0x31
	global	___fttol@f1
___fttol@f1:	; 3 bytes @ 0x31
	global	_application_init$3191
_application_init$3191:	; 3 bytes @ 0x31
	ds	1
	global	read_param_eeprom@byte_l
read_param_eeprom@byte_l:	; 1 bytes @ 0x32
	ds	2
??___ftsub:	; 0 bytes @ 0x34
	global	___ftge@ff2
___ftge@ff2:	; 3 bytes @ 0x34
	ds	1
??___fttol:	; 0 bytes @ 0x35
	ds	2
??___ftge:	; 0 bytes @ 0x37
	global	?_pid_calc
?_pid_calc:	; 3 bytes @ 0x37
	global	?_pid_calc_2
?_pid_calc_2:	; 3 bytes @ 0x37
	global	pid_calc@pp
pid_calc@pp:	; 2 bytes @ 0x37
	global	pid_calc_2@NowPoint
pid_calc_2@NowPoint:	; 2 bytes @ 0x37
	ds	1
	global	___fttol@sign1
___fttol@sign1:	; 1 bytes @ 0x38
	ds	1
	global	pid_calc@NowPoint
pid_calc@NowPoint:	; 2 bytes @ 0x39
	global	___fttol@lval
___fttol@lval:	; 4 bytes @ 0x39
	ds	1
??_pid_calc_2:	; 0 bytes @ 0x3A
	ds	1
??_pid_calc:	; 0 bytes @ 0x3B
	ds	2
	global	___fttol@exp1
___fttol@exp1:	; 1 bytes @ 0x3D
	ds	1
?_eeprom_write:	; 0 bytes @ 0x3E
??_Mppt_Charge:	; 0 bytes @ 0x3E
	global	eeprom_write@value
eeprom_write@value:	; 1 bytes @ 0x3E
	ds	1
??_eeprom_write:	; 0 bytes @ 0x3F
	global	eeprom_write@addr
eeprom_write@addr:	; 1 bytes @ 0x3F
	ds	1
??_handle_task_process:	; 0 bytes @ 0x40
??_handle_uart_rx_buf:	; 0 bytes @ 0x40
?_Key_Menu:	; 0 bytes @ 0x40
??_scan_key_value:	; 0 bytes @ 0x40
	global	_handle_task_process$3197
_handle_task_process$3197:	; 3 bytes @ 0x40
	global	_handle_uart_rx_buf$3198
_handle_uart_rx_buf$3198:	; 3 bytes @ 0x40
	global	Key_Menu@key_value
Key_Menu@key_value:	; 4 bytes @ 0x40
	ds	3
	global	handle_uart_rx_buf@crc_in
handle_uart_rx_buf@crc_in:	; 2 bytes @ 0x43
	ds	1
??_handle_ad_loop:	; 0 bytes @ 0x44
??_auto_system:	; 0 bytes @ 0x44
??_Key_Menu:	; 0 bytes @ 0x44
	global	Key_Menu@code
Key_Menu@code:	; 1 bytes @ 0x44
	global	auto_system@sys_bt_voltage
auto_system@sys_bt_voltage:	; 3 bytes @ 0x44
	ds	2
	global	scan_key_value@key_temp
scan_key_value@key_temp:	; 2 bytes @ 0x46
	ds	1
??_middle_init:	; 0 bytes @ 0x47
	ds	1
??_main:	; 0 bytes @ 0x48
;!
;!Data Sizes:
;!    Strings     0
;!    Constant    512
;!    Data        97
;!    BSS         458
;!    Persistent  0
;!    Stack       0
;!
;!Auto Spaces:
;!    Space          Size  Autos    Used
;!    COMMON           14     12      14
;!    BANK0            80     72      76
;!    BANK1            80     19      80
;!    BANK2            80      0      80
;!    BANK3            80      0      80
;!    BANK4            80      0      79
;!    BANK5            80      6      74
;!    BANK6            80      0      21
;!    BANK7            80      0      80
;!    BANK8            80      0      80
;!    BANK9            80      0       0
;!    BANK10           80      0       0
;!    BANK11            0      0       0
;!    BANK12            0      0       0

;!
;!Pointer List with Targets:
;!
;!    memset@p1	PTR void  size(2) Largest target is 80
;!		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
;!		 -> uart1_rx_buf(BANK8[80]), 
;!
;!    memset@p	PTR unsigned char  size(2) Largest target is 80
;!		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
;!		 -> uart1_rx_buf(BANK8[80]), 
;!
;!    sp__memset	PTR void  size(2) Largest target is 80
;!		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
;!		 -> uart1_rx_buf(BANK8[80]), 
;!
;!    pid_init@pp	PTR struct PID_VAR size(2) Largest target is 21
;!		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
;!
;!    pid_calc_2@pp	PTR struct PID_VAR size(1) Largest target is 21
;!		 -> PID_CC2_discharge(BANK4[21]), 
;!
;!    pid_calc@pp	PTR struct PID_VAR size(2) Largest target is 21
;!		 -> PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
;!
;!    crc16@puchMsg	PTR volatile unsigned char  size(2) Largest target is 80
;!		 -> uart1_tx_buf(BANK7[80]), uart1_rx_buf(BANK8[80]), 
;!
;!    uart_send_point	PTR unsigned char  size(1) Largest target is 0
;!		 -> NULL(NULL[0]), 
;!


;!
;!Critical Paths under _main in COMMON
;!
;!    None.
;!
;!Critical Paths under _isr in COMMON
;!
;!    _isr->i1_Set_Bost_Pwm1_Duty
;!    _isr->i1_Set_Bost_Pwm2_Duty
;!
;!Critical Paths under _main in BANK0
;!
;!    _main->_scan_key_value
;!    _scan_key_value->_eeprom_write
;!    _middle_init->_auto_system
;!    _read_param_eeprom->___ftdiv
;!    _auto_system->_start_ad_convert
;!    _handle_uart_rx_buf->_eeprom_write
;!    ___lbtoft->___ftpack
;!    _handle_task_process->_eeprom_write
;!    _handle_ad_loop->_start_ad_convert
;!    _start_ad_convert->___lwdiv
;!    ___lwdiv->___wmul
;!    _pid_calc_2->___ftge
;!    _Mppt_Charge->___fttol
;!    _Mppt_Charge->_pid_calc
;!    _pid_calc->___ftge
;!    ___ftsub->___ftadd
;!    ___ftge->___ftdiv
;!    ___awtoft->___ftpack
;!    ___lwtoft->___lwdiv
;!    ___fttol->___ftdiv
;!    _application_init->___ftdiv
;!    _pid_init->_memset
;!    _Key_Menu->_eeprom_write
;!    _eeprom_write->___fttol
;!    ___ftdiv->___ftmul
;!    ___ftadd->___ftmul
;!    ___ftmul->___lwtoft
;!
;!Critical Paths under _isr in BANK0
;!
;!    None.
;!
;!Critical Paths under _main in BANK1
;!
;!    _auto_system->_start_ad_convert
;!    _handle_ad_loop->_pid_calc_2
;!    _Mppt_Charge->_pid_calc
;!
;!Critical Paths under _isr in BANK1
;!
;!    None.
;!
;!Critical Paths under _main in BANK2
;!
;!    None.
;!
;!Critical Paths under _isr in BANK2
;!
;!    None.
;!
;!Critical Paths under _main in BANK3
;!
;!    None.
;!
;!Critical Paths under _isr in BANK3
;!
;!    None.
;!
;!Critical Paths under _main in BANK4
;!
;!    None.
;!
;!Critical Paths under _isr in BANK4
;!
;!    None.
;!
;!Critical Paths under _main in BANK5
;!
;!    _main->_handle_ad_loop
;!
;!Critical Paths under _isr in BANK5
;!
;!    None.
;!
;!Critical Paths under _main in BANK6
;!
;!    None.
;!
;!Critical Paths under _isr in BANK6
;!
;!    None.
;!
;!Critical Paths under _main in BANK7
;!
;!    None.
;!
;!Critical Paths under _isr in BANK7
;!
;!    None.
;!
;!Critical Paths under _main in BANK8
;!
;!    None.
;!
;!Critical Paths under _isr in BANK8
;!
;!    None.
;!
;!Critical Paths under _main in BANK9
;!
;!    None.
;!
;!Critical Paths under _isr in BANK9
;!
;!    None.
;!
;!Critical Paths under _main in BANK10
;!
;!    None.
;!
;!Critical Paths under _isr in BANK10
;!
;!    None.
;!
;!Critical Paths under _main in BANK11
;!
;!    None.
;!
;!Critical Paths under _isr in BANK11
;!
;!    None.
;!
;!Critical Paths under _main in BANK12
;!
;!    None.
;!
;!Critical Paths under _isr in BANK12
;!
;!    None.

;;
;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
;;

;!
;!Call Graph Tables:
;!
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (0) _main                                                 0     0      0  631005
;!                           _Key_Menu
;!                   _application_init
;!                        _driver_init
;!                     _handle_ad_loop
;!                _handle_task_process
;!                 _handle_uart_rx_buf
;!                        _middle_init
;!                     _scan_key_value
;! ---------------------------------------------------------------------------------
;! (1) _scan_key_value                                       8     8      0   18123
;!                                             64 BANK0      8     8      0
;!                  _Disable_Bost_Pwm1
;!                  _Disable_Bost_Pwm2
;!                   _Disable_Buck_Pwm
;!                   _Enable_Bost_Pwm1
;!                   _Enable_Bost_Pwm2
;!                 _Set_Bost_Pwm1_Duty
;!                 _Set_Bost_Pwm2_Duty
;!                  _Set_Buck_Pwm_Duty
;!                           _delay_ms
;!                       _eeprom_write
;! ---------------------------------------------------------------------------------
;! (1) _middle_init                                          0     0      0  102737
;!                        _auto_system
;!                  _read_param_eeprom
;! ---------------------------------------------------------------------------------
;! (2) _read_param_eeprom                                    2     2      0   37610
;!                                             49 BANK0      2     2      0
;!                           ___awtoft
;!                            ___ftdiv
;!                            ___ftmul
;!                           ___lbtoft
;!                             ___lmul
;!                        _eeprom_read
;! ---------------------------------------------------------------------------------
;! (2) _auto_system                                          3     3      0   65127
;!                                             68 BANK0      3     3      0
;!                            ___ftdiv
;!                             ___ftge
;!                            ___ftmul
;!                           ___lwtoft
;!                           _delay_ms
;!                        _eeprom_read
;!                       _eeprom_write
;!                   _start_ad_convert
;! ---------------------------------------------------------------------------------
;! (1) _handle_uart_rx_buf                                   8     8      0   88380
;!                                             64 BANK0      5     5      0
;!                  _Disable_Bost_Pwm1
;!                  _Disable_Bost_Pwm2
;!                   _Disable_Buck_Pwm
;!                   _Enable_Bost_Pwm1
;!                   _Enable_Bost_Pwm2
;!                 _Set_Bost_Pwm1_Duty
;!                 _Set_Bost_Pwm2_Duty
;!                  _Set_Buck_Pwm_Duty
;!                           ___awtoft
;!                            ___ftdiv
;!                             ___ftge
;!                            ___ftmul
;!                            ___fttol
;!                           ___lbtoft
;!                             ___lmul
;!                           ___lwtoft
;!                              _crc16
;!                           _delay_ms
;!                        _eeprom_read
;!                       _eeprom_write
;!                             _memset
;! ---------------------------------------------------------------------------------
;! (3) _eeprom_read                                          1     1      0      22
;!                                              3 BANK0      1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _crc16                                                9     6      3    1132
;!                                              3 BANK0      9     6      3
;! ---------------------------------------------------------------------------------
;! (3) ___lmul                                              12     4      8     348
;!                                              3 BANK0     12     4      8
;! ---------------------------------------------------------------------------------
;! (3) ___lbtoft                                             5     1      4    2584
;!                                             11 BANK0      5     1      4
;!                           ___ftpack
;! ---------------------------------------------------------------------------------
;! (1) _handle_task_process                                  6     6      0   57434
;!                                             64 BANK0      3     3      0
;!                  _Disable_Bost_Pwm1
;!                  _Disable_Bost_Pwm2
;!                   _Disable_Buck_Pwm
;!                   _Enable_Bost_Pwm1
;!                   _Enable_Bost_Pwm2
;!                 _Set_Bost_Pwm1_Duty
;!                 _Set_Bost_Pwm2_Duty
;!                  _Set_Buck_Pwm_Duty
;!                            ___ftadd
;!                            ___ftdiv
;!                            ___ftmul
;!                            ___fttol
;!                           _delay_ms
;!                       _eeprom_write
;!                           _pid_init
;! ---------------------------------------------------------------------------------
;! (1) _handle_ad_loop                                      11    11      0  310640
;!                                             68 BANK0      2     2      0
;!                                              0 BANK5      6     6      0
;!                  _Disable_Bost_Pwm1
;!                  _Disable_Bost_Pwm2
;!                   _Disable_Buck_Pwm
;!                   _Enable_Bost_Pwm1
;!                   _Enable_Bost_Pwm2
;!                    _Enable_Buck_Pwm
;!                        _Mppt_Charge
;!                 _Set_Bost_Pwm1_Duty
;!                 _Set_Bost_Pwm2_Duty
;!                  _Set_Buck_Pwm_Duty
;!                           ___awtoft
;!                            ___ftadd
;!                            ___ftdiv
;!                             ___ftge
;!                            ___ftmul
;!                            ___fttol
;!                            ___lldiv
;!                            ___lwdiv
;!                           ___lwtoft
;!                             ___wmul
;!                           _delay_ms
;!                           _pid_calc
;!                         _pid_calc_2
;!                   _start_ad_convert
;! ---------------------------------------------------------------------------------
;! (3) _start_ad_convert                                    63    61      2    2218
;!                                             16 BANK0     52    50      2
;!                                              0 BANK1     10    10      0
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (4) ___lwdiv                                              7     3      4    1011
;!                                              9 BANK0      7     3      4
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (2) _pid_calc_2                                          25    22      3   58464
;!                                             55 BANK0      6     3      3
;!                                              0 BANK1     19    19      0
;!                           ___awtoft
;!                            ___ftadd
;!                             ___ftge
;!                            ___ftmul
;!                            ___ftsub
;! ---------------------------------------------------------------------------------
;! (2) ___wmul                                               6     2      4    1060
;!                                              3 BANK0      6     2      4
;! ---------------------------------------------------------------------------------
;! (2) ___lldiv                                             13     5      8     395
;!                                              3 BANK0     13     5      8
;! ---------------------------------------------------------------------------------
;! (2) _Mppt_Charge                                          0     0      0  100662
;!                  _Set_Buck_Pwm_Duty
;!                            ___ftadd
;!                             ___ftge
;!                            ___fttol
;!                           ___lwtoft
;!                           _pid_calc
;! ---------------------------------------------------------------------------------
;! (2) _pid_calc                                            25    21      4   58762
;!                                             55 BANK0      7     3      4
;!                                              0 BANK1     18    18      0
;!                           ___awtoft
;!                            ___ftadd
;!                             ___ftge
;!                            ___ftmul
;!                            ___ftsub
;! ---------------------------------------------------------------------------------
;! (3) ___ftsub                                              6     0      6    7613
;!                                             46 BANK0      6     0      6
;!                           ___awtoft (ARG)
;!                            ___ftadd
;! ---------------------------------------------------------------------------------
;! (3) ___ftge                                               6     0      6   21244
;!                                             49 BANK0      6     0      6
;!                           ___awtoft (ARG)
;!                            ___ftadd (ARG)
;!                            ___ftdiv (ARG)
;!                            ___ftmul (ARG)
;!                            ___lwdiv (ARG)
;!                           ___lwtoft (ARG)
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (3) ___awtoft                                             4     1      3    5092
;!                                             11 BANK0      4     1      3
;!                           ___ftpack
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (3) ___lwtoft                                             3     0      3    7931
;!                                             16 BANK0      3     0      3
;!                           ___ftpack
;!                            ___lwdiv (ARG)
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (2) ___fttol                                             13     9      4    3796
;!                                             49 BANK0     13     9      4
;!                            ___ftadd (ARG)
;!                            ___ftdiv (ARG)
;!                           ___lwtoft (ARG)
;! ---------------------------------------------------------------------------------
;! (2) _Enable_Buck_Pwm                                      0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _driver_init                                          0     0      0       0
;!                           _Init_Ird
;!                           _init_adc
;!                     _init_interrupt
;!                           _init_key
;!                           _init_osc
;!                          _init_port
;!                           _init_pwm
;!                        _init_timer1
;!                         _init_uart1
;! ---------------------------------------------------------------------------------
;! (2) _init_uart1                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_timer1                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_pwm                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_port                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_osc                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_key                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_interrupt                                       0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _init_adc                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _Init_Ird                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _application_init                                     3     3      0   35583
;!                                             49 BANK0      3     3      0
;!                            ___ftadd
;!                            ___ftdiv
;!                            ___ftmul
;!                           _pid_init
;! ---------------------------------------------------------------------------------
;! (2) _pid_init                                             2     0      2     889
;!                                             11 BANK0      2     0      2
;!                             _memset
;! ---------------------------------------------------------------------------------
;! (2) _memset                                               8     2      6     414
;!                                              3 BANK0      8     2      6
;! ---------------------------------------------------------------------------------
;! (1) _Key_Menu                                             7     3      4   18108
;!                                             64 BANK0      5     1      4
;!                  _Disable_Bost_Pwm1
;!                  _Disable_Bost_Pwm2
;!                   _Disable_Buck_Pwm
;!                   _Enable_Bost_Pwm1
;!                   _Enable_Bost_Pwm2
;!                 _Set_Bost_Pwm1_Duty
;!                 _Set_Bost_Pwm2_Duty
;!                  _Set_Buck_Pwm_Duty
;!                           _delay_ms
;!                       _eeprom_write
;! ---------------------------------------------------------------------------------
;! (2) _eeprom_write                                         2     1      1    3500
;!                                             62 BANK0      2     1      1
;!                            ___ftdiv (ARG)
;!                            ___fttol (ARG)
;! ---------------------------------------------------------------------------------
;! (2) _delay_ms                                             6     4      2    2292
;!                                              3 BANK0      6     4      2
;! ---------------------------------------------------------------------------------
;! (2) _Set_Buck_Pwm_Duty                                    4     2      2    1997
;!                                              3 BANK0      4     2      2
;! ---------------------------------------------------------------------------------
;! (2) _Set_Bost_Pwm2_Duty                                   4     2      2    5082
;!                                              3 BANK0      4     2      2
;! ---------------------------------------------------------------------------------
;! (2) _Set_Bost_Pwm1_Duty                                   4     2      2    5082
;!                                              3 BANK0      4     2      2
;! ---------------------------------------------------------------------------------
;! (2) _Enable_Bost_Pwm2                                     0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _Enable_Bost_Pwm1                                     0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _Disable_Buck_Pwm                                     0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _Disable_Bost_Pwm2                                    0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _Disable_Bost_Pwm1                                    0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) ___ftdiv                                             15     9      6   11905
;!                                             34 BANK0     15     9      6
;!                            ___ftmul (ARG)
;!                           ___ftpack
;!                            ___lwdiv (ARG)
;!                           ___lwtoft (ARG)
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (2) ___ftadd                                             12     6      6    6932
;!                                             34 BANK0     12     6      6
;!                           ___awtoft (ARG)
;!                            ___ftmul (ARG)
;!                           ___ftpack
;!                           ___lwtoft (ARG)
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (3) ___ftmul                                             15     9      6   15823
;!                                             19 BANK0     15     9      6
;!                           ___ftpack
;!                           ___lwtoft (ARG)
;! ---------------------------------------------------------------------------------
;! (4) ___ftpack                                             8     3      5    2553
;!                                              3 BANK0      8     3      5
;! ---------------------------------------------------------------------------------
;! (4) ___ftpack                                             8     3      5    2553
;!                                              3 BANK0      8     3      5
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 4
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (7) _isr                                                 12    12      0    1082
;!                                              4 COMMON     8     8      0
;!                                              0 BANK0      3     3      0
;!                i1_Disable_Bost_Pwm1
;!                i1_Disable_Bost_Pwm2
;!               i1_Set_Bost_Pwm1_Duty
;!               i1_Set_Bost_Pwm2_Duty
;! ---------------------------------------------------------------------------------
;! (8) i1_Set_Bost_Pwm2_Duty                                 4     2      2     485
;!                                              0 COMMON     4     2      2
;! ---------------------------------------------------------------------------------
;! (8) i1_Set_Bost_Pwm1_Duty                                 4     2      2     485
;!                                              0 COMMON     4     2      2
;! ---------------------------------------------------------------------------------
;! (8) i1_Disable_Bost_Pwm2                                  0     0      0       0
;! ---------------------------------------------------------------------------------
;! (8) i1_Disable_Bost_Pwm1                                  0     0      0       0
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 8
;! ---------------------------------------------------------------------------------
;!
;! Call Graph Graphs:
;!
;! _main (ROOT)
;!   _Key_Menu
;!     _Disable_Bost_Pwm1
;!     _Disable_Bost_Pwm2
;!     _Disable_Buck_Pwm
;!     _Enable_Bost_Pwm1
;!     _Enable_Bost_Pwm2
;!     _Set_Bost_Pwm1_Duty
;!     _Set_Bost_Pwm2_Duty
;!     _Set_Buck_Pwm_Duty
;!     _delay_ms
;!     _eeprom_write
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___fttol (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!   _application_init
;!     ___ftadd
;!       ___awtoft (ARG)
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftdiv
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftmul
;!       ___ftpack
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     _pid_init
;!       _memset
;!   _driver_init
;!     _Init_Ird
;!     _init_adc
;!     _init_interrupt
;!     _init_key
;!     _init_osc
;!     _init_port
;!     _init_pwm
;!     _init_timer1
;!     _init_uart1
;!   _handle_ad_loop
;!     _Disable_Bost_Pwm1
;!     _Disable_Bost_Pwm2
;!     _Disable_Buck_Pwm
;!     _Enable_Bost_Pwm1
;!     _Enable_Bost_Pwm2
;!     _Enable_Buck_Pwm
;!     _Mppt_Charge
;!       _Set_Buck_Pwm_Duty
;!       ___ftadd
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftge
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___fttol
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___lwtoft
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       _pid_calc
;!         ___awtoft
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftge
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftadd (ARG)
;!             ___awtoft (ARG)
;!               ___ftpack
;!               ___wmul (ARG)
;!             ___ftmul (ARG)
;!               ___ftpack
;!               ___lwtoft (ARG)
;!                 ___ftpack
;!                 ___lwdiv (ARG)
;!                   ___wmul (ARG)
;!                 ___wmul (ARG)
;!             ___ftpack (ARG)
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___ftdiv (ARG)
;!             ___ftmul (ARG)
;!               ___ftpack
;!               ___lwtoft (ARG)
;!                 ___ftpack
;!                 ___lwdiv (ARG)
;!                   ___wmul (ARG)
;!                 ___wmul (ARG)
;!             ___ftpack (ARG)
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftmul
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftsub
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftadd (ARG)
;!             ___awtoft (ARG)
;!               ___ftpack
;!               ___wmul (ARG)
;!             ___ftmul (ARG)
;!               ___ftpack
;!               ___lwtoft (ARG)
;!                 ___ftpack
;!                 ___lwdiv (ARG)
;!                   ___wmul (ARG)
;!                 ___wmul (ARG)
;!             ___ftpack (ARG)
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!     _Set_Bost_Pwm1_Duty
;!     _Set_Bost_Pwm2_Duty
;!     _Set_Buck_Pwm_Duty
;!     ___awtoft
;!       ___ftpack
;!       ___wmul (ARG)
;!     ___ftadd
;!       ___awtoft (ARG)
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftdiv
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftge
;!       ___awtoft (ARG)
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftadd (ARG)
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftmul
;!       ___ftpack
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     ___fttol
;!       ___ftadd (ARG)
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     ___lldiv
;!     ___lwdiv
;!       ___wmul (ARG)
;!     ___lwtoft
;!       ___ftpack
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___wmul
;!     _delay_ms
;!     _pid_calc
;!       ___awtoft
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftadd
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftge
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftsub
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!     _pid_calc_2
;!       ___awtoft
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftadd
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftge
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftsub
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!     _start_ad_convert
;!       ___lwdiv
;!         ___wmul (ARG)
;!   _handle_task_process
;!     _Disable_Bost_Pwm1
;!     _Disable_Bost_Pwm2
;!     _Disable_Buck_Pwm
;!     _Enable_Bost_Pwm1
;!     _Enable_Bost_Pwm2
;!     _Set_Bost_Pwm1_Duty
;!     _Set_Bost_Pwm2_Duty
;!     _Set_Buck_Pwm_Duty
;!     ___ftadd
;!       ___awtoft (ARG)
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftdiv
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftmul
;!       ___ftpack
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     ___fttol
;!       ___ftadd (ARG)
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     _delay_ms
;!     _eeprom_write
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___fttol (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!     _pid_init
;!       _memset
;!   _handle_uart_rx_buf
;!     _Disable_Bost_Pwm1
;!     _Disable_Bost_Pwm2
;!     _Disable_Buck_Pwm
;!     _Enable_Bost_Pwm1
;!     _Enable_Bost_Pwm2
;!     _Set_Bost_Pwm1_Duty
;!     _Set_Bost_Pwm2_Duty
;!     _Set_Buck_Pwm_Duty
;!     ___awtoft
;!       ___ftpack
;!       ___wmul (ARG)
;!     ___ftdiv
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___ftpack (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftge
;!       ___awtoft (ARG)
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftadd (ARG)
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul (ARG)
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     ___ftmul
;!       ___ftpack
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     ___fttol
;!       ___ftadd (ARG)
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___lwtoft (ARG)
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!     ___lbtoft
;!       ___ftpack
;!     ___lmul
;!     ___lwtoft
;!       ___ftpack
;!       ___lwdiv (ARG)
;!         ___wmul (ARG)
;!       ___wmul (ARG)
;!     _crc16
;!     _delay_ms
;!     _eeprom_read
;!     _eeprom_write
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___fttol (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!     _memset
;!   _middle_init
;!     _auto_system
;!       ___ftdiv
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftge
;!         ___awtoft (ARG)
;!           ___ftpack
;!           ___wmul (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___lwtoft
;!         ___ftpack
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       _delay_ms
;!       _eeprom_read
;!       _eeprom_write
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___fttol (ARG)
;!           ___ftadd (ARG)
;!             ___awtoft (ARG)
;!               ___ftpack
;!               ___wmul (ARG)
;!             ___ftmul (ARG)
;!               ___ftpack
;!               ___lwtoft (ARG)
;!                 ___ftpack
;!                 ___lwdiv (ARG)
;!                   ___wmul (ARG)
;!                 ___wmul (ARG)
;!             ___ftpack (ARG)
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___ftdiv (ARG)
;!             ___ftmul (ARG)
;!               ___ftpack
;!               ___lwtoft (ARG)
;!                 ___ftpack
;!                 ___lwdiv (ARG)
;!                   ___wmul (ARG)
;!                 ___wmul (ARG)
;!             ___ftpack (ARG)
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!       _start_ad_convert
;!         ___lwdiv
;!           ___wmul (ARG)
;!     _read_param_eeprom
;!       ___awtoft
;!         ___ftpack
;!         ___wmul (ARG)
;!       ___ftdiv
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___ftmul
;!         ___ftpack
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!       ___lbtoft
;!         ___ftpack
;!       ___lmul
;!       _eeprom_read
;!   _scan_key_value
;!     _Disable_Bost_Pwm1
;!     _Disable_Bost_Pwm2
;!     _Disable_Buck_Pwm
;!     _Enable_Bost_Pwm1
;!     _Enable_Bost_Pwm2
;!     _Set_Bost_Pwm1_Duty
;!     _Set_Bost_Pwm2_Duty
;!     _Set_Buck_Pwm_Duty
;!     _delay_ms
;!     _eeprom_write
;!       ___ftdiv (ARG)
;!         ___ftmul (ARG)
;!           ___ftpack
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!         ___ftpack (ARG)
;!         ___lwdiv (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___wmul (ARG)
;!       ___fttol (ARG)
;!         ___ftadd (ARG)
;!           ___awtoft (ARG)
;!             ___ftpack
;!             ___wmul (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___ftdiv (ARG)
;!           ___ftmul (ARG)
;!             ___ftpack
;!             ___lwtoft (ARG)
;!               ___ftpack
;!               ___lwdiv (ARG)
;!                 ___wmul (ARG)
;!               ___wmul (ARG)
;!           ___ftpack (ARG)
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___lwtoft (ARG)
;!             ___ftpack
;!             ___lwdiv (ARG)
;!               ___wmul (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!         ___lwtoft (ARG)
;!           ___ftpack
;!           ___lwdiv (ARG)
;!             ___wmul (ARG)
;!           ___wmul (ARG)
;!
;! _isr (ROOT)
;!   i1_Disable_Bost_Pwm1
;!   i1_Disable_Bost_Pwm2
;!   i1_Set_Bost_Pwm1_Duty
;!   i1_Set_Bost_Pwm2_Duty
;!

;! Address spaces:

;!Name               Size   Autos  Total    Cost      Usage
;!BIGRAM             3F0      0       0       0        0.0%
;!EEDATA             100      0       0       0        0.0%
;!NULL                 0      0       0       0        0.0%
;!CODE                 0      0       0       0        0.0%
;!BITCOMMON            E      0       0       1        0.0%
;!BITSFR0              0      0       0       1        0.0%
;!SFR0                 0      0       0       1        0.0%
;!COMMON               E      C       E       2      100.0%
;!BITSFR1              0      0       0       2        0.0%
;!SFR1                 0      0       0       2        0.0%
;!BITSFR2              0      0       0       3        0.0%
;!SFR2                 0      0       0       3        0.0%
;!STACK                0      0       0       3        0.0%
;!BITBANK0            50      0       0       4        0.0%
;!BITSFR3              0      0       0       4        0.0%
;!SFR3                 0      0       0       4        0.0%
;!BANK0               50     48      4C       5       95.0%
;!BITSFR4              0      0       0       5        0.0%
;!SFR4                 0      0       0       5        0.0%
;!BITBANK1            50      0       0       6        0.0%
;!BITSFR5              0      0       0       6        0.0%
;!SFR5                 0      0       0       6        0.0%
;!BANK1               50     13      50       7      100.0%
;!BITSFR6              0      0       0       7        0.0%
;!SFR6                 0      0       0       7        0.0%
;!BITBANK2            50      0       0       8        0.0%
;!BITSFR7              0      0       0       8        0.0%
;!SFR7                 0      0       0       8        0.0%
;!BANK2               50      0      50       9      100.0%
;!BITSFR8              0      0       0       9        0.0%
;!SFR8                 0      0       0       9        0.0%
;!BITBANK3            50      0       0      10        0.0%
;!BITSFR9              0      0       0      10        0.0%
;!SFR9                 0      0       0      10        0.0%
;!BANK3               50      0      50      11      100.0%
;!BITSFR10             0      0       0      11        0.0%
;!SFR10                0      0       0      11        0.0%
;!BITBANK4            50      0       0      12        0.0%
;!BITSFR11             0      0       0      12        0.0%
;!SFR11                0      0       0      12        0.0%
;!BANK4               50      0      4F      13       98.8%
;!BITSFR12             0      0       0      13        0.0%
;!SFR12                0      0       0      13        0.0%
;!BITBANK5            50      0       0      14        0.0%
;!BITSFR13             0      0       0      14        0.0%
;!SFR13                0      0       0      14        0.0%
;!BANK5               50      6      4A      15       92.5%
;!BITSFR14             0      0       0      15        0.0%
;!SFR14                0      0       0      15        0.0%
;!BITBANK6            50      0       0      16        0.0%
;!BITSFR15             0      0       0      16        0.0%
;!SFR15                0      0       0      16        0.0%
;!BANK6               50      0      15      17       26.3%
;!BITSFR16             0      0       0      17        0.0%
;!SFR16                0      0       0      17        0.0%
;!BITBANK7            50      0       0      18        0.0%
;!BITSFR17             0      0       0      18        0.0%
;!SFR17                0      0       0      18        0.0%
;!BANK7               50      0      50      19      100.0%
;!BITSFR18             0      0       0      19        0.0%
;!SFR18                0      0       0      19        0.0%
;!BITSFR19             0      0       0      20        0.0%
;!SFR19                0      0       0      20        0.0%
;!ABS                  0      0     298      20        0.0%
;!BITBANK8            50      0       0      21        0.0%
;!BITSFR20             0      0       0      21        0.0%
;!SFR20                0      0       0      21        0.0%
;!BANK8               50      0      50      22      100.0%
;!BITSFR21             0      0       0      22        0.0%
;!SFR21                0      0       0      22        0.0%
;!BITBANK9            50      0       0      23        0.0%
;!BITSFR22             0      0       0      23        0.0%
;!SFR22                0      0       0      23        0.0%
;!BANK9               50      0       0      24        0.0%
;!BITSFR23             0      0       0      24        0.0%
;!SFR23                0      0       0      24        0.0%
;!BITBANK10           50      0       0      25        0.0%
;!BITSFR24             0      0       0      25        0.0%
;!SFR24                0      0       0      25        0.0%
;!BANK10              50      0       0      26        0.0%
;!BITSFR25             0      0       0      26        0.0%
;!SFR25                0      0       0      26        0.0%
;!BITBANK11           50      0       0      27        0.0%
;!BITSFR26             0      0       0      27        0.0%
;!SFR26                0      0       0      27        0.0%
;!BITSFR27             0      0       0      28        0.0%
;!SFR27                0      0       0      28        0.0%
;!BANK11               0      0       0      28        0.0%
;!BITBANK12           30      0       0      29        0.0%
;!BITSFR28             0      0       0      29        0.0%
;!SFR28                0      0       0      29        0.0%
;!BITSFR29             0      0       0      30        0.0%
;!SFR29                0      0       0      30        0.0%
;!BANK12               0      0       0      30        0.0%
;!BITSFR30             0      0       0      31        0.0%
;!SFR30                0      0       0      31        0.0%
;!DATA                 0      0     298      31        0.0%
;!BITSFR31             0      0       0      32        0.0%
;!SFR31                0      0       0      32        0.0%

	global	_main

;; *************** function _main *****************
;; Defined at:
;;		line 370 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  2  993[COMMON] int 
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 1F/2
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_Key_Menu
;;		_application_init
;;		_driver_init
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;;		_middle_init
;;		_scan_key_value
;; This function is called by:
;;		Startup code after reset
;; This function uses a non-reentrant model
;;
psect	maintext,global,class=CODE,delta=2,merge=1,split=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	370
global __pmaintext
__pmaintext:	;psect for function _main
psect	maintext
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	370
	global	__size_of_main
	__size_of_main	equ	__end_of_main-_main
	
_main:	
;incstack = 0
	opt	stack 8
; Regs used in _main: [allreg]
	line	372
	
l22684:	
;main.c: 372: driver_init();
	fcall	_driver_init
	line	373
	
l22686:	
;main.c: 373: middle_init();
	fcall	_middle_init
	line	374
	
l22688:	
;main.c: 374: application_init();
	fcall	_application_init
	line	377
;main.c: 377: while(1)
	
l994:	
	line	380
# 380 "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
clrwdt ;# 
psect	maintext
	line	382
	
l22690:	
;main.c: 382: if(handle_scan_key_flag==0x01)
	movlb 2	; select bank2
	decf	(_handle_scan_key_flag)^0100h,w
	skipz
	goto	u12101
	goto	u12100
u12101:
	goto	l22696
u12100:
	line	384
	
l22692:	
;main.c: 383: {
;main.c: 384: scan_key_value();
	fcall	_scan_key_value
	line	386
	
l22694:	
;main.c: 386: handle_scan_key_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_scan_key_flag)^0100h
	line	389
	
l22696:	
;main.c: 387: }
;main.c: 389: if(ird_receive_flag==0x01)
	decf	(_ird_receive_flag)^0100h,w
	skipz
	goto	u12111
	goto	u12110
u12111:
	goto	l22712
u12110:
	line	391
	
l22698:	
;main.c: 390: {
;main.c: 391: Key_Menu(ird_data);
	movlb 5	; select bank5
	movf	(_ird_data+3)^0280h,w
	movlb 0	; select bank0
	movwf	(Key_Menu@key_value+3)
	movlb 5	; select bank5
	movf	(_ird_data+2)^0280h,w
	movlb 0	; select bank0
	movwf	(Key_Menu@key_value+2)
	movlb 5	; select bank5
	movf	(_ird_data+1)^0280h,w
	movlb 0	; select bank0
	movwf	(Key_Menu@key_value+1)
	movlb 5	; select bank5
	movf	(_ird_data)^0280h,w
	movlb 0	; select bank0
	movwf	(Key_Menu@key_value)

	fcall	_Key_Menu
	line	393
	
l22700:	
;main.c: 393: receive_bit_count=0x00;
	movlb 2	; select bank2
	clrf	(_receive_bit_count)^0100h
	line	395
	
l22702:	
;main.c: 395: ird_status=0x00;
	clrf	(_ird_status)^0100h
	line	397
	
l22704:	
;main.c: 397: ird_data=0x00;
	movlb 5	; select bank5
	clrf	(_ird_data)^0280h
	clrf	(_ird_data+1)^0280h
	clrf	(_ird_data+2)^0280h
	clrf	(_ird_data+3)^0280h
	line	399
	
l22706:	
;main.c: 399: TMR0=0;
	movlb 0	; select bank0
	clrf	(21)	;volatile
	line	401
	
l22708:	
;main.c: 401: TMR0IF = 0;
	bcf	(90/8),(90)&7	;volatile
	line	403
	
l22710:	
;main.c: 403: ird_receive_flag=0x00;
	movlb 2	; select bank2
	clrf	(_ird_receive_flag)^0100h
	line	407
	
l22712:	
;main.c: 405: }
;main.c: 407: handle_ad_loop();
	fcall	_handle_ad_loop
	line	409
	
l22714:	
;main.c: 409: handle_task_process();
	fcall	_handle_task_process
	line	411
	
l22716:	
;main.c: 411: if (RCSTAbits.FERR || RCSTAbits.OERR)
	movlb 3	; select bank3
	btfsc	(413)^0180h,2	;volatile
	goto	u12121
	goto	u12120
u12121:
	goto	l999
u12120:
	
l22718:	
	btfss	(413)^0180h,1	;volatile
	goto	u12131
	goto	u12130
u12131:
	goto	l22720
u12130:
	
l999:	
	line	413
;main.c: 412: {
;main.c: 413: RCSTAbits.CREN = 0x00;
	bcf	(413)^0180h,4	;volatile
	line	414
;main.c: 414: RCSTAbits.SPEN = 0x00;
	bcf	(413)^0180h,7	;volatile
	line	415
;main.c: 415: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	416
;main.c: 416: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	417
;main.c: 417: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	418
;main.c: 418: RCSTAbits.CREN = 0x01;
	movlb 3	; select bank3
	bsf	(413)^0180h,4	;volatile
	line	419
;main.c: 419: RCSTAbits.SPEN = 0x01;
	bsf	(413)^0180h,7	;volatile
	line	422
	
l22720:	
;main.c: 420: }
;main.c: 422: if(uart1_receive_flag==TRUE)
	movlb 2	; select bank2
	decf	(_uart1_receive_flag)^0100h,w
	skipz
	goto	u12141
	goto	u12140
u12141:
	goto	l994
u12140:
	line	424
	
l22722:	
;main.c: 423: {
;main.c: 424: handle_uart_rx_buf();
	fcall	_handle_uart_rx_buf
	line	426
	
l22724:	
;main.c: 426: if (RCSTAbits.FERR || RCSTAbits.OERR)
	movlb 3	; select bank3
	btfsc	(413)^0180h,2	;volatile
	goto	u12151
	goto	u12150
u12151:
	goto	l1003
u12150:
	
l22726:	
	btfss	(413)^0180h,1	;volatile
	goto	u12161
	goto	u12160
u12161:
	goto	l22728
u12160:
	
l1003:	
	line	428
;main.c: 427: {
;main.c: 428: RCSTAbits.CREN = 0x00;
	bcf	(413)^0180h,4	;volatile
	line	429
;main.c: 429: RCSTAbits.SPEN = 0x00;
	bcf	(413)^0180h,7	;volatile
	line	430
;main.c: 430: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	431
;main.c: 431: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	432
;main.c: 432: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	433
;main.c: 433: RCSTAbits.CREN = 0x01;
	movlb 3	; select bank3
	bsf	(413)^0180h,4	;volatile
	line	434
;main.c: 434: RCSTAbits.SPEN = 0x01;
	bsf	(413)^0180h,7	;volatile
	line	437
	
l22728:	
;main.c: 435: }
;main.c: 437: uart1_receive_byte_count=0x00;
	movlb 1	; select bank1
	clrf	(_uart1_receive_byte_count)^080h
	line	439
;main.c: 439: uart1_receive_flag=FALSE;
	movlb 2	; select bank2
	clrf	(_uart1_receive_flag)^0100h
	goto	l994
	global	start
	ljmp	start
	opt stack 0
	line	446
GLOBAL	__end_of_main
	__end_of_main:
	signat	_main,90
	global	_scan_key_value

;; *************** function _scan_key_value *****************
;; Defined at:
;;		line 61 in file "D:\MCUProject\ZH-SL-S4080-1\src\key.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  key_temp        2   70[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 1D/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_Disable_Bost_Pwm1
;;		_Disable_Bost_Pwm2
;;		_Disable_Buck_Pwm
;;		_Enable_Bost_Pwm1
;;		_Enable_Bost_Pwm2
;;		_Set_Bost_Pwm1_Duty
;;		_Set_Bost_Pwm2_Duty
;;		_Set_Buck_Pwm_Duty
;;		_delay_ms
;;		_eeprom_write
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text1,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	61
global __ptext1
__ptext1:	;psect for function _scan_key_value
psect	text1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	61
	global	__size_of_scan_key_value
	__size_of_scan_key_value	equ	__end_of_scan_key_value-_scan_key_value
	
_scan_key_value:	
;incstack = 0
	opt	stack 12
; Regs used in _scan_key_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
	line	65
	
l22282:	
;key.c: 63: unsigned int key_temp;
;key.c: 65: key_temp=0x00;
	movlb 0	; select bank0
	clrf	(scan_key_value@key_temp)
	clrf	(scan_key_value@key_temp+1)
	line	67
	
l22284:	
;key.c: 67: key_temp=(key_temp<<1)|(PORTBbits.RB6);
	swapf	(13),w	;volatile
	rrf	wreg,f
	rrf	wreg,f
	andlw	(1<<1)-1
	movwf	(??_scan_key_value+0)+0
	clrf	(??_scan_key_value+0)+0+1
	movf	(scan_key_value@key_temp+1),w
	movwf	(??_scan_key_value+2)+0+1
	movf	(scan_key_value@key_temp),w
	movwf	(??_scan_key_value+2)+0
	lslf	(??_scan_key_value+2)+0,f
	rlf	(??_scan_key_value+2)+1,f
	movf	0+(??_scan_key_value+0)+0,w
	iorwf	0+(??_scan_key_value+2)+0,w
	movwf	(??_scan_key_value+4)+0
	movf	1+(??_scan_key_value+0)+0,w
	iorwf	1+(??_scan_key_value+2)+0,w
	movwf	1+(??_scan_key_value+4)+0
	movf	0+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp)
	movf	1+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp+1)
	line	69
	
l22286:	
;key.c: 69: key_temp=(key_temp<<1)|(PORTCbits.RC6);
	swapf	(14),w	;volatile
	rrf	wreg,f
	rrf	wreg,f
	andlw	(1<<1)-1
	movwf	(??_scan_key_value+0)+0
	clrf	(??_scan_key_value+0)+0+1
	movf	(scan_key_value@key_temp+1),w
	movwf	(??_scan_key_value+2)+0+1
	movf	(scan_key_value@key_temp),w
	movwf	(??_scan_key_value+2)+0
	lslf	(??_scan_key_value+2)+0,f
	rlf	(??_scan_key_value+2)+1,f
	movf	0+(??_scan_key_value+0)+0,w
	iorwf	0+(??_scan_key_value+2)+0,w
	movwf	(??_scan_key_value+4)+0
	movf	1+(??_scan_key_value+0)+0,w
	iorwf	1+(??_scan_key_value+2)+0,w
	movwf	1+(??_scan_key_value+4)+0
	movf	0+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp)
	movf	1+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp+1)
	line	71
	
l22288:	
;key.c: 71: key_temp=(key_temp<<1)|(PORTCbits.RC5);
	swapf	(14),w	;volatile
	rrf	wreg,f
	andlw	(1<<1)-1
	movwf	(??_scan_key_value+0)+0
	clrf	(??_scan_key_value+0)+0+1
	movf	(scan_key_value@key_temp+1),w
	movwf	(??_scan_key_value+2)+0+1
	movf	(scan_key_value@key_temp),w
	movwf	(??_scan_key_value+2)+0
	lslf	(??_scan_key_value+2)+0,f
	rlf	(??_scan_key_value+2)+1,f
	movf	0+(??_scan_key_value+0)+0,w
	iorwf	0+(??_scan_key_value+2)+0,w
	movwf	(??_scan_key_value+4)+0
	movf	1+(??_scan_key_value+0)+0,w
	iorwf	1+(??_scan_key_value+2)+0,w
	movwf	1+(??_scan_key_value+4)+0
	movf	0+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp)
	movf	1+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp+1)
	line	73
	
l22290:	
;key.c: 73: key_temp=(key_temp<<1)|(PORTCbits.RC4);
	swapf	(14),w	;volatile
	andlw	(1<<1)-1
	movwf	(??_scan_key_value+0)+0
	clrf	(??_scan_key_value+0)+0+1
	movf	(scan_key_value@key_temp+1),w
	movwf	(??_scan_key_value+2)+0+1
	movf	(scan_key_value@key_temp),w
	movwf	(??_scan_key_value+2)+0
	lslf	(??_scan_key_value+2)+0,f
	rlf	(??_scan_key_value+2)+1,f
	movf	0+(??_scan_key_value+0)+0,w
	iorwf	0+(??_scan_key_value+2)+0,w
	movwf	(??_scan_key_value+4)+0
	movf	1+(??_scan_key_value+0)+0,w
	iorwf	1+(??_scan_key_value+2)+0,w
	movwf	1+(??_scan_key_value+4)+0
	movf	0+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp)
	movf	1+(??_scan_key_value+4)+0,w
	movwf	(scan_key_value@key_temp+1)
	line	77
;key.c: 77: switch(key_temp)
	goto	l22308
	line	79
	
l22292:	
	movlb 2	; select bank2
	clrf	(_KEY_STATE)^0100h
	goto	l22310
	line	81
;key.c: 81: case 0b0111: KEY_VALUE =K1;KEY_STATE =KEY_DOWN;break;
	
l764:	
	movlb 2	; select bank2
	clrf	(_KEY_VALUE)^0100h
	incf	(_KEY_VALUE)^0100h,f
	clrf	(_KEY_STATE)^0100h
	incf	(_KEY_STATE)^0100h,f
	goto	l22310
	line	83
	
l22294:	
	movlw	(02h)
	movlb 2	; select bank2
	movwf	(_KEY_VALUE)^0100h
	
l22296:	
	movlb 2	; select bank2
	clrf	(_KEY_STATE)^0100h
	incf	(_KEY_STATE)^0100h,f
	goto	l22310
	line	85
	
l22298:	
	movlw	(03h)
	movlb 2	; select bank2
	movwf	(_KEY_VALUE)^0100h
	goto	l22296
	line	87
	
l22302:	
	movlw	(04h)
	movlb 2	; select bank2
	movwf	(_KEY_VALUE)^0100h
	goto	l22296
	line	77
	
l22308:	
	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-switches
; Switch size 1, requested type "space"
; Number of cases is 1, Range of values is 0 to 0
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            4     3 (average)
; direct_byte            8     6 (fixed)
; jumptable            260     6 (fixed)
;	Chosen strategy is simple_byte

	movf (scan_key_value@key_temp+1),w
	opt asmopt_off
	xorlw	0^0	; case 0
	skipnz
	goto	l25362
	goto	l22296
	opt asmopt_on
	
l25362:	
; Switch size 1, requested type "space"
; Number of cases is 5, Range of values is 7 to 15
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           16     9 (average)
; direct_byte           27     9 (fixed)
; jumptable            263     9 (fixed)
;	Chosen strategy is simple_byte

	movf (scan_key_value@key_temp),w
	opt asmopt_off
	xorlw	7^0	; case 7
	skipnz
	goto	l764
	xorlw	11^7	; case 11
	skipnz
	goto	l22294
	xorlw	13^11	; case 13
	skipnz
	goto	l22298
	xorlw	14^13	; case 14
	skipnz
	goto	l22302
	xorlw	15^14	; case 15
	skipnz
	goto	l22292
	goto	l22296
	opt asmopt_on

	line	94
	
l22310:	
;key.c: 94: if(KEY_STATE==KEY_UP)
	movf	(_KEY_STATE)^0100h,f
	skipz
	goto	u11981
	goto	u11980
u11981:
	goto	l769
u11980:
	line	96
	
l22312:	
;key.c: 95: {
;key.c: 96: if(KEY_VALUE!=KNOP)
	movf	(_KEY_VALUE)^0100h,w
	xorlw	010h&0ffh
	skipnz
	goto	u11991
	goto	u11990
u11991:
	goto	l769
u11990:
	goto	l22518
	line	100
;key.c: 99: {
;key.c: 100: case K1:
	
l772:	
	line	101
;key.c: 101: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	102
	
l22316:	
;key.c: 102: key1_index=0x00;
	movlb 2	; select bank2
	clrf	(_key1_index)^0100h
	line	103
;key.c: 103: break;
	goto	l22520
	line	105
	
l22318:	
;key.c: 105: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u12001
	goto	u12000
u12001:
	goto	l22520
u12000:
	line	107
	
l22320:	
;key.c: 106: {
;key.c: 107: light_mode =0x00;
	clrf	(_light_mode)^080h
	line	108
	
l22322:	
;key.c: 108: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	110
	
l22324:	
;key.c: 110: light2_mode =0x00;
	movlb 1	; select bank1
	clrf	(_light2_mode)^080h
	line	111
;key.c: 111: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	113
	
l22326:	
;key.c: 113: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	114
	
l22328:	
;key.c: 114: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	116
;key.c: 118: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	120
;key.c: 120: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	121
;key.c: 121: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	122
;key.c: 122: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	123
;key.c: 123: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	125
	
l22330:	
;key.c: 125: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	126
	
l22332:	
;key.c: 126: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	128
	
l22334:	
;key.c: 128: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	129
	
l22336:	
;key.c: 129: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	130
	
l22338:	
;key.c: 130: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	131
	
l22340:	
;key.c: 131: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	132
	
l22342:	
;key.c: 132: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	133
	
l22344:	
;key.c: 133: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	135
	
l22346:	
;key.c: 135: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	136
	
l22348:	
;key.c: 136: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	137
	
l22350:	
;key.c: 137: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	138
	
l22352:	
;key.c: 138: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	140
	
l22354:	
;key.c: 140: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	141
	
l22356:	
;key.c: 141: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	143
	
l22358:	
;key.c: 143: delay_ms(1000);
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	movlw	high(03E8h)
	movwf	((delay_ms@count))+1
	fcall	_delay_ms
	line	145
	
l22360:	
;key.c: 145: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	146
	
l22362:	
;key.c: 146: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	148
	
l22364:	
;key.c: 148: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	149
	
l22366:	
;key.c: 149: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	150
	
l22368:	
;key.c: 150: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	151
	
l22370:	
;key.c: 151: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	152
	
l22372:	
;key.c: 152: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	153
	
l22374:	
;key.c: 153: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	156
	
l22376:	
;key.c: 156: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	158
	
l22378:	
;key.c: 158: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	160
	
l22380:	
;key.c: 160: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	162
	
l22382:	
;key.c: 162: pv_time_count=0x00;
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	goto	l22520
	line	166
	
l22384:	
;key.c: 166: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u12011
	goto	u12010
u12011:
	goto	l22520
u12010:
	line	168
	
l22386:	
;key.c: 167: {
;key.c: 168: light_mode =0x01;
	clrf	(_light_mode)^080h
	incf	(_light_mode)^080h,f
	line	169
	
l22388:	
;key.c: 169: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	171
	
l22390:	
;key.c: 171: light2_mode =0x01;
	movlb 1	; select bank1
	clrf	(_light2_mode)^080h
	incf	(_light2_mode)^080h,f
	line	172
;key.c: 172: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	174
	
l22392:	
;key.c: 174: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	175
	
l22394:	
;key.c: 175: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	177
;key.c: 179: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	181
;key.c: 181: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	182
;key.c: 182: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	183
;key.c: 183: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	184
;key.c: 184: charge_index=0x00;
	clrf	(_charge_index)^080h
	goto	l22330
	line	227
	
l22450:	
;key.c: 227: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u12021
	goto	u12020
u12021:
	goto	l22520
u12020:
	line	229
	
l22452:	
;key.c: 228: {
;key.c: 229: light_mode =0x02;
	movlw	(02h)
	movwf	(_light_mode)^080h
	line	230
	
l22454:	
;key.c: 230: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	232
	
l22456:	
;key.c: 232: light2_mode =0x02;
	movlw	(02h)
	movlb 1	; select bank1
	movwf	(_light2_mode)^080h
	line	233
;key.c: 233: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	235
	
l22458:	
;key.c: 235: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	236
	
l22460:	
;key.c: 236: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	238
;key.c: 240: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	242
;key.c: 242: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	243
;key.c: 243: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	244
;key.c: 244: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	245
;key.c: 245: charge_index=0x00;
	clrf	(_charge_index)^080h
	goto	l22330
	line	98
	
l22518:	
	movf	(_KEY_VALUE)^0100h,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 1 to 4
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
; direct_byte           17     9 (fixed)
; jumptable            263     9 (fixed)
;	Chosen strategy is simple_byte

	opt asmopt_off
	xorlw	1^0	; case 1
	skipnz
	goto	l772
	xorlw	2^1	; case 2
	skipnz
	goto	l22318
	xorlw	3^2	; case 3
	skipnz
	goto	l22384
	xorlw	4^3	; case 4
	skipnz
	goto	l22450
	goto	l22520
	opt asmopt_on

	line	290
	
l22520:	
;key.c: 290: KEY_VALUE=KNOP;
	movlw	(010h)
	movlb 2	; select bank2
	movwf	(_KEY_VALUE)^0100h
	line	294
	
l769:	
	line	296
;key.c: 292: }
;key.c: 294: }
;key.c: 296: if((KEY_VALUE ==K1)&&(KEY_STATE == KEY_DOWN)&&(key1_index==0x00))
	decf	(_KEY_VALUE)^0100h,w
	skipz
	goto	u12031
	goto	u12030
u12031:
	goto	l22614
u12030:
	
l22522:	
	decf	(_KEY_STATE)^0100h,w
	skipz
	goto	u12041
	goto	u12040
u12041:
	goto	l22614
u12040:
	
l22524:	
	movf	(_key1_index)^0100h,f
	skipz
	goto	u12051
	goto	u12050
u12051:
	goto	l22614
u12050:
	line	298
	
l22526:	
;key.c: 297: {
;key.c: 298: if(key1_time_count<80)
	movlw	(050h)
	subwf	(_key1_time_count)^0100h,w
	skipnc
	goto	u12061
	goto	u12060
u12061:
	goto	l22530
u12060:
	line	300
	
l22528:	
;key.c: 299: {
;key.c: 300: key1_time_count++;
	incf	(_key1_time_count)^0100h,f
	line	302
;key.c: 302: }
	goto	l22616
	line	305
	
l22530:	
;key.c: 303: else
;key.c: 304: {
;key.c: 305: key1_time_count=0x00;
	clrf	(_key1_time_count)^0100h
	line	307
	
l22532:	
;key.c: 307: device_status^=0x01;
	movlw	(01h)
	movlb 1	; select bank1
	xorwf	(_device_status)^080h,f
	line	309
	
l22534:	
;key.c: 309: eeprom_write(0x38,(unsigned char)(device_status));
	movf	(_device_status)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(038h)
	fcall	_eeprom_write
	line	311
	
l22536:	
;key.c: 311: key1_index=0x01;
	movlb 2	; select bank2
	clrf	(_key1_index)^0100h
	incf	(_key1_index)^0100h,f
	line	313
	
l22538:	
;key.c: 313: if(device_status==0x00)
	movlb 1	; select bank1
	movf	(_device_status)^080h,f
	skipz
	goto	u12071
	goto	u12070
u12071:
	goto	l22554
u12070:
	line	315
	
l22540:	
;key.c: 317: lr_cnt = 0x00;
	movlw	(04h)
	movwf	(_work_mode)^080h
	line	319
	
l22542:	
;key.c: 319: led_out_ctrl=0x00;
	clrf	(_led_out_ctrl)^080h
	line	320
	
l22544:	
;key.c: 320: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	322
	
l22546:	
;key.c: 322: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	323
	
l22548:	
;key.c: 323: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	324
	
l22550:	
;key.c: 324: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	325
	
l22552:	
;key.c: 325: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	326
;key.c: 326: }
	goto	l22616
	line	329
	
l22554:	
;key.c: 327: else
;key.c: 328: {
;key.c: 329: work_mode =0x00;
	clrf	(_work_mode)^080h
	line	331
	
l22556:	
;key.c: 331: (LATAbits.LATA6 = 0x01);
	movlb 2	; select bank2
	bsf	(268)^0100h,6	;volatile
	line	333
;key.c: 333: open_sleep_time=0x00;
	clrf	(_open_sleep_time)^0100h
	line	334
;key.c: 335: lr_cnt = 0x00;
	movlb 5	; select bank5
	clrf	(_sleep_time_count)^0280h
	clrf	(_sleep_time_count+1)^0280h
	line	337
;key.c: 337: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	338
;key.c: 338: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	339
;key.c: 339: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	340
;key.c: 340: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	342
;key.c: 342: led_out_ctrl=0x00;
	clrf	(_led_out_ctrl)^080h
	line	343
	
l22558:	
;key.c: 343: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	345
	
l22560:	
;key.c: 345: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	346
	
l22562:	
;key.c: 346: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	347
	
l22564:	
;key.c: 347: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	348
	
l22566:	
;key.c: 348: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	349
	
l22568:	
;key.c: 349: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	350
	
l22570:	
;key.c: 350: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	351
	
l22572:	
;key.c: 351: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	352
	
l22574:	
;key.c: 352: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	354
	
l22576:	
;key.c: 354: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	356
	
l22578:	
;key.c: 356: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	358
	
l22580:	
;key.c: 358: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	360
	
l22582:	
;key.c: 360: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	362
	
l22584:	
;key.c: 362: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	363
	
l22586:	
;key.c: 363: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	365
	
l22588:	
;key.c: 365: delay_ms(1000);
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	movlw	high(03E8h)
	movwf	((delay_ms@count))+1
	fcall	_delay_ms
	line	367
	
l22590:	
;key.c: 367: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	368
	
l22592:	
;key.c: 368: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	370
	
l22594:	
;key.c: 370: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	371
	
l22596:	
;key.c: 371: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	372
	
l22598:	
;key.c: 372: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	373
	
l22600:	
;key.c: 373: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	374
	
l22602:	
;key.c: 374: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	375
	
l22604:	
;key.c: 375: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	378
	
l22606:	
;key.c: 378: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	380
	
l22608:	
;key.c: 380: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	382
	
l22610:	
;key.c: 382: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	384
	
l22612:	
;key.c: 384: pv_time_count=0x00;
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	goto	l22616
	line	391
	
l22614:	
;key.c: 389: else
;key.c: 390: {
;key.c: 391: key1_time_count=0x00;
	clrf	(_key1_time_count)^0100h
	line	395
	
l22616:	
;key.c: 392: }
;key.c: 395: if(RA7)
	movlb 0	; select bank0
	btfss	(103/8),(103)&7	;volatile
	goto	u12081
	goto	u12080
u12081:
	goto	l22622
u12080:
	line	398
	
l22618:	
;key.c: 396: {
;key.c: 398: have_person1_time_count=0x00;
	movlb 2	; select bank2
	clrf	(_have_person1_time_count)^0100h
	line	400
	
l22620:	
;key.c: 400: have_person1_flag=0x01;
	movlb 1	; select bank1
	clrf	(_have_person1_flag)^080h
	incf	(_have_person1_flag)^080h,f
	line	403
	
l22622:	
;key.c: 401: }
;key.c: 403: if(RC1)
	movlb 0	; select bank0
	btfss	(113/8),(113)&7	;volatile
	goto	u12091
	goto	u12090
u12091:
	goto	l789
u12090:
	line	405
	
l22624:	
;key.c: 404: {
;key.c: 405: have_person2_time_count=0x00;
	movlb 2	; select bank2
	clrf	(_have_person2_time_count)^0100h
	line	410
	
l789:	
	return
	opt stack 0
GLOBAL	__end_of_scan_key_value
	__end_of_scan_key_value:
	signat	_scan_key_value,88
	global	_middle_init

;; *************** function _middle_init *****************
;; Defined at:
;;		line 253 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 17F/7
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_auto_system
;;		_read_param_eeprom
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text2,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	253
global __ptext2
__ptext2:	;psect for function _middle_init
psect	text2
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	253
	global	__size_of_middle_init
	__size_of_middle_init	equ	__end_of_middle_init-_middle_init
	
_middle_init:	
;incstack = 0
	opt	stack 10
; Regs used in _middle_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
	line	256
	
l22630:	
;main.c: 256: auto_system();
	fcall	_auto_system
	line	258
	
l22632:	
;main.c: 258: read_param_eeprom();
	fcall	_read_param_eeprom
	line	259
	
l988:	
	return
	opt stack 0
GLOBAL	__end_of_middle_init
	__end_of_middle_init:
	signat	_middle_init,88
	global	_read_param_eeprom

;; *************** function _read_param_eeprom *****************
;; Defined at:
;;		line 179 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  byte_l          1   50[BANK0 ] unsigned char 
;;  byte_h          1   49[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 0/7
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		___awtoft
;;		___ftdiv
;;		___ftmul
;;		___lbtoft
;;		___lmul
;;		_eeprom_read
;; This function is called by:
;;		_middle_init
;; This function uses a non-reentrant model
;;
psect	text3,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	179
global __ptext3
__ptext3:	;psect for function _read_param_eeprom
psect	text3
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	179
	global	__size_of_read_param_eeprom
	__size_of_read_param_eeprom	equ	__end_of_read_param_eeprom-_read_param_eeprom
	
_read_param_eeprom:	
;incstack = 0
	opt	stack 10
; Regs used in _read_param_eeprom: [wreg+status,2+status,0+pclath+cstack]
	line	184
	
l21696:	
;ird_remote.c: 181: unsigned char byte_h,byte_l;
;ird_remote.c: 184: byte_h=eeprom_read(0x00);
	movlw	(0)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	186
;ird_remote.c: 186: byte_l=eeprom_read(0x01);
	movlw	(01h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	188
;ird_remote.c: 188: light_pv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv)^080h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv+2)^080h
	line	192
;ird_remote.c: 192: byte_h=eeprom_read(0x02);
	movlw	(02h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	194
;ird_remote.c: 194: byte_l=eeprom_read(0x03);
	movlw	(03h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	196
;ird_remote.c: 196: load_cc_I=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I)^080h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I+2)^080h
	line	200
;ird_remote.c: 200: byte_l=eeprom_read(0x04);
	movlw	(04h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	202
;ird_remote.c: 202: step_01_load_percent=byte_l;
	movf	(read_param_eeprom@byte_l),w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent+2)^0100h
	line	205
;ird_remote.c: 205: byte_l=eeprom_read(0x05);
	movlw	(05h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	207
;ird_remote.c: 207: step_02_load_percent=byte_l;
	movf	(read_param_eeprom@byte_l),w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent+2)^0100h
	line	210
;ird_remote.c: 210: byte_l=eeprom_read(0x06);
	movlw	(06h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	212
;ird_remote.c: 212: step_03_load_percent=byte_l;
	movf	(read_param_eeprom@byte_l),w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent+2)^0100h
	line	215
;ird_remote.c: 215: byte_l=eeprom_read(0x07);
	movlw	(07h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	217
;ird_remote.c: 217: step_04_load_percent=byte_l;
	movf	(read_param_eeprom@byte_l),w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent+2)^0100h
	line	220
;ird_remote.c: 220: byte_l=eeprom_read(0x08);
	movlw	(08h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	222
;ird_remote.c: 222: step_05_load_percent=byte_l;
	movf	(read_param_eeprom@byte_l),w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent)^080h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent+2)^080h
	line	225
;ird_remote.c: 225: byte_l=eeprom_read(0x09);
	movlw	(09h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	227
	
l21698:	
;ird_remote.c: 227: volt_id=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_volt_id)^080h
	line	230
	
l21700:	
;ird_remote.c: 230: byte_l=eeprom_read(0x0a);
	movlw	(0Ah)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	232
;ird_remote.c: 232: bt_id=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_bt_id)^080h
	line	234
	
l21702:	
;ird_remote.c: 234: byte_l=eeprom_read(0x0b);
	movlw	(0Bh)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	236
	
l21704:	
;ird_remote.c: 236: light_time=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_light_time)^080h
	clrf	(_light_time+1)^080h
	line	238
;ird_remote.c: 238: byte_l=eeprom_read(0x0c);
	movlw	(0Ch)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	240
	
l21706:	
;ird_remote.c: 240: step_01_time_limit=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_step_01_time_limit)^080h
	clrf	(_step_01_time_limit+1)^080h
	line	242
	
l21708:	
;ird_remote.c: 242: byte_l=eeprom_read(0x0d);
	movlw	(0Dh)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	244
;ird_remote.c: 244: step_02_time_limit=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_step_02_time_limit)^080h
	clrf	(_step_02_time_limit+1)^080h
	line	246
	
l21710:	
;ird_remote.c: 246: byte_l=eeprom_read(0x0e);
	movlw	(0Eh)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	248
	
l21712:	
;ird_remote.c: 248: step_03_time_limit=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_step_03_time_limit)^080h
	clrf	(_step_03_time_limit+1)^080h
	line	250
;ird_remote.c: 250: byte_l=eeprom_read(0x0f);
	movlw	(0Fh)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	252
	
l21714:	
;ird_remote.c: 252: step_04_time_limit=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_step_04_time_limit)^080h
	clrf	(_step_04_time_limit+1)^080h
	line	254
	
l21716:	
;ird_remote.c: 254: byte_l=eeprom_read(0x10);
	movlw	(010h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	256
;ird_remote.c: 256: step_05_time_limit=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 2	; select bank2
	movwf	(_step_05_time_limit)^0100h
	clrf	(_step_05_time_limit+1)^0100h
	line	258
	
l21718:	
;ird_remote.c: 258: byte_l=eeprom_read(0x11);
	movlw	(011h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	260
	
l21720:	
;ird_remote.c: 260: today_index=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movwf	(_today_index)
	line	262
;ird_remote.c: 262: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	264
;ird_remote.c: 264: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	266
;ird_remote.c: 266: bt_00_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_hv)^0180h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+2)^0180h
	line	268
;ird_remote.c: 268: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	270
;ird_remote.c: 270: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	272
;ird_remote.c: 272: bt_00_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_lv)^0180h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+2)^0180h
	line	275
;ird_remote.c: 275: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	277
;ird_remote.c: 277: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	279
;ird_remote.c: 279: bt_01_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	281
;ird_remote.c: 281: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	283
;ird_remote.c: 283: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	285
;ird_remote.c: 285: bt_01_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	288
;ird_remote.c: 288: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	290
;ird_remote.c: 290: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	292
;ird_remote.c: 292: bt_02_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	294
;ird_remote.c: 294: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	296
;ird_remote.c: 296: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	298
;ird_remote.c: 298: bt_02_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	301
;ird_remote.c: 301: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	303
;ird_remote.c: 303: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	305
;ird_remote.c: 305: bt_03_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	307
;ird_remote.c: 307: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	309
;ird_remote.c: 309: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	311
;ird_remote.c: 311: bt_03_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	314
;ird_remote.c: 314: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	316
;ird_remote.c: 316: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	318
;ird_remote.c: 318: bt_04_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	320
;ird_remote.c: 320: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	322
;ird_remote.c: 322: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	324
;ird_remote.c: 324: bt_04_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	327
;ird_remote.c: 327: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	329
;ird_remote.c: 329: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	331
;ird_remote.c: 331: bt_05_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	333
;ird_remote.c: 333: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	335
;ird_remote.c: 335: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	337
;ird_remote.c: 337: bt_05_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	340
;ird_remote.c: 340: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	342
;ird_remote.c: 342: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	344
;ird_remote.c: 344: bt_06_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	346
;ird_remote.c: 346: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	348
;ird_remote.c: 348: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	350
;ird_remote.c: 350: bt_06_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	353
;ird_remote.c: 353: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	355
;ird_remote.c: 355: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	357
;ird_remote.c: 357: bt_07_hv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	359
;ird_remote.c: 359: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_h)
	line	361
;ird_remote.c: 361: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	363
;ird_remote.c: 363: bt_07_lv=(byte_h<<8)|byte_l;
	movf	(read_param_eeprom@byte_h),w
	movwf	(___awtoft@c+1)
	clrf	(___awtoft@c)
	movf	(read_param_eeprom@byte_l),w
	iorwf	(___awtoft@c),f
	fcall	___awtoft
	line	366
;ird_remote.c: 366: byte_l=eeprom_read(0x36);
	movlw	(036h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	368
	
l21722:	
;ird_remote.c: 368: light_mode=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_light_mode)^080h
	line	370
	
l21724:	
;ird_remote.c: 370: byte_l=eeprom_read(0x37);
	movlw	(037h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	372
;ird_remote.c: 372: light2_mode=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_light2_mode)^080h
	line	374
	
l21726:	
;ird_remote.c: 374: byte_l=eeprom_read(0x38);
	movlw	(038h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	376
	
l21728:	
;ird_remote.c: 376: device_status=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_device_status)^080h
	line	378
	
l21730:	
;ird_remote.c: 378: if(device_status==0x00)
	movf	(_device_status)^080h,f
	skipz
	goto	u11651
	goto	u11650
u11651:
	goto	l21734
u11650:
	line	380
	
l21732:	
;ird_remote.c: 379: {
;ird_remote.c: 380: work_mode =0x04;
	movlw	(04h)
	movwf	(_work_mode)^080h
	line	381
;ird_remote.c: 381: }
	goto	l21736
	line	384
	
l21734:	
;ird_remote.c: 382: else
;ird_remote.c: 383: {
;ird_remote.c: 384: work_mode =0x00;
	clrf	(_work_mode)^080h
	line	387
	
l21736:	
;ird_remote.c: 385: }
;ird_remote.c: 387: byte_l=eeprom_read(0x39);
	movlw	(039h)
	fcall	_eeprom_read
	movlb 0	; select bank0
	movwf	(read_param_eeprom@byte_l)
	line	389
	
l21738:	
;ird_remote.c: 389: led_out_ctrl=byte_l;
	movf	(read_param_eeprom@byte_l),w
	movlb 1	; select bank1
	movwf	(_led_out_ctrl)^080h
	line	396
	
l21740:	
;ird_remote.c: 396: if(light_time==0x00)
	movf	((_light_time+1)^080h),w
	iorwf	((_light_time)^080h),w
	skipz
	goto	u11661
	goto	u11660
u11661:
	goto	l21744
u11660:
	line	398
	
l21742:	
;ird_remote.c: 397: {
;ird_remote.c: 398: light_time_level = 500;
	movlw	0
	movlb 3	; select bank3
	movwf	(_light_time_level+3)^0180h
	movlw	0
	movwf	(_light_time_level+2)^0180h
	movlw	01h
	movwf	(_light_time_level+1)^0180h
	movlw	0F4h
	movwf	(_light_time_level)^0180h

	line	399
;ird_remote.c: 399: }
	goto	l21746
	line	402
	
l21744:	
;ird_remote.c: 400: else
;ird_remote.c: 401: {
;ird_remote.c: 402: light_time_level = (unsigned long int)((unsigned long int)light_time*6*180);
	movf	(_light_time)^080h,w
	movlb 0	; select bank0
	movwf	(___lmul@multiplier)
	movlb 1	; select bank1
	movf	(_light_time+1)^080h,w
	movlb 0	; select bank0
	movwf	((___lmul@multiplier))+1
	clrf	2+((___lmul@multiplier))
	clrf	3+((___lmul@multiplier))
	movlw	0
	movwf	(___lmul@multiplicand+3)
	movlw	0
	movwf	(___lmul@multiplicand+2)
	movlw	04h
	movwf	(___lmul@multiplicand+1)
	movlw	038h
	movwf	(___lmul@multiplicand)

	fcall	___lmul
	movf	(3+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+3)^0180h
	movlb 0	; select bank0
	movf	(2+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+2)^0180h
	movlb 0	; select bank0
	movf	(1+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+1)^0180h
	movlb 0	; select bank0
	movf	(0+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level)^0180h

	line	407
	
l21746:	
;ird_remote.c: 408: {
;ird_remote.c: 409: bt_volt_100 = (16.45/31.04)*1000;
	movlb 1	; select bank1
	decf	(_volt_id)^080h,w
	skipz
	goto	u11671
	goto	u11670
u11671:
	goto	l21758
u11670:
	line	411
	
l21748:	
;ird_remote.c: 411: bt_volt_80 = (15.80/31.04)*1000;
	movlw	0x83
	movlb 4	; select bank4
	movwf	(_bt_volt_80)^0200h
	movlw	0xfe
	movwf	(_bt_volt_80+1)^0200h
	movlw	0x43
	movwf	(_bt_volt_80+2)^0200h
	line	413
;ird_remote.c: 413: bt_volt_60 = (15.20/31.04)*1000;
	movlw	0xd8
	movwf	(_bt_volt_60)^0200h
	movlw	0xf4
	movwf	(_bt_volt_60+1)^0200h
	movlw	0x43
	movwf	(_bt_volt_60+2)^0200h
	line	415
;ird_remote.c: 415: bt_volt_40 = (14.60/31.04)*1000;
	movlw	0x2e
	movwf	(_bt_volt_40)^0200h
	movlw	0xeb
	movwf	(_bt_volt_40+1)^0200h
	movlw	0x43
	movwf	(_bt_volt_40+2)^0200h
	line	417
;ird_remote.c: 417: bt_volt_20 = (14.00/31.04)*1000;
	movlw	0x84
	movwf	(_bt_volt_20)^0200h
	movlw	0xe1
	movwf	(_bt_volt_20+1)^0200h
	movlw	0x43
	movwf	(_bt_volt_20+2)^0200h
	line	419
;ird_remote.c: 419: bt_volt_00 = (12.00/31.04)*1000;
	movlw	0x4d
	movwf	(_bt_volt_00)^0200h
	movlw	0xc1
	movwf	(_bt_volt_00+1)^0200h
	movlw	0x43
	movwf	(_bt_volt_00+2)^0200h
	line	422
;ird_remote.c: 422: dianchi_guoya_baohu = (16.45/31.04)*1000;
	movlw	0x7e
	movlb 2	; select bank2
	movwf	(_dianchi_guoya_baohu)^0100h
	movlw	0x4
	movwf	(_dianchi_guoya_baohu+1)^0100h
	movlw	0x44
	movwf	(_dianchi_guoya_baohu+2)^0100h
	line	424
;ird_remote.c: 424: dianchi_guoya_huifu = (16.20/31.04)*1000;
	movlw	0x7a
	movlb 3	; select bank3
	movwf	(_dianchi_guoya_huifu)^0180h
	movlw	0x2
	movwf	(_dianchi_guoya_huifu+1)^0180h
	movlw	0x44
	movwf	(_dianchi_guoya_huifu+2)^0180h
	line	426
;ird_remote.c: 426: dianchi_qianya_baohu = (12.0/31.04)*1000;
	movlw	0x4d
	movwf	(_dianchi_qianya_baohu)^0180h
	movlw	0xc1
	movwf	(_dianchi_qianya_baohu+1)^0180h
	movlw	0x43
	movwf	(_dianchi_qianya_baohu+2)^0180h
	line	428
;ird_remote.c: 428: dianchi_qianya_huifu = (12.66/31.04)*1000;
	movlw	0xee
	movwf	(_dianchi_qianya_huifu)^0180h
	movlw	0xcb
	movwf	(_dianchi_qianya_huifu+1)^0180h
	movlw	0x43
	movwf	(_dianchi_qianya_huifu+2)^0180h
	line	430
;ird_remote.c: 430: dianchi_cv_level = (16.30/31.04)*1000;
	movlw	0x48
	movwf	(_dianchi_cv_level)^0180h
	movlw	0x3
	movwf	(_dianchi_cv_level+1)^0180h
	movlw	0x44
	movwf	(_dianchi_cv_level+2)^0180h
	line	432
;ird_remote.c: 432: charge_i_limit = 12.00*15.0;
	movlw	0x0
	movwf	(_charge_i_limit)^0180h
	movlw	0x34
	movwf	(_charge_i_limit+1)^0180h
	movlw	0x43
	movwf	(_charge_i_limit+2)^0180h
	line	434
;ird_remote.c: 434: shuchu_shortout_voltage = (10.00/61)*1000;
	movlw	0xef
	movlb 2	; select bank2
	movwf	(_shuchu_shortout_voltage)^0100h
	movlw	0x23
	movwf	(_shuchu_shortout_voltage+1)^0100h
	movlw	0x43
	movwf	(_shuchu_shortout_voltage+2)^0100h
	line	436
;ird_remote.c: 436: shuchu_open_voltage = (61.00/61)*1000;
	movlw	0x0
	movlb 3	; select bank3
	movwf	(_shuchu_open_voltage)^0180h
	movlw	0x7a
	movwf	(_shuchu_open_voltage+1)^0180h
	movlw	0x44
	movwf	(_shuchu_open_voltage+2)^0180h
	line	438
;ird_remote.c: 438: discharge_i_baohu = 4.50*30.0;
	movlw	0x0
	movwf	(_discharge_i_baohu)^0180h
	movlw	0x7
	movwf	(_discharge_i_baohu+1)^0180h
	movlw	0x43
	movwf	(_discharge_i_baohu+2)^0180h
	line	440
;ird_remote.c: 440: discharge_i_limit = 4.00*30.0;
	movlw	0x0
	movwf	(_discharge_i_limit)^0180h
	movlw	0xf0
	movwf	(_discharge_i_limit+1)^0180h
	movlw	0x42
	movwf	(_discharge_i_limit+2)^0180h
	line	442
	
l21750:	
;ird_remote.c: 442: light_on_pv_level = (light_pv*10)/61;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftdiv@f2)
	movlw	0x74
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x20
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level+2)^0180h
	line	444
	
l21752:	
;ird_remote.c: 444: light_off_pv_level = (10.0/61)*1000;
	movlw	0xef
	movwf	(_light_off_pv_level)^0180h
	movlw	0x23
	movwf	(_light_off_pv_level+1)^0180h
	movlw	0x43
	movwf	(_light_off_pv_level+2)^0180h
	line	446
	
l21754:	
;ird_remote.c: 446: Load_Pmax=86.00;
	movlw	0x0
	movlb 4	; select bank4
	movwf	(_Load_Pmax)^0200h
	movlw	0xac
	movwf	(_Load_Pmax+1)^0200h
	movlw	0x42
	movwf	(_Load_Pmax+2)^0200h
	line	447
	
l21756:	
;ird_remote.c: 447: Load2_Pmax=44.00;
	movlw	0x0
	movwf	(_Load2_Pmax)^0200h
	movlw	0x30
	movwf	(_Load2_Pmax+1)^0200h
	movlw	0x42
	movwf	(_Load2_Pmax+2)^0200h
	line	448
;ird_remote.c: 448: }
	goto	l603
	line	449
	
l21758:	
	line	451
	
l21760:	
;ird_remote.c: 450: {
;ird_remote.c: 451: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	458
;ird_remote.c: 452: }
	
l603:	
	return
	opt stack 0
GLOBAL	__end_of_read_param_eeprom
	__end_of_read_param_eeprom:
	signat	_read_param_eeprom,88
	global	_auto_system

;; *************** function _auto_system *****************
;; Defined at:
;;		line 467 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  sys_bt_volta    3   68[BANK0 ] float 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 17F/7
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		___ftdiv
;;		___ftge
;;		___ftmul
;;		___lwtoft
;;		_delay_ms
;;		_eeprom_read
;;		_eeprom_write
;;		_start_ad_convert
;; This function is called by:
;;		_middle_init
;; This function uses a non-reentrant model
;;
psect	text4,local,class=CODE,delta=2,merge=1
	line	467
global __ptext4
__ptext4:	;psect for function _auto_system
psect	text4
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	467
	global	__size_of_auto_system
	__size_of_auto_system	equ	__end_of_auto_system-_auto_system
	
_auto_system:	
;incstack = 0
	opt	stack 10
; Regs used in _auto_system: [wreg-fsr1h+status,2+status,0+pclath+cstack]
	line	471
	
l21762:	
;ird_remote.c: 469: float sys_bt_voltage;
;ird_remote.c: 471: delay_ms(100);
	movlw	064h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	474
;ird_remote.c: 474: bt_id=eeprom_read(0x0a);
	movlw	(0Ah)
	fcall	_eeprom_read
	movlb 1	; select bank1
	movwf	(_bt_id)^080h
	line	477
	
l21764:	
	line	479
	
l21766:	
;ird_remote.c: 479: battery_voltage_value=start_ad_convert(0b00011);
	movlw	(03h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movwf	(_battery_voltage_value+1)
	movf	(0+(?_start_ad_convert)),w
	movwf	(_battery_voltage_value)
	line	481
	
l21768:	
;ird_remote.c: 481: sys_bt_voltage=(((float)battery_voltage_value)/1000)*31.04;
	movlw	0x52
	movwf	(___ftmul@f1)
	movlw	0xf8
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x7a
	movwf	(___ftdiv@f2+1)
	movlw	0x44
	movwf	(___ftdiv@f2+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(auto_system@sys_bt_voltage)
	movf	(1+(?___ftmul)),w
	movwf	(auto_system@sys_bt_voltage+1)
	movf	(2+(?___ftmul)),w
	movwf	(auto_system@sys_bt_voltage+2)
	line	483
	
l21770:	
;ird_remote.c: 483: if(bt_id==0x01)
	movlb 1	; select bank1
	decf	(_bt_id)^080h,w
	skipz
	goto	u11681
	goto	u11680
u11681:
	goto	l21780
u11680:
	line	485
	
l21772:	
;ird_remote.c: 484: {
;ird_remote.c: 485: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
	movlb 0	; select bank0
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff1)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff1+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x20
	movwf	(___ftge@ff2+1)
	movlw	0x41
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11691
	goto	u11690
u11691:
	goto	l607
u11690:
	
l21774:	
	movlw	0x66
	movwf	(___ftge@ff1)
	movlw	0x86
	movwf	(___ftge@ff1+1)
	movlw	0x41
	movwf	(___ftge@ff1+2)
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff2)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff2+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11701
	goto	u11700
u11701:
	goto	l607
u11700:
	line	487
	
l21776:	
;ird_remote.c: 486: {
;ird_remote.c: 487: volt_id=0x01;
	movlb 1	; select bank1
	clrf	(_volt_id)^080h
	incf	(_volt_id)^080h,f
	line	489
	
l21778:	
;ird_remote.c: 489: eeprom_write(0x09,volt_id);
	movf	(_volt_id)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(09h)
	fcall	_eeprom_write
	line	490
;ird_remote.c: 490: }
	goto	l616
	line	491
	
l607:	
	line	493
;ird_remote.c: 491: else
;ird_remote.c: 492: {
;ird_remote.c: 493: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	goto	l616
	line	496
	
l21780:	
;ird_remote.c: 496: else if(bt_id==0x02)
	movf	(_bt_id)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u11711
	goto	u11710
u11711:
	goto	l21790
u11710:
	line	498
	
l21782:	
;ird_remote.c: 497: {
;ird_remote.c: 498: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
	movlb 0	; select bank0
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff1)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff1+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x20
	movwf	(___ftge@ff2+1)
	movlw	0x41
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11721
	goto	u11720
u11721:
	goto	l607
u11720:
	
l21784:	
	movlw	0x66
	movwf	(___ftge@ff1)
	movlw	0x86
	movwf	(___ftge@ff1+1)
	movlw	0x41
	movwf	(___ftge@ff1+2)
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff2)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff2+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11731
	goto	u11730
u11731:
	goto	l607
u11730:
	line	500
	
l21786:	
;ird_remote.c: 499: {
;ird_remote.c: 500: volt_id=0x01;
	movlb 1	; select bank1
	clrf	(_volt_id)^080h
	incf	(_volt_id)^080h,f
	line	502
	
l21788:	
;ird_remote.c: 502: eeprom_write(0x09,volt_id);
	movf	(_volt_id)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(09h)
	fcall	_eeprom_write
	line	503
;ird_remote.c: 503: }
	goto	l616
	line	511
	
l21790:	
;ird_remote.c: 509: else
;ird_remote.c: 510: {
;ird_remote.c: 511: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
	movlb 0	; select bank0
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff1)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff1+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x20
	movwf	(___ftge@ff2+1)
	movlw	0x41
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11741
	goto	u11740
u11741:
	goto	l607
u11740:
	
l21792:	
	movlw	0x66
	movwf	(___ftge@ff1)
	movlw	0x86
	movwf	(___ftge@ff1+1)
	movlw	0x41
	movwf	(___ftge@ff1+2)
	movf	(auto_system@sys_bt_voltage),w
	movwf	(___ftge@ff2)
	movf	(auto_system@sys_bt_voltage+1),w
	movwf	(___ftge@ff2+1)
	movf	(auto_system@sys_bt_voltage+2),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u11751
	goto	u11750
u11751:
	goto	l607
u11750:
	line	513
	
l21794:	
;ird_remote.c: 512: {
;ird_remote.c: 513: volt_id=0x01;
	movlb 1	; select bank1
	clrf	(_volt_id)^080h
	incf	(_volt_id)^080h,f
	line	515
	
l21796:	
;ird_remote.c: 515: eeprom_write(0x09,volt_id);
	movf	(_volt_id)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(09h)
	fcall	_eeprom_write
	line	525
;ird_remote.c: 516: }
	
l616:	
	return
	opt stack 0
GLOBAL	__end_of_auto_system
	__end_of_auto_system:
	signat	_auto_system,88
	global	_handle_uart_rx_buf

;; *************** function _handle_uart_rx_buf *****************
;; Defined at:
;;		line 232 in file "D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  crc_in          2   67[BANK0 ] unsigned int 
;;  byte_l          1    0        unsigned char 
;;  byte_h          1    0        unsigned char 
;;  i               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		_Disable_Bost_Pwm1
;;		_Disable_Bost_Pwm2
;;		_Disable_Buck_Pwm
;;		_Enable_Bost_Pwm1
;;		_Enable_Bost_Pwm2
;;		_Set_Bost_Pwm1_Duty
;;		_Set_Bost_Pwm2_Duty
;;		_Set_Buck_Pwm_Duty
;;		___awtoft
;;		___ftdiv
;;		___ftge
;;		___ftmul
;;		___fttol
;;		___lbtoft
;;		___lmul
;;		___lwtoft
;;		_crc16
;;		_delay_ms
;;		_eeprom_read
;;		_eeprom_write
;;		_memset
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text5,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
	line	232
global __ptext5
__ptext5:	;psect for function _handle_uart_rx_buf
psect	text5
	file	"D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
	line	232
	global	__size_of_handle_uart_rx_buf
	__size_of_handle_uart_rx_buf	equ	__end_of_handle_uart_rx_buf-_handle_uart_rx_buf
	
_handle_uart_rx_buf:	
;incstack = 0
	opt	stack 11
; Regs used in _handle_uart_rx_buf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
	line	240
	
l24254:	
;uart.c: 236: unsigned int crc_in;
;uart.c: 238: unsigned char byte_h,byte_l;
;uart.c: 240: switch(rx_frame_kind)
	goto	l24652
	line	243
	
l24256:	
;uart.c: 243: if(uart1_rx_buf[1]==0xA1)
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A1h&0ffh
	skipz
	goto	u14821
	goto	u14820
u14821:
	goto	l24654
u14820:
	line	245
	
l24258:	
;uart.c: 244: {
;uart.c: 245: crc_in=crc16(&uart1_rx_buf[1],1);
	movlw	low(_uart1_rx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_rx_buf+01h)
	movwf	(crc16@puchMsg+1)
	clrf	(crc16@usDataLen)
	incf	(crc16@usDataLen),f
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in+1)
	movf	(0+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in)
	line	247
	
l24260:	
;uart.c: 247: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
	movf	(handle_uart_rx_buf@crc_in+1),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+02h,w
	skipz
	goto	u14835
	movlb 0	; select bank0
	movf	(handle_uart_rx_buf@crc_in),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+03h,w
u14835:

	skipz
	goto	u14831
	goto	u14830
u14831:
	goto	l24654
u14830:
	line	250
	
l24262:	
;uart.c: 248: {
;uart.c: 250: p_v=(float)(((float)pv_voltage_value)/10)*61;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x74
	movwf	(___ftmul@f1+1)
	movlw	0x42
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x20
	movwf	(___ftdiv@f2+1)
	movlw	0x41
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_pv_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_pv_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_p_v)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_p_v+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_p_v+2)^0200h
	line	252
;uart.c: 252: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
	movlw	0x52
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xf8
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x20
	movwf	(___ftdiv@f2+1)
	movlw	0x41
	movwf	(___ftdiv@f2+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v)^0100h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v+2)^0100h
	line	254
;uart.c: 254: load_v=(float)(((float)load_voltage_value)/10)*61;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x74
	movwf	(___ftmul@f1+1)
	movlw	0x42
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x20
	movwf	(___ftdiv@f2+1)
	movlw	0x41
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_load_v)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_load_v+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_load_v+2)^0200h
	line	256
;uart.c: 256: charge_I=((float)charge_current_value)/0.15;
	movlw	0x9a
	movlb 0	; select bank0
	movwf	(___ftdiv@f2)
	movlw	0x19
	movwf	(___ftdiv@f2+1)
	movlw	0x3e
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_charge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_charge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_charge_I)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_charge_I+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_charge_I+2)^0200h
	line	258
;uart.c: 258: load_I=((float)discharge_current_value)/0.30;
	movlw	0x9a
	movlb 0	; select bank0
	movwf	(___ftdiv@f2)
	movlw	0x99
	movwf	(___ftdiv@f2+1)
	movlw	0x3e
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_load_I)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_load_I+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_load_I+2)^0200h
	line	260
	
l24264:	
;uart.c: 260: sys_mode=(volt_id<<4)|system_status;
	movlb 1	; select bank1
	swapf	(_volt_id)^080h,w
	andlw	(0ffh shl 4) & 0ffh
	iorwf	(_system_status)^080h,w
	movlb 2	; select bank2
	movwf	(_sys_mode)^0100h
	line	264
	
l24266:	
;uart.c: 264: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	266
	
l24268:	
;uart.c: 266: uart1_tx_buf[1]=0xB1;
	movlw	(0B1h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	line	268
	
l24270:	
;uart.c: 268: uart1_tx_buf[2]=(unsigned char )(p_v/256);
	movlb 4	; select bank4
	movf	(_p_v)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 4	; select bank4
	movf	(_p_v+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 4	; select bank4
	movf	(_p_v+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02h
	line	269
	
l24272:	
;uart.c: 269: uart1_tx_buf[3]=(unsigned char )p_v;
	movlb 4	; select bank4
	movf	(_p_v)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 4	; select bank4
	movf	(_p_v+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 4	; select bank4
	movf	(_p_v+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+03h
	line	271
	
l24274:	
;uart.c: 271: uart1_tx_buf[4]=(unsigned char )(b_v/256);
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+04h
	line	272
	
l24276:	
;uart.c: 272: uart1_tx_buf[5]=(unsigned char )b_v;
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+05h
	line	274
	
l24278:	
;uart.c: 274: uart1_tx_buf[6]=(unsigned char )(load_v/256);
	movlb 4	; select bank4
	movf	(_load_v)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 4	; select bank4
	movf	(_load_v+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 4	; select bank4
	movf	(_load_v+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+06h
	line	275
	
l24280:	
;uart.c: 275: uart1_tx_buf[7]=(unsigned char )load_v;
	movlb 4	; select bank4
	movf	(_load_v)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 4	; select bank4
	movf	(_load_v+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 4	; select bank4
	movf	(_load_v+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+07h
	line	277
	
l24282:	
;uart.c: 277: uart1_tx_buf[8]=(unsigned char )(charge_I/256);
	movlb 4	; select bank4
	movf	(_charge_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 4	; select bank4
	movf	(_charge_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 4	; select bank4
	movf	(_charge_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+08h
	line	278
	
l24284:	
;uart.c: 278: uart1_tx_buf[9]=(unsigned char )charge_I;
	movlb 4	; select bank4
	movf	(_charge_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 4	; select bank4
	movf	(_charge_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 4	; select bank4
	movf	(_charge_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+09h
	line	280
	
l24286:	
;uart.c: 280: uart1_tx_buf[10]=(unsigned char )(load_I/256);
	movlb 4	; select bank4
	movf	(_load_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 4	; select bank4
	movf	(_load_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 4	; select bank4
	movf	(_load_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Ah
	line	281
	
l24288:	
;uart.c: 281: uart1_tx_buf[11]=(unsigned char )load_I;
	movlb 4	; select bank4
	movf	(_load_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 4	; select bank4
	movf	(_load_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 4	; select bank4
	movf	(_load_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Bh
	line	283
	
l24290:	
;uart.c: 283: uart1_tx_buf[12]=(unsigned char )sys_mode;
	movlb 2	; select bank2
	movf	(_sys_mode)^0100h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Ch
	line	285
	
l24292:	
;uart.c: 285: uart1_tx_buf[13]=(unsigned char )(mcu_value/256);
	movlb 1	; select bank1
	movf	(_mcu_value+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Dh
	line	287
	
l24294:	
;uart.c: 287: uart1_tx_buf[14]=(unsigned char )(mcu_value);
	movlb 1	; select bank1
	movf	(_mcu_value)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Eh
	line	289
	
l24296:	
;uart.c: 289: uart1_tx_buf[15]=(unsigned char )(discharge_current_value/256);
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Fh
	line	291
	
l24298:	
;uart.c: 291: uart1_tx_buf[16]=(unsigned char )(discharge_current_value);
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+010h
	line	293
	
l24300:	
;uart.c: 293: uart1_tx_buf[17]=(unsigned char )(temperature_value/256);
	movlb 2	; select bank2
	movf	(_temperature_value+1)^0100h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+011h
	line	295
	
l24302:	
;uart.c: 295: uart1_tx_buf[18]=(unsigned char )(temperature_value);
	movlb 2	; select bank2
	movf	(_temperature_value)^0100h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+012h
	line	298
	
l24304:	
;uart.c: 298: uart1_tx_buf[19]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+013h
	line	300
	
l24306:	
;uart.c: 300: uart1_tx_buf[20]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+014h
	line	302
	
l24308:	
;uart.c: 302: uart1_tx_buf[21]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+015h
	line	304
	
l24310:	
;uart.c: 304: uart1_tx_buf[22]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+016h
	line	307
	
l24312:	
;uart.c: 307: uart1_tx_buf[23]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+017h
	line	309
	
l24314:	
;uart.c: 309: uart1_tx_buf[24]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+018h
	line	311
	
l24316:	
;uart.c: 311: uart1_tx_buf[25]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+019h
	line	313
	
l24318:	
;uart.c: 313: uart1_tx_buf[26]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	07h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Ah
	line	316
	
l24320:	
;uart.c: 316: uart1_tx_buf[27]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Bh
	line	318
	
l24322:	
;uart.c: 318: uart1_tx_buf[28]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Ch
	line	320
	
l24324:	
;uart.c: 320: uart1_tx_buf[29]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Dh
	line	322
	
l24326:	
;uart.c: 322: uart1_tx_buf[30]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	06h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Eh
	line	325
	
l24328:	
;uart.c: 325: uart1_tx_buf[31]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+01Fh
	line	327
	
l24330:	
;uart.c: 327: uart1_tx_buf[32]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+020h
	line	329
	
l24332:	
;uart.c: 329: uart1_tx_buf[33]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+021h
	line	331
	
l24334:	
;uart.c: 331: uart1_tx_buf[34]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	05h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+022h
	line	334
	
l24336:	
;uart.c: 334: uart1_tx_buf[35]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+023h
	line	336
	
l24338:	
;uart.c: 336: uart1_tx_buf[36]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+024h
	line	338
	
l24340:	
;uart.c: 338: uart1_tx_buf[37]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+025h
	line	340
	
l24342:	
;uart.c: 340: uart1_tx_buf[38]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	04h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+026h
	line	343
	
l24344:	
;uart.c: 343: uart1_tx_buf[39]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+027h
	line	345
	
l24346:	
;uart.c: 345: uart1_tx_buf[40]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+028h
	line	347
	
l24348:	
;uart.c: 347: uart1_tx_buf[41]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+029h
	line	349
	
l24350:	
;uart.c: 349: uart1_tx_buf[42]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	03h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Ah
	line	352
	
l24352:	
;uart.c: 352: uart1_tx_buf[43]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Bh
	line	354
	
l24354:	
;uart.c: 354: uart1_tx_buf[44]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Ch
	line	356
	
l24356:	
;uart.c: 356: uart1_tx_buf[45]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Dh
	line	358
	
l24358:	
;uart.c: 358: uart1_tx_buf[46]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	02h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Eh
	line	361
	
l24360:	
;uart.c: 361: uart1_tx_buf[47]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02Fh
	line	363
	
l24362:	
;uart.c: 363: uart1_tx_buf[48]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+030h
	line	365
	
l24364:	
;uart.c: 365: uart1_tx_buf[49]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+031h
	line	367
	
l24366:	
;uart.c: 367: uart1_tx_buf[50]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
	movlb 0	; select bank0
	movf	(_today_index),w
	addlw	01h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_read
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+032h
	line	370
	
l24368:	
;uart.c: 370: crc_data=crc16(&uart1_tx_buf[1],50);
	movlw	low(_uart1_tx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_tx_buf+01h)
	movwf	(crc16@puchMsg+1)
	movlw	(032h)
	movwf	(crc16@usDataLen)
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data)^080h
	line	372
	
l24370:	
;uart.c: 372: uart1_tx_buf[51]=crc_data/256;
	movf	(_crc_data+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+033h
	line	373
	
l24372:	
;uart.c: 373: uart1_tx_buf[52]=crc_data%256;
	movlb 1	; select bank1
	movf	(_crc_data)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+034h
	line	375
	
l24374:	
;uart.c: 375: uart1_tx_buf[53]=0xAA;
	movlw	(0AAh)
	movwf	0+(_uart1_tx_buf)^0380h+035h
	goto	l24654
	line	384
	
l24376:	
;uart.c: 384: if(uart1_rx_buf[1]==0xA2)
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A2h&0ffh
	skipz
	goto	u14841
	goto	u14840
u14841:
	goto	l24654
u14840:
	line	386
	
l24378:	
;uart.c: 385: {
;uart.c: 386: crc_in=crc16(&uart1_rx_buf[1],1);
	movlw	low(_uart1_rx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_rx_buf+01h)
	movwf	(crc16@puchMsg+1)
	clrf	(crc16@usDataLen)
	incf	(crc16@usDataLen),f
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in+1)
	movf	(0+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in)
	line	388
	
l24380:	
;uart.c: 388: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
	movf	(handle_uart_rx_buf@crc_in+1),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+02h,w
	skipz
	goto	u14855
	movlb 0	; select bank0
	movf	(handle_uart_rx_buf@crc_in),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+03h,w
u14855:

	skipz
	goto	u14851
	goto	u14850
u14851:
	goto	l24654
u14850:
	line	392
	
l24382:	
;uart.c: 389: {
;uart.c: 392: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	394
;uart.c: 394: uart1_tx_buf[1]=0xB2;
	movlw	(0B2h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	line	396
	
l24384:	
;uart.c: 396: uart1_tx_buf[2] =(unsigned char )(light_pv/256);
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+02h
	line	398
	
l24386:	
;uart.c: 398: uart1_tx_buf[3] =(unsigned char )light_pv;
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+03h
	line	400
	
l24388:	
;uart.c: 400: uart1_tx_buf[4] =(unsigned char )(load_cc_I/256);
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+04h
	line	402
	
l24390:	
;uart.c: 402: uart1_tx_buf[5] =(unsigned char )load_cc_I;
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+05h
	line	404
	
l24392:	
;uart.c: 404: uart1_tx_buf[6] =(unsigned char )(step_01_load_percent);
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+06h
	line	406
	
l24394:	
;uart.c: 406: uart1_tx_buf[7] =(unsigned char )(step_02_load_percent);
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+07h
	line	408
	
l24396:	
;uart.c: 408: uart1_tx_buf[8] =(unsigned char )(step_03_load_percent);
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+08h
	line	410
	
l24398:	
;uart.c: 410: uart1_tx_buf[9] =(unsigned char )(step_04_load_percent);
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+09h
	line	412
	
l24400:	
;uart.c: 412: uart1_tx_buf[10]=(unsigned char )(step_05_load_percent);
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Ah
	line	414
	
l24402:	
;uart.c: 414: uart1_tx_buf[11]=(unsigned char )(bt_id);
	movlb 1	; select bank1
	movf	(_bt_id)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Bh
	line	416
	
l24404:	
;uart.c: 416: uart1_tx_buf[12]=(unsigned char )(light_time);
	movlb 1	; select bank1
	movf	(_light_time)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Ch
	line	418
	
l24406:	
;uart.c: 418: uart1_tx_buf[13] =(unsigned char )(step_01_time_limit);
	movlb 1	; select bank1
	movf	(_step_01_time_limit)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Dh
	line	420
	
l24408:	
;uart.c: 420: uart1_tx_buf[14] =(unsigned char )(step_02_time_limit);
	movlb 1	; select bank1
	movf	(_step_02_time_limit)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Eh
	line	422
	
l24410:	
;uart.c: 422: uart1_tx_buf[15] =(unsigned char )(step_03_time_limit);
	movlb 1	; select bank1
	movf	(_step_03_time_limit)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+0Fh
	line	424
	
l24412:	
;uart.c: 424: uart1_tx_buf[16] =(unsigned char )(step_04_time_limit);
	movlb 1	; select bank1
	movf	(_step_04_time_limit)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+010h
	line	426
	
l24414:	
;uart.c: 426: uart1_tx_buf[17] =(unsigned char )(step_05_time_limit);
	movlb 2	; select bank2
	movf	(_step_05_time_limit)^0100h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+011h
	line	429
	
l24416:	
;uart.c: 429: crc_data=crc16(&uart1_tx_buf[1],17);
	movlw	low(_uart1_tx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_tx_buf+01h)
	movwf	(crc16@puchMsg+1)
	movlw	(011h)
	movwf	(crc16@usDataLen)
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data)^080h
	line	431
	
l24418:	
;uart.c: 431: uart1_tx_buf[18]=crc_data/256;
	movf	(_crc_data+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+012h
	line	433
	
l24420:	
;uart.c: 433: uart1_tx_buf[19]=crc_data%256;
	movlb 1	; select bank1
	movf	(_crc_data)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+013h
	line	435
	
l24422:	
;uart.c: 435: uart1_tx_buf[20]=0xAA;
	movlw	(0AAh)
	movwf	0+(_uart1_tx_buf)^0380h+014h
	goto	l24654
	line	443
	
l24424:	
;uart.c: 443: if(uart1_rx_buf[1]==0xA3)
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A3h&0ffh
	skipz
	goto	u14861
	goto	u14860
u14861:
	goto	l24654
u14860:
	line	445
	
l24426:	
;uart.c: 444: {
;uart.c: 445: crc_in=crc16(&uart1_rx_buf[1],17);
	movlw	low(_uart1_rx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_rx_buf+01h)
	movwf	(crc16@puchMsg+1)
	movlw	(011h)
	movwf	(crc16@usDataLen)
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in+1)
	movf	(0+(?_crc16)),w
	movwf	(handle_uart_rx_buf@crc_in)
	line	447
	
l24428:	
;uart.c: 447: if(crc_in==( (uart1_rx_buf[18]<<8) | uart1_rx_buf[19]) )
	movf	(handle_uart_rx_buf@crc_in+1),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+012h,w
	skipz
	goto	u14875
	movlb 0	; select bank0
	movf	(handle_uart_rx_buf@crc_in),w
	movlb 8	; select bank8
	xorwf	0+(_uart1_rx_buf)^0400h+013h,w
u14875:

	skipz
	goto	u14871
	goto	u14870
u14871:
	goto	l24654
u14870:
	line	450
	
l24430:	
;uart.c: 448: {
;uart.c: 450: light_pv = (uart1_rx_buf[2]<<8) | uart1_rx_buf[3];
	movf	0+(_uart1_rx_buf)^0400h+02h,w
	movlb 0	; select bank0
	movwf	(___awtoft@c+1)
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+03h,w
	movlb 0	; select bank0
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv)^080h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_light_pv+2)^080h
	line	452
;uart.c: 452: load_cc_I = (uart1_rx_buf[4]<<8) | uart1_rx_buf[5];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	movlb 0	; select bank0
	movwf	(___awtoft@c+1)
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+05h,w
	movlb 0	; select bank0
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I)^080h
	movlb 0	; select bank0
	movf	(1+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___awtoft)),w
	movlb 1	; select bank1
	movwf	(_load_cc_I+2)^080h
	line	454
;uart.c: 454: step_01_load_percent = uart1_rx_buf[6];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+06h,w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_01_load_percent+2)^0100h
	line	456
;uart.c: 456: step_02_load_percent = uart1_rx_buf[7];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+07h,w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_02_load_percent+2)^0100h
	line	458
;uart.c: 458: step_03_load_percent = uart1_rx_buf[8];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+08h,w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_03_load_percent+2)^0100h
	line	460
;uart.c: 460: step_04_load_percent = uart1_rx_buf[9];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+09h,w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent)^0100h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 2	; select bank2
	movwf	(_step_04_load_percent+2)^0100h
	line	462
;uart.c: 462: step_05_load_percent = uart1_rx_buf[10];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Ah,w
	fcall	___lbtoft
	movf	(0+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent)^080h
	movlb 0	; select bank0
	movf	(1+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___lbtoft)),w
	movlb 1	; select bank1
	movwf	(_step_05_load_percent+2)^080h
	line	464
	
l24432:	
;uart.c: 464: Adjust_Pout_Flag=0x00;
	movlb 0	; select bank0
	clrf	(_Adjust_Pout_Flag)
	line	465
	
l24434:	
;uart.c: 465: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	467
	
l24436:	
;uart.c: 467: bt_id = uart1_rx_buf[11];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Bh,w
	movlb 1	; select bank1
	movwf	(_bt_id)^080h
	line	469
	
l24438:	
;uart.c: 469: light_time = uart1_rx_buf[12];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Ch,w
	movlb 1	; select bank1
	movwf	(_light_time)^080h
	clrf	(_light_time+1)^080h
	line	471
	
l24440:	
;uart.c: 471: step_01_time_limit = uart1_rx_buf[13];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Dh,w
	movlb 1	; select bank1
	movwf	(_step_01_time_limit)^080h
	clrf	(_step_01_time_limit+1)^080h
	line	473
	
l24442:	
;uart.c: 473: step_02_time_limit = uart1_rx_buf[14];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Eh,w
	movlb 1	; select bank1
	movwf	(_step_02_time_limit)^080h
	clrf	(_step_02_time_limit+1)^080h
	line	475
	
l24444:	
;uart.c: 475: step_03_time_limit = uart1_rx_buf[15];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+0Fh,w
	movlb 1	; select bank1
	movwf	(_step_03_time_limit)^080h
	clrf	(_step_03_time_limit+1)^080h
	line	477
	
l24446:	
;uart.c: 477: step_04_time_limit = uart1_rx_buf[16];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+010h,w
	movlb 1	; select bank1
	movwf	(_step_04_time_limit)^080h
	clrf	(_step_04_time_limit+1)^080h
	line	479
	
l24448:	
;uart.c: 479: step_05_time_limit = uart1_rx_buf[17];
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+011h,w
	movlb 2	; select bank2
	movwf	(_step_05_time_limit)^0100h
	clrf	(_step_05_time_limit+1)^0100h
	line	481
	
l24450:	
;uart.c: 481: if((light_pv>=100)&&(light_pv<=1200)&&(load_cc_I<=500)&&(step_01_load_percent<=100)&&(step_02_load_percent<=100) &&(step_03_load_percent<=100)&&(step_04_load_percent<=100)&&(step_05_load_percent<=100)&&(bt_id>=1)&&(bt_id<=2) &&(light_time<=60)&&(step
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xc8
	movwf	(___ftge@ff2+1)
	movlw	0x42
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14881
	goto	u14880
u14881:
	goto	l24538
u14880:
	
l24452:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x96
	movwf	(___ftge@ff1+1)
	movlw	0x44
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14891
	goto	u14890
u14891:
	goto	l24538
u14890:
	
l24454:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xfa
	movwf	(___ftge@ff1+1)
	movlw	0x43
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14901
	goto	u14900
u14901:
	goto	l24538
u14900:
	
l24456:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xc8
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14911
	goto	u14910
u14911:
	goto	l24538
u14910:
	
l24458:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xc8
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14921
	goto	u14920
u14921:
	goto	l24538
u14920:
	
l24460:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xc8
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14931
	goto	u14930
u14931:
	goto	l24538
u14930:
	
l24462:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xc8
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14941
	goto	u14940
u14941:
	goto	l24538
u14940:
	
l24464:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xc8
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14951
	goto	u14950
u14951:
	goto	l24538
u14950:
	
l24466:	
	movlb 1	; select bank1
	movf	(_bt_id)^080h,w
	skipz
	goto	u14960
	goto	l24538
u14960:
	
l24468:	
	movlw	(03h)
	subwf	(_bt_id)^080h,w
	skipnc
	goto	u14971
	goto	u14970
u14971:
	goto	l24538
u14970:
	
l24470:	
	movlw	high(03Dh)
	subwf	(_light_time+1)^080h,w
	movlw	low(03Dh)
	skipnz
	subwf	(_light_time)^080h,w
	skipnc
	goto	u14981
	goto	u14980
u14981:
	goto	l24538
u14980:
	
l24472:	
	movlw	high(019h)
	subwf	(_step_01_time_limit+1)^080h,w
	movlw	low(019h)
	skipnz
	subwf	(_step_01_time_limit)^080h,w
	skipnc
	goto	u14991
	goto	u14990
u14991:
	goto	l24538
u14990:
	
l24474:	
	movlw	high(019h)
	subwf	(_step_02_time_limit+1)^080h,w
	movlw	low(019h)
	skipnz
	subwf	(_step_02_time_limit)^080h,w
	skipnc
	goto	u15001
	goto	u15000
u15001:
	goto	l24538
u15000:
	
l24476:	
	movlw	high(019h)
	subwf	(_step_03_time_limit+1)^080h,w
	movlw	low(019h)
	skipnz
	subwf	(_step_03_time_limit)^080h,w
	skipnc
	goto	u15011
	goto	u15010
u15011:
	goto	l24538
u15010:
	
l24478:	
	movlw	high(019h)
	subwf	(_step_04_time_limit+1)^080h,w
	movlw	low(019h)
	skipnz
	subwf	(_step_04_time_limit)^080h,w
	skipnc
	goto	u15021
	goto	u15020
u15021:
	goto	l24538
u15020:
	
l24480:	
	movlw	high(019h)
	movlb 2	; select bank2
	subwf	(_step_05_time_limit+1)^0100h,w
	movlw	low(019h)
	skipnz
	subwf	(_step_05_time_limit)^0100h,w
	skipnc
	goto	u15031
	goto	u15030
u15031:
	movlb 1	; select bank1
	goto	l24538
u15030:
	line	486
	
l24482:	
;uart.c: 484: {
;uart.c: 486: eeprom_write(0x00,(unsigned char)(light_pv/256));
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(0)
	fcall	_eeprom_write
	line	488
;uart.c: 488: eeprom_write(0x01,(unsigned char)light_pv);
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(01h)
	fcall	_eeprom_write
	line	491
;uart.c: 491: eeprom_write(0x02,(unsigned char)(load_cc_I/256));
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(02h)
	fcall	_eeprom_write
	line	493
;uart.c: 493: eeprom_write(0x03,(unsigned char)load_cc_I);
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(03h)
	fcall	_eeprom_write
	line	496
;uart.c: 496: eeprom_write(0x04,(unsigned char)(step_01_load_percent));
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(04h)
	fcall	_eeprom_write
	line	498
;uart.c: 498: eeprom_write(0x05,(unsigned char)(step_02_load_percent));
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(05h)
	fcall	_eeprom_write
	line	500
;uart.c: 500: eeprom_write(0x06,(unsigned char)(step_03_load_percent));
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(06h)
	fcall	_eeprom_write
	line	502
;uart.c: 502: eeprom_write(0x07,(unsigned char)(step_04_load_percent));
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(07h)
	fcall	_eeprom_write
	line	504
;uart.c: 504: eeprom_write(0x08,(unsigned char)(step_05_load_percent));
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movlw	(08h)
	fcall	_eeprom_write
	line	506
;uart.c: 506: eeprom_write(0x0a,(unsigned char)(bt_id));
	movlb 1	; select bank1
	movf	(_bt_id)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Ah)
	fcall	_eeprom_write
	line	508
;uart.c: 508: eeprom_write(0x0b,(unsigned char)(light_time));
	movlb 1	; select bank1
	movf	(_light_time)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Bh)
	fcall	_eeprom_write
	line	510
;uart.c: 510: eeprom_write(0x0c,(unsigned char)(step_01_time_limit));
	movlb 1	; select bank1
	movf	(_step_01_time_limit)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Ch)
	fcall	_eeprom_write
	line	512
;uart.c: 512: eeprom_write(0x0d,(unsigned char)(step_02_time_limit));
	movlb 1	; select bank1
	movf	(_step_02_time_limit)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Dh)
	fcall	_eeprom_write
	line	514
;uart.c: 514: eeprom_write(0x0e,(unsigned char)(step_03_time_limit));
	movlb 1	; select bank1
	movf	(_step_03_time_limit)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Eh)
	fcall	_eeprom_write
	line	516
;uart.c: 516: eeprom_write(0x0f,(unsigned char)(step_04_time_limit));
	movlb 1	; select bank1
	movf	(_step_04_time_limit)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(0Fh)
	fcall	_eeprom_write
	line	518
;uart.c: 518: eeprom_write(0x10,(unsigned char)(step_05_time_limit));
	movlb 2	; select bank2
	movf	(_step_05_time_limit)^0100h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(010h)
	fcall	_eeprom_write
	line	521
;uart.c: 521: light_on_pv_level =(light_pv*10)/61;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftdiv@f2)
	movlw	0x74
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x20
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(_light_pv)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 1	; select bank1
	movf	(_light_pv+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 1	; select bank1
	movf	(_light_pv+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_light_on_pv_level+2)^0180h
	line	522
	
l24484:	
;uart.c: 522: light_off_pv_level =(10.0/61)*1000;
	movlw	0xef
	movwf	(_light_off_pv_level)^0180h
	movlw	0x23
	movwf	(_light_off_pv_level+1)^0180h
	movlw	0x43
	movwf	(_light_off_pv_level+2)^0180h
	line	524
	
l24486:	
;uart.c: 524: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	525
	
l24488:	
;uart.c: 525: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(_handle_uart_rx_buf$3198)
	movf	(1+(?___ftmul)),w
	movwf	(_handle_uart_rx_buf$3198+1)
	movf	(2+(?___ftmul)),w
	movwf	(_handle_uart_rx_buf$3198+2)
	
l24490:	
;uart.c: 525: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlw	0x9a
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movf	(_handle_uart_rx_buf$3198),w
	movwf	(___ftmul@f2)
	movf	(_handle_uart_rx_buf$3198+1),w
	movwf	(___ftmul@f2+1)
	movf	(_handle_uart_rx_buf$3198+2),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	527
	
l24492:	
;uart.c: 527: if(light_time==0x00)
	movlb 1	; select bank1
	movf	((_light_time+1)^080h),w
	iorwf	((_light_time)^080h),w
	skipz
	goto	u15041
	goto	u15040
u15041:
	goto	l24496
u15040:
	line	529
	
l24494:	
;uart.c: 528: {
;uart.c: 529: light_time_level = 500;
	movlw	0
	movlb 3	; select bank3
	movwf	(_light_time_level+3)^0180h
	movlw	0
	movwf	(_light_time_level+2)^0180h
	movlw	01h
	movwf	(_light_time_level+1)^0180h
	movlw	0F4h
	movwf	(_light_time_level)^0180h

	line	530
;uart.c: 530: }
	goto	l24498
	line	533
	
l24496:	
;uart.c: 531: else
;uart.c: 532: {
;uart.c: 533: light_time_level = (unsigned long int)((unsigned long int)light_time*6*180);
	movf	(_light_time)^080h,w
	movlb 0	; select bank0
	movwf	(___lmul@multiplier)
	movlb 1	; select bank1
	movf	(_light_time+1)^080h,w
	movlb 0	; select bank0
	movwf	((___lmul@multiplier))+1
	clrf	2+((___lmul@multiplier))
	clrf	3+((___lmul@multiplier))
	movlw	0
	movwf	(___lmul@multiplicand+3)
	movlw	0
	movwf	(___lmul@multiplicand+2)
	movlw	04h
	movwf	(___lmul@multiplicand+1)
	movlw	038h
	movwf	(___lmul@multiplicand)

	fcall	___lmul
	movf	(3+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+3)^0180h
	movlb 0	; select bank0
	movf	(2+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+2)^0180h
	movlb 0	; select bank0
	movf	(1+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level+1)^0180h
	movlb 0	; select bank0
	movf	(0+(?___lmul)),w
	movlb 3	; select bank3
	movwf	(_light_time_level)^0180h

	line	537
	
l24498:	
;uart.c: 534: }
;uart.c: 537: device_status=0x00;
	movlb 1	; select bank1
	clrf	(_device_status)^080h
	line	539
	
l24500:	
;uart.c: 539: eeprom_write(0x38,(unsigned char)(device_status));
	movf	(_device_status)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(038h)
	fcall	_eeprom_write
	line	541
	
l24502:	
;uart.c: 543: lr_cnt = 0x00;
	movlw	(04h)
	movlb 1	; select bank1
	movwf	(_work_mode)^080h
	line	545
	
l24504:	
;uart.c: 545: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	546
	
l24506:	
;uart.c: 546: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	547
	
l24508:	
;uart.c: 547: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	548
	
l24510:	
;uart.c: 548: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	550
	
l24512:	
;uart.c: 550: led_out_ctrl=0x00;
	clrf	(_led_out_ctrl)^080h
	line	551
	
l24514:	
;uart.c: 551: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	553
	
l24516:	
;uart.c: 553: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	555
	
l24518:	
;uart.c: 555: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	557
	
l24520:	
;uart.c: 557: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	559
	
l24522:	
;uart.c: 559: pv_time_count=0x00;
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	line	563
	
l24524:	
;uart.c: 563: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	565
	
l24526:	
;uart.c: 565: uart1_tx_buf[1]=0xB3;
	movlw	(0B3h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	line	567
	
l24528:	
;uart.c: 567: uart1_tx_buf[2]=0x01;
	clrf	0+(_uart1_tx_buf)^0380h+02h
	incf	0+(_uart1_tx_buf)^0380h+02h,f
	line	569
	
l24530:	
;uart.c: 569: crc_data=crc16(&uart1_tx_buf[1],2);
	movlw	low(_uart1_tx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_tx_buf+01h)
	movwf	(crc16@puchMsg+1)
	movlw	(02h)
	movwf	(crc16@usDataLen)
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data)^080h
	line	571
	
l24532:	
;uart.c: 571: uart1_tx_buf[3]=crc_data/256;
	movf	(_crc_data+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+03h
	line	573
	
l24534:	
;uart.c: 573: uart1_tx_buf[4]=crc_data%256;
	movlb 1	; select bank1
	movf	(_crc_data)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+04h
	line	575
	
l24536:	
;uart.c: 575: uart1_tx_buf[5]=0xAA;
	movlw	(0AAh)
	movwf	0+(_uart1_tx_buf)^0380h+05h
	line	579
;uart.c: 579: }
	goto	l24654
	line	582
	
l24538:	
;uart.c: 580: else
;uart.c: 581: {
;uart.c: 582: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	584
;uart.c: 584: uart1_tx_buf[1]=0xB3;
	movlw	(0B3h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	line	586
;uart.c: 586: uart1_tx_buf[2]=0x02;
	movlw	(02h)
	movwf	0+(_uart1_tx_buf)^0380h+02h
	line	588
	
l24540:	
;uart.c: 588: crc_data=crc16(&uart1_tx_buf[1],2);
	movlw	low(_uart1_tx_buf+01h)
	movlb 0	; select bank0
	movwf	(crc16@puchMsg)
	movlw	high(_uart1_tx_buf+01h)
	movwf	(crc16@puchMsg+1)
	movlw	(02h)
	movwf	(crc16@usDataLen)
	fcall	_crc16
	movf	(1+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_crc16)),w
	movlb 1	; select bank1
	movwf	(_crc_data)^080h
	line	590
	
l24542:	
;uart.c: 590: uart1_tx_buf[3]=crc_data/256;
	movf	(_crc_data+1)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+03h
	line	592
	
l24544:	
;uart.c: 592: uart1_tx_buf[4]=crc_data%256;
	movlb 1	; select bank1
	movf	(_crc_data)^080h,w
	movlb 7	; select bank7
	movwf	0+(_uart1_tx_buf)^0380h+04h
	line	594
	
l24546:	
;uart.c: 594: uart1_tx_buf[5]=0xAA;
	movlw	(0AAh)
	movwf	0+(_uart1_tx_buf)^0380h+05h
	line	598
# 598 "D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
reset ;# 
psect	text5
	goto	l24654
	line	606
;uart.c: 606: case 0x04:
	
l2358:	
	line	607
;uart.c: 607: work_mode=0x01;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	incf	(_work_mode)^080h,f
	line	609
	
l24548:	
;uart.c: 609: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	611
;uart.c: 611: uart1_tx_buf[1]=0xB4;
	movlw	(0B4h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	goto	l24528
	line	627
	
l24560:	
;uart.c: 627: work_mode=0x02;
	movlw	(02h)
	movlb 1	; select bank1
	movwf	(_work_mode)^080h
	line	629
;uart.c: 629: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	631
;uart.c: 631: uart1_tx_buf[1]=0xB5;
	movlw	(0B5h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	goto	l24528
	line	646
	
l24572:	
;uart.c: 646: work_mode=0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	648
	
l24574:	
;uart.c: 648: (LATAbits.LATA6 = 0x01);
	movlb 2	; select bank2
	bsf	(268)^0100h,6	;volatile
	line	650
;uart.c: 650: open_sleep_time=0x00;
	clrf	(_open_sleep_time)^0100h
	line	651
;uart.c: 652: lr_cnt=0x00;
	movlb 5	; select bank5
	clrf	(_sleep_time_count)^0280h
	clrf	(_sleep_time_count+1)^0280h
	line	654
;uart.c: 654: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	655
;uart.c: 655: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	656
;uart.c: 656: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	657
;uart.c: 657: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	659
;uart.c: 659: led_out_ctrl=0x00;
	clrf	(_led_out_ctrl)^080h
	line	660
	
l24576:	
;uart.c: 660: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	662
	
l24578:	
;uart.c: 662: device_status=0x01;
	movlb 1	; select bank1
	clrf	(_device_status)^080h
	incf	(_device_status)^080h,f
	line	664
	
l24580:	
;uart.c: 664: eeprom_write(0x38,(unsigned char)(device_status));
	movf	(_device_status)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(038h)
	fcall	_eeprom_write
	line	666
	
l24582:	
;uart.c: 666: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	667
	
l24584:	
;uart.c: 667: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	669
	
l24586:	
;uart.c: 669: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	670
	
l24588:	
;uart.c: 670: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	671
	
l24590:	
;uart.c: 671: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	672
	
l24592:	
;uart.c: 672: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	673
	
l24594:	
;uart.c: 673: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	674
	
l24596:	
;uart.c: 674: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	676
	
l24598:	
;uart.c: 676: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	677
	
l24600:	
;uart.c: 677: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	678
	
l24602:	
;uart.c: 678: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	679
	
l24604:	
;uart.c: 679: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	681
	
l24606:	
;uart.c: 681: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	682
	
l24608:	
;uart.c: 682: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	684
	
l24610:	
;uart.c: 684: delay_ms(1000);
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	movlw	high(03E8h)
	movwf	((delay_ms@count))+1
	fcall	_delay_ms
	line	686
	
l24612:	
;uart.c: 686: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	687
	
l24614:	
;uart.c: 687: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	689
	
l24616:	
;uart.c: 689: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	690
	
l24618:	
;uart.c: 690: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	691
	
l24620:	
;uart.c: 691: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	692
	
l24622:	
;uart.c: 692: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	693
	
l24624:	
;uart.c: 693: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	694
	
l24626:	
;uart.c: 694: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	697
	
l24628:	
;uart.c: 697: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	699
	
l24630:	
;uart.c: 699: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	701
	
l24632:	
;uart.c: 701: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	703
	
l24634:	
;uart.c: 703: pv_time_count=0x00;
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	line	705
	
l24636:	
;uart.c: 705: uart1_tx_buf[0]=0x55;
	movlw	(055h)
	movlb 7	; select bank7
	movwf	(_uart1_tx_buf)^0380h
	line	707
	
l24638:	
;uart.c: 707: uart1_tx_buf[1]=0xB6;
	movlw	(0B6h)
	movwf	0+(_uart1_tx_buf)^0380h+01h
	goto	l24528
	line	240
	
l24652:	
	movf	(_rx_frame_kind)^0100h,w
	; Switch size 1, requested type "space"
; Number of cases is 6, Range of values is 1 to 6
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           19    10 (average)
; direct_byte           21     9 (fixed)
; jumptable            263     9 (fixed)
;	Chosen strategy is simple_byte

	opt asmopt_off
	xorlw	1^0	; case 1
	skipnz
	goto	l24256
	xorlw	2^1	; case 2
	skipnz
	goto	l24376
	xorlw	3^2	; case 3
	skipnz
	goto	l24424
	xorlw	4^3	; case 4
	skipnz
	goto	l2358
	xorlw	5^4	; case 5
	skipnz
	goto	l24560
	xorlw	6^5	; case 6
	skipnz
	goto	l24572
	goto	l24654
	opt asmopt_on

	line	724
	
l24654:	
;uart.c: 724: rx_frame_kind=0x00;
	movlb 2	; select bank2
	clrf	(_rx_frame_kind)^0100h
	line	726
	
l24656:	
;uart.c: 726: memset (uart1_rx_buf,0,sizeof(uart1_rx_buf));
	movlw	low(_uart1_rx_buf)
	movlb 0	; select bank0
	movwf	(memset@p1)
	movlw	high(_uart1_rx_buf)
	movwf	(memset@p1+1)
	clrf	(memset@c)
	clrf	(memset@c+1)
	movlw	050h
	movwf	(memset@n)
	clrf	(memset@n+1)
	fcall	_memset
	line	727
	
l2362:	
	return
	opt stack 0
GLOBAL	__end_of_handle_uart_rx_buf
	__end_of_handle_uart_rx_buf:
	signat	_handle_uart_rx_buf,88
	global	_eeprom_read

;; *************** function _eeprom_read *****************
;; Defined at:
;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
;; Parameters:    Size  Location     Type
;;  addr            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  addr            1    3[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/7
;;		On exit  : 1F/3
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_read_param_eeprom
;;		_auto_system
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text6,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
	line	6
global __ptext6
__ptext6:	;psect for function _eeprom_read
psect	text6
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
	line	6
	global	__size_of_eeprom_read
	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
	
_eeprom_read:	
;incstack = 0
	opt	stack 11
; Regs used in _eeprom_read: [wreg+status,2+status,0]
;eeprom_read@addr stored from wreg
	movlb 0	; select bank0
	movwf	(eeprom_read@addr)
	line	8
	
l2375:	
	line	9
# 9 "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
clrwdt ;# 
psect	text6
	line	10
	movlb 3	; select bank3
	btfsc	(3241/8)^0180h,(3241)&7	;volsfr
	goto	u5891
	goto	u5890
u5891:
	movlb 0	; select bank0
	goto	l2375
u5890:
	line	11
	
l16568:	
	movlb 0	; select bank0
	movf	(eeprom_read@addr),w
	movlb 3	; select bank3
	movwf	(401)^0180h	;volatile
	clrf	(401+1)^0180h	;volatile
	movlw	(03Fh)
	andwf	(405)^0180h,f	;volsfr
	bsf	(3240/8)^0180h,(3240)&7	;volsfr
	clrc
	btfsc	(3240/8)^0180h,(3240)&7	;volsfr
	setc
	movlw	0
	addwfc	wreg,w
	movf	(403)^0180h,w	;volatile
	line	12
	
l2377:	
	return
	opt stack 0
GLOBAL	__end_of_eeprom_read
	__end_of_eeprom_read:
	signat	_eeprom_read,4217
	global	_crc16

;; *************** function _crc16 *****************
;; Defined at:
;;		line 75 in file "D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
;; Parameters:    Size  Location     Type
;;  puchMsg         2    3[BANK0 ] PTR volatile unsigned ch
;;		 -> uart1_tx_buf(80), uart1_rx_buf(80), 
;;  usDataLen       1    5[BANK0 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  uIndex          4    6[BANK0 ] unsigned long 
;;  uchCRCLo        1   11[BANK0 ] unsigned char 
;;  uchCRCHi        1   10[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    3[BANK0 ] unsigned int 
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text7,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
	line	75
global __ptext7
__ptext7:	;psect for function _crc16
psect	text7
	file	"D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
	line	75
	global	__size_of_crc16
	__size_of_crc16	equ	__end_of_crc16-_crc16
	
_crc16:	
;incstack = 0
	opt	stack 12
; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
	line	77
	
l19634:	
;Modbus.c: 77: unsigned char uchCRCHi = 0xFF ;
	movlw	(0FFh)
	movwf	(crc16@uchCRCHi)
	line	78
;Modbus.c: 78: unsigned char uchCRCLo = 0xFF ;
	movlw	(0FFh)
	movwf	(crc16@uchCRCLo)
	line	80
;Modbus.c: 79: unsigned long uIndex ;
;Modbus.c: 80: while (usDataLen--)
	goto	l19644
	line	82
	
l19636:	
;Modbus.c: 81: {
;Modbus.c: 82: uIndex = uchCRCHi ^ *puchMsg++ ;
	movf	(crc16@puchMsg),w
	movwf	fsr1l
	movf	(crc16@puchMsg+1),w
	movwf	fsr1h

	movf	indf1,w
	xorwf	(crc16@uchCRCHi),w
	movwf	(crc16@uIndex)
	clrf	(crc16@uIndex+1)
	clrf	(crc16@uIndex+2)
	clrf	(crc16@uIndex+3)

	
l19638:	
	incf	(crc16@puchMsg),f
	skipnz
	incf	(crc16@puchMsg+1),f
	line	83
	
l19640:	
;Modbus.c: 83: uchCRCHi = uchCRCLo ^ CRCHi[uIndex] ;
	movlw	low(_CRCHi|8000h)
	addwf	(crc16@uIndex),w
	movwf	fsr0l
	movlw	high(_CRCHi|8000h)
	addwfc	(crc16@uIndex+1),w
	movwf	fsr0h
	movf	indf0,w ;code access
	xorwf	(crc16@uchCRCLo),w
	movwf	(crc16@uchCRCHi)
	line	84
	
l19642:	
;Modbus.c: 84: uchCRCLo = CRCLo[uIndex] ;
	movlw	low(_CRCLo|8000h)
	addwf	(crc16@uIndex),w
	movwf	fsr0l
	movlw	high(_CRCLo|8000h)
	addwfc	(crc16@uIndex+1),w
	movwf	fsr0h
	movf	indf0,w ;code access
	movwf	(crc16@uchCRCLo)
	line	80
	
l19644:	
	decf	(crc16@usDataLen),f
	movf	((crc16@usDataLen)),w
	xorlw	0FFh&0ffh
	skipz
	goto	u9301
	goto	u9300
u9301:
	goto	l19636
u9300:
	line	86
	
l19646:	
;Modbus.c: 85: }
;Modbus.c: 86: return ( uchCRCHi<< 8 | uchCRCLo);
	movf	(crc16@uchCRCHi),w
	movwf	(?_crc16+1)
	clrf	(?_crc16)
	movf	(crc16@uchCRCLo),w
	iorwf	(?_crc16),f
	line	87
	
l1046:	
	return
	opt stack 0
GLOBAL	__end_of_crc16
	__end_of_crc16:
	signat	_crc16,8314
	global	___lmul

;; *************** function ___lmul *****************
;; Defined at:
;;		line 2 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      4    3[BANK0 ] unsigned long 
;;  multiplicand    4    7[BANK0 ] unsigned long 
;; Auto vars:     Size  Location     Type
;;  product         4   11[BANK0 ] unsigned long 
;; Return value:  Size  Location     Type
;;                  4    3[BANK0 ] unsigned long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_read_param_eeprom
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text8,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
	line	2
global __ptext8
__ptext8:	;psect for function ___lmul
psect	text8
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
	line	2
	global	__size_of___lmul
	__size_of___lmul	equ	__end_of___lmul-___lmul
	
___lmul:	
;incstack = 0
	opt	stack 11
; Regs used in ___lmul: [wreg+status,2+status,0]
	line	4
	
l20296:	
	clrf	(___lmul@product)
	clrf	(___lmul@product+1)
	clrf	(___lmul@product+2)
	clrf	(___lmul@product+3)
	line	6
	
l2773:	
	line	7
	btfss	(___lmul@multiplier),(0)&7
	goto	u10651
	goto	u10650
u10651:
	goto	l20300
u10650:
	line	8
	
l20298:	
	movf	(___lmul@multiplicand),w
	addwf	(___lmul@product),f
	movf	(___lmul@multiplicand+1),w
	addwfc	(___lmul@product+1),f
	movf	(___lmul@multiplicand+2),w
	addwfc	(___lmul@product+2),f
	movf	(___lmul@multiplicand+3),w
	addwfc	(___lmul@product+3),f
	line	9
	
l20300:	
	lslf	(___lmul@multiplicand),f
	rlf	(___lmul@multiplicand+1),f
	rlf	(___lmul@multiplicand+2),f
	rlf	(___lmul@multiplicand+3),f
	line	10
	
l20302:	
	lsrf	(___lmul@multiplier+3),f
	rrf	(___lmul@multiplier+2),f
	rrf	(___lmul@multiplier+1),f
	rrf	(___lmul@multiplier),f
	line	11
	movf	(___lmul@multiplier+3),w
	iorwf	(___lmul@multiplier+2),w
	iorwf	(___lmul@multiplier+1),w
	iorwf	(___lmul@multiplier),w
	skipz
	goto	u10661
	goto	u10660
u10661:
	goto	l2773
u10660:
	line	12
	
l20304:	
	movf	(___lmul@product+3),w
	movwf	(?___lmul+3)
	movf	(___lmul@product+2),w
	movwf	(?___lmul+2)
	movf	(___lmul@product+1),w
	movwf	(?___lmul+1)
	movf	(___lmul@product),w
	movwf	(?___lmul)

	line	13
	
l2776:	
	return
	opt stack 0
GLOBAL	__end_of___lmul
	__end_of___lmul:
	signat	___lmul,8316
	global	___lbtoft

;; *************** function ___lbtoft *****************
;; Defined at:
;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtoft.c"
;; Parameters:    Size  Location     Type
;;  c               1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  c               1   15[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  3   11[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 17/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_read_param_eeprom
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text9,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtoft.c"
	line	27
global __ptext9
__ptext9:	;psect for function ___lbtoft
psect	text9
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtoft.c"
	line	27
	global	__size_of___lbtoft
	__size_of___lbtoft	equ	__end_of___lbtoft-___lbtoft
	
___lbtoft:	
;incstack = 0
	opt	stack 10
; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
;___lbtoft@c stored from wreg
	movlb 0	; select bank0
	movwf	(___lbtoft@c)
	line	29
	
l25266:	
	movf	(___lbtoft@c),w
	movwf	(___ftpack@arg)
	clrf	(___ftpack@arg+1)
	clrf	(___ftpack@arg+2)
	movlw	(08Eh)
	movwf	(___ftpack@exp)
	clrf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___lbtoft)
	movf	(1+(?___ftpack)),w
	movwf	(?___lbtoft+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___lbtoft+2)
	line	30
	
l2742:	
	return
	opt stack 0
GLOBAL	__end_of___lbtoft
	__end_of___lbtoft:
	signat	___lbtoft,4219
	global	_handle_task_process

;; *************** function _handle_task_process *****************
;; Defined at:
;;		line 1583 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		_Disable_Bost_Pwm1
;;		_Disable_Bost_Pwm2
;;		_Disable_Buck_Pwm
;;		_Enable_Bost_Pwm1
;;		_Enable_Bost_Pwm2
;;		_Set_Bost_Pwm1_Duty
;;		_Set_Bost_Pwm2_Duty
;;		_Set_Buck_Pwm_Duty
;;		___ftadd
;;		___ftdiv
;;		___ftmul
;;		___fttol
;;		_delay_ms
;;		_eeprom_write
;;		_pid_init
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text10,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	1583
global __ptext10
__ptext10:	;psect for function _handle_task_process
psect	text10
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	1583
	global	__size_of_handle_task_process
	__size_of_handle_task_process	equ	__end_of_handle_task_process-_handle_task_process
	
_handle_task_process:	
;incstack = 0
	opt	stack 11
; Regs used in _handle_task_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
	line	1587
	
l23874:	
;task.c: 1587: if(handle_short1_flag==0x01)
	decf	(_handle_short1_flag)^0100h,w
	skipz
	goto	u14631
	goto	u14630
u14631:
	goto	l23878
u14630:
	line	1589
	
l23876:	
;task.c: 1591: load1_voltage_status=0x01;
	movlb 5	; select bank5
	clrf	(_over_load1_time_count)^0280h
	clrf	(_over_load1_time_count+1)^0280h
	line	1593
;task.c: 1595: discharge_led_status=0x00;
	movlb 2	; select bank2
	clrf	(_handle_short1_flag)^0100h
	line	1597
;task.c: 1597: while(1);
	
l1991:	
	
l1992:	
	goto	l1991
	line	1600
	
l23878:	
;task.c: 1598: }
;task.c: 1600: if(handle_short2_flag==0x01)
	decf	(_handle_short2_flag)^0100h,w
	skipz
	goto	u14641
	goto	u14640
u14641:
	goto	l23882
u14640:
	line	1602
	
l23880:	
;task.c: 1604: load2_voltage_status=0x01;
	movlb 5	; select bank5
	clrf	(_over_load2_time_count)^0280h
	clrf	(_over_load2_time_count+1)^0280h
	line	1606
;task.c: 1608: discharge_led_status=0x00;
	movlb 2	; select bank2
	clrf	(_handle_short2_flag)^0100h
	line	1610
;task.c: 1610: while(1);
	
l1995:	
	
l1996:	
	goto	l1995
	line	1613
	
l23882:	
;task.c: 1611: }
;task.c: 1613: if(work_mode==0x00)
	movlb 1	; select bank1
	movf	(_work_mode)^080h,f
	skipz
	goto	u14651
	goto	u14650
u14651:
	goto	l23906
u14650:
	line	1615
	
l23884:	
;task.c: 1614: {
;task.c: 1615: if((pv_voltage_status==0x01)&&(battery_voltage_status==0x01)&&(sys_temper_flag==0x01)&&(mcu_temp_index<0x03))
	movlb 2	; select bank2
	decf	(_pv_voltage_status)^0100h,w
	skipz
	goto	u14661
	goto	u14660
u14661:
	goto	l23894
u14660:
	
l23886:	
	decf	(_battery_voltage_status)^0100h,w
	skipz
	goto	u14671
	goto	u14670
u14671:
	goto	l23894
u14670:
	
l23888:	
	decf	(_sys_temper_flag)^0100h,w
	skipz
	goto	u14681
	goto	u14680
u14681:
	goto	l23894
u14680:
	
l23890:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_mcu_temp_index)^080h,w
	skipnc
	goto	u14691
	goto	u14690
u14691:
	goto	l23894
u14690:
	line	1618
	
l23892:	
;task.c: 1616: {
;task.c: 1618: system_status = 0x01;
	clrf	(_system_status)^080h
	incf	(_system_status)^080h,f
	line	1620
;task.c: 1620: }
	goto	l24252
	line	1621
	
l23894:	
;task.c: 1621: else if((pv_voltage_status==0x02)&&(battery_voltage_status==0x01)&&(sys_temper_flag==0x01)&&(mcu_temp_index<0x03))
	movlb 2	; select bank2
	movf	(_pv_voltage_status)^0100h,w
	xorlw	02h&0ffh
	skipz
	goto	u14701
	goto	u14700
u14701:
	goto	l23904
u14700:
	
l23896:	
	decf	(_battery_voltage_status)^0100h,w
	skipz
	goto	u14711
	goto	u14710
u14711:
	goto	l23904
u14710:
	
l23898:	
	decf	(_sys_temper_flag)^0100h,w
	skipz
	goto	u14721
	goto	u14720
u14721:
	goto	l23904
u14720:
	
l23900:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_mcu_temp_index)^080h,w
	skipnc
	goto	u14731
	goto	u14730
u14731:
	goto	l23904
u14730:
	line	1624
	
l23902:	
;task.c: 1622: {
;task.c: 1624: system_status = 0x02;
	movlw	(02h)
	movwf	(_system_status)^080h
	line	1626
;task.c: 1626: }
	goto	l24252
	line	1629
	
l23904:	
;task.c: 1627: else
;task.c: 1628: {
;task.c: 1629: system_status = 0x00;
	movlb 1	; select bank1
	clrf	(_system_status)^080h
	goto	l24252
	line	1632
	
l23906:	
;task.c: 1632: else if(work_mode==0x01)
	decf	(_work_mode)^080h,w
	skipz
	goto	u14741
	goto	u14740
u14741:
	goto	l23910
u14740:
	goto	l23892
	line	1636
	
l23910:	
;task.c: 1636: else if(work_mode==0x02)
	movf	(_work_mode)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14751
	goto	u14750
u14751:
	goto	l23904
u14750:
	goto	l23902
	line	1649
	
l23916:	
;task.c: 1655: discharge_led_status=0x00;
	movlb 2	; select bank2
	movf	(_nop_index)^0100h,f
	skipz
	goto	u14761
	goto	u14760
u14761:
	goto	l23990
u14760:
	line	1657
	
l23918:	
;task.c: 1657: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	1659
	
l23920:	
;task.c: 1659: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	1661
	
l23922:	
;task.c: 1661: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	1662
	
l23924:	
;task.c: 1662: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1664
	
l23926:	
;task.c: 1664: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1665
	
l23928:	
;task.c: 1665: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1667
	
l23930:	
;task.c: 1667: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	1668
	
l23932:	
;task.c: 1674: pv_prev=0;
	bcf	(270)^0100h,0	;volatile
	line	1676
	
l23934:	
;task.c: 1676: buck_pwm_value=0;
	movlb 1	; select bank1
	clrf	(_buck_pwm_value)^080h
	clrf	(_buck_pwm_value+1)^080h
	line	1678
	
l23936:	
;task.c: 1678: bost_pwm1_value=0;
	clrf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	1679
	
l23938:	
;task.c: 1679: bost_pwm2_value=0;
	clrf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1681
	
l23940:	
;task.c: 1681: PWM =50;
	movlw	0x0
	movwf	(_PWM)^080h
	movlw	0x48
	movwf	(_PWM+1)^080h
	movlw	0x42
	movwf	(_PWM+2)^080h
	line	1682
	
l23942:	
;task.c: 1682: PWM2 =50;
	movlw	0x0
	movlb 3	; select bank3
	movwf	(_PWM2)^0180h
	movlw	0x48
	movwf	(_PWM2+1)^0180h
	movlw	0x42
	movwf	(_PWM2+2)^0180h
	line	1684
	
l23944:	
;task.c: 1684: pid_init ( &PID_CC_charge);
	movlw	low(_PID_CC_charge)
	movlb 0	; select bank0
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1686
	
l23946:	
;task.c: 1686: pid_init ( &PID_CV_charge);
	movlw	low(_PID_CV_charge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CV_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1688
	
l23948:	
;task.c: 1688: pid_init ( &PID_CC_discharge);
	movlw	low(_PID_CC_discharge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1689
	
l23950:	
;task.c: 1689: pid_init ( &PID_CC2_discharge);
	movlw	low(_PID_CC2_discharge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CC2_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1693
	
l23952:	
;task.c: 1693: PID_CC_charge.Proportion = 0.001;
	movlw	0x12
	movlb 6	; select bank6
	movwf	0+(_PID_CC_charge)^0300h+03h
	movlw	0x83
	movwf	1+(_PID_CC_charge)^0300h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_charge)^0300h+03h
	line	1695
	
l23954:	
;task.c: 1695: PID_CC_charge.Integral = 0;
	clrf	0+(_PID_CC_charge)^0300h+06h
	clrf	1+(_PID_CC_charge)^0300h+06h
	clrf	2+(_PID_CC_charge)^0300h+06h
	line	1697
	
l23956:	
;task.c: 1697: PID_CC_charge.Derivative = 0;
	clrf	0+(_PID_CC_charge)^0300h+09h
	clrf	1+(_PID_CC_charge)^0300h+09h
	clrf	2+(_PID_CC_charge)^0300h+09h
	line	1699
	
l23958:	
;task.c: 1699: PID_CC_charge.SetPoint = 5.0*15.0;
	movlw	0x0
	movwf	(_PID_CC_charge)^0300h
	movlw	0x96
	movwf	(_PID_CC_charge+1)^0300h
	movlw	0x42
	movwf	(_PID_CC_charge+2)^0300h
	line	1704
	
l23960:	
;task.c: 1704: PID_CV_charge.Proportion = 0.001;
	movlw	0x12
	movlb 5	; select bank5
	movwf	0+(_PID_CV_charge)^0280h+03h
	movlw	0x83
	movwf	1+(_PID_CV_charge)^0280h+03h
	movlw	0x3a
	movwf	2+(_PID_CV_charge)^0280h+03h
	line	1706
	
l23962:	
;task.c: 1706: PID_CV_charge.Integral = 0;
	clrf	0+(_PID_CV_charge)^0280h+06h
	clrf	1+(_PID_CV_charge)^0280h+06h
	clrf	2+(_PID_CV_charge)^0280h+06h
	line	1708
	
l23964:	
;task.c: 1708: PID_CV_charge.Derivative = 0;
	clrf	0+(_PID_CV_charge)^0280h+09h
	clrf	1+(_PID_CV_charge)^0280h+09h
	clrf	2+(_PID_CV_charge)^0280h+09h
	line	1710
	
l23966:	
;task.c: 1710: PID_CV_charge.SetPoint = dianchi_cv_level+1;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlw	0x80
	movwf	(___ftadd@f1+1)
	movlw	0x3f
	movwf	(___ftadd@f1+2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge)^0280h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+2)^0280h
	line	1714
	
l23968:	
;task.c: 1714: PID_CC_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 3	; select bank3
	movwf	0+(_PID_CC_discharge)^0180h+03h
	movlw	0x83
	movwf	1+(_PID_CC_discharge)^0180h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_discharge)^0180h+03h
	line	1716
	
l23970:	
;task.c: 1716: PID_CC_discharge.Integral = 0;
	clrf	0+(_PID_CC_discharge)^0180h+06h
	clrf	1+(_PID_CC_discharge)^0180h+06h
	clrf	2+(_PID_CC_discharge)^0180h+06h
	line	1718
	
l23972:	
;task.c: 1718: PID_CC_discharge.Derivative = 0;
	clrf	0+(_PID_CC_discharge)^0180h+09h
	clrf	1+(_PID_CC_discharge)^0180h+09h
	clrf	2+(_PID_CC_discharge)^0180h+09h
	line	1720
	
l23974:	
;task.c: 1720: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	1722
	
l23976:	
;task.c: 1722: PID_CC2_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 4	; select bank4
	movwf	0+(_PID_CC2_discharge)^0200h+03h
	movlw	0x83
	movwf	1+(_PID_CC2_discharge)^0200h+03h
	movlw	0x3a
	movwf	2+(_PID_CC2_discharge)^0200h+03h
	line	1724
	
l23978:	
;task.c: 1724: PID_CC2_discharge.Integral = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+06h
	clrf	1+(_PID_CC2_discharge)^0200h+06h
	clrf	2+(_PID_CC2_discharge)^0200h+06h
	line	1726
	
l23980:	
;task.c: 1726: PID_CC2_discharge.Derivative = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+09h
	clrf	1+(_PID_CC2_discharge)^0200h+09h
	clrf	2+(_PID_CC2_discharge)^0200h+09h
	line	1728
	
l23982:	
;task.c: 1728: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(_handle_task_process$3197)
	movf	(1+(?___ftmul)),w
	movwf	(_handle_task_process$3197+1)
	movf	(2+(?___ftmul)),w
	movwf	(_handle_task_process$3197+2)
	
l23984:	
;task.c: 1728: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlw	0x9a
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movf	(_handle_task_process$3197),w
	movwf	(___ftmul@f2)
	movf	(_handle_task_process$3197+1),w
	movwf	(___ftmul@f2+1)
	movf	(_handle_task_process$3197+2),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1730
;task.c: 1730: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	1732
;task.c: 1732: ms_cnt=0x00;
	movlb 4	; select bank4
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	1733
;task.c: 1733: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	1734
;task.c: 1734: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	1735
;task.c: 1735: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	1736
;task.c: 1736: limit_power_pid_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	line	1737
;task.c: 1737: Adjust_Pout_Flag=0x00;
	movlb 0	; select bank0
	clrf	(_Adjust_Pout_Flag)
	line	1738
	
l23986:	
;task.c: 1738: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	1740
	
l23988:	
;task.c: 1740: nop_index=0x01;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	incf	(_nop_index)^0100h,f
	line	1742
;task.c: 1742: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	1743
;task.c: 1743: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	1745
;task.c: 1745: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	1748
	
l23990:	
;task.c: 1746: }
;task.c: 1748: if(device_status==0x00 && nop_index==0x01)
	movlb 1	; select bank1
	movf	(_device_status)^080h,f
	skipz
	goto	u14771
	goto	u14770
u14771:
	goto	l2019
u14770:
	
l23992:	
	movlb 2	; select bank2
	decf	(_nop_index)^0100h,w
	skipz
	goto	u14781
	goto	u14780
u14781:
	goto	l2019
u14780:
	line	1751
	
l23994:	
;task.c: 1749: {
;task.c: 1751: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	1752
	
l23996:	
;task.c: 1752: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	1753
	
l23998:	
;task.c: 1753: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	1754
	
l24000:	
;task.c: 1754: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	1755
;task.c: 1755: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1756
	
l24002:	
;task.c: 1756: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1757
	
l24004:	
;task.c: 1757: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1758
	
l24006:	
;task.c: 1758: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1760
	
l24008:	
;task.c: 1760: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	1761
;task.c: 1761: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	1762
	
l24010:	
;task.c: 1762: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	1763
;task.c: 1763: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	1765
	
l24012:	
;task.c: 1765: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1766
	
l24014:	
;task.c: 1766: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1768
	
l24016:	
;task.c: 1768: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1770
	
l24018:	
;task.c: 1770: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1771
	
l24020:	
;task.c: 1771: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1773
	
l24022:	
;task.c: 1773: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1775
	
l24024:	
;task.c: 1775: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1776
	
l24026:	
;task.c: 1776: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1778
	
l24028:	
;task.c: 1778: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1780
	
l24030:	
;task.c: 1780: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1781
	
l24032:	
;task.c: 1781: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1783
	
l24034:	
;task.c: 1783: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1785
	
l24036:	
;task.c: 1785: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1786
	
l24038:	
;task.c: 1786: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1788
	
l24040:	
;task.c: 1788: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1790
	
l24042:	
;task.c: 1790: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1791
	
l24044:	
;task.c: 1791: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1793
	
l24046:	
;task.c: 1793: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	1794
	
l24048:	
;task.c: 1794: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	1795
;task.c: 1795: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1796
	
l24050:	
;task.c: 1796: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1797
	
l24052:	
;task.c: 1797: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1798
	
l24054:	
;task.c: 1798: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1800
	
l24056:	
;task.c: 1800: nop_index=0x02;
	movlw	(02h)
	movlb 2	; select bank2
	movwf	(_nop_index)^0100h
	line	1802
	
l24058:	
;task.c: 1802: key1_index=0x00;
	clrf	(_key1_index)^0100h
	line	1804
	
l24060:	
;task.c: 1804: (LATAbits.LATA6 = 0x00);
	bcf	(268)^0100h,6	;volatile
	line	1806
	
l24062:	
;task.c: 1806: open_sleep_time = 0x01;
	clrf	(_open_sleep_time)^0100h
	incf	(_open_sleep_time)^0100h,f
	line	1808
# 1808 "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
sleep ;# 
psect	text10
	line	1810
	
l24064:	
;task.c: 1810: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	1811
	
l24066:	
;task.c: 1811: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	1812
	
l24068:	
;task.c: 1812: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	goto	l2019
	line	1820
	
l24070:	
;task.c: 1821: {
;task.c: 1823: discharge_led_status=0x01;
	decf	(_charge_index)^080h,w
	skipz
	goto	u14791
	goto	u14790
u14791:
	goto	l2019
u14790:
	line	1826
	
l24072:	
;task.c: 1826: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	1827
;task.c: 1827: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1829
	
l24074:	
;task.c: 1829: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1830
	
l24076:	
;task.c: 1830: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	1832
	
l24078:	
;task.c: 1832: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	1833
	
l24080:	
;task.c: 1833: (LATCbits.LATC0 = 0x00);
	bcf	(270)^0100h,0	;volatile
	line	1835
;task.c: 1835: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	1837
	
l24082:	
;task.c: 1837: PWM =50;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0x48
	movwf	(_PWM+1)^080h
	movlw	0x42
	movwf	(_PWM+2)^080h
	line	1839
	
l24084:	
;task.c: 1839: buck_pwm_value=50;
	movlw	032h
	movwf	(_buck_pwm_value)^080h
	clrf	(_buck_pwm_value+1)^080h
	line	1841
	
l24086:	
;task.c: 1841: Set_Buck_Pwm_Duty(buck_pwm_value);
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty)
	fcall	_Set_Buck_Pwm_Duty
	line	1859
	
l24088:	
;task.c: 1859: pid_init ( &PID_CC_charge);
	movlw	low(_PID_CC_charge)
	movlb 0	; select bank0
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1861
	
l24090:	
;task.c: 1861: pid_init ( &PID_CV_charge);
	movlw	low(_PID_CV_charge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CV_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1864
;task.c: 1864: PID_CC_charge.Proportion = 0.001;
	movlw	0x12
	movlb 6	; select bank6
	movwf	0+(_PID_CC_charge)^0300h+03h
	movlw	0x83
	movwf	1+(_PID_CC_charge)^0300h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_charge)^0300h+03h
	line	1866
	
l24092:	
;task.c: 1866: PID_CC_charge.Integral = 0;
	clrf	0+(_PID_CC_charge)^0300h+06h
	clrf	1+(_PID_CC_charge)^0300h+06h
	clrf	2+(_PID_CC_charge)^0300h+06h
	line	1868
	
l24094:	
;task.c: 1868: PID_CC_charge.Derivative = 0;
	clrf	0+(_PID_CC_charge)^0300h+09h
	clrf	1+(_PID_CC_charge)^0300h+09h
	clrf	2+(_PID_CC_charge)^0300h+09h
	line	1870
;task.c: 1870: PID_CC_charge.SetPoint = 5.0*15.0;
	movlw	0x0
	movwf	(_PID_CC_charge)^0300h
	movlw	0x96
	movwf	(_PID_CC_charge+1)^0300h
	movlw	0x42
	movwf	(_PID_CC_charge+2)^0300h
	line	1874
;task.c: 1874: PID_CV_charge.Proportion = 0.001;
	movlw	0x12
	movlb 5	; select bank5
	movwf	0+(_PID_CV_charge)^0280h+03h
	movlw	0x83
	movwf	1+(_PID_CV_charge)^0280h+03h
	movlw	0x3a
	movwf	2+(_PID_CV_charge)^0280h+03h
	line	1876
	
l24096:	
;task.c: 1876: PID_CV_charge.Integral = 0;
	clrf	0+(_PID_CV_charge)^0280h+06h
	clrf	1+(_PID_CV_charge)^0280h+06h
	clrf	2+(_PID_CV_charge)^0280h+06h
	line	1878
	
l24098:	
;task.c: 1878: PID_CV_charge.Derivative = 0;
	clrf	0+(_PID_CV_charge)^0280h+09h
	clrf	1+(_PID_CV_charge)^0280h+09h
	clrf	2+(_PID_CV_charge)^0280h+09h
	line	1880
	
l24100:	
;task.c: 1885: P_last=0;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlw	0x80
	movwf	(___ftadd@f1+1)
	movlw	0x3f
	movwf	(___ftadd@f1+2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge)^0280h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+2)^0280h
	line	1887
	
l24102:	
;task.c: 1887: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	1889
	
l24104:	
;task.c: 1889: ms_cnt=0x00;
	movlb 4	; select bank4
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	1890
	
l24106:	
;task.c: 1890: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	1891
	
l24108:	
;task.c: 1891: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	1892
	
l24110:	
;task.c: 1892: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	1893
	
l24112:	
;task.c: 1893: limit_power_pid_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	line	1894
	
l24114:	
;task.c: 1894: Adjust_Pout_Flag=0x00;
	movlb 0	; select bank0
	clrf	(_Adjust_Pout_Flag)
	line	1895
	
l24116:	
;task.c: 1895: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	1896
	
l24118:	
;task.c: 1896: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	1898
	
l24120:	
;task.c: 1898: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	1899
	
l24122:	
;task.c: 1899: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	1901
	
l24124:	
;task.c: 1901: charge_index=0x02;
	movlw	(02h)
	movwf	(_charge_index)^080h
	line	1904
	
l24126:	
;task.c: 1904: today_index = today_index+1;
	movlb 0	; select bank0
	incf	(_today_index),f
	line	1906
	
l24128:	
;task.c: 1906: today_index = today_index%8;
	movlw	(07h)
	andwf	(_today_index),f
	line	1908
	
l24130:	
;task.c: 1908: eeprom_write(0x11,(unsigned char)today_index);
	movf	(_today_index),w
	movwf	(eeprom_write@value)
	movlw	(011h)
	fcall	_eeprom_write
	line	1910
;task.c: 1910: bt_00_lv = b_v;
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv)^0180h
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+1)^0180h
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+2)^0180h
	goto	l2019
	line	1917
	
l24132:	
;task.c: 1918: {
;task.c: 1920: charge_led_status=0x01;
	movf	(_discharge1_index)^080h,f
	skipz
	goto	u14801
	goto	u14800
u14801:
	goto	l24190
u14800:
	line	1922
	
l24134:	
;task.c: 1922: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	1924
	
l24136:	
;task.c: 1924: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	1926
	
l24138:	
;task.c: 1926: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	1928
	
l24140:	
;task.c: 1928: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	1930
;task.c: 1930: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	1932
	
l24142:	
;task.c: 1932: PWM =50;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0x48
	movwf	(_PWM+1)^080h
	movlw	0x42
	movwf	(_PWM+2)^080h
	line	1934
	
l24144:	
;task.c: 1934: bost_pwm1_value=50;
	movlw	032h
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	1936
	
l24146:	
;task.c: 1936: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	1958
	
l24148:	
;task.c: 1958: pid_init ( &PID_CC_discharge);
	movlw	low(_PID_CC_discharge)
	movlb 0	; select bank0
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	1961
	
l24150:	
;task.c: 1961: PID_CC_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 3	; select bank3
	movwf	0+(_PID_CC_discharge)^0180h+03h
	movlw	0x83
	movwf	1+(_PID_CC_discharge)^0180h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_discharge)^0180h+03h
	line	1963
	
l24152:	
;task.c: 1963: PID_CC_discharge.Integral = 0;
	clrf	0+(_PID_CC_discharge)^0180h+06h
	clrf	1+(_PID_CC_discharge)^0180h+06h
	clrf	2+(_PID_CC_discharge)^0180h+06h
	line	1965
	
l24154:	
;task.c: 1965: PID_CC_discharge.Derivative = 0;
	clrf	0+(_PID_CC_discharge)^0180h+09h
	clrf	1+(_PID_CC_discharge)^0180h+09h
	clrf	2+(_PID_CC_discharge)^0180h+09h
	line	1967
	
l24156:	
;task.c: 1967: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	1969
	
l24158:	
;task.c: 1969: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	1971
	
l24160:	
;task.c: 1971: ms_cnt=0x00;
	movlb 4	; select bank4
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	1972
	
l24162:	
;task.c: 1972: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	1973
	
l24164:	
;task.c: 1973: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	1974
	
l24166:	
;task.c: 1974: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	1975
	
l24168:	
;task.c: 1975: limit_power_pid_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	line	1976
	
l24170:	
;task.c: 1976: Adjust_Pout_Flag=0x00;
	movlb 0	; select bank0
	clrf	(_Adjust_Pout_Flag)
	line	1977
	
l24172:	
;task.c: 1977: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	1978
	
l24174:	
;task.c: 1978: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	1980
	
l24176:	
;task.c: 1980: discharge1_index=0x01;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	incf	(_discharge1_index)^080h,f
	line	1982
	
l24178:	
;task.c: 1982: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	1985
	
l24180:	
;task.c: 1985: bt_00_hv = b_v;
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv)^0180h
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+1)^0180h
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+2)^0180h
	line	1987
	
l24182:	
;task.c: 1987: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/256));
	movf	(_bt_00_hv)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_write
	line	1989
	
l24184:	
;task.c: 1989: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
	movf	(_bt_00_hv)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_write
	line	1991
	
l24186:	
;task.c: 1991: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/256));
	movf	(_bt_00_lv)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_write
	line	1993
	
l24188:	
;task.c: 1993: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
	movf	(_bt_00_lv)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_write
	line	1999
	
l24190:	
;task.c: 2000: {
;task.c: 2002: charge_led_status=0x01;
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,f
	skipz
	goto	u14811
	goto	u14810
u14811:
	goto	l2019
u14810:
	line	2005
	
l24192:	
;task.c: 2005: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	2007
	
l24194:	
;task.c: 2007: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	2009
	
l24196:	
;task.c: 2009: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	2011
	
l24198:	
;task.c: 2011: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	2013
;task.c: 2013: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	2015
	
l24200:	
;task.c: 2015: PWM2 =50;
	movlw	0x0
	movlb 3	; select bank3
	movwf	(_PWM2)^0180h
	movlw	0x48
	movwf	(_PWM2+1)^0180h
	movlw	0x42
	movwf	(_PWM2+2)^0180h
	line	2017
	
l24202:	
;task.c: 2017: bost_pwm2_value=50;
	movlw	032h
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	2019
	
l24204:	
;task.c: 2019: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	2041
	
l24206:	
;task.c: 2041: pid_init ( &PID_CC2_discharge);
	movlw	low(_PID_CC2_discharge)
	movlb 0	; select bank0
	movwf	(pid_init@pp)
	movlw	high(_PID_CC2_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	2044
	
l24208:	
;task.c: 2044: PID_CC2_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 4	; select bank4
	movwf	0+(_PID_CC2_discharge)^0200h+03h
	movlw	0x83
	movwf	1+(_PID_CC2_discharge)^0200h+03h
	movlw	0x3a
	movwf	2+(_PID_CC2_discharge)^0200h+03h
	line	2046
	
l24210:	
;task.c: 2046: PID_CC2_discharge.Integral = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+06h
	clrf	1+(_PID_CC2_discharge)^0200h+06h
	clrf	2+(_PID_CC2_discharge)^0200h+06h
	line	2048
	
l24212:	
;task.c: 2048: PID_CC2_discharge.Derivative = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+09h
	clrf	1+(_PID_CC2_discharge)^0200h+09h
	clrf	2+(_PID_CC2_discharge)^0200h+09h
	line	2050
	
l24214:	
;task.c: 2050: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(_handle_task_process$3197)
	movf	(1+(?___ftmul)),w
	movwf	(_handle_task_process$3197+1)
	movf	(2+(?___ftmul)),w
	movwf	(_handle_task_process$3197+2)
	
l24216:	
;task.c: 2050: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlw	0x9a
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movf	(_handle_task_process$3197),w
	movwf	(___ftmul@f2)
	movf	(_handle_task_process$3197+1),w
	movwf	(___ftmul@f2+1)
	movf	(_handle_task_process$3197+2),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	2052
	
l24218:	
;task.c: 2052: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	2054
	
l24220:	
;task.c: 2054: ms_cnt=0x00;
	movlb 4	; select bank4
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	2055
	
l24222:	
;task.c: 2055: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	2056
	
l24224:	
;task.c: 2056: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	2057
	
l24226:	
;task.c: 2057: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	2058
	
l24228:	
;task.c: 2058: limit_power_pid_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	line	2059
	
l24230:	
;task.c: 2059: Adjust_Pout_Flag=0x00;
	movlb 0	; select bank0
	clrf	(_Adjust_Pout_Flag)
	line	2060
	
l24232:	
;task.c: 2060: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	2061
	
l24234:	
;task.c: 2061: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	2063
	
l24236:	
;task.c: 2063: discharge2_index=0x01;
	movlb 1	; select bank1
	clrf	(_discharge2_index)^080h
	incf	(_discharge2_index)^080h,f
	line	2065
	
l24238:	
;task.c: 2065: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	2068
	
l24240:	
;task.c: 2068: bt_00_hv = b_v;
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv)^0180h
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+1)^0180h
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_hv+2)^0180h
	line	2070
	
l24242:	
;task.c: 2070: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/256));
	movf	(_bt_00_hv)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	012h
	fcall	_eeprom_write
	line	2072
	
l24244:	
;task.c: 2072: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
	movf	(_bt_00_hv)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_hv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	013h
	fcall	_eeprom_write
	line	2074
	
l24246:	
;task.c: 2074: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/256));
	movf	(_bt_00_lv)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x80
	movwf	(___ftdiv@f2+1)
	movlw	0x43
	movwf	(___ftdiv@f2+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftdiv)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	014h
	fcall	_eeprom_write
	line	2076
	
l24248:	
;task.c: 2076: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
	movf	(_bt_00_lv)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 3	; select bank3
	movf	(_bt_00_lv+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	0+(((0+(?___fttol)))),w
	movwf	(eeprom_write@value)
	movf	(_today_index),w
	addlw	08h
	andlw	07h
	addwf	wreg,w
	addwf	wreg,w
	addlw	015h
	fcall	_eeprom_write
	goto	l2019
	line	1646
	
l24252:	
	movf	(_system_status)^080h,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
; direct_byte           12     6 (fixed)
; jumptable            260     6 (fixed)
;	Chosen strategy is simple_byte

	opt asmopt_off
	xorlw	0^0	; case 0
	skipnz
	goto	l23916
	xorlw	1^0	; case 1
	skipnz
	goto	l24070
	xorlw	2^1	; case 2
	skipnz
	goto	l24132
	goto	l2019
	opt asmopt_on

	line	2089
	
l2019:	
	return
	opt stack 0
GLOBAL	__end_of_handle_task_process
	__end_of_handle_task_process:
	signat	_handle_task_process,88
	global	_handle_ad_loop

;; *************** function _handle_ad_loop *****************
;; Defined at:
;;		line 132 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  data_cc_var     3    3[BANK5 ] float 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 1F/2
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       6       0       0       0       0       0       0       0
;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       2       0       0       0       0       6       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_Disable_Bost_Pwm1
;;		_Disable_Bost_Pwm2
;;		_Disable_Buck_Pwm
;;		_Enable_Bost_Pwm1
;;		_Enable_Bost_Pwm2
;;		_Enable_Buck_Pwm
;;		_Mppt_Charge
;;		_Set_Bost_Pwm1_Duty
;;		_Set_Bost_Pwm2_Duty
;;		_Set_Buck_Pwm_Duty
;;		___awtoft
;;		___ftadd
;;		___ftdiv
;;		___ftge
;;		___ftmul
;;		___fttol
;;		___lldiv
;;		___lwdiv
;;		___lwtoft
;;		___wmul
;;		_delay_ms
;;		_pid_calc
;;		_pid_calc_2
;;		_start_ad_convert
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text11,local,class=CODE,delta=2,merge=1
	line	132
global __ptext11
__ptext11:	;psect for function _handle_ad_loop
psect	text11
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	132
	global	__size_of_handle_ad_loop
	__size_of_handle_ad_loop	equ	__end_of_handle_ad_loop-_handle_ad_loop
	
_handle_ad_loop:	
;incstack = 0
	opt	stack 8
; Regs used in _handle_ad_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
	line	138
	
l22730:	
;task.c: 135: float data_cc_var;
;task.c: 138: if(handle_an1_process_flag==0x01)
	decf	(_handle_an1_process_flag)^0100h,w
	skipz
	goto	u12171
	goto	u12170
u12171:
	goto	l22830
u12170:
	line	141
	
l22732:	
;task.c: 139: {
;task.c: 141: temperature_value=start_ad_convert(0b00001);
	movlw	(01h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_temperature_value+1)^0100h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_temperature_value)^0100h
	line	143
	
l22734:	
;task.c: 143: if((temperature_value>4)&&(temperature_value<605))
	movlw	high(05h)
	subwf	(_temperature_value+1)^0100h,w
	movlw	low(05h)
	skipnz
	subwf	(_temperature_value)^0100h,w
	skipc
	goto	u12181
	goto	u12180
u12181:
	goto	l22748
u12180:
	
l22736:	
	movlw	high(025Dh)
	subwf	(_temperature_value+1)^0100h,w
	movlw	low(025Dh)
	skipnz
	subwf	(_temperature_value)^0100h,w
	skipnc
	goto	u12191
	goto	u12190
u12191:
	goto	l22748
u12190:
	line	145
	
l22738:	
;task.c: 144: {
;task.c: 145: temper_time_count++;
	incf	(_temper_time_count)^0100h,f
	line	147
	
l22740:	
;task.c: 147: over_temper_time_count=0x00;
	movlb 3	; select bank3
	clrf	(_over_temper_time_count)^0180h
	line	149
	
l22742:	
;task.c: 149: if(temper_time_count>=10)
	movlw	(0Ah)
	movlb 2	; select bank2
	subwf	(_temper_time_count)^0100h,w
	skipc
	goto	u12201
	goto	u12200
u12201:
	goto	l22756
u12200:
	line	151
	
l22744:	
;task.c: 150: {
;task.c: 151: temper_time_count=0x00;
	clrf	(_temper_time_count)^0100h
	line	153
	
l22746:	
;task.c: 153: sys_temper_flag=0x01;
	clrf	(_sys_temper_flag)^0100h
	incf	(_sys_temper_flag)^0100h,f
	goto	l22756
	line	158
	
l22748:	
;task.c: 156: else
;task.c: 157: {
;task.c: 158: over_temper_time_count++;
	movlb 3	; select bank3
	incf	(_over_temper_time_count)^0180h,f
	line	160
	
l22750:	
;task.c: 160: temper_time_count=0x00;
	movlb 2	; select bank2
	clrf	(_temper_time_count)^0100h
	line	162
	
l22752:	
;task.c: 162: if(over_temper_time_count>=10)
	movlw	(0Ah)
	movlb 3	; select bank3
	subwf	(_over_temper_time_count)^0180h,w
	skipc
	goto	u12211
	goto	u12210
u12211:
	goto	l22756
u12210:
	line	164
	
l22754:	
;task.c: 163: {
;task.c: 164: over_temper_time_count=0x00;
	clrf	(_over_temper_time_count)^0180h
	line	166
;task.c: 166: sys_temper_flag=0x00;
	movlb 2	; select bank2
	clrf	(_sys_temper_flag)^0100h
	line	171
	
l22756:	
;task.c: 167: }
;task.c: 168: }
;task.c: 171: ADCON1bits.ADPREF =0b00;
	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
	movlb 1	; select bank1
	andwf	(158)^080h,f	;volatile
	line	173
	
l22758:	
;task.c: 173: mcu_value=start_ad_convert(0b11101);
	movlw	(01Dh)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_mcu_value+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_mcu_value)^080h
	line	175
	
l22760:	
;task.c: 175: ADCON1bits.ADPREF =0b11;
	movlw	(03h & ((1<<2)-1))<<0
	iorwf	(158)^080h,f	;volatile
	line	177
	
l22762:	
;task.c: 177: if(mcu_value<490)
	movlw	high(01EAh)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(01EAh)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipnc
	goto	u12221
	goto	u12220
u12221:
	goto	l22776
u12220:
	line	179
	
l22764:	
;task.c: 178: {
;task.c: 179: mcu_t00_time_count++;
	movlb 3	; select bank3
	incf	(_mcu_t00_time_count)^0180h,f
	line	180
	
l22766:	
;task.c: 180: mcu_t01_time_count=0x00;
	clrf	(_mcu_t01_time_count)^0180h
	line	181
	
l22768:	
;task.c: 181: mcu_t02_time_count=0x00;
	clrf	(_mcu_t02_time_count)^0180h
	line	182
	
l22770:	
;task.c: 182: mcu_t03_time_count=0x00;
	clrf	(_mcu_t03_time_count)^0180h
	line	184
	
l22772:	
;task.c: 184: if(mcu_t00_time_count>=120)
	movlw	(078h)
	subwf	(_mcu_t00_time_count)^0180h,w
	skipc
	goto	u12231
	goto	u12230
u12231:
	goto	l1663
u12230:
	line	186
	
l22774:	
;task.c: 185: {
;task.c: 186: mcu_t00_time_count=0x00;
	clrf	(_mcu_t00_time_count)^0180h
	line	188
;task.c: 188: mcu_temp_index=0x00;
	movlb 1	; select bank1
	clrf	(_mcu_temp_index)^080h
	goto	l1663
	line	191
	
l22776:	
;task.c: 191: else if(mcu_value>510 && mcu_value<530)
	movlw	high(01FFh)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(01FFh)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipc
	goto	u12241
	goto	u12240
u12241:
	goto	l22794
u12240:
	
l22778:	
	movlw	high(0212h)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(0212h)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipnc
	goto	u12251
	goto	u12250
u12251:
	goto	l22794
u12250:
	line	193
	
l22780:	
;task.c: 192: {
;task.c: 193: mcu_t01_time_count++;
	movlb 3	; select bank3
	incf	(_mcu_t01_time_count)^0180h,f
	line	194
	
l22782:	
;task.c: 194: mcu_t00_time_count=0x00;
	clrf	(_mcu_t00_time_count)^0180h
	line	195
	
l22784:	
;task.c: 195: mcu_t02_time_count=0x00;
	clrf	(_mcu_t02_time_count)^0180h
	line	196
	
l22786:	
;task.c: 196: mcu_t03_time_count=0x00;
	clrf	(_mcu_t03_time_count)^0180h
	line	198
	
l22788:	
;task.c: 198: if(mcu_t01_time_count>=60)
	movlw	(03Ch)
	subwf	(_mcu_t01_time_count)^0180h,w
	skipc
	goto	u12261
	goto	u12260
u12261:
	goto	l1663
u12260:
	line	200
	
l22790:	
;task.c: 199: {
;task.c: 200: mcu_t01_time_count=0x00;
	clrf	(_mcu_t01_time_count)^0180h
	line	202
	
l22792:	
;task.c: 202: mcu_temp_index=0x01;
	movlb 1	; select bank1
	clrf	(_mcu_temp_index)^080h
	incf	(_mcu_temp_index)^080h,f
	goto	l1663
	line	205
	
l22794:	
;task.c: 205: else if(mcu_value>530 && mcu_value<550)
	movlw	high(0213h)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(0213h)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipc
	goto	u12271
	goto	u12270
u12271:
	goto	l22812
u12270:
	
l22796:	
	movlw	high(0226h)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(0226h)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipnc
	goto	u12281
	goto	u12280
u12281:
	goto	l22812
u12280:
	line	207
	
l22798:	
;task.c: 206: {
;task.c: 207: mcu_t02_time_count++;
	movlb 3	; select bank3
	incf	(_mcu_t02_time_count)^0180h,f
	line	208
	
l22800:	
;task.c: 208: mcu_t00_time_count=0x00;
	clrf	(_mcu_t00_time_count)^0180h
	line	209
	
l22802:	
;task.c: 209: mcu_t01_time_count=0x00;
	clrf	(_mcu_t01_time_count)^0180h
	line	210
	
l22804:	
;task.c: 210: mcu_t03_time_count=0x00;
	clrf	(_mcu_t03_time_count)^0180h
	line	212
	
l22806:	
;task.c: 212: if(mcu_t02_time_count>=30)
	movlw	(01Eh)
	subwf	(_mcu_t02_time_count)^0180h,w
	skipc
	goto	u12291
	goto	u12290
u12291:
	goto	l1663
u12290:
	line	214
	
l22808:	
;task.c: 213: {
;task.c: 214: mcu_t02_time_count=0x00;
	clrf	(_mcu_t02_time_count)^0180h
	line	216
	
l22810:	
;task.c: 216: mcu_temp_index=0x02;
	movlw	(02h)
	movlb 1	; select bank1
	movwf	(_mcu_temp_index)^080h
	goto	l1663
	line	219
	
l22812:	
;task.c: 219: else if(mcu_value>=550)
	movlw	high(0226h)
	subwf	(_mcu_value+1)^080h,w
	movlw	low(0226h)
	skipnz
	subwf	(_mcu_value)^080h,w
	skipc
	goto	u12301
	goto	u12300
u12301:
	goto	l22828
u12300:
	line	221
	
l22814:	
;task.c: 220: {
;task.c: 221: mcu_t03_time_count++;
	movlb 3	; select bank3
	incf	(_mcu_t03_time_count)^0180h,f
	line	222
	
l22816:	
;task.c: 222: mcu_t00_time_count=0x00;
	clrf	(_mcu_t00_time_count)^0180h
	line	223
	
l22818:	
;task.c: 223: mcu_t01_time_count=0x00;
	clrf	(_mcu_t01_time_count)^0180h
	line	224
	
l22820:	
;task.c: 224: mcu_t02_time_count=0x00;
	clrf	(_mcu_t02_time_count)^0180h
	line	226
	
l22822:	
;task.c: 226: if(mcu_t03_time_count>=10)
	movlw	(0Ah)
	subwf	(_mcu_t03_time_count)^0180h,w
	skipc
	goto	u12311
	goto	u12310
u12311:
	goto	l1663
u12310:
	line	228
	
l22824:	
;task.c: 227: {
;task.c: 228: mcu_t03_time_count=0x00;
	clrf	(_mcu_t03_time_count)^0180h
	line	230
	
l22826:	
;task.c: 230: mcu_temp_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_mcu_temp_index)^080h
	goto	l1663
	line	235
	
l22828:	
;task.c: 233: else
;task.c: 234: {
;task.c: 235: mcu_t00_time_count=0x00;
	movlb 3	; select bank3
	clrf	(_mcu_t00_time_count)^0180h
	line	236
;task.c: 236: mcu_t01_time_count=0x00;
	clrf	(_mcu_t01_time_count)^0180h
	line	237
;task.c: 237: mcu_t02_time_count=0x00;
	clrf	(_mcu_t02_time_count)^0180h
	line	238
;task.c: 238: mcu_t03_time_count=0x00;
	clrf	(_mcu_t03_time_count)^0180h
	line	239
	
l1663:	
	line	241
;task.c: 239: }
;task.c: 241: handle_an1_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an1_process_flag)^0100h
	line	248
	
l22830:	
;task.c: 243: }
;task.c: 248: if(handle_an2_process_flag==0x01)
	decf	(_handle_an2_process_flag)^0100h,w
	skipz
	goto	u12321
	goto	u12320
u12321:
	goto	l22892
u12320:
	line	251
	
l22832:	
;task.c: 249: {
;task.c: 251: pv_voltage_value=start_ad_convert(0b00010);
	movlw	(02h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_pv_voltage_value+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_pv_voltage_value)^080h
	line	262
	
l22834:	
;task.c: 262: if(pv_index==0x00)
	movlb 2	; select bank2
	movf	(_pv_index)^0100h,f
	skipz
	goto	u12331
	goto	u12330
u12331:
	goto	l22860
u12330:
	line	264
	
l22836:	
;task.c: 263: {
;task.c: 264: if(pv_voltage_value<=light_on_pv_level)
	movlb 3	; select bank3
	movf	(_light_on_pv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_light_on_pv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_light_on_pv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_pv_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_pv_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12341
	goto	u12340
u12341:
	goto	l22848
u12340:
	line	266
	
l22838:	
;task.c: 265: {
;task.c: 266: night_time_count++;
	movlb 5	; select bank5
	incf	(_night_time_count)^0280h,f
	skipnz
	incf	(_night_time_count+1)^0280h,f
	skipnz
	incf	(_night_time_count+2)^0280h,f
	skipnz
	incf	(_night_time_count+3)^0280h,f
	line	268
	
l22840:	
;task.c: 268: day_time_count=0x00;
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	270
	
l22842:	
;task.c: 270: if(night_time_count>light_time_level)
	movf	(_night_time_count+3)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+3)^0180h,w
	skipz
	goto	u12355
	movlb 5	; select bank5
	movf	(_night_time_count+2)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+2)^0180h,w
	skipz
	goto	u12355
	movlb 5	; select bank5
	movf	(_night_time_count+1)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+1)^0180h,w
	skipz
	goto	u12355
	movlb 5	; select bank5
	movf	(_night_time_count)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level)^0180h,w
u12355:
	skipnc
	goto	u12351
	goto	u12350
u12351:
	goto	l22860
u12350:
	line	272
	
l22844:	
;task.c: 271: {
;task.c: 272: night_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	274
	
l22846:	
;task.c: 274: pv_voltage_status=0x02;
	movlw	(02h)
	movlb 2	; select bank2
	movwf	(_pv_voltage_status)^0100h
	goto	l22860
	line	279
	
l22848:	
;task.c: 279: else if((pv_voltage_value>light_off_pv_level))
	movlb 3	; select bank3
	movf	(_light_off_pv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_light_off_pv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_light_off_pv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_pv_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_pv_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12361
	goto	u12360
u12361:
	goto	l1678
u12360:
	line	281
	
l22850:	
;task.c: 280: {
;task.c: 281: day_time_count++;
	movlb 5	; select bank5
	incf	(_day_time_count)^0280h,f
	skipnz
	incf	(_day_time_count+1)^0280h,f
	skipnz
	incf	(_day_time_count+2)^0280h,f
	skipnz
	incf	(_day_time_count+3)^0280h,f
	line	283
	
l22852:	
;task.c: 283: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	285
	
l22854:	
;task.c: 285: if(day_time_count>light_time_level)
	movf	(_day_time_count+3)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+3)^0180h,w
	skipz
	goto	u12375
	movlb 5	; select bank5
	movf	(_day_time_count+2)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+2)^0180h,w
	skipz
	goto	u12375
	movlb 5	; select bank5
	movf	(_day_time_count+1)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+1)^0180h,w
	skipz
	goto	u12375
	movlb 5	; select bank5
	movf	(_day_time_count)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level)^0180h,w
u12375:
	skipnc
	goto	u12371
	goto	u12370
u12371:
	goto	l1677
u12370:
	line	287
	
l22856:	
;task.c: 286: {
;task.c: 287: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	289
	
l22858:	
;task.c: 289: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	goto	l22860
	line	293
	
l1678:	
	line	295
;task.c: 293: else
;task.c: 294: {
;task.c: 295: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	297
;task.c: 297: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	goto	l22860
	line	298
	
l1677:	
	line	301
	
l22860:	
;task.c: 298: }
;task.c: 299: }
;task.c: 301: if((pv_voltage_value>=light_off_pv_level)&&(pv_voltage_value<1000))
	movlb 1	; select bank1
	movf	(_pv_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_pv_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_light_off_pv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_light_off_pv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_light_off_pv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12381
	goto	u12380
u12381:
	goto	l22870
u12380:
	
l22862:	
	movlw	high(03E8h)
	movlb 1	; select bank1
	subwf	(_pv_voltage_value+1)^080h,w
	movlw	low(03E8h)
	skipnz
	subwf	(_pv_voltage_value)^080h,w
	skipnc
	goto	u12391
	goto	u12390
u12391:
	goto	l22870
u12390:
	line	303
	
l22864:	
;task.c: 302: {
;task.c: 303: pv_time_count++;
	movlb 5	; select bank5
	incf	(_pv_time_count)^0280h,f
	skipnz
	incf	(_pv_time_count+1)^0280h,f
	skipnz
	incf	(_pv_time_count+2)^0280h,f
	skipnz
	incf	(_pv_time_count+3)^0280h,f
	line	305
	
l22866:	
;task.c: 305: if(pv_time_count>(light_time_level/5))
	movlw	05h
	movlb 0	; select bank0
	movwf	(___lldiv@divisor)
	clrf	(___lldiv@divisor+1)
	clrf	(___lldiv@divisor+2)
	clrf	(___lldiv@divisor+3)

	movlb 3	; select bank3
	movf	(_light_time_level+3)^0180h,w
	movlb 0	; select bank0
	movwf	(___lldiv@dividend+3)
	movlb 3	; select bank3
	movf	(_light_time_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___lldiv@dividend+2)
	movlb 3	; select bank3
	movf	(_light_time_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___lldiv@dividend+1)
	movlb 3	; select bank3
	movf	(_light_time_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___lldiv@dividend)

	fcall	___lldiv
	movlb 5	; select bank5
	movf	(_pv_time_count+3)^0280h,w
	movlb 0	; select bank0
	subwf	(3+(?___lldiv)),w
	skipz
	goto	u12405
	movlb 5	; select bank5
	movf	(_pv_time_count+2)^0280h,w
	movlb 0	; select bank0
	subwf	(2+(?___lldiv)),w
	skipz
	goto	u12405
	movlb 5	; select bank5
	movf	(_pv_time_count+1)^0280h,w
	movlb 0	; select bank0
	subwf	(1+(?___lldiv)),w
	skipz
	goto	u12405
	movlb 5	; select bank5
	movf	(_pv_time_count)^0280h,w
	movlb 0	; select bank0
	subwf	(0+(?___lldiv)),w
u12405:
	skipnc
	goto	u12401
	goto	u12400
u12401:
	goto	l22876
u12400:
	line	307
	
l22868:	
;task.c: 306: {
;task.c: 307: pv_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	line	309
;task.c: 309: pv_voltage_status=0x01;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	incf	(_pv_voltage_status)^0100h,f
	line	311
;task.c: 311: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	313
;task.c: 313: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	315
;task.c: 315: pv_index=0x01;
	movlb 2	; select bank2
	clrf	(_pv_index)^0100h
	incf	(_pv_index)^0100h,f
	goto	l22876
	line	320
	
l22870:	
;task.c: 320: else if(pv_voltage_value>=1000)
	movlw	high(03E8h)
	movlb 1	; select bank1
	subwf	(_pv_voltage_value+1)^080h,w
	movlw	low(03E8h)
	skipnz
	subwf	(_pv_voltage_value)^080h,w
	skipc
	goto	u12411
	goto	u12410
u12411:
	goto	l1684
u12410:
	line	322
	
l22872:	
;task.c: 321: {
;task.c: 322: pv_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	line	324
	
l22874:	
;task.c: 324: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	325
;task.c: 325: }
	goto	l22876
	line	326
	
l1684:	
	line	328
;task.c: 326: else
;task.c: 327: {
;task.c: 328: pv_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	line	332
	
l22876:	
;task.c: 330: }
;task.c: 332: if(pv_index==0x01)
	movlb 2	; select bank2
	decf	(_pv_index)^0100h,w
	skipz
	goto	u12421
	goto	u12420
u12421:
	goto	l22890
u12420:
	line	334
	
l22878:	
;task.c: 333: {
;task.c: 334: if(pv_voltage_value<=light_on_pv_level)
	movlb 3	; select bank3
	movf	(_light_on_pv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_light_on_pv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_light_on_pv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_pv_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_pv_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12431
	goto	u12430
u12431:
	goto	l1687
u12430:
	line	336
	
l22880:	
;task.c: 335: {
;task.c: 336: night_time_count++;
	movlb 5	; select bank5
	incf	(_night_time_count)^0280h,f
	skipnz
	incf	(_night_time_count+1)^0280h,f
	skipnz
	incf	(_night_time_count+2)^0280h,f
	skipnz
	incf	(_night_time_count+3)^0280h,f
	line	338
	
l22882:	
;task.c: 338: if(night_time_count>light_time_level)
	movf	(_night_time_count+3)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+3)^0180h,w
	skipz
	goto	u12445
	movlb 5	; select bank5
	movf	(_night_time_count+2)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+2)^0180h,w
	skipz
	goto	u12445
	movlb 5	; select bank5
	movf	(_night_time_count+1)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level+1)^0180h,w
	skipz
	goto	u12445
	movlb 5	; select bank5
	movf	(_night_time_count)^0280h,w
	movlb 3	; select bank3
	subwf	(_light_time_level)^0180h,w
u12445:
	skipnc
	goto	u12441
	goto	u12440
u12441:
	goto	l22890
u12440:
	line	340
	
l22884:	
;task.c: 339: {
;task.c: 340: night_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	342
	
l22886:	
;task.c: 342: pv_voltage_status=0x02;
	movlw	(02h)
	movlb 2	; select bank2
	movwf	(_pv_voltage_status)^0100h
	line	344
	
l22888:	
;task.c: 344: pv_index=0x00;
	clrf	(_pv_index)^0100h
	goto	l22890
	line	348
	
l1687:	
	line	350
;task.c: 348: else
;task.c: 349: {
;task.c: 350: night_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	357
	
l22890:	
;task.c: 351: }
;task.c: 353: }
;task.c: 357: handle_an2_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an2_process_flag)^0100h
	line	362
	
l22892:	
;task.c: 359: }
;task.c: 362: if(handle_an9_process_flag==0x01)
	decf	(_handle_an9_process_flag)^0100h,w
	skipz
	goto	u12451
	goto	u12450
u12451:
	goto	l22912
u12450:
	line	364
	
l22894:	
;task.c: 363: {
;task.c: 364: charge_current_value=0x00;
	movlb 1	; select bank1
	clrf	(_charge_current_value)^080h
	clrf	(_charge_current_value+1)^080h
	line	366
	
l22896:	
;task.c: 366: if(system_status == 0x01)
	decf	(_system_status)^080h,w
	skipz
	goto	u12461
	goto	u12460
u12461:
	goto	l22910
u12460:
	line	368
	
l22898:	
;task.c: 367: {
;task.c: 368: charge_current_value=start_ad_convert(0b01001);
	movlw	(09h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_charge_current_value+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_charge_current_value)^080h
	line	378
	
l22900:	
;task.c: 378: if((charge_current_value>=charge_i_limit)&&(charge_index>=0x03))
	movf	(_charge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_charge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_charge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_charge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_charge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12471
	goto	u12470
u12471:
	goto	l22910
u12470:
	
l22902:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipc
	goto	u12481
	goto	u12480
u12481:
	goto	l22910
u12480:
	line	381
	
l22904:	
;task.c: 379: {
;task.c: 381: if(buck_pwm_value>50)
	movlw	high(033h)
	subwf	(_buck_pwm_value+1)^080h,w
	movlw	low(033h)
	skipnz
	subwf	(_buck_pwm_value)^080h,w
	skipc
	goto	u12491
	goto	u12490
u12491:
	goto	l22908
u12490:
	line	383
	
l22906:	
;task.c: 382: {
;task.c: 383: buck_pwm_value = buck_pwm_value - 1;
	movlw	low(0FFFFh)
	addwf	(_buck_pwm_value)^080h,f
	movlw	high(0FFFFh)
	addwfc	(_buck_pwm_value+1)^080h,f
	line	385
	
l22908:	
;task.c: 384: }
;task.c: 385: Set_Buck_Pwm_Duty(buck_pwm_value);
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty)
	fcall	_Set_Buck_Pwm_Duty
	line	391
	
l22910:	
;task.c: 387: }
;task.c: 389: }
;task.c: 391: handle_an9_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an9_process_flag)^0100h
	line	398
	
l22912:	
;task.c: 393: }
;task.c: 398: if(handle_an3_process_flag==0x01)
	decf	(_handle_an3_process_flag)^0100h,w
	skipz
	goto	u12501
	goto	u12500
u12501:
	goto	l22990
u12500:
	line	401
	
l22914:	
;task.c: 399: {
;task.c: 401: battery_voltage_value=start_ad_convert(0b00011);
	movlw	(03h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movwf	(_battery_voltage_value+1)
	movf	(0+(?_start_ad_convert)),w
	movwf	(_battery_voltage_value)
	line	404
	
l22916:	
;task.c: 404: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
	movlw	0x52
	movwf	(___ftmul@f1)
	movlw	0xf8
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0x20
	movwf	(___ftdiv@f2+1)
	movlw	0x41
	movwf	(___ftdiv@f2+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v)^0100h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v+1)^0100h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 2	; select bank2
	movwf	(_b_v+2)^0100h
	line	408
	
l22918:	
;task.c: 408: if((battery_voltage_value<(dianchi_guoya_baohu+volt_id*5))&&(charge_index==0x00))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlw	05h
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	movlb 1	; select bank1
	movf	(_volt_id)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	clrf	(___wmul@multiplier+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___awtoft@c+1)
	movf	(0+(?___wmul)),w
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___awtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___awtoft)),w
	movwf	(___ftadd@f2+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftadd)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftadd)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12511
	goto	u12510
u12511:
	goto	l22932
u12510:
	
l22920:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,f
	skipz
	goto	u12521
	goto	u12520
u12521:
	goto	l22932
u12520:
	line	410
	
l22922:	
;task.c: 409: {
;task.c: 410: bt_time_count++;
	movlb 3	; select bank3
	incf	(_bt_time_count)^0180h,f
	line	412
	
l22924:	
;task.c: 412: if(bt_time_count>=100)
	movlw	(064h)
	subwf	(_bt_time_count)^0180h,w
	skipc
	goto	u12531
	goto	u12530
u12531:
	goto	l22938
u12530:
	line	414
	
l22926:	
;task.c: 416: bt_led_status=0x01;
	clrf	(_bt_time_count)^0180h
	line	418
	
l22928:	
;task.c: 418: charge_index=0x01;
	movlb 1	; select bank1
	clrf	(_charge_index)^080h
	incf	(_charge_index)^080h,f
	line	420
	
l22930:	
;task.c: 420: battery_voltage_status=0x01;
	movlb 2	; select bank2
	clrf	(_battery_voltage_status)^0100h
	incf	(_battery_voltage_status)^0100h,f
	goto	l22938
	line	424
	
l22932:	
;task.c: 424: else if((battery_voltage_value>=(dianchi_guoya_baohu+volt_id*5))&&(charge_index<=0x01))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlw	05h
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	movlb 1	; select bank1
	movf	(_volt_id)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	clrf	(___wmul@multiplier+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___awtoft@c+1)
	movf	(0+(?___wmul)),w
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___awtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___awtoft)),w
	movwf	(___ftadd@f2+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftadd)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftadd)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12541
	goto	u12540
u12541:
	goto	l22938
u12540:
	
l22934:	
;task.c: 425: {
;task.c: 426: bt_led_status=0x00;
	movlw	(02h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipnc
	goto	u12551
	goto	u12550
u12551:
	goto	l22938
u12550:
	line	428
	
l22936:	
;task.c: 428: bt_time_count=0x00;
	movlb 3	; select bank3
	clrf	(_bt_time_count)^0180h
	line	430
;task.c: 430: battery_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_battery_voltage_status)^0100h
	line	434
	
l22938:	
;task.c: 431: }
;task.c: 434: if( (battery_voltage_value<dianchi_guoya_huifu) && (charge_index==0x02) )
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12561
	goto	u12560
u12561:
	goto	l22946
u12560:
	
l22940:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12571
	goto	u12570
u12571:
	goto	l22946
u12570:
	line	438
	
l22942:	
;task.c: 440: charge_led_status=0x01;
	movlw	(03h)
	movwf	(_charge_index)^080h
	line	442
	
l22944:	
;task.c: 442: Enable_Buck_Pwm();
	fcall	_Enable_Buck_Pwm
	line	444
;task.c: 444: }
	goto	l22988
	line	445
	
l22946:	
;task.c: 445: else if( (battery_voltage_value>=dianchi_guoya_huifu) && (charge_index==0x02) )
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12581
	goto	u12580
u12581:
	goto	l22952
u12580:
	
l22948:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12591
	goto	u12590
u12591:
	goto	l22952
u12590:
	line	447
	
l22950:	
;task.c: 449: charge_led_status=0x00;
	movlb 2	; select bank2
	movf	(_b_v)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv)^0180h
	movlb 2	; select bank2
	movf	(_b_v+1)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+1)^0180h
	movlb 2	; select bank2
	movf	(_b_v+2)^0100h,w
	movlb 3	; select bank3
	movwf	(_bt_00_lv+2)^0180h
	line	451
;task.c: 451: }
	goto	l22988
	line	452
	
l22952:	
;task.c: 452: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index>=0x03) )
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12601
	goto	u12600
u12601:
	goto	l22972
u12600:
	
l22954:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipc
	goto	u12611
	goto	u12610
u12611:
	goto	l22972
u12610:
	line	455
	
l22956:	
;task.c: 453: {
;task.c: 455: if((charge_current_value<charge_i_limit)&&(charge_index>=0x03))
	movf	(_charge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_charge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_charge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_charge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_charge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12621
	goto	u12620
u12621:
	goto	l22970
u12620:
	
l22958:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipc
	goto	u12631
	goto	u12630
u12631:
	goto	l22970
u12630:
	line	457
	
l22960:	
;task.c: 456: {
;task.c: 457: mppt_time_count++;
	movlb 5	; select bank5
	incf	(_mppt_time_count)^0280h,f
	skipnz
	incf	(_mppt_time_count+1)^0280h,f
	line	459
	
l22962:	
;task.c: 459: if(mppt_time_count>5)
	movlw	high(06h)
	subwf	(_mppt_time_count+1)^0280h,w
	movlw	low(06h)
	skipnz
	subwf	(_mppt_time_count)^0280h,w
	skipc
	goto	u12641
	goto	u12640
u12641:
	goto	l22970
u12640:
	line	461
	
l22964:	
;task.c: 460: {
;task.c: 461: mppt_time_count=0x00;
	clrf	(_mppt_time_count)^0280h
	clrf	(_mppt_time_count+1)^0280h
	line	463
	
l22966:	
;task.c: 463: Mppt_Charge();
	fcall	_Mppt_Charge
	line	465
	
l22968:	
;task.c: 465: I_prev=charge_current_value;
	movlb 1	; select bank1
	movf	(_charge_current_value+1)^080h,w
	movlb 3	; select bank3
	movwf	(_I_prev+1)^0180h
	movlb 1	; select bank1
	movf	(_charge_current_value)^080h,w
	movlb 3	; select bank3
	movwf	(_I_prev)^0180h
	line	470
	
l22970:	
;task.c: 466: }
;task.c: 468: }
;task.c: 470: involid_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_involid_time_count)^0280h
	clrf	(_involid_time_count+1)^0280h
	line	472
;task.c: 472: }
	goto	l22988
	line	473
	
l22972:	
;task.c: 473: else if( (battery_voltage_value>=dianchi_guoya_baohu) && (charge_index>=0x03) )
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12651
	goto	u12650
u12651:
	goto	l22988
u12650:
	
l22974:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipc
	goto	u12661
	goto	u12660
u12661:
	goto	l22988
u12660:
	line	476
	
l22976:	
;task.c: 474: {
;task.c: 476: involid_time_count++;
	movlb 5	; select bank5
	incf	(_involid_time_count)^0280h,f
	skipnz
	incf	(_involid_time_count+1)^0280h,f
	line	478
	
l22978:	
;task.c: 478: if(involid_time_count>200)
	movlw	high(0C9h)
	subwf	(_involid_time_count+1)^0280h,w
	movlw	low(0C9h)
	skipnz
	subwf	(_involid_time_count)^0280h,w
	skipc
	goto	u12671
	goto	u12670
u12671:
	goto	l22988
u12670:
	line	480
	
l22980:	
;task.c: 479: {
;task.c: 480: involid_time_count=0x00;
	clrf	(_involid_time_count)^0280h
	clrf	(_involid_time_count+1)^0280h
	line	482
	
l22982:	
;task.c: 482: if(charge_index>=0x03)
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_charge_index)^080h,w
	skipc
	goto	u12681
	goto	u12680
u12681:
	goto	l1706
u12680:
	line	484
	
l22984:	
;task.c: 483: {
;task.c: 484: charge_index=0x05;
	movlw	(05h)
	movwf	(_charge_index)^080h
	line	486
	
l22986:	
;task.c: 486: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	488
;task.c: 490: charge_led_status=0x00;
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	492
;task.c: 492: while(1);
	
l1710:	
	
l1711:	
	goto	l1710
	line	499
	
l1706:	
	line	503
	
l22988:	
;task.c: 503: handle_an3_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an3_process_flag)^0100h
	line	512
	
l22990:	
;task.c: 505: }
;task.c: 512: if(handle_an4_process_flag==0x01)
	decf	(_handle_an4_process_flag)^0100h,w
	skipz
	goto	u12691
	goto	u12690
u12691:
	goto	l23072
u12690:
	line	514
	
l22992:	
;task.c: 513: {
;task.c: 514: load_voltage_value=0x00;
	movlb 1	; select bank1
	clrf	(_load_voltage_value)^080h
	clrf	(_load_voltage_value+1)^080h
	line	516
	
l22994:	
;task.c: 516: if(system_status == 0x02)
	movf	(_system_status)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12701
	goto	u12700
u12701:
	goto	l1714
u12700:
	line	518
	
l22996:	
;task.c: 517: {
;task.c: 518: load_voltage_value=start_ad_convert(0b00100);
	movlw	(04h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_load_voltage_value+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_load_voltage_value)^080h
	line	522
	
l22998:	
;task.c: 522: if((load_voltage_value<shuchu_shortout_voltage)&&(discharge1_index==0x02)&&(PID_CC_discharge.SetPoint>0))
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12711
	goto	u12710
u12711:
	goto	l23020
u12710:
	
l23000:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12721
	goto	u12720
u12721:
	goto	l23020
u12720:
	
l23002:	
	movlb 0	; select bank0
	clrf	(___ftge@ff1)
	clrf	(___ftge@ff1+1)
	clrf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12731
	goto	u12730
u12731:
	goto	l23020
u12730:
	line	524
	
l23004:	
;task.c: 523: {
;task.c: 524: load_short_time_count++;
	movlb 3	; select bank3
	incf	(_load_short_time_count)^0180h,f
	skipnz
	incf	(_load_short_time_count+1)^0180h,f
	line	526
	
l23006:	
;task.c: 526: if(load_short_time_count>100)
	movlw	high(065h)
	subwf	(_load_short_time_count+1)^0180h,w
	movlw	low(065h)
	skipnz
	subwf	(_load_short_time_count)^0180h,w
	skipc
	goto	u12741
	goto	u12740
u12741:
	goto	l23048
u12740:
	line	528
	
l23008:	
;task.c: 527: {
;task.c: 528: load_short_time_count=0x00;
	clrf	(_load_short_time_count)^0180h
	clrf	(_load_short_time_count+1)^0180h
	line	530
	
l23010:	
;task.c: 530: bost_pwm1_value=2;
	movlw	02h
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	532
	
l23012:	
;task.c: 534: discharge_led_status=0x00;
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	536
	
l23014:	
;task.c: 536: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	538
	
l23016:	
;task.c: 538: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	540
	
l23018:	
;task.c: 540: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	542
;task.c: 542: while(1);
	
l1717:	
	
l1718:	
	goto	l1717
	line	546
	
l23020:	
;task.c: 546: else if((load_voltage_value>=shuchu_shortout_voltage)&&(load_voltage_value<(shuchu_shortout_voltage*2))&&(discharge1_index==0x02)&&(PID_CC_discharge.SetPoint>0))
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12751
	goto	u12750
u12751:
	goto	l23046
u12750:
	
l23022:	
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x40
	movwf	(___ftmul@f1+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12761
	goto	u12760
u12761:
	goto	l23046
u12760:
	
l23024:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12771
	goto	u12770
u12771:
	goto	l23046
u12770:
	
l23026:	
	movlb 0	; select bank0
	clrf	(___ftge@ff1)
	clrf	(___ftge@ff1+1)
	clrf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12781
	goto	u12780
u12781:
	goto	l23046
u12780:
	line	548
	
l23028:	
;task.c: 547: {
;task.c: 548: load_short_time_count++;
	movlb 3	; select bank3
	incf	(_load_short_time_count)^0180h,f
	skipnz
	incf	(_load_short_time_count+1)^0180h,f
	line	550
	
l23030:	
;task.c: 550: if(load_short_time_count>100)
	movlw	high(065h)
	subwf	(_load_short_time_count+1)^0180h,w
	movlw	low(065h)
	skipnz
	subwf	(_load_short_time_count)^0180h,w
	skipc
	goto	u12791
	goto	u12790
u12791:
	goto	l23048
u12790:
	line	552
	
l23032:	
;task.c: 551: {
;task.c: 552: load_short_time_count=0x00;
	clrf	(_load_short_time_count)^0180h
	clrf	(_load_short_time_count+1)^0180h
	line	554
	
l23034:	
;task.c: 554: discharge1_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge1_index)^080h
	line	556
	
l23036:	
;task.c: 556: bost_pwm1_value=2;
	movlw	02h
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	558
	
l23038:	
;task.c: 560: discharge_led_status=0x00;
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	562
	
l23040:	
;task.c: 562: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	564
	
l23042:	
;task.c: 564: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	566
	
l23044:	
;task.c: 566: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	568
;task.c: 568: while(1);
	
l1723:	
	
l1724:	
	goto	l1723
	line	574
	
l23046:	
;task.c: 572: else
;task.c: 573: {
;task.c: 574: load_short_time_count=0x00;
	movlb 3	; select bank3
	clrf	(_load_short_time_count)^0180h
	clrf	(_load_short_time_count+1)^0180h
	line	578
	
l23048:	
;task.c: 575: }
;task.c: 578: if((load_voltage_value>shuchu_open_voltage)&&(discharge1_index==0x02))
	movf	(_shuchu_open_voltage)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_shuchu_open_voltage+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_shuchu_open_voltage+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12801
	goto	u12800
u12801:
	goto	l23070
u12800:
	
l23050:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12811
	goto	u12810
u12811:
	goto	l23070
u12810:
	line	580
	
l23052:	
;task.c: 579: {
;task.c: 580: load_open_time_count++;
	movlb 5	; select bank5
	incf	(_load_open_time_count)^0280h,f
	skipnz
	incf	(_load_open_time_count+1)^0280h,f
	line	582
	
l23054:	
;task.c: 582: if(load_open_time_count>20)
	movlw	high(015h)
	subwf	(_load_open_time_count+1)^0280h,w
	movlw	low(015h)
	skipnz
	subwf	(_load_open_time_count)^0280h,w
	skipc
	goto	u12821
	goto	u12820
u12821:
	goto	l1714
u12820:
	line	584
	
l23056:	
;task.c: 583: {
;task.c: 584: discharge1_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge1_index)^080h
	line	586
	
l23058:	
;task.c: 586: load_open_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_load_open_time_count)^0280h
	clrf	(_load_open_time_count+1)^0280h
	line	588
	
l23060:	
;task.c: 588: bost_pwm1_value=5;
	movlw	05h
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	590
	
l23062:	
;task.c: 592: discharge_led_status=0x00;
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	594
	
l23064:	
;task.c: 594: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	596
	
l23066:	
;task.c: 596: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	598
	
l23068:	
;task.c: 598: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	600
;task.c: 600: while(1);
	
l1729:	
	
l1730:	
	goto	l1729
	line	606
	
l23070:	
;task.c: 604: else
;task.c: 605: {
;task.c: 606: load_open_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_load_open_time_count)^0280h
	clrf	(_load_open_time_count+1)^0280h
	line	610
	
l1714:	
	line	612
;task.c: 607: }
;task.c: 610: }
;task.c: 612: handle_an4_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an4_process_flag)^0100h
	line	618
	
l23072:	
;task.c: 614: }
;task.c: 618: if(handle_an0_process_flag==0x01)
	decf	(_handle_an0_process_flag)^0100h,w
	skipz
	goto	u12831
	goto	u12830
u12831:
	goto	l23502
u12830:
	line	620
	
l23074:	
;task.c: 619: {
;task.c: 620: discharge_current_value=0x00;
	movlb 1	; select bank1
	clrf	(_discharge_current_value)^080h
	clrf	(_discharge_current_value+1)^080h
	line	622
	
l23076:	
;task.c: 622: if(system_status == 0x02)
	movf	(_system_status)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12841
	goto	u12840
u12841:
	goto	l1734
u12840:
	line	624
	
l23078:	
;task.c: 623: {
;task.c: 624: discharge_current_value=start_ad_convert(0b00000);
	movlw	(0)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_discharge_current_value+1)^080h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 1	; select bank1
	movwf	(_discharge_current_value)^080h
	line	626
	
l23080:	
;task.c: 626: if((discharge_current_value>discharge_i_baohu)&&(discharge1_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12851
	goto	u12850
u12851:
	goto	l23100
u12850:
	
l23082:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12861
	goto	u12860
u12861:
	goto	l23100
u12860:
	line	628
	
l23084:	
;task.c: 627: {
;task.c: 628: over_load1_time_count++;
	movlb 5	; select bank5
	incf	(_over_load1_time_count)^0280h,f
	skipnz
	incf	(_over_load1_time_count+1)^0280h,f
	line	630
	
l23086:	
;task.c: 630: if(over_load1_time_count>20)
	movlw	high(015h)
	subwf	(_over_load1_time_count+1)^0280h,w
	movlw	low(015h)
	skipnz
	subwf	(_over_load1_time_count)^0280h,w
	skipc
	goto	u12871
	goto	u12870
u12871:
	goto	l23102
u12870:
	line	632
	
l23088:	
;task.c: 631: {
;task.c: 632: discharge1_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge1_index)^080h
	line	634
;task.c: 634: bost_pwm1_value=2;
	movlw	02h
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	636
	
l23090:	
;task.c: 636: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	638
	
l23092:	
;task.c: 638: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	640
	
l23094:	
;task.c: 640: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	642
	
l23096:	
;task.c: 642: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	644
	
l23098:	
;task.c: 646: discharge_led_status=0x00;
	movlb 5	; select bank5
	clrf	(_over_load1_time_count)^0280h
	clrf	(_over_load1_time_count+1)^0280h
	line	648
;task.c: 648: while(1);
	
l1737:	
	
l1738:	
	goto	l1737
	line	654
	
l23100:	
;task.c: 652: else
;task.c: 653: {
;task.c: 654: over_load1_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_over_load1_time_count)^0280h
	clrf	(_over_load1_time_count+1)^0280h
	line	657
	
l23102:	
;task.c: 655: }
;task.c: 657: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge1_index==0x01))
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u12881
	goto	u12880
u12881:
	goto	l23114
u12880:
	
l23104:	
	movlb 1	; select bank1
	decf	(_discharge1_index)^080h,w
	skipz
	goto	u12891
	goto	u12890
u12891:
	goto	l23114
u12890:
	line	659
	
l23106:	
;task.c: 661: discharge_led_status=0x01;
	movlw	(02h)
	movwf	(_discharge1_index)^080h
	line	663
	
l23108:	
;task.c: 663: open_discharge_time=0x01;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	incf	(_open_discharge_time)^0100h,f
	line	665
	
l23110:	
;task.c: 665: (LATCbits.LATC3 = 0x01);
	bsf	(270)^0100h,3	;volatile
	line	667
	
l23112:	
;task.c: 667: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	669
;task.c: 669: }
	goto	l23120
	line	670
	
l23114:	
;task.c: 670: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge1_index==0x01))
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12901
	goto	u12900
u12901:
	goto	l23120
u12900:
	
l23116:	
;task.c: 671: {
;task.c: 672: discharge_led_status=0x00;
	movlb 1	; select bank1
	decf	(_discharge1_index)^080h,w
	skipz
	goto	u12911
	goto	u12910
u12911:
	goto	l23120
u12910:
	line	674
	
l23118:	
;task.c: 674: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	678
	
l23120:	
;task.c: 675: }
;task.c: 678: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge1_index==0x02))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12921
	goto	u12920
u12921:
	goto	l23486
u12920:
	
l23122:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12931
	goto	u12930
u12931:
	goto	l23486
u12930:
	line	681
	
l23124:	
;task.c: 679: {
;task.c: 681: if((discharge_current_value<=discharge_i_limit)&&(discharge1_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u12941
	goto	u12940
u12941:
	goto	l23474
u12940:
	
l23126:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u12951
	goto	u12950
u12951:
	goto	l23474
u12950:
	line	685
	
l23128:	
;task.c: 682: {
;task.c: 685: t1=step_01_time_limit;
	movf	(_step_01_time_limit)^080h,w
	movwf	(_t1)^080h
	line	686
	
l23130:	
;task.c: 686: t2=step_01_time_limit+step_02_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	movwf	(_t2)^080h
	line	687
	
l23132:	
;task.c: 687: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	movwf	(_t3)^080h
	line	688
	
l23134:	
;task.c: 688: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	addwf	(_step_04_time_limit)^080h,w
	movwf	(_t4)^080h
	line	689
	
l23136:	
;task.c: 689: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit+step_05_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	addwf	(_step_04_time_limit)^080h,w
	movlb 2	; select bank2
	addwf	(_step_05_time_limit)^0100h,w
	movwf	(_t5)^0100h
	line	691
;task.c: 691: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
	movlb 1	; select bank1
	movf	(_t1)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u12965
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u12965:
	skipnc
	goto	u12961
	goto	u12960
u12961:
	goto	l23142
u12960:
	
l23138:	
	movlw	(02h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u12971
	goto	u12970
u12971:
	goto	l23142
u12970:
	line	693
	
l23140:	
;task.c: 692: {
;task.c: 693: Adjust_Pout_Flag=0x01;
	clrf	(_Adjust_Pout_Flag)
	incf	(_Adjust_Pout_Flag),f
	line	694
;task.c: 694: }
	goto	l23176
	line	695
	
l23142:	
;task.c: 695: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
	movlb 1	; select bank1
	movf	(_t1)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u12985
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u12985:
	skipc
	goto	u12981
	goto	u12980
u12981:
	goto	l23150
u12980:
	
l23144:	
	movlb 1	; select bank1
	movf	(_t2)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u12995
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u12995:
	skipnc
	goto	u12991
	goto	u12990
u12991:
	goto	l23150
u12990:
	
l23146:	
	movlw	(03h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u13001
	goto	u13000
u13001:
	goto	l23150
u13000:
	line	697
	
l23148:	
;task.c: 696: {
;task.c: 697: Adjust_Pout_Flag=0x02;
	movlw	(02h)
	movwf	(_Adjust_Pout_Flag)
	line	698
;task.c: 698: }
	goto	l23176
	line	699
	
l23150:	
;task.c: 699: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
	movlb 1	; select bank1
	movf	(_t2)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13015
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13015:
	skipc
	goto	u13011
	goto	u13010
u13011:
	goto	l23158
u13010:
	
l23152:	
	movlb 1	; select bank1
	movf	(_t3)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13025
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13025:
	skipnc
	goto	u13021
	goto	u13020
u13021:
	goto	l23158
u13020:
	
l23154:	
	movlw	(04h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u13031
	goto	u13030
u13031:
	goto	l23158
u13030:
	line	701
	
l23156:	
;task.c: 700: {
;task.c: 701: Adjust_Pout_Flag=0x03;
	movlw	(03h)
	movwf	(_Adjust_Pout_Flag)
	line	702
;task.c: 702: }
	goto	l23176
	line	703
	
l23158:	
;task.c: 703: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
	movlb 1	; select bank1
	movf	(_t3)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13045
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13045:
	skipc
	goto	u13041
	goto	u13040
u13041:
	goto	l23166
u13040:
	
l23160:	
	movlb 1	; select bank1
	movf	(_t4)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13055
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13055:
	skipnc
	goto	u13051
	goto	u13050
u13051:
	goto	l23166
u13050:
	
l23162:	
	movlw	(05h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u13061
	goto	u13060
u13061:
	goto	l23166
u13060:
	line	705
	
l23164:	
;task.c: 704: {
;task.c: 705: Adjust_Pout_Flag=0x04;
	movlw	(04h)
	movwf	(_Adjust_Pout_Flag)
	line	706
;task.c: 706: }
	goto	l23176
	line	707
	
l23166:	
;task.c: 707: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
	movlb 1	; select bank1
	movf	(_t4)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13075
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13075:
	skipc
	goto	u13071
	goto	u13070
u13071:
	goto	l23174
u13070:
	
l23168:	
	movlb 2	; select bank2
	movf	(_t5)^0100h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u13085
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u13085:
	skipnc
	goto	u13081
	goto	u13080
u13081:
	goto	l23174
u13080:
	
l23170:	
	movlw	(06h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u13091
	goto	u13090
u13091:
	goto	l23174
u13090:
	line	709
	
l23172:	
;task.c: 708: {
;task.c: 709: Adjust_Pout_Flag=0x05;
	movlw	(05h)
	movwf	(_Adjust_Pout_Flag)
	line	710
;task.c: 710: }
	goto	l23176
	line	713
	
l23174:	
;task.c: 711: else
;task.c: 712: {
;task.c: 713: Adjust_Pout_Flag=0x00;
	clrf	(_Adjust_Pout_Flag)
	line	716
	
l23176:	
;task.c: 714: }
;task.c: 716: if(battery_voltage_value>bt_volt_80 && voltage_adjust_index<=0x01)
	movlb 4	; select bank4
	movf	(_bt_volt_80)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_80+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_80+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13101
	goto	u13100
u13101:
	goto	l23198
u13100:
	
l23178:	
	movlw	(02h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13111
	goto	u13110
u13111:
	goto	l23198
u13110:
	line	718
	
l23180:	
;task.c: 717: {
;task.c: 718: index_01_count++;
	movlb 5	; select bank5
	incf	(_index_01_count)^0280h,f
	skipnz
	incf	(_index_01_count+1)^0280h,f
	line	719
	
l23182:	
;task.c: 719: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	720
	
l23184:	
;task.c: 720: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	721
	
l23186:	
;task.c: 721: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	722
	
l23188:	
;task.c: 722: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	723
	
l23190:	
;task.c: 723: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	724
	
l23192:	
;task.c: 724: if(index_01_count>1500)
	movlw	high(05DDh)
	subwf	(_index_01_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_01_count)^0280h,w
	skipc
	goto	u13121
	goto	u13120
u13121:
	goto	l23318
u13120:
	line	726
	
l23194:	
;task.c: 725: {
;task.c: 726: voltage_adjust_index=0x01;
	movlb 1	; select bank1
	clrf	(_voltage_adjust_index)^080h
	incf	(_voltage_adjust_index)^080h,f
	line	727
	
l23196:	
;task.c: 727: index_01_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	goto	l23318
	line	731
	
l23198:	
;task.c: 731: else if(battery_voltage_value>bt_volt_60 && battery_voltage_value<=bt_volt_80 && voltage_adjust_index<=0x02)
	movlb 4	; select bank4
	movf	(_bt_volt_60)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_60+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_60+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13131
	goto	u13130
u13131:
	goto	l23222
u13130:
	
l23200:	
	movlb 4	; select bank4
	movf	(_bt_volt_80)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_80+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_80+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13141
	goto	u13140
u13141:
	goto	l23222
u13140:
	
l23202:	
	movlw	(03h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13151
	goto	u13150
u13151:
	goto	l23222
u13150:
	line	733
	
l23204:	
;task.c: 732: {
;task.c: 733: index_02_count++;
	movlb 5	; select bank5
	incf	(_index_02_count)^0280h,f
	skipnz
	incf	(_index_02_count+1)^0280h,f
	line	734
	
l23206:	
;task.c: 734: index_01_count=0x00;
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	735
	
l23208:	
;task.c: 735: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	736
	
l23210:	
;task.c: 736: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	737
	
l23212:	
;task.c: 737: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	738
	
l23214:	
;task.c: 738: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	739
	
l23216:	
;task.c: 739: if(index_02_count>1500)
	movlw	high(05DDh)
	subwf	(_index_02_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_02_count)^0280h,w
	skipc
	goto	u13161
	goto	u13160
u13161:
	goto	l23318
u13160:
	line	741
	
l23218:	
;task.c: 740: {
;task.c: 741: voltage_adjust_index=0x02;
	movlw	(02h)
	movlb 1	; select bank1
	movwf	(_voltage_adjust_index)^080h
	line	742
	
l23220:	
;task.c: 742: index_02_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	goto	l23318
	line	745
	
l23222:	
;task.c: 745: else if(battery_voltage_value>bt_volt_40 && battery_voltage_value<=bt_volt_60 && voltage_adjust_index<=0x03)
	movlb 4	; select bank4
	movf	(_bt_volt_40)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_40+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_40+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13171
	goto	u13170
u13171:
	goto	l23246
u13170:
	
l23224:	
	movlb 4	; select bank4
	movf	(_bt_volt_60)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_60+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_60+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13181
	goto	u13180
u13181:
	goto	l23246
u13180:
	
l23226:	
	movlw	(04h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13191
	goto	u13190
u13191:
	goto	l23246
u13190:
	line	747
	
l23228:	
;task.c: 746: {
;task.c: 747: index_03_count++;
	movlb 5	; select bank5
	incf	(_index_03_count)^0280h,f
	skipnz
	incf	(_index_03_count+1)^0280h,f
	line	748
	
l23230:	
;task.c: 748: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	749
	
l23232:	
;task.c: 749: index_01_count=0x00;
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	750
	
l23234:	
;task.c: 750: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	751
	
l23236:	
;task.c: 751: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	752
	
l23238:	
;task.c: 752: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	753
	
l23240:	
;task.c: 753: if(index_03_count>1500)
	movlw	high(05DDh)
	subwf	(_index_03_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_03_count)^0280h,w
	skipc
	goto	u13201
	goto	u13200
u13201:
	goto	l23318
u13200:
	line	755
	
l23242:	
;task.c: 754: {
;task.c: 755: voltage_adjust_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_voltage_adjust_index)^080h
	line	756
	
l23244:	
;task.c: 756: index_03_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	goto	l23318
	line	759
	
l23246:	
;task.c: 759: else if(battery_voltage_value>bt_volt_20 && battery_voltage_value<=bt_volt_40 && voltage_adjust_index<=0x04)
	movlb 4	; select bank4
	movf	(_bt_volt_20)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_20+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_20+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13211
	goto	u13210
u13211:
	goto	l23270
u13210:
	
l23248:	
	movlb 4	; select bank4
	movf	(_bt_volt_40)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_40+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_40+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13221
	goto	u13220
u13221:
	goto	l23270
u13220:
	
l23250:	
	movlw	(05h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13231
	goto	u13230
u13231:
	goto	l23270
u13230:
	line	761
	
l23252:	
;task.c: 760: {
;task.c: 761: index_04_count++;
	movlb 5	; select bank5
	incf	(_index_04_count)^0280h,f
	skipnz
	incf	(_index_04_count+1)^0280h,f
	line	762
	
l23254:	
;task.c: 762: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	763
	
l23256:	
;task.c: 763: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	764
	
l23258:	
;task.c: 764: index_01_count=0x00;
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	765
	
l23260:	
;task.c: 765: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	766
	
l23262:	
;task.c: 766: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	767
	
l23264:	
;task.c: 767: if(index_04_count>1500)
	movlw	high(05DDh)
	subwf	(_index_04_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_04_count)^0280h,w
	skipc
	goto	u13241
	goto	u13240
u13241:
	goto	l23318
u13240:
	line	769
	
l23266:	
;task.c: 768: {
;task.c: 769: voltage_adjust_index=0x04;
	movlw	(04h)
	movlb 1	; select bank1
	movwf	(_voltage_adjust_index)^080h
	line	770
	
l23268:	
;task.c: 770: index_04_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	goto	l23318
	line	773
	
l23270:	
;task.c: 773: else if(battery_voltage_value>bt_volt_00 && battery_voltage_value<=bt_volt_20 && voltage_adjust_index<=0x05)
	movlb 4	; select bank4
	movf	(_bt_volt_00)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_00+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_00+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13251
	goto	u13250
u13251:
	goto	l23294
u13250:
	
l23272:	
	movlb 4	; select bank4
	movf	(_bt_volt_20)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 4	; select bank4
	movf	(_bt_volt_20+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 4	; select bank4
	movf	(_bt_volt_20+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13261
	goto	u13260
u13261:
	goto	l23294
u13260:
	
l23274:	
	movlw	(06h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13271
	goto	u13270
u13271:
	goto	l23294
u13270:
	line	775
	
l23276:	
;task.c: 774: {
;task.c: 775: index_05_count++;
	movlb 5	; select bank5
	incf	(_index_05_count)^0280h,f
	skipnz
	incf	(_index_05_count+1)^0280h,f
	line	776
	
l23278:	
;task.c: 776: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	777
	
l23280:	
;task.c: 777: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	778
	
l23282:	
;task.c: 778: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	779
	
l23284:	
;task.c: 779: index_01_count=0x00;
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	780
	
l23286:	
;task.c: 780: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	781
	
l23288:	
;task.c: 781: if(index_05_count>1500)
	movlw	high(05DDh)
	subwf	(_index_05_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_05_count)^0280h,w
	skipc
	goto	u13281
	goto	u13280
u13281:
	goto	l23318
u13280:
	line	783
	
l23290:	
;task.c: 782: {
;task.c: 783: voltage_adjust_index=0x05;
	movlw	(05h)
	movlb 1	; select bank1
	movwf	(_voltage_adjust_index)^080h
	line	784
	
l23292:	
;task.c: 784: index_05_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	goto	l23318
	line	787
	
l23294:	
;task.c: 787: else if(battery_voltage_value<bt_volt_00 && voltage_adjust_index<=0x06)
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 4	; select bank4
	movf	(_bt_volt_00)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 4	; select bank4
	movf	(_bt_volt_00+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 4	; select bank4
	movf	(_bt_volt_00+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13291
	goto	u13290
u13291:
	goto	l23316
u13290:
	
l23296:	
	movlw	(07h)
	movlb 1	; select bank1
	subwf	(_voltage_adjust_index)^080h,w
	skipnc
	goto	u13301
	goto	u13300
u13301:
	goto	l23316
u13300:
	line	789
	
l23298:	
;task.c: 788: {
;task.c: 789: index_06_count++;
	movlb 5	; select bank5
	incf	(_index_06_count)^0280h,f
	skipnz
	incf	(_index_06_count+1)^0280h,f
	line	790
	
l23300:	
;task.c: 790: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	791
	
l23302:	
;task.c: 791: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	792
	
l23304:	
;task.c: 792: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	793
	
l23306:	
;task.c: 793: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	794
	
l23308:	
;task.c: 794: index_01_count=0x00;
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	795
	
l23310:	
;task.c: 795: if(index_06_count>1500)
	movlw	high(05DDh)
	subwf	(_index_06_count+1)^0280h,w
	movlw	low(05DDh)
	skipnz
	subwf	(_index_06_count)^0280h,w
	skipc
	goto	u13311
	goto	u13310
u13311:
	goto	l23318
u13310:
	line	797
	
l23312:	
;task.c: 796: {
;task.c: 797: voltage_adjust_index=0x06;
	movlw	(06h)
	movlb 1	; select bank1
	movwf	(_voltage_adjust_index)^080h
	line	798
	
l23314:	
;task.c: 798: index_06_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	goto	l23318
	line	803
	
l23316:	
;task.c: 801: else
;task.c: 802: {
;task.c: 803: index_01_count=0x00;
	movlb 5	; select bank5
	clrf	(_index_01_count)^0280h
	clrf	(_index_01_count+1)^0280h
	line	804
;task.c: 804: index_02_count=0x00;
	clrf	(_index_02_count)^0280h
	clrf	(_index_02_count+1)^0280h
	line	805
;task.c: 805: index_03_count=0x00;
	clrf	(_index_03_count)^0280h
	clrf	(_index_03_count+1)^0280h
	line	806
;task.c: 806: index_04_count=0x00;
	clrf	(_index_04_count)^0280h
	clrf	(_index_04_count+1)^0280h
	line	807
;task.c: 807: index_05_count=0x00;
	clrf	(_index_05_count)^0280h
	clrf	(_index_05_count+1)^0280h
	line	808
;task.c: 808: index_06_count=0x00;
	clrf	(_index_06_count)^0280h
	clrf	(_index_06_count+1)^0280h
	line	811
	
l23318:	
;task.c: 809: }
;task.c: 811: if( ((load_cc_I/100)*30) > (Load_Pmax*30/(load_voltage_value*61/1000)) )
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(___lwdiv@divisor)
	movlw	high(03E8h)
	movwf	((___lwdiv@divisor))+1
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	movlw	03Dh
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___lwdiv@dividend+1)
	movf	(0+(?___wmul)),w
	movwf	(___lwdiv@dividend)
	fcall	___lwdiv
	movf	(1+(?___lwdiv)),w
	movwf	(___lwtoft@c+1)
	movf	(0+(?___lwdiv)),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_Load_Pmax)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_Load_Pmax+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_Load_Pmax+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13321
	goto	u13320
u13321:
	goto	l23350
u13320:
	line	813
	
l23320:	
;task.c: 812: {
;task.c: 813: PID_CC_discharge.SetPoint=(Load_Pmax*30)/(load_voltage_value*61/1000);
	movlw	low(03E8h)
	movwf	(___lwdiv@divisor)
	movlw	high(03E8h)
	movwf	((___lwdiv@divisor))+1
	movlb 1	; select bank1
	movf	(_load_voltage_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier+1)
	movlb 1	; select bank1
	movf	(_load_voltage_value)^080h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	movlw	03Dh
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___lwdiv@dividend+1)
	movf	(0+(?___wmul)),w
	movwf	(___lwdiv@dividend)
	fcall	___lwdiv
	movf	(1+(?___lwdiv)),w
	movwf	(___lwtoft@c+1)
	movf	(0+(?___lwdiv)),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_Load_Pmax)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_Load_Pmax+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_Load_Pmax+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	815
	
l23322:	
;task.c: 815: limit_power_pid_flag=0x01;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	incf	(_limit_power_pid_flag)^0100h,f
	line	817
	
l23324:	
;task.c: 817: data_cc_var = PID_CC_discharge.SetPoint;
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var)^0280h
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+1)^0280h
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+2)^0280h
	line	819
	
l23326:	
;task.c: 819: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u13331
	goto	u13330
u13331:
	goto	l23330
u13330:
	line	821
	
l23328:	
;task.c: 820: {
;task.c: 821: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	822
;task.c: 822: }
	goto	l23378
	line	823
	
l23330:	
;task.c: 823: else if(Adjust_Pout_Flag==0x02)
	movf	(_Adjust_Pout_Flag),w
	xorlw	02h&0ffh
	skipz
	goto	u13341
	goto	u13340
u13341:
	goto	l23334
u13340:
	line	825
	
l23332:	
;task.c: 824: {
;task.c: 825: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	826
;task.c: 826: }
	goto	l23378
	line	827
	
l23334:	
;task.c: 827: else if(Adjust_Pout_Flag==0x03)
	movf	(_Adjust_Pout_Flag),w
	xorlw	03h&0ffh
	skipz
	goto	u13351
	goto	u13350
u13351:
	goto	l23338
u13350:
	line	829
	
l23336:	
;task.c: 828: {
;task.c: 829: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	830
;task.c: 830: }
	goto	l23378
	line	831
	
l23338:	
;task.c: 831: else if(Adjust_Pout_Flag==0x04)
	movf	(_Adjust_Pout_Flag),w
	xorlw	04h&0ffh
	skipz
	goto	u13361
	goto	u13360
u13361:
	goto	l23342
u13360:
	line	833
	
l23340:	
;task.c: 832: {
;task.c: 833: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	834
;task.c: 834: }
	goto	l23378
	line	835
	
l23342:	
;task.c: 835: else if(Adjust_Pout_Flag==0x05)
	movf	(_Adjust_Pout_Flag),w
	xorlw	05h&0ffh
	skipz
	goto	u13371
	goto	u13370
u13371:
	goto	l23346
u13370:
	line	837
	
l23344:	
;task.c: 836: {
;task.c: 837: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	838
;task.c: 838: }
	goto	l23378
	line	839
	
l23346:	
;task.c: 839: else if(Adjust_Pout_Flag==0x00)
	movf	(_Adjust_Pout_Flag),f
	skipz
	goto	u13381
	goto	u13380
u13381:
	goto	l1780
u13380:
	line	841
	
l23348:	
;task.c: 840: {
;task.c: 841: PID_CC_discharge.SetPoint =0;
	movlb 3	; select bank3
	clrf	(_PID_CC_discharge)^0180h
	clrf	(_PID_CC_discharge+1)^0180h
	clrf	(_PID_CC_discharge+2)^0180h
	goto	l23378
	line	845
	
l1780:	
	goto	l23378
	line	848
	
l23350:	
;task.c: 846: else
;task.c: 847: {
;task.c: 848: PID_CC_discharge.SetPoint=(load_cc_I/100)*30;
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	850
	
l23352:	
;task.c: 850: data_cc_var = PID_CC_discharge.SetPoint;
	movf	(_PID_CC_discharge)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var)^0280h
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+1)^0280h
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+2)^0280h
	line	852
	
l23354:	
;task.c: 852: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u13391
	goto	u13390
u13391:
	goto	l23358
u13390:
	line	854
	
l23356:	
;task.c: 853: {
;task.c: 854: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	855
;task.c: 855: }
	goto	l23378
	line	856
	
l23358:	
;task.c: 856: else if(Adjust_Pout_Flag==0x02)
	movf	(_Adjust_Pout_Flag),w
	xorlw	02h&0ffh
	skipz
	goto	u13401
	goto	u13400
u13401:
	goto	l23362
u13400:
	line	858
	
l23360:	
;task.c: 857: {
;task.c: 858: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	859
;task.c: 859: }
	goto	l23378
	line	860
	
l23362:	
;task.c: 860: else if(Adjust_Pout_Flag==0x03)
	movf	(_Adjust_Pout_Flag),w
	xorlw	03h&0ffh
	skipz
	goto	u13411
	goto	u13410
u13411:
	goto	l23366
u13410:
	line	862
	
l23364:	
;task.c: 861: {
;task.c: 862: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	863
;task.c: 863: }
	goto	l23378
	line	864
	
l23366:	
;task.c: 864: else if(Adjust_Pout_Flag==0x04)
	movf	(_Adjust_Pout_Flag),w
	xorlw	04h&0ffh
	skipz
	goto	u13421
	goto	u13420
u13421:
	goto	l23370
u13420:
	line	866
	
l23368:	
;task.c: 865: {
;task.c: 866: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	867
;task.c: 867: }
	goto	l23378
	line	868
	
l23370:	
;task.c: 868: else if(Adjust_Pout_Flag==0x05)
	movf	(_Adjust_Pout_Flag),w
	xorlw	05h&0ffh
	skipz
	goto	u13431
	goto	u13430
u13431:
	goto	l23374
u13430:
	line	870
	
l23372:	
;task.c: 869: {
;task.c: 870: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	871
;task.c: 871: }
	goto	l23378
	line	872
	
l23374:	
;task.c: 872: else if(Adjust_Pout_Flag==0x00)
	movf	(_Adjust_Pout_Flag),f
	skipz
	goto	u13441
	goto	u13440
u13441:
	goto	l1780
u13440:
	line	874
	
l23376:	
;task.c: 873: {
;task.c: 874: PID_CC_discharge.SetPoint =0;
	movlb 3	; select bank3
	clrf	(_PID_CC_discharge)^0180h
	clrf	(_PID_CC_discharge+1)^0180h
	clrf	(_PID_CC_discharge+2)^0180h
	line	879
	
l23378:	
;task.c: 875: }
;task.c: 877: }
;task.c: 879: if(voltage_adjust_index==0x01)
	movlb 1	; select bank1
	decf	(_voltage_adjust_index)^080h,w
	skipz
	goto	u13451
	goto	u13450
u13451:
	goto	l23382
u13450:
	line	881
	
l23380:	
;task.c: 880: {
;task.c: 881: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*1.0;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x80
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	882
;task.c: 882: }
	goto	l23402
	line	883
	
l23382:	
;task.c: 883: else if(voltage_adjust_index==0x02)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13461
	goto	u13460
u13461:
	goto	l23386
u13460:
	line	885
	
l23384:	
;task.c: 884: {
;task.c: 885: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.70;
	movlw	0x33
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x33
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	886
;task.c: 886: }
	goto	l23402
	line	887
	
l23386:	
;task.c: 887: else if(voltage_adjust_index==0x03)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u13471
	goto	u13470
u13471:
	goto	l23390
u13470:
	line	889
	
l23388:	
;task.c: 888: {
;task.c: 889: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.45;
	movlw	0x66
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xe6
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	890
;task.c: 890: }
	goto	l23402
	line	891
	
l23390:	
;task.c: 891: else if(voltage_adjust_index==0x04)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	04h&0ffh
	skipz
	goto	u13481
	goto	u13480
u13481:
	goto	l23394
u13480:
	line	893
	
l23392:	
;task.c: 892: {
;task.c: 893: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.25;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x80
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	894
;task.c: 894: }
	goto	l23402
	line	895
	
l23394:	
;task.c: 895: else if(voltage_adjust_index==0x05)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u13491
	goto	u13490
u13491:
	goto	l23398
u13490:
	line	897
	
l23396:	
;task.c: 896: {
;task.c: 897: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.15;
	movlw	0x9a
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x19
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	898
;task.c: 898: }
	goto	l23402
	line	899
	
l23398:	
;task.c: 899: else if(voltage_adjust_index==0x06)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	06h&0ffh
	skipz
	goto	u13501
	goto	u13500
u13501:
	goto	l1803
u13500:
	line	901
	
l23400:	
;task.c: 900: {
;task.c: 901: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	goto	l23402
	line	905
	
l1803:	
	
l23402:	
;task.c: 902: }
;task.c: 905: if(mcu_temp_index==0x01)
	movlb 1	; select bank1
	decf	(_mcu_temp_index)^080h,w
	skipz
	goto	u13511
	goto	u13510
u13511:
	goto	l23406
u13510:
	line	907
	
l23404:	
;task.c: 906: {
;task.c: 907: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	908
;task.c: 908: }
	goto	l23414
	line	909
	
l23406:	
;task.c: 909: else if(mcu_temp_index==0x02)
	movf	(_mcu_temp_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13521
	goto	u13520
u13521:
	goto	l23410
u13520:
	line	911
	
l23408:	
;task.c: 910: {
;task.c: 911: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.2;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	912
;task.c: 912: }
	goto	l23414
	line	913
	
l23410:	
;task.c: 913: else if(mcu_temp_index==0x03)
	movf	(_mcu_temp_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u13531
	goto	u13530
u13531:
	goto	l23414
u13530:
	line	915
	
l23412:	
;task.c: 914: {
;task.c: 915: PID_CC_discharge.SetPoint =0;
	movlb 3	; select bank3
	clrf	(_PID_CC_discharge)^0180h
	clrf	(_PID_CC_discharge+1)^0180h
	clrf	(_PID_CC_discharge+2)^0180h
	line	918
	
l23414:	
;task.c: 916: }
;task.c: 918: if(light_mode==0x00 && work_mode==0x00)
	movlb 1	; select bank1
	movf	(_light_mode)^080h,f
	skipz
	goto	u13541
	goto	u13540
u13541:
	goto	l23420
u13540:
	
l23416:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u13551
	goto	u13550
u13551:
	goto	l23420
u13550:
	line	920
	
l23418:	
;task.c: 919: {
;task.c: 920: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	921
;task.c: 921: }
	goto	l23446
	line	922
	
l23420:	
;task.c: 922: else if(light_mode==0x01 && work_mode==0x00)
	decf	(_light_mode)^080h,w
	skipz
	goto	u13561
	goto	u13560
u13561:
	goto	l23430
u13560:
	
l23422:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u13571
	goto	u13570
u13571:
	goto	l23430
u13570:
	line	924
	
l23424:	
;task.c: 923: {
;task.c: 924: if(have_person1_flag==0x01 || have_person2_flag==0x01)
	decf	(_have_person1_flag)^080h,w
	skipnz
	goto	u13581
	goto	u13580
u13581:
	goto	l1819
u13580:
	
l23426:	
	decf	(_have_person2_flag)^080h,w
	skipz
	goto	u13591
	goto	u13590
u13591:
	goto	l23428
u13590:
	
l1819:	
	line	926
;task.c: 925: {
;task.c: 926: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	927
;task.c: 927: }
	goto	l23446
	line	930
	
l23428:	
;task.c: 928: else
;task.c: 929: {
;task.c: 930: PID_CC_discharge.SetPoint = data_cc_var*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	goto	l23446
	line	933
	
l23430:	
;task.c: 933: else if(light_mode==0x02 && work_mode==0x00)
	movf	(_light_mode)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13601
	goto	u13600
u13601:
	goto	l23446
u13600:
	
l23432:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u13611
	goto	u13610
u13611:
	goto	l23446
u13610:
	line	935
	
l23434:	
;task.c: 934: {
;task.c: 935: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u13621
	goto	u13620
u13621:
	goto	l23438
u13620:
	line	937
	
l23436:	
;task.c: 936: {
;task.c: 937: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	938
;task.c: 938: }
	goto	l23446
	line	939
	
l23438:	
;task.c: 939: else if(Adjust_Pout_Flag>=0x02)
	movlw	(02h)
	subwf	(_Adjust_Pout_Flag),w
	skipc
	goto	u13631
	goto	u13630
u13631:
	goto	l23446
u13630:
	line	941
	
l23440:	
;task.c: 940: {
;task.c: 941: if(have_person1_flag==0x01 || have_person2_flag==0x01)
	movlb 1	; select bank1
	decf	(_have_person1_flag)^080h,w
	skipnz
	goto	u13641
	goto	u13640
u13641:
	goto	l1819
u13640:
	
l23442:	
	decf	(_have_person2_flag)^080h,w
	skipz
	goto	u13651
	goto	u13650
u13651:
	goto	l23444
u13650:
	goto	l1819
	line	947
	
l23444:	
;task.c: 945: else
;task.c: 946: {
;task.c: 947: PID_CC_discharge.SetPoint = data_cc_var*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	953
	
l23446:	
;task.c: 949: }
;task.c: 950: }
;task.c: 951: }
;task.c: 953: if(led_out_ctrl==0x01 && work_mode==0x00)
	movlb 1	; select bank1
	decf	(_led_out_ctrl)^080h,w
	skipz
	goto	u13661
	goto	u13660
u13661:
	goto	l1830
u13660:
	
l23448:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u13671
	goto	u13670
u13671:
	goto	l1830
u13670:
	line	955
	
l23450:	
;task.c: 954: {
;task.c: 955: PID_CC_discharge.SetPoint = 0;
	movlb 3	; select bank3
	clrf	(_PID_CC_discharge)^0180h
	clrf	(_PID_CC_discharge+1)^0180h
	clrf	(_PID_CC_discharge+2)^0180h
	line	956
	
l1830:	
	line	959
;task.c: 956: }
;task.c: 959: pid_index = 0x01;
	movlb 1	; select bank1
	clrf	(_pid_index)^080h
	incf	(_pid_index)^080h,f
	line	961
	
l23452:	
;task.c: 961: PWM_I=pid_calc(&PID_CC_discharge,discharge_current_value);
	movlw	low(_PID_CC_discharge)
	movlb 0	; select bank0
	movwf	(pid_calc@pp)
	movlw	high(_PID_CC_discharge)
	movwf	(pid_calc@pp+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(pid_calc@NowPoint+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(pid_calc@NowPoint)
	fcall	_pid_calc
	movf	(0+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I)^0200h
	movlb 0	; select bank0
	movf	(1+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I+2)^0200h
	line	963
	
l23454:	
;task.c: 963: PWM = PWM+PWM_I;
	movf	(_PWM_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 4	; select bank4
	movf	(_PWM_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 4	; select bank4
	movf	(_PWM_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM+2)^080h
	line	965
	
l23456:	
;task.c: 965: if( PWM>=488)
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xf4
	movwf	(___ftge@ff2+1)
	movlw	0x43
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13681
	goto	u13680
u13681:
	goto	l23460
u13680:
	line	967
	
l23458:	
;task.c: 966: {
;task.c: 967: PWM=488;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0xf4
	movwf	(_PWM+1)^080h
	movlw	0x43
	movwf	(_PWM+2)^080h
	line	968
;task.c: 968: }
	goto	l23464
	line	969
	
l23460:	
;task.c: 969: else if(PWM<=5)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13691
	goto	u13690
u13691:
	goto	l23464
u13690:
	line	971
	
l23462:	
;task.c: 970: {
;task.c: 971: PWM=5;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0xa0
	movwf	(_PWM+1)^080h
	movlw	0x40
	movwf	(_PWM+2)^080h
	line	974
	
l23464:	
;task.c: 972: }
;task.c: 974: bost_pwm1_value = (unsigned int)PWM;
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value)^080h
	line	978
	
l23466:	
;task.c: 978: if(PID_CC_discharge.SetPoint==0)
	movlb 3	; select bank3
	movf	(_PID_CC_discharge+2)^0180h,w
	iorwf	(_PID_CC_discharge+1)^0180h,w
	iorwf	(_PID_CC_discharge)^0180h,w
	skipz
	goto	u13701
	goto	u13700
u13701:
	goto	l23470
u13700:
	line	980
	
l23468:	
;task.c: 979: {
;task.c: 980: bost_pwm1_value = 0;
	movlb 1	; select bank1
	clrf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	983
	
l23470:	
;task.c: 981: }
;task.c: 983: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movlb 1	; select bank1
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	985
	
l23472:	
;task.c: 985: limit_power_pid_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid_flag)^0100h
	line	988
;task.c: 988: }
	goto	l23484
	line	989
	
l23474:	
;task.c: 989: else if((discharge_current_value>discharge_i_limit)&&(discharge1_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_discharge_current_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_discharge_current_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13711
	goto	u13710
u13711:
	goto	l23484
u13710:
	
l23476:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13721
	goto	u13720
u13721:
	goto	l23484
u13720:
	line	991
	
l23478:	
;task.c: 990: {
;task.c: 991: if(bost_pwm1_value>10)
	movlw	high(0Bh)
	subwf	(_bost_pwm1_value+1)^080h,w
	movlw	low(0Bh)
	skipnz
	subwf	(_bost_pwm1_value)^080h,w
	skipc
	goto	u13731
	goto	u13730
u13731:
	goto	l23482
u13730:
	line	993
	
l23480:	
;task.c: 992: {
;task.c: 993: bost_pwm1_value = bost_pwm1_value-1;
	movlw	low(0FFFFh)
	addwf	(_bost_pwm1_value)^080h,f
	movlw	high(0FFFFh)
	addwfc	(_bost_pwm1_value+1)^080h,f
	line	996
	
l23482:	
;task.c: 994: }
;task.c: 996: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	999
	
l23484:	
;task.c: 997: }
;task.c: 999: battery_low_time_count=0;
	movlb 3	; select bank3
	clrf	(_battery_low_time_count)^0180h
	clrf	(_battery_low_time_count+1)^0180h
	line	1001
;task.c: 1001: }
	goto	l1734
	line	1002
	
l23486:	
;task.c: 1002: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge1_index==0x02))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13741
	goto	u13740
u13741:
	goto	l23484
u13740:
	
l23488:	
	movlb 1	; select bank1
	movf	(_discharge1_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13751
	goto	u13750
u13751:
	goto	l23484
u13750:
	line	1005
	
l23490:	
;task.c: 1003: {
;task.c: 1005: battery_low_time_count++;
	movlb 3	; select bank3
	incf	(_battery_low_time_count)^0180h,f
	skipnz
	incf	(_battery_low_time_count+1)^0180h,f
	line	1007
	
l23492:	
;task.c: 1007: if(battery_low_time_count>1000)
	movlw	high(03E9h)
	subwf	(_battery_low_time_count+1)^0180h,w
	movlw	low(03E9h)
	skipnz
	subwf	(_battery_low_time_count)^0180h,w
	skipc
	goto	u13761
	goto	u13760
u13761:
	goto	l1734
u13760:
	line	1009
	
l23494:	
;task.c: 1008: {
;task.c: 1009: discharge1_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge1_index)^080h
	line	1011
;task.c: 1011: bost_pwm1_value=2;
	movlw	02h
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	1013
	
l23496:	
;task.c: 1013: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movf	(_bost_pwm1_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm1_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	fcall	_Set_Bost_Pwm1_Duty
	line	1015
	
l23498:	
;task.c: 1017: discharge_led_status=0x00;
	movlb 3	; select bank3
	clrf	(_battery_low_time_count)^0180h
	clrf	(_battery_low_time_count+1)^0180h
	line	1019
;task.c: 1019: while(1);
	
l1841:	
	
l1842:	
	goto	l1841
	line	1028
	
l1734:	
	line	1030
;task.c: 1026: }
;task.c: 1028: }
;task.c: 1030: handle_an0_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an0_process_flag)^0100h
	line	1034
	
l23502:	
;task.c: 1032: }
;task.c: 1034: if(handle_an11_process_flag==0x01)
	decf	(_handle_an11_process_flag)^0100h,w
	skipz
	goto	u13771
	goto	u13770
u13771:
	goto	l23584
u13770:
	line	1036
	
l23504:	
;task.c: 1035: {
;task.c: 1036: load_voltage2_value=0x00;
	clrf	(_load_voltage2_value)^0100h
	clrf	(_load_voltage2_value+1)^0100h
	line	1038
	
l23506:	
;task.c: 1038: if(system_status == 0x02)
	movlb 1	; select bank1
	movf	(_system_status)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13781
	goto	u13780
u13781:
	goto	l1846
u13780:
	line	1040
	
l23508:	
;task.c: 1039: {
;task.c: 1040: load_voltage2_value=start_ad_convert(0b01011);
	movlw	(0Bh)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_load_voltage2_value+1)^0100h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_load_voltage2_value)^0100h
	line	1043
	
l23510:	
;task.c: 1043: if((load_voltage2_value<shuchu_shortout_voltage)&&(discharge2_index==0x02)&&(PID_CC2_discharge.SetPoint>0))
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13791
	goto	u13790
u13791:
	goto	l23532
u13790:
	
l23512:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13801
	goto	u13800
u13801:
	goto	l23532
u13800:
	
l23514:	
	movlb 0	; select bank0
	clrf	(___ftge@ff1)
	clrf	(___ftge@ff1+1)
	clrf	(___ftge@ff1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13811
	goto	u13810
u13811:
	goto	l23532
u13810:
	line	1045
	
l23516:	
;task.c: 1044: {
;task.c: 1045: load2_short_time_count++;
	movlb 3	; select bank3
	incf	(_load2_short_time_count)^0180h,f
	skipnz
	incf	(_load2_short_time_count+1)^0180h,f
	line	1047
	
l23518:	
;task.c: 1047: if(load2_short_time_count>50)
	movlw	high(033h)
	subwf	(_load2_short_time_count+1)^0180h,w
	movlw	low(033h)
	skipnz
	subwf	(_load2_short_time_count)^0180h,w
	skipc
	goto	u13821
	goto	u13820
u13821:
	goto	l23560
u13820:
	line	1049
	
l23520:	
;task.c: 1048: {
;task.c: 1049: load2_short_time_count=0x00;
	clrf	(_load2_short_time_count)^0180h
	clrf	(_load2_short_time_count+1)^0180h
	line	1051
	
l23522:	
;task.c: 1051: bost_pwm2_value=2;
	movlw	02h
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1053
	
l23524:	
;task.c: 1055: discharge_led_status=0x00;
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1057
	
l23526:	
;task.c: 1057: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1059
	
l23528:	
;task.c: 1059: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1061
	
l23530:	
;task.c: 1061: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1063
;task.c: 1063: while(1);
	
l1849:	
	
l1850:	
	goto	l1849
	line	1067
	
l23532:	
;task.c: 1067: else if((load_voltage2_value>=shuchu_shortout_voltage)&&(load_voltage2_value<(shuchu_shortout_voltage*2))&&(discharge2_index==0x02)&&(PID_CC2_discharge.SetPoint>0))
	movlb 2	; select bank2
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13831
	goto	u13830
u13831:
	goto	l23558
u13830:
	
l23534:	
	movlb 2	; select bank2
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 2	; select bank2
	movf	(_shuchu_shortout_voltage+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x40
	movwf	(___ftmul@f1+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13841
	goto	u13840
u13841:
	goto	l23558
u13840:
	
l23536:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13851
	goto	u13850
u13851:
	goto	l23558
u13850:
	
l23538:	
	movlb 0	; select bank0
	clrf	(___ftge@ff1)
	clrf	(___ftge@ff1+1)
	clrf	(___ftge@ff1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13861
	goto	u13860
u13861:
	goto	l23558
u13860:
	line	1069
	
l23540:	
;task.c: 1068: {
;task.c: 1069: load2_short_time_count++;
	movlb 3	; select bank3
	incf	(_load2_short_time_count)^0180h,f
	skipnz
	incf	(_load2_short_time_count+1)^0180h,f
	line	1071
	
l23542:	
;task.c: 1071: if(load2_short_time_count>50)
	movlw	high(033h)
	subwf	(_load2_short_time_count+1)^0180h,w
	movlw	low(033h)
	skipnz
	subwf	(_load2_short_time_count)^0180h,w
	skipc
	goto	u13871
	goto	u13870
u13871:
	goto	l23560
u13870:
	line	1073
	
l23544:	
;task.c: 1072: {
;task.c: 1073: load2_short_time_count=0x00;
	clrf	(_load2_short_time_count)^0180h
	clrf	(_load2_short_time_count+1)^0180h
	line	1075
	
l23546:	
;task.c: 1075: discharge2_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge2_index)^080h
	line	1077
	
l23548:	
;task.c: 1077: bost_pwm2_value=2;
	movlw	02h
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1079
	
l23550:	
;task.c: 1081: discharge_led_status=0x00;
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1083
	
l23552:	
;task.c: 1083: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1085
	
l23554:	
;task.c: 1085: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1087
	
l23556:	
;task.c: 1087: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1089
;task.c: 1089: while(1);
	
l1855:	
	
l1856:	
	goto	l1855
	line	1095
	
l23558:	
;task.c: 1093: else
;task.c: 1094: {
;task.c: 1095: load2_short_time_count=0x00;
	movlb 3	; select bank3
	clrf	(_load2_short_time_count)^0180h
	clrf	(_load2_short_time_count+1)^0180h
	line	1099
	
l23560:	
;task.c: 1096: }
;task.c: 1099: if((load_voltage2_value>shuchu_open_voltage)&&(discharge2_index==0x02))
	movf	(_shuchu_open_voltage)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_shuchu_open_voltage+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_shuchu_open_voltage+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13881
	goto	u13880
u13881:
	goto	l23582
u13880:
	
l23562:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13891
	goto	u13890
u13891:
	goto	l23582
u13890:
	line	1101
	
l23564:	
;task.c: 1100: {
;task.c: 1101: load2_open_time_count++;
	movlb 5	; select bank5
	incf	(_load2_open_time_count)^0280h,f
	skipnz
	incf	(_load2_open_time_count+1)^0280h,f
	line	1103
	
l23566:	
;task.c: 1103: if(load2_open_time_count>20)
	movlw	high(015h)
	subwf	(_load2_open_time_count+1)^0280h,w
	movlw	low(015h)
	skipnz
	subwf	(_load2_open_time_count)^0280h,w
	skipc
	goto	u13901
	goto	u13900
u13901:
	goto	l1846
u13900:
	line	1105
	
l23568:	
;task.c: 1104: {
;task.c: 1105: discharge2_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge2_index)^080h
	line	1107
	
l23570:	
;task.c: 1107: load2_open_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_load2_open_time_count)^0280h
	clrf	(_load2_open_time_count+1)^0280h
	line	1109
	
l23572:	
;task.c: 1109: bost_pwm2_value=5;
	movlw	05h
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1111
	
l23574:	
;task.c: 1113: discharge_led_status=0x00;
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1115
	
l23576:	
;task.c: 1115: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1117
	
l23578:	
;task.c: 1117: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1119
	
l23580:	
;task.c: 1119: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1121
;task.c: 1121: while(1);
	
l1861:	
	
l1862:	
	goto	l1861
	line	1127
	
l23582:	
;task.c: 1125: else
;task.c: 1126: {
;task.c: 1127: load2_open_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_load2_open_time_count)^0280h
	clrf	(_load2_open_time_count+1)^0280h
	line	1131
	
l1846:	
	line	1133
;task.c: 1128: }
;task.c: 1131: }
;task.c: 1133: handle_an11_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an11_process_flag)^0100h
	line	1137
	
l23584:	
;task.c: 1135: }
;task.c: 1137: if(handle_an8_process_flag==0x01)
	decf	(_handle_an8_process_flag)^0100h,w
	skipz
	goto	u13911
	goto	u13910
u13911:
	goto	l1959
u13910:
	line	1139
	
l23586:	
;task.c: 1138: {
;task.c: 1139: discharge_current2_value=0x00;
	clrf	(_discharge_current2_value)^0100h
	clrf	(_discharge_current2_value+1)^0100h
	line	1141
	
l23588:	
;task.c: 1141: if(system_status == 0x02)
	movlb 1	; select bank1
	movf	(_system_status)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13921
	goto	u13920
u13921:
	goto	l1866
u13920:
	line	1143
	
l23590:	
;task.c: 1142: {
;task.c: 1143: discharge_current2_value=start_ad_convert(0b01000);
	movlw	(08h)
	fcall	_start_ad_convert
	movf	(1+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_discharge_current2_value+1)^0100h
	movlb 0	; select bank0
	movf	(0+(?_start_ad_convert)),w
	movlb 2	; select bank2
	movwf	(_discharge_current2_value)^0100h
	line	1145
	
l23592:	
;task.c: 1145: if((discharge_current2_value>discharge_i_baohu)&&(discharge2_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_discharge_current2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_discharge_current2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13931
	goto	u13930
u13931:
	goto	l23612
u13930:
	
l23594:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u13941
	goto	u13940
u13941:
	goto	l23612
u13940:
	line	1147
	
l23596:	
;task.c: 1146: {
;task.c: 1147: over_load2_time_count++;
	movlb 5	; select bank5
	incf	(_over_load2_time_count)^0280h,f
	skipnz
	incf	(_over_load2_time_count+1)^0280h,f
	line	1149
	
l23598:	
;task.c: 1149: if(over_load2_time_count>20)
	movlw	high(015h)
	subwf	(_over_load2_time_count+1)^0280h,w
	movlw	low(015h)
	skipnz
	subwf	(_over_load2_time_count)^0280h,w
	skipc
	goto	u13951
	goto	u13950
u13951:
	goto	l23614
u13950:
	line	1151
	
l23600:	
;task.c: 1150: {
;task.c: 1151: discharge2_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge2_index)^080h
	line	1153
;task.c: 1153: bost_pwm2_value=2;
	movlw	02h
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1155
	
l23602:	
;task.c: 1155: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1157
	
l23604:	
;task.c: 1157: delay_ms(1);
	movlb 0	; select bank0
	clrf	(delay_ms@count)
	incf	(delay_ms@count),f
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	1159
	
l23606:	
;task.c: 1159: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	1161
	
l23608:	
;task.c: 1161: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	1163
	
l23610:	
;task.c: 1165: discharge_led_status=0x00;
	movlb 5	; select bank5
	clrf	(_over_load2_time_count)^0280h
	clrf	(_over_load2_time_count+1)^0280h
	line	1167
;task.c: 1167: while(1);
	
l1869:	
	
l1870:	
	goto	l1869
	line	1173
	
l23612:	
;task.c: 1171: else
;task.c: 1172: {
;task.c: 1173: over_load2_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_over_load2_time_count)^0280h
	clrf	(_over_load2_time_count+1)^0280h
	line	1176
	
l23614:	
;task.c: 1174: }
;task.c: 1176: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge2_index==0x01))
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u13961
	goto	u13960
u13961:
	goto	l23626
u13960:
	
l23616:	
	movlb 1	; select bank1
	decf	(_discharge2_index)^080h,w
	skipz
	goto	u13971
	goto	u13970
u13971:
	goto	l23626
u13970:
	line	1178
	
l23618:	
;task.c: 1180: discharge_led_status=0x01;
	movlw	(02h)
	movwf	(_discharge2_index)^080h
	line	1182
	
l23620:	
;task.c: 1182: open_discharge_time=0x01;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	incf	(_open_discharge_time)^0100h,f
	line	1184
	
l23622:	
;task.c: 1184: (LATCbits.LATC0 = 0x01);
	bsf	(270)^0100h,0	;volatile
	line	1186
	
l23624:	
;task.c: 1186: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	1188
;task.c: 1188: }
	goto	l23632
	line	1189
	
l23626:	
;task.c: 1189: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge2_index==0x01))
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u13981
	goto	u13980
u13981:
	goto	l23632
u13980:
	
l23628:	
;task.c: 1190: {
;task.c: 1191: discharge_led_status=0x00;
	movlb 1	; select bank1
	decf	(_discharge2_index)^080h,w
	skipz
	goto	u13991
	goto	u13990
u13991:
	goto	l23632
u13990:
	line	1193
	
l23630:	
;task.c: 1193: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	1197
	
l23632:	
;task.c: 1194: }
;task.c: 1197: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge2_index==0x02))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14001
	goto	u14000
u14001:
	goto	l23858
u14000:
	
l23634:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14011
	goto	u14010
u14011:
	goto	l23858
u14010:
	line	1200
	
l23636:	
;task.c: 1198: {
;task.c: 1200: if((discharge_current2_value<=discharge_i_limit)&&(discharge2_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_discharge_current2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_discharge_current2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14021
	goto	u14020
u14021:
	goto	l23846
u14020:
	
l23638:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14031
	goto	u14030
u14031:
	goto	l23846
u14030:
	line	1204
	
l23640:	
;task.c: 1201: {
;task.c: 1204: t1=step_01_time_limit;
	movf	(_step_01_time_limit)^080h,w
	movwf	(_t1)^080h
	line	1205
	
l23642:	
;task.c: 1205: t2=step_01_time_limit+step_02_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	movwf	(_t2)^080h
	line	1206
	
l23644:	
;task.c: 1206: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	movwf	(_t3)^080h
	line	1207
	
l23646:	
;task.c: 1207: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	addwf	(_step_04_time_limit)^080h,w
	movwf	(_t4)^080h
	line	1208
	
l23648:	
;task.c: 1208: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit+step_05_time_limit;
	movf	(_step_01_time_limit)^080h,w
	addwf	(_step_02_time_limit)^080h,w
	addwf	(_step_03_time_limit)^080h,w
	addwf	(_step_04_time_limit)^080h,w
	movlb 2	; select bank2
	addwf	(_step_05_time_limit)^0100h,w
	movwf	(_t5)^0100h
	line	1210
;task.c: 1210: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
	movlb 1	; select bank1
	movf	(_t1)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14045
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14045:
	skipnc
	goto	u14041
	goto	u14040
u14041:
	goto	l23654
u14040:
	
l23650:	
	movlw	(02h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u14051
	goto	u14050
u14051:
	goto	l23654
u14050:
	line	1212
	
l23652:	
;task.c: 1211: {
;task.c: 1212: Adjust_Pout_Flag=0x01;
	clrf	(_Adjust_Pout_Flag)
	incf	(_Adjust_Pout_Flag),f
	line	1213
;task.c: 1213: }
	goto	l23688
	line	1214
	
l23654:	
;task.c: 1214: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
	movlb 1	; select bank1
	movf	(_t1)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14065
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14065:
	skipc
	goto	u14061
	goto	u14060
u14061:
	goto	l23662
u14060:
	
l23656:	
	movlb 1	; select bank1
	movf	(_t2)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14075
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14075:
	skipnc
	goto	u14071
	goto	u14070
u14071:
	goto	l23662
u14070:
	
l23658:	
	movlw	(03h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u14081
	goto	u14080
u14081:
	goto	l23662
u14080:
	line	1216
	
l23660:	
;task.c: 1215: {
;task.c: 1216: Adjust_Pout_Flag=0x02;
	movlw	(02h)
	movwf	(_Adjust_Pout_Flag)
	line	1217
;task.c: 1217: }
	goto	l23688
	line	1218
	
l23662:	
;task.c: 1218: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
	movlb 1	; select bank1
	movf	(_t2)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14095
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14095:
	skipc
	goto	u14091
	goto	u14090
u14091:
	goto	l23670
u14090:
	
l23664:	
	movlb 1	; select bank1
	movf	(_t3)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14105
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14105:
	skipnc
	goto	u14101
	goto	u14100
u14101:
	goto	l23670
u14100:
	
l23666:	
	movlw	(04h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u14111
	goto	u14110
u14111:
	goto	l23670
u14110:
	line	1220
	
l23668:	
;task.c: 1219: {
;task.c: 1220: Adjust_Pout_Flag=0x03;
	movlw	(03h)
	movwf	(_Adjust_Pout_Flag)
	line	1221
;task.c: 1221: }
	goto	l23688
	line	1222
	
l23670:	
;task.c: 1222: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
	movlb 1	; select bank1
	movf	(_t3)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14125
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14125:
	skipc
	goto	u14121
	goto	u14120
u14121:
	goto	l23678
u14120:
	
l23672:	
	movlb 1	; select bank1
	movf	(_t4)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14135
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14135:
	skipnc
	goto	u14131
	goto	u14130
u14131:
	goto	l23678
u14130:
	
l23674:	
	movlw	(05h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u14141
	goto	u14140
u14141:
	goto	l23678
u14140:
	line	1224
	
l23676:	
;task.c: 1223: {
;task.c: 1224: Adjust_Pout_Flag=0x04;
	movlw	(04h)
	movwf	(_Adjust_Pout_Flag)
	line	1225
;task.c: 1225: }
	goto	l23688
	line	1226
	
l23678:	
;task.c: 1226: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
	movlb 1	; select bank1
	movf	(_t4)^080h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14155
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14155:
	skipc
	goto	u14151
	goto	u14150
u14151:
	goto	l23686
u14150:
	
l23680:	
	movlb 2	; select bank2
	movf	(_t5)^0100h,w
	movlb 0	; select bank0
	movwf	(??_handle_ad_loop+0)+0
	clrf	(??_handle_ad_loop+0)+0+1
	movf	1+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt+1),w
	skipz
	goto	u14165
	movf	0+(??_handle_ad_loop+0)+0,w
	subwf	(_ho_cnt),w
u14165:
	skipnc
	goto	u14161
	goto	u14160
u14161:
	goto	l23686
u14160:
	
l23682:	
	movlw	(06h)
	subwf	(_Adjust_Pout_Flag),w
	skipnc
	goto	u14171
	goto	u14170
u14171:
	goto	l23686
u14170:
	line	1228
	
l23684:	
;task.c: 1227: {
;task.c: 1228: Adjust_Pout_Flag=0x05;
	movlw	(05h)
	movwf	(_Adjust_Pout_Flag)
	line	1229
;task.c: 1229: }
	goto	l23688
	line	1232
	
l23686:	
;task.c: 1230: else
;task.c: 1231: {
;task.c: 1232: Adjust_Pout_Flag=0x00;
	clrf	(_Adjust_Pout_Flag)
	line	1236
	
l23688:	
;task.c: 1233: }
;task.c: 1236: if( ((load_cc_I/100)*0.30*step_05_load_percent) > (Load2_Pmax*30/(load_voltage2_value*61/1000)) )
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196)^0280h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196+2)^0280h
	
l23690:	
;task.c: 1233: }
;task.c: 1236: if( ((load_cc_I/100)*0.30*step_05_load_percent) > (Load2_Pmax*30/(load_voltage2_value*61/1000)) )
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(___lwdiv@divisor)
	movlw	high(03E8h)
	movwf	((___lwdiv@divisor))+1
	movlb 2	; select bank2
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	movlw	03Dh
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___lwdiv@dividend+1)
	movf	(0+(?___wmul)),w
	movwf	(___lwdiv@dividend)
	fcall	___lwdiv
	movf	(1+(?___lwdiv)),w
	movwf	(___lwtoft@c+1)
	movf	(0+(?___lwdiv)),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_Load2_Pmax)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_Load2_Pmax+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_Load2_Pmax+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftge@ff1+2)
	movlw	0x9a
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u14181
	goto	u14180
u14181:
	goto	l23722
u14180:
	line	1238
	
l23692:	
;task.c: 1237: {
;task.c: 1238: PID_CC2_discharge.SetPoint=(Load2_Pmax*30)/(load_voltage2_value*61/1000);
	movlw	low(03E8h)
	movwf	(___lwdiv@divisor)
	movlw	high(03E8h)
	movwf	((___lwdiv@divisor))+1
	movlb 2	; select bank2
	movf	(_load_voltage2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier+1)
	movlb 2	; select bank2
	movf	(_load_voltage2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___wmul@multiplier)
	movlw	03Dh
	movwf	(___wmul@multiplicand)
	clrf	(___wmul@multiplicand+1)
	fcall	___wmul
	movf	(1+(?___wmul)),w
	movwf	(___lwdiv@dividend+1)
	movf	(0+(?___wmul)),w
	movwf	(___lwdiv@dividend)
	fcall	___lwdiv
	movf	(1+(?___lwdiv)),w
	movwf	(___lwtoft@c+1)
	movf	(0+(?___lwdiv)),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftdiv@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftdiv@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftdiv@f2+2)
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_Load2_Pmax)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_Load2_Pmax+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_Load2_Pmax+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1240
	
l23694:	
;task.c: 1240: limit_power_pid2_flag=0x01;
	movlb 2	; select bank2
	clrf	(_limit_power_pid2_flag)^0100h
	incf	(_limit_power_pid2_flag)^0100h,f
	line	1242
	
l23696:	
;task.c: 1242: data_cc_var = PID_CC2_discharge.SetPoint;
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var)^0280h
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+1)^0280h
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+2)^0280h
	line	1244
	
l23698:	
;task.c: 1244: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u14191
	goto	u14190
u14191:
	goto	l23702
u14190:
	line	1246
	
l23700:	
;task.c: 1245: {
;task.c: 1246: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1247
;task.c: 1247: }
	goto	l23750
	line	1248
	
l23702:	
;task.c: 1248: else if(Adjust_Pout_Flag==0x02)
	movf	(_Adjust_Pout_Flag),w
	xorlw	02h&0ffh
	skipz
	goto	u14201
	goto	u14200
u14201:
	goto	l23706
u14200:
	line	1250
	
l23704:	
;task.c: 1249: {
;task.c: 1250: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1251
;task.c: 1251: }
	goto	l23750
	line	1252
	
l23706:	
;task.c: 1252: else if(Adjust_Pout_Flag==0x03)
	movf	(_Adjust_Pout_Flag),w
	xorlw	03h&0ffh
	skipz
	goto	u14211
	goto	u14210
u14211:
	goto	l23710
u14210:
	line	1254
	
l23708:	
;task.c: 1253: {
;task.c: 1254: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1255
;task.c: 1255: }
	goto	l23750
	line	1256
	
l23710:	
;task.c: 1256: else if(Adjust_Pout_Flag==0x04)
	movf	(_Adjust_Pout_Flag),w
	xorlw	04h&0ffh
	skipz
	goto	u14221
	goto	u14220
u14221:
	goto	l23714
u14220:
	line	1258
	
l23712:	
;task.c: 1257: {
;task.c: 1258: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1259
;task.c: 1259: }
	goto	l23750
	line	1260
	
l23714:	
;task.c: 1260: else if(Adjust_Pout_Flag==0x05)
	movf	(_Adjust_Pout_Flag),w
	xorlw	05h&0ffh
	skipz
	goto	u14231
	goto	u14230
u14231:
	goto	l23718
u14230:
	line	1262
	
l23716:	
;task.c: 1261: {
;task.c: 1262: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1263
;task.c: 1263: }
	goto	l23750
	line	1264
	
l23718:	
;task.c: 1264: else if(Adjust_Pout_Flag==0x00)
	movf	(_Adjust_Pout_Flag),f
	skipz
	goto	u14241
	goto	u14240
u14241:
	goto	l1894
u14240:
	line	1266
	
l23720:	
;task.c: 1265: {
;task.c: 1266: PID_CC2_discharge.SetPoint =0;
	movlb 4	; select bank4
	clrf	(_PID_CC2_discharge)^0200h
	clrf	(_PID_CC2_discharge+1)^0200h
	clrf	(_PID_CC2_discharge+2)^0200h
	goto	l23750
	line	1269
	
l1894:	
	goto	l23750
	line	1272
	
l23722:	
;task.c: 1270: else
;task.c: 1271: {
;task.c: 1272: PID_CC2_discharge.SetPoint=(load_cc_I/100)*0.30*step_05_load_percent;
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196)^0280h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 5	; select bank5
	movwf	(_handle_ad_loop$3196+2)^0280h
;task.c: 1270: else
;task.c: 1271: {
;task.c: 1272: PID_CC2_discharge.SetPoint=(load_cc_I/100)*0.30*step_05_load_percent;
	movlw	0x9a
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(_handle_ad_loop$3196+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1274
	
l23724:	
;task.c: 1274: data_cc_var = PID_CC2_discharge.SetPoint;
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var)^0280h
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+1)^0280h
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 5	; select bank5
	movwf	(handle_ad_loop@data_cc_var+2)^0280h
	line	1276
	
l23726:	
;task.c: 1276: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u14251
	goto	u14250
u14251:
	goto	l23730
u14250:
	line	1278
	
l23728:	
;task.c: 1277: {
;task.c: 1278: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_01_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_01_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1279
;task.c: 1279: }
	goto	l23750
	line	1280
	
l23730:	
;task.c: 1280: else if(Adjust_Pout_Flag==0x02)
	movf	(_Adjust_Pout_Flag),w
	xorlw	02h&0ffh
	skipz
	goto	u14261
	goto	u14260
u14261:
	goto	l23734
u14260:
	line	1282
	
l23732:	
;task.c: 1281: {
;task.c: 1282: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_02_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_02_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1283
;task.c: 1283: }
	goto	l23750
	line	1284
	
l23734:	
;task.c: 1284: else if(Adjust_Pout_Flag==0x03)
	movf	(_Adjust_Pout_Flag),w
	xorlw	03h&0ffh
	skipz
	goto	u14271
	goto	u14270
u14271:
	goto	l23738
u14270:
	line	1286
	
l23736:	
;task.c: 1285: {
;task.c: 1286: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_03_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_03_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1287
;task.c: 1287: }
	goto	l23750
	line	1288
	
l23738:	
;task.c: 1288: else if(Adjust_Pout_Flag==0x04)
	movf	(_Adjust_Pout_Flag),w
	xorlw	04h&0ffh
	skipz
	goto	u14281
	goto	u14280
u14281:
	goto	l23742
u14280:
	line	1290
	
l23740:	
;task.c: 1289: {
;task.c: 1290: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 2	; select bank2
	movf	(_step_04_load_percent)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 2	; select bank2
	movf	(_step_04_load_percent+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1291
;task.c: 1291: }
	goto	l23750
	line	1292
	
l23742:	
;task.c: 1292: else if(Adjust_Pout_Flag==0x05)
	movf	(_Adjust_Pout_Flag),w
	xorlw	05h&0ffh
	skipz
	goto	u14291
	goto	u14290
u14291:
	goto	l23746
u14290:
	line	1294
	
l23744:	
;task.c: 1293: {
;task.c: 1294: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftdiv@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftdiv@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftdiv)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1295
;task.c: 1295: }
	goto	l23750
	line	1296
	
l23746:	
;task.c: 1296: else if(Adjust_Pout_Flag==0x00)
	movf	(_Adjust_Pout_Flag),f
	skipz
	goto	u14301
	goto	u14300
u14301:
	goto	l1894
u14300:
	line	1298
	
l23748:	
;task.c: 1297: {
;task.c: 1298: PID_CC2_discharge.SetPoint =0;
	movlb 4	; select bank4
	clrf	(_PID_CC2_discharge)^0200h
	clrf	(_PID_CC2_discharge+1)^0200h
	clrf	(_PID_CC2_discharge+2)^0200h
	line	1303
	
l23750:	
;task.c: 1299: }
;task.c: 1301: }
;task.c: 1303: if(voltage_adjust_index==0x01)
	movlb 1	; select bank1
	decf	(_voltage_adjust_index)^080h,w
	skipz
	goto	u14311
	goto	u14310
u14311:
	goto	l23754
u14310:
	line	1305
	
l23752:	
;task.c: 1304: {
;task.c: 1305: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*1.0;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x80
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1306
;task.c: 1306: }
	goto	l23774
	line	1307
	
l23754:	
;task.c: 1307: else if(voltage_adjust_index==0x02)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14321
	goto	u14320
u14321:
	goto	l23758
u14320:
	line	1309
	
l23756:	
;task.c: 1308: {
;task.c: 1309: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.70;
	movlw	0x33
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x33
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1310
;task.c: 1310: }
	goto	l23774
	line	1311
	
l23758:	
;task.c: 1311: else if(voltage_adjust_index==0x03)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u14331
	goto	u14330
u14331:
	goto	l23762
u14330:
	line	1313
	
l23760:	
;task.c: 1312: {
;task.c: 1313: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.45;
	movlw	0x66
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xe6
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1314
;task.c: 1314: }
	goto	l23774
	line	1315
	
l23762:	
;task.c: 1315: else if(voltage_adjust_index==0x04)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	04h&0ffh
	skipz
	goto	u14341
	goto	u14340
u14341:
	goto	l23766
u14340:
	line	1317
	
l23764:	
;task.c: 1316: {
;task.c: 1317: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.25;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x80
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1318
;task.c: 1318: }
	goto	l23774
	line	1319
	
l23766:	
;task.c: 1319: else if(voltage_adjust_index==0x05)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u14351
	goto	u14350
u14351:
	goto	l23770
u14350:
	line	1321
	
l23768:	
;task.c: 1320: {
;task.c: 1321: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.15;
	movlw	0x9a
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x19
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1322
;task.c: 1322: }
	goto	l23774
	line	1323
	
l23770:	
;task.c: 1323: else if(voltage_adjust_index==0x06)
	movf	(_voltage_adjust_index)^080h,w
	xorlw	06h&0ffh
	skipz
	goto	u14361
	goto	u14360
u14361:
	goto	l1917
u14360:
	line	1325
	
l23772:	
;task.c: 1324: {
;task.c: 1325: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	goto	l23774
	line	1328
	
l1917:	
	
l23774:	
;task.c: 1326: }
;task.c: 1328: if(mcu_temp_index==0x01)
	movlb 1	; select bank1
	decf	(_mcu_temp_index)^080h,w
	skipz
	goto	u14371
	goto	u14370
u14371:
	goto	l23778
u14370:
	line	1330
	
l23776:	
;task.c: 1329: {
;task.c: 1330: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1331
;task.c: 1331: }
	goto	l23786
	line	1332
	
l23778:	
;task.c: 1332: else if(mcu_temp_index==0x02)
	movf	(_mcu_temp_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14381
	goto	u14380
u14381:
	goto	l23782
u14380:
	line	1334
	
l23780:	
;task.c: 1333: {
;task.c: 1334: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.2;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1335
;task.c: 1335: }
	goto	l23786
	line	1336
	
l23782:	
;task.c: 1336: else if(mcu_temp_index==0x03)
	movf	(_mcu_temp_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u14391
	goto	u14390
u14391:
	goto	l23786
u14390:
	line	1338
	
l23784:	
;task.c: 1337: {
;task.c: 1338: PID_CC2_discharge.SetPoint =0;
	movlb 4	; select bank4
	clrf	(_PID_CC2_discharge)^0200h
	clrf	(_PID_CC2_discharge+1)^0200h
	clrf	(_PID_CC2_discharge+2)^0200h
	line	1341
	
l23786:	
;task.c: 1339: }
;task.c: 1341: if(light2_mode==0x00 && work_mode==0x00)
	movlb 1	; select bank1
	movf	(_light2_mode)^080h,f
	skipz
	goto	u14401
	goto	u14400
u14401:
	goto	l23792
u14400:
	
l23788:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u14411
	goto	u14410
u14411:
	goto	l23792
u14410:
	line	1343
	
l23790:	
;task.c: 1342: {
;task.c: 1343: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1344
;task.c: 1344: }
	goto	l23818
	line	1345
	
l23792:	
;task.c: 1345: else if(light2_mode==0x01 && work_mode==0x00)
	decf	(_light2_mode)^080h,w
	skipz
	goto	u14421
	goto	u14420
u14421:
	goto	l23802
u14420:
	
l23794:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u14431
	goto	u14430
u14431:
	goto	l23802
u14430:
	line	1347
	
l23796:	
;task.c: 1346: {
;task.c: 1347: if(have_person1_flag==0x01 || have_person2_flag==0x01)
	decf	(_have_person1_flag)^080h,w
	skipnz
	goto	u14441
	goto	u14440
u14441:
	goto	l1933
u14440:
	
l23798:	
	decf	(_have_person2_flag)^080h,w
	skipz
	goto	u14451
	goto	u14450
u14451:
	goto	l23800
u14450:
	
l1933:	
	line	1349
;task.c: 1348: {
;task.c: 1349: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	1350
;task.c: 1350: }
	goto	l23818
	line	1353
	
l23800:	
;task.c: 1351: else
;task.c: 1352: {
;task.c: 1353: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	goto	l23818
	line	1356
	
l23802:	
;task.c: 1356: else if(light2_mode==0x02 && work_mode==0x00)
	movf	(_light2_mode)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14461
	goto	u14460
u14461:
	goto	l23818
u14460:
	
l23804:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u14471
	goto	u14470
u14471:
	goto	l23818
u14470:
	line	1358
	
l23806:	
;task.c: 1357: {
;task.c: 1358: if(Adjust_Pout_Flag==0x01)
	movlb 0	; select bank0
	decf	(_Adjust_Pout_Flag),w
	skipz
	goto	u14481
	goto	u14480
u14481:
	goto	l23810
u14480:
	line	1360
	
l23808:	
;task.c: 1359: {
;task.c: 1360: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
	movlw	0x0
	movwf	(___ftmul@f1)
	movlw	0x0
	movwf	(___ftmul@f1+1)
	movlw	0x3f
	movwf	(___ftmul@f1+2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1361
;task.c: 1361: }
	goto	l23818
	line	1362
	
l23810:	
;task.c: 1362: else if(Adjust_Pout_Flag>=0x02)
	movlw	(02h)
	subwf	(_Adjust_Pout_Flag),w
	skipc
	goto	u14491
	goto	u14490
u14491:
	goto	l23818
u14490:
	line	1364
	
l23812:	
;task.c: 1363: {
;task.c: 1364: if(have_person1_flag==0x01 || have_person2_flag==0x01)
	movlb 1	; select bank1
	decf	(_have_person1_flag)^080h,w
	skipnz
	goto	u14501
	goto	u14500
u14501:
	goto	l1933
u14500:
	
l23814:	
	decf	(_have_person2_flag)^080h,w
	skipz
	goto	u14511
	goto	u14510
u14511:
	goto	l23816
u14510:
	goto	l1933
	line	1370
	
l23816:	
;task.c: 1368: else
;task.c: 1369: {
;task.c: 1370: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
	movlw	0xcd
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0x4c
	movwf	(___ftmul@f1+1)
	movlw	0x3d
	movwf	(___ftmul@f1+2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 5	; select bank5
	movf	(handle_ad_loop@data_cc_var+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	1375
	
l23818:	
;task.c: 1371: }
;task.c: 1372: }
;task.c: 1373: }
;task.c: 1375: if(led_out_ctrl==0x01 && work_mode==0x00)
	movlb 1	; select bank1
	decf	(_led_out_ctrl)^080h,w
	skipz
	goto	u14521
	goto	u14520
u14521:
	goto	l1944
u14520:
	
l23820:	
	movf	(_work_mode)^080h,f
	skipz
	goto	u14531
	goto	u14530
u14531:
	goto	l1944
u14530:
	line	1377
	
l23822:	
;task.c: 1376: {
;task.c: 1377: PID_CC2_discharge.SetPoint = 0;
	movlb 4	; select bank4
	clrf	(_PID_CC2_discharge)^0200h
	clrf	(_PID_CC2_discharge+1)^0200h
	clrf	(_PID_CC2_discharge+2)^0200h
	line	1378
	
l1944:	
	line	1380
;task.c: 1378: }
;task.c: 1380: pid_index = 0x01;
	movlb 1	; select bank1
	clrf	(_pid_index)^080h
	incf	(_pid_index)^080h,f
	line	1382
	
l23824:	
;task.c: 1382: PWM_I2=pid_calc_2(&PID_CC2_discharge,discharge_current2_value);
	movlb 2	; select bank2
	movf	(_discharge_current2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(pid_calc_2@NowPoint+1)
	movlb 2	; select bank2
	movf	(_discharge_current2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(pid_calc_2@NowPoint)
	movlw	(_PID_CC2_discharge)&0ffh
	fcall	_pid_calc_2
	movf	(0+(?_pid_calc_2)),w
	movlb 5	; select bank5
	movwf	(_PWM_I2)^0280h
	movlb 0	; select bank0
	movf	(1+(?_pid_calc_2)),w
	movlb 5	; select bank5
	movwf	(_PWM_I2+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?_pid_calc_2)),w
	movlb 5	; select bank5
	movwf	(_PWM_I2+2)^0280h
	line	1384
	
l23826:	
;task.c: 1384: PWM2 = PWM2+PWM_I2;
	movf	(_PWM_I2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 5	; select bank5
	movf	(_PWM_I2+1)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 5	; select bank5
	movf	(_PWM_I2+2)^0280h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	movlb 3	; select bank3
	movf	(_PWM2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 3	; select bank3
	movf	(_PWM2+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 3	; select bank3
	movf	(_PWM2+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 3	; select bank3
	movwf	(_PWM2)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 3	; select bank3
	movwf	(_PWM2+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 3	; select bank3
	movwf	(_PWM2+2)^0180h
	line	1386
	
l23828:	
;task.c: 1386: if( PWM2>=488)
	movf	(_PWM2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_PWM2+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_PWM2+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xf4
	movwf	(___ftge@ff2+1)
	movlw	0x43
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14541
	goto	u14540
u14541:
	goto	l23832
u14540:
	line	1388
	
l23830:	
;task.c: 1387: {
;task.c: 1388: PWM2=488;
	movlw	0x0
	movlb 3	; select bank3
	movwf	(_PWM2)^0180h
	movlw	0xf4
	movwf	(_PWM2+1)^0180h
	movlw	0x43
	movwf	(_PWM2+2)^0180h
	line	1389
;task.c: 1389: }
	goto	l23836
	line	1390
	
l23832:	
;task.c: 1390: else if(PWM2<=5)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_PWM2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_PWM2+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_PWM2+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u14551
	goto	u14550
u14551:
	goto	l23836
u14550:
	line	1392
	
l23834:	
;task.c: 1391: {
;task.c: 1392: PWM2=5;
	movlw	0x0
	movlb 3	; select bank3
	movwf	(_PWM2)^0180h
	movlw	0xa0
	movwf	(_PWM2+1)^0180h
	movlw	0x40
	movwf	(_PWM2+2)^0180h
	line	1395
	
l23836:	
;task.c: 1393: }
;task.c: 1395: bost_pwm2_value = (unsigned int)PWM2;
	movlb 3	; select bank3
	movf	(_PWM2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 3	; select bank3
	movf	(_PWM2+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 3	; select bank3
	movf	(_PWM2+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	line	1397
	
l23838:	
;task.c: 1397: if(PID_CC2_discharge.SetPoint==0)
	movlb 4	; select bank4
	movf	(_PID_CC2_discharge+2)^0200h,w
	iorwf	(_PID_CC2_discharge+1)^0200h,w
	iorwf	(_PID_CC2_discharge)^0200h,w
	skipz
	goto	u14561
	goto	u14560
u14561:
	goto	l23842
u14560:
	line	1399
	
l23840:	
;task.c: 1398: {
;task.c: 1399: bost_pwm2_value = 0;
	movlb 1	; select bank1
	clrf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1402
	
l23842:	
;task.c: 1400: }
;task.c: 1402: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movlb 1	; select bank1
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1404
	
l23844:	
;task.c: 1404: limit_power_pid2_flag=0x00;
	movlb 2	; select bank2
	clrf	(_limit_power_pid2_flag)^0100h
	line	1407
;task.c: 1407: }
	goto	l23856
	line	1408
	
l23846:	
;task.c: 1408: else if((discharge_current2_value>discharge_i_limit)&&(discharge2_index==0x02))
	movlb 3	; select bank3
	movf	(_discharge_i_limit)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 3	; select bank3
	movf	(_discharge_i_limit+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_discharge_current2_value+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 2	; select bank2
	movf	(_discharge_current2_value)^0100h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u14571
	goto	u14570
u14571:
	goto	l23856
u14570:
	
l23848:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14581
	goto	u14580
u14581:
	goto	l23856
u14580:
	line	1410
	
l23850:	
;task.c: 1409: {
;task.c: 1410: if(bost_pwm2_value>10)
	movlw	high(0Bh)
	subwf	(_bost_pwm2_value+1)^080h,w
	movlw	low(0Bh)
	skipnz
	subwf	(_bost_pwm2_value)^080h,w
	skipc
	goto	u14591
	goto	u14590
u14591:
	goto	l23854
u14590:
	line	1412
	
l23852:	
;task.c: 1411: {
;task.c: 1412: bost_pwm2_value = bost_pwm2_value-1;
	movlw	low(0FFFFh)
	addwf	(_bost_pwm2_value)^080h,f
	movlw	high(0FFFFh)
	addwfc	(_bost_pwm2_value+1)^080h,f
	line	1415
	
l23854:	
;task.c: 1413: }
;task.c: 1415: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1418
	
l23856:	
;task.c: 1416: }
;task.c: 1418: battery_low_time_count=0;
	movlb 3	; select bank3
	clrf	(_battery_low_time_count)^0180h
	clrf	(_battery_low_time_count+1)^0180h
	line	1420
;task.c: 1420: }
	goto	l1866
	line	1421
	
l23858:	
;task.c: 1421: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge2_index==0x02))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_qianya_baohu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u14601
	goto	u14600
u14601:
	goto	l23856
u14600:
	
l23860:	
	movlb 1	; select bank1
	movf	(_discharge2_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u14611
	goto	u14610
u14611:
	goto	l23856
u14610:
	line	1424
	
l23862:	
;task.c: 1422: {
;task.c: 1424: battery_low_time_count++;
	movlb 3	; select bank3
	incf	(_battery_low_time_count)^0180h,f
	skipnz
	incf	(_battery_low_time_count+1)^0180h,f
	line	1426
	
l23864:	
;task.c: 1426: if(battery_low_time_count>1000)
	movlw	high(03E9h)
	subwf	(_battery_low_time_count+1)^0180h,w
	movlw	low(03E9h)
	skipnz
	subwf	(_battery_low_time_count)^0180h,w
	skipc
	goto	u14621
	goto	u14620
u14621:
	goto	l1866
u14620:
	line	1428
	
l23866:	
;task.c: 1427: {
;task.c: 1428: discharge2_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge2_index)^080h
	line	1430
;task.c: 1430: bost_pwm2_value=2;
	movlw	02h
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	1432
	
l23868:	
;task.c: 1432: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movf	(_bost_pwm2_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty+1)
	movlb 1	; select bank1
	movf	(_bost_pwm2_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	fcall	_Set_Bost_Pwm2_Duty
	line	1434
	
l23870:	
;task.c: 1436: discharge_led_status=0x00;
	movlb 3	; select bank3
	clrf	(_battery_low_time_count)^0180h
	clrf	(_battery_low_time_count+1)^0180h
	line	1438
;task.c: 1438: while(1);
	
l1955:	
	
l1956:	
	goto	l1955
	line	1447
	
l1866:	
	line	1449
;task.c: 1445: }
;task.c: 1447: }
;task.c: 1449: handle_an8_process_flag=0x00;
	movlb 2	; select bank2
	clrf	(_handle_an8_process_flag)^0100h
	line	1455
	
l1959:	
	return
	opt stack 0
GLOBAL	__end_of_handle_ad_loop
	__end_of_handle_ad_loop:
	signat	_handle_ad_loop,88
	global	_start_ad_convert

;; *************** function _start_ad_convert *****************
;; Defined at:
;;		line 1465 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
;; Parameters:    Size  Location     Type
;;  ch              1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  ch              1    0[BANK1 ] unsigned char 
;;  temp            2    5[BANK1 ] unsigned int 
;;  ad_l            2    3[BANK1 ] unsigned int 
;;  ad_h            2    1[BANK1 ] unsigned int 
;;  i               1    9[BANK1 ] unsigned char 
;;  j               1    8[BANK1 ] unsigned char 
;;  ad_ch           1    7[BANK1 ] unsigned char 
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;                  2   16[BANK0 ] unsigned int 
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1C/1
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0      50       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      52      10       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       62 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___lwdiv
;; This function is called by:
;;		_auto_system
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text12,local,class=CODE,delta=2,merge=1
	line	1465
global __ptext12
__ptext12:	;psect for function _start_ad_convert
psect	text12
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	1465
	global	__size_of_start_ad_convert
	__size_of_start_ad_convert	equ	__end_of_start_ad_convert-_start_ad_convert
	
_start_ad_convert:	
;incstack = 0
	opt	stack 10
; Regs used in _start_ad_convert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
;start_ad_convert@ch stored from wreg
	movlb 1	; select bank1
	movwf	(start_ad_convert@ch)^080h
	line	1477
	
l21798:	
	line	1479
	
l21800:	
;task.c: 1479: ad_ch=ch;
	movf	(start_ad_convert@ch)^080h,w
	movwf	(start_ad_convert@ad_ch)^080h
	line	1481
	
l21802:	
;task.c: 1481: ADCON0bits.CHS =ch;
	movf	(start_ad_convert@ch)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	rlf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+0,f
	movlb 1	; select bank1
	movf	(157)^080h,w	;volatile
	movlb 0	; select bank0
	xorwf	(??_start_ad_convert+0)+0,w
	andlw	not (((1<<5)-1)<<2)
	xorwf	(??_start_ad_convert+0)+0,w
	movlb 1	; select bank1
	movwf	(157)^080h	;volatile
	line	1483
	
l21804:	
;task.c: 1483: ADCON0bits.ADON =1;
	bsf	(157)^080h,0	;volatile
	line	1485
	
l21806:	
;task.c: 1485: if((ad_ch==0b00000)||(ad_ch==0b01000)||(ad_ch==0b01001))
	movf	(start_ad_convert@ad_ch)^080h,w
	skipz
	goto	u11760
	goto	l21812
u11760:
	
l21808:	
	movf	(start_ad_convert@ad_ch)^080h,w
	xorlw	08h&0ffh
	skipnz
	goto	u11771
	goto	u11770
u11771:
	goto	l21812
u11770:
	
l21810:	
	movf	(start_ad_convert@ad_ch)^080h,w
	xorlw	09h&0ffh
	skipz
	goto	u11781
	goto	u11780
u11781:
	goto	l21860
u11780:
	line	1487
	
l21812:	
;task.c: 1486: {
;task.c: 1487: for(i=0;i<51;i++)
	clrf	(start_ad_convert@i)^080h
	line	1489
	
l21818:	
;task.c: 1488: {
;task.c: 1489: _delay((unsigned long)((5)*(32000000/4000000.0)));
	opt asmopt_off
movlw	13
	movlb 0	; select bank0
movwf	(??_start_ad_convert+0)+0,f
u16447:
decfsz	(??_start_ad_convert+0)+0,f
	goto	u16447
opt asmopt_on

	line	1491
	
l21820:	
;task.c: 1491: ADCON0bits.GO=1;
	movlb 1	; select bank1
	bsf	(157)^080h,1	;volatile
	line	1493
;task.c: 1493: while(ADCON0bits.nDONE);
	
l1967:	
	btfsc	(157)^080h,1	;volatile
	goto	u11791
	goto	u11790
u11791:
	goto	l1967
u11790:
	line	1495
	
l21822:	
;task.c: 1495: ad_h=0b00000011&ADRESH;
	movf	(156)^080h,w	;volatile
	andlw	03h
	movwf	(start_ad_convert@ad_h)^080h
	clrf	(start_ad_convert@ad_h+1)^080h
	line	1497
	
l21824:	
;task.c: 1497: ad_l=ADRESL;
	movf	(155)^080h,w	;volatile
	movwf	(start_ad_convert@ad_l)^080h
	clrf	(start_ad_convert@ad_l+1)^080h
	line	1499
	
l21826:	
;task.c: 1499: adc_buffer[i]=(ad_h<<8)|ad_l;
	movf	(start_ad_convert@ad_h)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0+1
	clrf	(??_start_ad_convert+0)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@ad_l)^080h,w
	movlb 0	; select bank0
	iorwf	0+(??_start_ad_convert+0)+0,w
	movwf	(??_start_ad_convert+2)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@ad_l+1)^080h,w
	movlb 0	; select bank0
	iorwf	1+(??_start_ad_convert+0)+0,w
	movwf	1+(??_start_ad_convert+2)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+4)+0
	clrf	(??_start_ad_convert+4)+0+1
	lslf	(??_start_ad_convert+4)+0,f
	rlf	(??_start_ad_convert+4)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+6)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+6)+0+1
	movf	0+(??_start_ad_convert+4)+0,w
	addwf	0+(??_start_ad_convert+6)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+4)+0,w
	addwfc	1+(??_start_ad_convert+6)+0,w
	movwf	1+fsr1l
	movf	0+(??_start_ad_convert+2)+0,w
	movwi	[0]fsr1
	movf	1+(??_start_ad_convert+2)+0,w
	movwi	[1]fsr1
	line	1487
	
l21828:	
	movlb 1	; select bank1
	incf	(start_ad_convert@i)^080h,f
	
l21830:	
	movlw	(033h)
	subwf	(start_ad_convert@i)^080h,w
	skipc
	goto	u11801
	goto	u11800
u11801:
	goto	l21818
u11800:
	line	1501
	
l21832:	
;task.c: 1500: }
;task.c: 1501: for(j=0;j<50;j++)
	clrf	(start_ad_convert@j)^080h
	line	1503
	
l21838:	
;task.c: 1502: {
;task.c: 1503: for(i=0;i<50-j;i++)
	clrf	(start_ad_convert@i)^080h
	goto	l21850
	line	1505
	
l21840:	
;task.c: 1504: {
;task.c: 1505: if(adc_buffer[i]>adc_buffer[i+1])
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movwf	(??_start_ad_convert+4)+0
	moviw	[1]fsr1
	movwf	(??_start_ad_convert+4)+0+1
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+6)+0
	clrf	(??_start_ad_convert+6)+0+1
	lslf	(??_start_ad_convert+6)+0,f
	rlf	(??_start_ad_convert+6)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+8)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+8)+0+1
	movf	0+(??_start_ad_convert+6)+0,w
	addwf	0+(??_start_ad_convert+8)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+6)+0,w
	addwfc	1+(??_start_ad_convert+8)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movwf	(??_start_ad_convert+10)+0
	moviw	[1]fsr1
	movwf	(??_start_ad_convert+10)+0+1
	movf	1+(??_start_ad_convert+4)+0,w
	subwf	1+(??_start_ad_convert+10)+0,w
	skipz
	goto	u11815
	movf	0+(??_start_ad_convert+4)+0,w
	subwf	0+(??_start_ad_convert+10)+0,w
u11815:
	skipnc
	goto	u11811
	goto	u11810
u11811:
	goto	l21848
u11810:
	line	1507
	
l21842:	
;task.c: 1506: {
;task.c: 1507: temp=adc_buffer[i];
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movlb 1	; select bank1
	movwf	(start_ad_convert@temp)^080h
	moviw	[1]fsr1
	movwf	(start_ad_convert@temp+1)^080h
	line	1509
	
l21844:	
;task.c: 1509: adc_buffer[i]=adc_buffer[i+1];
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+4)+0
	clrf	(??_start_ad_convert+4)+0+1
	lslf	(??_start_ad_convert+4)+0,f
	rlf	(??_start_ad_convert+4)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+6)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+6)+0+1
	movf	0+(??_start_ad_convert+4)+0,w
	addwf	0+(??_start_ad_convert+6)+0,w
	movwf	fsr0l
	movf	1+(??_start_ad_convert+4)+0,w
	addwfc	1+(??_start_ad_convert+6)+0,w
	movwf	1+fsr0l
	moviw	[0]fsr1
	movwi	[0]fsr0
	moviw	[1]fsr1
	movwi	[1]fsr0
	line	1511
	
l21846:	
;task.c: 1511: adc_buffer[i+1]=temp;
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	movlb 1	; select bank1
	movf	(start_ad_convert@temp)^080h,w
	movwi	[0]fsr1
	movf	(start_ad_convert@temp+1)^080h,w
	movwi	[1]fsr1
	line	1503
	
l21848:	
	movlb 1	; select bank1
	incf	(start_ad_convert@i)^080h,f
	
l21850:	
	movlw	high(032h)
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0+1
	movlb 1	; select bank1
	movf	(start_ad_convert@j)^080h,w
	sublw	low(032h)
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	skipc
	decf	(??_start_ad_convert+0)+0+1,f
	movf	1+(??_start_ad_convert+0)+0,w
	xorlw	80h
	sublw	080h
	skipz
	goto	u11825
	movf	0+(??_start_ad_convert+0)+0,w
	movlb 1	; select bank1
	subwf	(start_ad_convert@i)^080h,w
u11825:

	skipc
	goto	u11821
	goto	u11820
u11821:
	goto	l21840
u11820:
	line	1501
	
l21852:	
	movlb 1	; select bank1
	incf	(start_ad_convert@j)^080h,f
	
l21854:	
	movlw	(032h)
	subwf	(start_ad_convert@j)^080h,w
	skipc
	goto	u11831
	goto	u11830
u11831:
	goto	l21838
u11830:
	
l1971:	
	line	1517
;task.c: 1512: }
;task.c: 1514: }
;task.c: 1515: }
;task.c: 1517: ADCON0bits.ADON =0;
	bcf	(157)^080h,0	;volatile
	line	1531
	
l21856:	
;task.c: 1519: return((adc_buffer[24]+adc_buffer[26]+
;task.c: 1520: adc_buffer[22]+adc_buffer[28]+
;task.c: 1521: adc_buffer[20]+adc_buffer[30]+
;task.c: 1522: adc_buffer[18]+adc_buffer[32]+
;task.c: 1523: adc_buffer[16]+adc_buffer[34]+
;task.c: 1524: adc_buffer[14]+adc_buffer[36]+
;task.c: 1525: adc_buffer[12]+adc_buffer[38]+
;task.c: 1526: adc_buffer[10]+adc_buffer[40]+
;task.c: 1527: adc_buffer[8]+adc_buffer[42]+
;task.c: 1528: adc_buffer[6]+adc_buffer[44]+
;task.c: 1529: adc_buffer[4]+adc_buffer[46]+
;task.c: 1530: adc_buffer[2]+adc_buffer[48]+
	movlw	01Ah
	movlb 0	; select bank0
	movwf	(___lwdiv@divisor)
	clrf	(___lwdiv@divisor+1)
	movlw	low(9072)
	movwf	fsr1l
	movlw	high(9072)
	movwf	fsr1h
	movlw	low (9072+(030h))
	movwf	fsr0l
	movlw	high (9072+(030h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	movwf	(??_start_ad_convert+0)+0
	moviw	[1]fsr0
	movwf	(??_start_ad_convert+0)+0+1
	movlw	low (9072+(034h))
	movwf	fsr0l
	movlw	high (9072+(034h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+0)+0,w
	movwf	(??_start_ad_convert+2)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+0)+0,w
	movwf	(??_start_ad_convert+2)+0+1
	movlw	low (9072+(02Ch))
	movwf	fsr0l
	movlw	high (9072+(02Ch))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	(??_start_ad_convert+4)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	(??_start_ad_convert+4)+0+1
	movlw	low (9072+(038h))
	movwf	fsr0l
	movlw	high (9072+(038h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+4)+0,w
	movwf	(??_start_ad_convert+6)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+4)+0,w
	movwf	(??_start_ad_convert+6)+0+1
	movlw	low (9072+(028h))
	movwf	fsr0l
	movlw	high (9072+(028h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+6)+0,w
	movwf	(??_start_ad_convert+8)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+6)+0,w
	movwf	(??_start_ad_convert+8)+0+1
	movlw	low (9072+(03Ch))
	movwf	fsr0l
	movlw	high (9072+(03Ch))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+8)+0,w
	movwf	(??_start_ad_convert+10)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+8)+0,w
	movwf	(??_start_ad_convert+10)+0+1
	movlw	low (9072+(024h))
	movwf	fsr0l
	movlw	high (9072+(024h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+10)+0,w
	movwf	(??_start_ad_convert+12)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+10)+0,w
	movwf	(??_start_ad_convert+12)+0+1
	movlw	low (9072+(040h))
	movwf	fsr0l
	movlw	high (9072+(040h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+12)+0,w
	movwf	(??_start_ad_convert+14)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+12)+0,w
	movwf	(??_start_ad_convert+14)+0+1
	movlw	low (9072+(020h))
	movwf	fsr0l
	movlw	high (9072+(020h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+14)+0,w
	movwf	(??_start_ad_convert+16)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+14)+0,w
	movwf	(??_start_ad_convert+16)+0+1
	movlw	low (9072+(044h))
	movwf	fsr0l
	movlw	high (9072+(044h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+16)+0,w
	movwf	(??_start_ad_convert+18)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+16)+0,w
	movwf	(??_start_ad_convert+18)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,01Ch
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+18)+0,w
	movwf	(??_start_ad_convert+20)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+18)+0,w
	movwf	(??_start_ad_convert+20)+0+1
	movlw	low (9072+(048h))
	movwf	fsr0l
	movlw	high (9072+(048h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+20)+0,w
	movwf	(??_start_ad_convert+22)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+20)+0,w
	movwf	(??_start_ad_convert+22)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,018h
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+22)+0,w
	movwf	(??_start_ad_convert+24)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+22)+0,w
	movwf	(??_start_ad_convert+24)+0+1
	movlw	low (9072+(04Ch))
	movwf	fsr0l
	movlw	high (9072+(04Ch))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+24)+0,w
	movwf	(??_start_ad_convert+26)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+24)+0,w
	movwf	(??_start_ad_convert+26)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,014h
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+26)+0,w
	movwf	(??_start_ad_convert+28)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+26)+0,w
	movwf	(??_start_ad_convert+28)+0+1
	movlw	low (9072+(050h))
	movwf	fsr0l
	movlw	high (9072+(050h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+28)+0,w
	movwf	(??_start_ad_convert+30)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+28)+0,w
	movwf	(??_start_ad_convert+30)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,010h
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+30)+0,w
	movwf	(??_start_ad_convert+32)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+30)+0,w
	movwf	(??_start_ad_convert+32)+0+1
	movlw	low (9072+(054h))
	movwf	fsr0l
	movlw	high (9072+(054h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+32)+0,w
	movwf	(??_start_ad_convert+34)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+32)+0,w
	movwf	(??_start_ad_convert+34)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,0Ch
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+34)+0,w
	movwf	(??_start_ad_convert+36)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+34)+0,w
	movwf	(??_start_ad_convert+36)+0+1
	movlw	low (9072+(058h))
	movwf	fsr0l
	movlw	high (9072+(058h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+36)+0,w
	movwf	(??_start_ad_convert+38)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+36)+0,w
	movwf	(??_start_ad_convert+38)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,08h
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+38)+0,w
	movwf	(??_start_ad_convert+40)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+38)+0,w
	movwf	(??_start_ad_convert+40)+0+1
	movlw	low (9072+(05Ch))
	movwf	fsr0l
	movlw	high (9072+(05Ch))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+40)+0,w
	movwf	(??_start_ad_convert+42)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+40)+0,w
	movwf	(??_start_ad_convert+42)+0+1
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,04h
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+42)+0,w
	movwf	(??_start_ad_convert+44)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+42)+0,w
	movwf	(??_start_ad_convert+44)+0+1
	movlw	low (9072+(060h))
	movwf	fsr0l
	movlw	high (9072+(060h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+44)+0,w
	movwf	(??_start_ad_convert+46)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+44)+0,w
	movwf	(??_start_ad_convert+46)+0+1
	movlw	low (9072+(064h))
	movwf	fsr0l
	movlw	high (9072+(064h))
	movwf	(fsr0l)+1
	moviw	[0]fsr0
	addwf	0+(??_start_ad_convert+46)+0,w
	movwf	(??_start_ad_convert+48)+0
	moviw	[1]fsr0
	addwfc	1+(??_start_ad_convert+46)+0,w
	movwf	(??_start_ad_convert+48)+0+1
	moviw	[0]fsr1
	addwf	0+(??_start_ad_convert+48)+0,w
	movwf	(___lwdiv@dividend)
	moviw	[1]fsr1
	addwfc	1+(??_start_ad_convert+48)+0,w
	movwf	(___lwdiv@dividend)+1
	fcall	___lwdiv
	movf	(1+(?___lwdiv)),w
	movwf	(?_start_ad_convert+1)
	movf	(0+(?___lwdiv)),w
	movwf	(?_start_ad_convert)
	goto	l1976
	line	1536
	
l21860:	
;task.c: 1532: }
;task.c: 1536: for(i=0;i<11;i++)
	clrf	(start_ad_convert@i)^080h
	line	1538
	
l21866:	
;task.c: 1537: {
;task.c: 1538: _delay((unsigned long)((10)*(32000000/4000000.0)));
	opt asmopt_off
movlw	26
	movlb 0	; select bank0
movwf	(??_start_ad_convert+0)+0,f
u16457:
decfsz	(??_start_ad_convert+0)+0,f
	goto	u16457
	nop
opt asmopt_on

	line	1540
	
l21868:	
;task.c: 1540: ADCON0bits.GO=1;
	movlb 1	; select bank1
	bsf	(157)^080h,1	;volatile
	line	1542
;task.c: 1542: while(ADCON0bits.nDONE);
	
l1979:	
	btfsc	(157)^080h,1	;volatile
	goto	u11841
	goto	u11840
u11841:
	goto	l1979
u11840:
	line	1544
	
l21870:	
;task.c: 1544: ad_h=0b00000011&ADRESH;
	movf	(156)^080h,w	;volatile
	andlw	03h
	movwf	(start_ad_convert@ad_h)^080h
	clrf	(start_ad_convert@ad_h+1)^080h
	line	1546
	
l21872:	
;task.c: 1546: ad_l=ADRESL;
	movf	(155)^080h,w	;volatile
	movwf	(start_ad_convert@ad_l)^080h
	clrf	(start_ad_convert@ad_l+1)^080h
	line	1548
	
l21874:	
;task.c: 1548: adc_buffer[i]=(ad_h<<8)|ad_l;
	movf	(start_ad_convert@ad_h)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0+1
	clrf	(??_start_ad_convert+0)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@ad_l)^080h,w
	movlb 0	; select bank0
	iorwf	0+(??_start_ad_convert+0)+0,w
	movwf	(??_start_ad_convert+2)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@ad_l+1)^080h,w
	movlb 0	; select bank0
	iorwf	1+(??_start_ad_convert+0)+0,w
	movwf	1+(??_start_ad_convert+2)+0
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+4)+0
	clrf	(??_start_ad_convert+4)+0+1
	lslf	(??_start_ad_convert+4)+0,f
	rlf	(??_start_ad_convert+4)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+6)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+6)+0+1
	movf	0+(??_start_ad_convert+4)+0,w
	addwf	0+(??_start_ad_convert+6)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+4)+0,w
	addwfc	1+(??_start_ad_convert+6)+0,w
	movwf	1+fsr1l
	movf	0+(??_start_ad_convert+2)+0,w
	movwi	[0]fsr1
	movf	1+(??_start_ad_convert+2)+0,w
	movwi	[1]fsr1
	line	1536
	
l21876:	
	movlb 1	; select bank1
	incf	(start_ad_convert@i)^080h,f
	
l21878:	
	movlw	(0Bh)
	subwf	(start_ad_convert@i)^080h,w
	skipc
	goto	u11851
	goto	u11850
u11851:
	goto	l21866
u11850:
	line	1551
	
l21880:	
;task.c: 1549: }
;task.c: 1551: for(j=0;j<11-1;j++)
	clrf	(start_ad_convert@j)^080h
	line	1553
	
l21886:	
;task.c: 1552: {
;task.c: 1553: for(i=0;i<11-j;i++)
	clrf	(start_ad_convert@i)^080h
	goto	l21898
	line	1555
	
l21888:	
;task.c: 1554: {
;task.c: 1555: if(adc_buffer[i]>adc_buffer[i+1])
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movwf	(??_start_ad_convert+4)+0
	moviw	[1]fsr1
	movwf	(??_start_ad_convert+4)+0+1
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+6)+0
	clrf	(??_start_ad_convert+6)+0+1
	lslf	(??_start_ad_convert+6)+0,f
	rlf	(??_start_ad_convert+6)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+8)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+8)+0+1
	movf	0+(??_start_ad_convert+6)+0,w
	addwf	0+(??_start_ad_convert+8)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+6)+0,w
	addwfc	1+(??_start_ad_convert+8)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movwf	(??_start_ad_convert+10)+0
	moviw	[1]fsr1
	movwf	(??_start_ad_convert+10)+0+1
	movf	1+(??_start_ad_convert+4)+0,w
	subwf	1+(??_start_ad_convert+10)+0,w
	skipz
	goto	u11865
	movf	0+(??_start_ad_convert+4)+0,w
	subwf	0+(??_start_ad_convert+10)+0,w
u11865:
	skipnc
	goto	u11861
	goto	u11860
u11861:
	goto	l21896
u11860:
	line	1557
	
l21890:	
;task.c: 1556: {
;task.c: 1557: temp=adc_buffer[i];
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	moviw	[0]fsr1
	movlb 1	; select bank1
	movwf	(start_ad_convert@temp)^080h
	moviw	[1]fsr1
	movwf	(start_ad_convert@temp+1)^080h
	line	1559
	
l21892:	
;task.c: 1559: adc_buffer[i]=adc_buffer[i+1];
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+4)+0
	clrf	(??_start_ad_convert+4)+0+1
	lslf	(??_start_ad_convert+4)+0,f
	rlf	(??_start_ad_convert+4)+1,f
	movlw	low(9072)
	movwf	(??_start_ad_convert+6)+0
	movlw	high(9072)
	movwf	(??_start_ad_convert+6)+0+1
	movf	0+(??_start_ad_convert+4)+0,w
	addwf	0+(??_start_ad_convert+6)+0,w
	movwf	fsr0l
	movf	1+(??_start_ad_convert+4)+0,w
	addwfc	1+(??_start_ad_convert+6)+0,w
	movwf	1+fsr0l
	moviw	[0]fsr1
	movwi	[0]fsr0
	moviw	[1]fsr1
	movwi	[1]fsr0
	line	1561
	
l21894:	
;task.c: 1561: adc_buffer[i+1]=temp;
	movlb 1	; select bank1
	movf	(start_ad_convert@i)^080h,w
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	clrf	(??_start_ad_convert+0)+0+1
	lslf	(??_start_ad_convert+0)+0,f
	rlf	(??_start_ad_convert+0)+1,f
	movlw	low(9072+02h)
	movwf	(??_start_ad_convert+2)+0
	movlw	high(9072+02h)
	movwf	(??_start_ad_convert+2)+0+1
	movf	0+(??_start_ad_convert+0)+0,w
	addwf	0+(??_start_ad_convert+2)+0,w
	movwf	fsr1l
	movf	1+(??_start_ad_convert+0)+0,w
	addwfc	1+(??_start_ad_convert+2)+0,w
	movwf	1+fsr1l
	movlb 1	; select bank1
	movf	(start_ad_convert@temp)^080h,w
	movwi	[0]fsr1
	movf	(start_ad_convert@temp+1)^080h,w
	movwi	[1]fsr1
	line	1553
	
l21896:	
	movlb 1	; select bank1
	incf	(start_ad_convert@i)^080h,f
	
l21898:	
	movlw	high(0Bh)
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0+1
	movlb 1	; select bank1
	movf	(start_ad_convert@j)^080h,w
	sublw	low(0Bh)
	movlb 0	; select bank0
	movwf	(??_start_ad_convert+0)+0
	skipc
	decf	(??_start_ad_convert+0)+0+1,f
	movf	1+(??_start_ad_convert+0)+0,w
	xorlw	80h
	sublw	080h
	skipz
	goto	u11875
	movf	0+(??_start_ad_convert+0)+0,w
	movlb 1	; select bank1
	subwf	(start_ad_convert@i)^080h,w
u11875:

	skipc
	goto	u11871
	goto	u11870
u11871:
	goto	l21888
u11870:
	line	1551
	
l21900:	
	movlb 1	; select bank1
	incf	(start_ad_convert@j)^080h,f
	
l21902:	
	movlw	(0Ah)
	subwf	(start_ad_convert@j)^080h,w
	skipc
	goto	u11881
	goto	u11880
u11881:
	goto	l21886
u11880:
	
l1983:	
	line	1567
;task.c: 1562: }
;task.c: 1564: }
;task.c: 1565: }
;task.c: 1567: ADCON0bits.ADON =0;
	bcf	(157)^080h,0	;volatile
	line	1569
	
l21904:	
;task.c: 1569: return((adc_buffer[((11-1)/2)-1]+adc_buffer[((11-1)/2)+1])/2);
	movlw	low(9072)
	movwf	fsr1l
	movlw	high(9072)
	movwf	fsr1h
	addfsr	fsr1,0Ch
	movlw	low(9072)
	movwf	fsr0l
	movlw	high(9072)
	movwf	fsr0h
	addfsr	fsr0,08h
	moviw	[0]fsr1
	addwf	indf0,w
	movlb 0	; select bank0
	movwf	(?_start_ad_convert)
	addfsr	fsr0,1
	moviw	[1]fsr1
	addwfc	indf0,w
	movwf	(?_start_ad_convert)+1
	
l21906:	
	lsrf	(?_start_ad_convert+1),f
	rrf	(?_start_ad_convert),f
	line	1572
	
l1976:	
	return
	opt stack 0
GLOBAL	__end_of_start_ad_convert
	__end_of_start_ad_convert:
	signat	_start_ad_convert,4218
	global	___lwdiv

;; *************** function ___lwdiv *****************
;; Defined at:
;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
;; Parameters:    Size  Location     Type
;;  divisor         2    9[BANK0 ] unsigned int 
;;  dividend        2   11[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  quotient        2   14[BANK0 ] unsigned int 
;;  counter         1   13[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    9[BANK0 ] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_ad_loop
;;		_start_ad_convert
;; This function uses a non-reentrant model
;;
psect	text13,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
	line	6
global __ptext13
__ptext13:	;psect for function ___lwdiv
psect	text13
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
	line	6
	global	__size_of___lwdiv
	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
	
___lwdiv:	
;incstack = 0
	opt	stack 10
; Regs used in ___lwdiv: [wreg+status,2+status,0]
	line	14
	
l25296:	
	clrf	(___lwdiv@quotient)
	clrf	(___lwdiv@quotient+1)
	line	15
	
l25298:	
	movf	(___lwdiv@divisor+1),w
	iorwf	(___lwdiv@divisor),w
	skipnz
	goto	u16381
	goto	u16380
u16381:
	goto	l25318
u16380:
	line	16
	
l25300:	
	clrf	(___lwdiv@counter)
	incf	(___lwdiv@counter),f
	line	17
	goto	l25304
	line	18
	
l25302:	
	lslf	(___lwdiv@divisor),f
	rlf	(___lwdiv@divisor+1),f
	line	19
	incf	(___lwdiv@counter),f
	line	17
	
l25304:	
	btfss	(___lwdiv@divisor+1),(15)&7
	goto	u16391
	goto	u16390
u16391:
	goto	l25302
u16390:
	line	22
	
l25306:	
	lslf	(___lwdiv@quotient),f
	rlf	(___lwdiv@quotient+1),f
	line	23
	
l25308:	
	movf	(___lwdiv@divisor+1),w
	subwf	(___lwdiv@dividend+1),w
	skipz
	goto	u16405
	movf	(___lwdiv@divisor),w
	subwf	(___lwdiv@dividend),w
u16405:
	skipc
	goto	u16401
	goto	u16400
u16401:
	goto	l25314
u16400:
	line	24
	
l25310:	
	movf	(___lwdiv@divisor),w
	subwf	(___lwdiv@dividend),f
	movf	(___lwdiv@divisor+1),w
	subwfb	(___lwdiv@dividend+1),f
	line	25
	
l25312:	
	bsf	(___lwdiv@quotient)+(0/8),(0)&7
	line	27
	
l25314:	
	lsrf	(___lwdiv@divisor+1),f
	rrf	(___lwdiv@divisor),f
	line	28
	
l25316:	
	decfsz	(___lwdiv@counter),f
	goto	u16411
	goto	u16410
u16411:
	goto	l25306
u16410:
	line	30
	
l25318:	
	movf	(___lwdiv@quotient+1),w
	movwf	(?___lwdiv+1)
	movf	(___lwdiv@quotient),w
	movwf	(?___lwdiv)
	line	31
	
l2811:	
	return
	opt stack 0
GLOBAL	__end_of___lwdiv
	__end_of___lwdiv:
	signat	___lwdiv,8314
	global	_pid_calc_2

;; *************** function _pid_calc_2 *****************
;; Defined at:
;;		line 133 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
;; Parameters:    Size  Location     Type
;;  pp              1    wreg     PTR struct PID_VAR
;;		 -> PID_CC2_discharge(21), 
;;  NowPoint        2   55[BANK0 ] int 
;; Auto vars:     Size  Location     Type
;;  pp              1   15[BANK1 ] PTR struct PID_VAR
;;		 -> PID_CC2_discharge(21), 
;;  Error           3   16[BANK1 ] float 
;;  PWM_var         3   12[BANK1 ] float 
;;  dk              3    9[BANK1 ] float 
;;  dError          3    0[BANK1 ] float 
;; Return value:  Size  Location     Type
;;                  3   55[BANK0 ] float 
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6      19       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       25 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awtoft
;;		___ftadd
;;		___ftge
;;		___ftmul
;;		___ftsub
;; This function is called by:
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text14,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	133
global __ptext14
__ptext14:	;psect for function _pid_calc_2
psect	text14
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	133
	global	__size_of_pid_calc_2
	__size_of_pid_calc_2	equ	__end_of_pid_calc_2-_pid_calc_2
	
_pid_calc_2:	
;incstack = 0
	opt	stack 9
; Regs used in _pid_calc_2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
;pid_calc_2@pp stored from wreg
	movlb 1	; select bank1
	movwf	(pid_calc_2@pp)^080h
	line	141
	
l24780:	
;PID.c: 135: float PWM_var;
;PID.c: 137: float dError, Error;
;PID.c: 139: float dk;
;PID.c: 141: dk=10.0;
	movlw	0x0
	movwf	(pid_calc_2@dk)^080h
	movlw	0x20
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x41
	movwf	(pid_calc_2@dk+2)^080h
	line	143
	
l24782:	
;PID.c: 143: Error = pp->SetPoint - NowPoint;
	movlb 0	; select bank0
	movf	(pid_calc_2@NowPoint+1),w
	movwf	(___awtoft@c+1)
	movf	(pid_calc_2@NowPoint),w
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movwf	(___ftsub@f2)
	movf	(1+(?___awtoft)),w
	movwf	(___ftsub@f2+1)
	movf	(2+(?___awtoft)),w
	movwf	(___ftsub@f2+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftsub@f1)
	moviw	[1]fsr1
	movwf	(___ftsub@f1+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f1+2)
	fcall	___ftsub
	movf	(0+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@Error)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@Error+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@Error+2)^080h
	line	145
	
l24784:	
;PID.c: 145: if(limit_power_pid2_flag==0x01)
	movlb 2	; select bank2
	decf	(_limit_power_pid2_flag)^0100h,w
	skipz
	goto	u15371
	goto	u15370
u15371:
	goto	l24800
u15370:
	line	147
	
l24786:	
;PID.c: 146: {
;PID.c: 147: if((Error<=2)&&(Error>=-2))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15381
	goto	u15380
u15381:
	goto	l24792
u15380:
	
l24788:	
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15391
	goto	u15390
u15391:
	goto	l24792
u15390:
	line	149
	
l24790:	
;PID.c: 148: {
;PID.c: 149: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc_2@Error)^080h
	clrf	(pid_calc_2@Error+1)^080h
	clrf	(pid_calc_2@Error+2)^080h
	line	150
;PID.c: 150: }
	goto	l24832
	line	151
	
l24792:	
;PID.c: 151: else if(Error>=4)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15401
	goto	u15400
u15401:
	goto	l24796
u15400:
	line	153
	
l24794:	
;PID.c: 152: {
;PID.c: 153: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0x48
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc_2@dk+2)^080h
	line	154
;PID.c: 154: }
	goto	l24832
	line	155
	
l24796:	
;PID.c: 155: else if(Error<=-4)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15411
	goto	u15410
u15411:
	goto	l1150
u15410:
	line	157
	
l24798:	
;PID.c: 156: {
;PID.c: 157: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0x48
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc_2@dk+2)^080h
	goto	l24832
	line	159
	
l1150:	
;PID.c: 158: }
;PID.c: 159: }
	goto	l24832
	line	162
	
l24800:	
;PID.c: 160: else
;PID.c: 161: {
;PID.c: 162: if(pid_index==0x01)
	movlb 1	; select bank1
	decf	(_pid_index)^080h,w
	skipz
	goto	u15421
	goto	u15420
u15421:
	goto	l24818
u15420:
	line	164
	
l24802:	
;PID.c: 163: {
;PID.c: 164: if((Error<=1)&&(Error>=-1))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0x3f
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15431
	goto	u15430
u15431:
	goto	l24808
u15430:
	
l24804:	
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0xbf
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15441
	goto	u15440
u15441:
	goto	l24808
u15440:
	line	166
	
l24806:	
;PID.c: 165: {
;PID.c: 166: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc_2@Error)^080h
	clrf	(pid_calc_2@Error+1)^080h
	clrf	(pid_calc_2@Error+2)^080h
	line	167
;PID.c: 167: }
	goto	l24832
	line	168
	
l24808:	
;PID.c: 168: else if(Error>=3)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x40
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15451
	goto	u15450
u15451:
	goto	l24812
u15450:
	line	170
	
l24810:	
;PID.c: 169: {
;PID.c: 170: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0x48
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc_2@dk+2)^080h
	line	171
;PID.c: 171: }
	goto	l24832
	line	172
	
l24812:	
;PID.c: 172: else if(Error<=-3)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x40
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15461
	goto	u15460
u15461:
	goto	l24816
u15460:
	line	174
	
l24814:	
;PID.c: 173: {
;PID.c: 174: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0x48
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc_2@dk+2)^080h
	line	175
;PID.c: 175: }
	goto	l24832
	line	178
	
l24816:	
;PID.c: 176: else
;PID.c: 177: {
;PID.c: 178: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0x48
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc_2@dk+2)^080h
	goto	l24832
	line	181
	
l24818:	
;PID.c: 181: else if(pid_index==0x02)
	movf	(_pid_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u15471
	goto	u15470
u15471:
	goto	l24832
u15470:
	line	183
	
l24820:	
;PID.c: 182: {
;PID.c: 183: if((Error<=1)&&(Error>=-1))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0x3f
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15481
	goto	u15480
u15481:
	goto	l24826
u15480:
	
l24822:	
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0xbf
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15491
	goto	u15490
u15491:
	goto	l24826
u15490:
	line	185
	
l24824:	
;PID.c: 184: {
;PID.c: 185: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc_2@Error)^080h
	clrf	(pid_calc_2@Error+1)^080h
	clrf	(pid_calc_2@Error+2)^080h
	line	186
;PID.c: 186: }
	goto	l24832
	line	187
	
l24826:	
;PID.c: 187: else if((Error>=2)||(Error<=-2))
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15501
	goto	u15500
u15501:
	goto	l24830
u15500:
	
l24828:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15511
	goto	u15510
u15511:
	goto	l24832
u15510:
	line	189
	
l24830:	
;PID.c: 188: {
;PID.c: 189: dk=100.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@dk)^080h
	movlw	0xc8
	movwf	(pid_calc_2@dk+1)^080h
	movlw	0x42
	movwf	(pid_calc_2@dk+2)^080h
	line	196
	
l24832:	
;PID.c: 190: }
;PID.c: 191: }
;PID.c: 193: }
;PID.c: 196: pp->SumError += Error;
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	moviw	[1]fsr1
	movwf	(___ftadd@f2+1)
	moviw	[2]fsr1
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	movlb 0	; select bank0
	movf	(0+(?___ftadd)),w
	movwi	[0]fsr1
	movf	(1+(?___ftadd)),w
	movwi	[1]fsr1
	movf	(2+(?___ftadd)),w
	movwi	[2]fsr1
	line	200
	
l24834:	
;PID.c: 200: if((pp->SumError)>=2) pp->SumError= 2;
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	moviw	[1]fsr1
	movwf	(___ftge@ff1+1)
	moviw	[2]fsr1
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15521
	goto	u15520
u15521:
	goto	l24838
u15520:
	
l24836:	
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	movlw	0x0
	movwi	[0]fsr1
	movlw	0x0
	movwi	[1]fsr1
	movlw	0x40
	movwi	[2]fsr1
	goto	l24842
	line	201
	
l24838:	
;PID.c: 201: else if((pp->SumError)<=-2) pp->SumError= -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	moviw	[1]fsr1
	movwf	(___ftge@ff2+1)
	moviw	[2]fsr1
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15531
	goto	u15530
u15531:
	goto	l24842
u15530:
	
l24840:	
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	movlw	0x0
	movwi	[0]fsr1
	movlw	0x0
	movwi	[1]fsr1
	movlw	0xc0
	movwi	[2]fsr1
	line	203
	
l24842:	
;PID.c: 203: dError = pp->LastError - pp->PrevError;
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	0Fh
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftsub@f2)
	moviw	[1]fsr1
	movwf	(___ftsub@f2+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f2+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	0Ch
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftsub@f1)
	moviw	[1]fsr1
	movwf	(___ftsub@f1+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f1+2)
	fcall	___ftsub
	movf	(0+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@dError)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@dError+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@dError+2)^080h
	line	205
	
l24844:	
;PID.c: 205: pp->PrevError = pp->LastError;
	movf	(pid_calc_2@pp)^080h,w
	addlw	0Ch
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	((??_pid_calc_2+0)+0)
	moviw	[1]fsr1
	movwf	((??_pid_calc_2+0)+0+1)
	moviw	[2]fsr1
	movwf	((??_pid_calc_2+0)+0+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	0Fh
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	movlb 0	; select bank0
	movf	0+(??_pid_calc_2+0)+0,w
	movwi	[0]fsr1
	movf	1+(??_pid_calc_2+0)+0,w
	movwi	[1]fsr1
	movf	2+(??_pid_calc_2+0)+0,w
	movwi	[2]fsr1
	line	207
	
l24846:	
;PID.c: 207: pp->LastError = Error;
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	0Ch
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	movf	(pid_calc_2@Error)^080h,w
	movwi	[0]fsr1
	movf	(pid_calc_2@Error+1)^080h,w
	movwi	[1]fsr1
	movf	(pid_calc_2@Error+2)^080h,w
	movwi	[2]fsr1
	line	209
	
l24848:	
;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	03h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3194)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3194+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3194+2)^080h
	
l24850:	
;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movf	(pid_calc_2@pp)^080h,w
	addlw	012h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	moviw	[1]fsr1
	movwf	(___ftmul@f1+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	06h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@dk)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc_2@dk+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@dk+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3194)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3194+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3194+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3195)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3195+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc_2$3195+2)^080h
	
l24852:	
;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movf	(pid_calc_2@dError)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc_2@dError+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@dError+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@pp)^080h,w
	addlw	09h
	movwf	fsr1l
	movlw 2	; select bank4/5
	movwf fsr1h	
	
	moviw	[0]fsr1
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3195)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3195+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 1	; select bank1
	movf	(_pid_calc_2$3195+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var+2)^080h
	line	212
	
l24854:	
;PID.c: 212: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x40
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15541
	goto	u15540
u15541:
	goto	l24858
u15540:
	
l24856:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15551
	goto	u15550
u15551:
	goto	l24862
u15550:
	
l24858:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x40
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15561
	goto	u15560
u15561:
	goto	l24870
u15560:
	
l24860:	
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15571
	goto	u15570
u15571:
	goto	l24870
u15570:
	line	214
	
l24862:	
;PID.c: 213: {
;PID.c: 214: if(PWM_var>=2)PWM_var = 2;
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15581
	goto	u15580
u15581:
	goto	l24866
u15580:
	
l24864:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	215
	
l24866:	
;PID.c: 215: else if(PWM_var <= -2)PWM_var = -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15591
	goto	u15590
u15591:
	goto	l1180
u15590:
	
l24868:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	217
	
l24870:	
;PID.c: 217: else if((Error>5)||(Error<-5))
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15601
	goto	u15600
u15601:
	goto	l24874
u15600:
	
l24872:	
	movlb 1	; select bank1
	movf	(pid_calc_2@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15611
	goto	u15610
u15611:
	goto	l24882
u15610:
	line	219
	
l24874:	
;PID.c: 218: {
;PID.c: 219: if(PWM_var>=5)PWM_var = 5;
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15621
	goto	u15620
u15621:
	goto	l24878
u15620:
	
l24876:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0xa0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	220
	
l24878:	
;PID.c: 220: else if(PWM_var <= -5)PWM_var = -5;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15631
	goto	u15630
u15631:
	goto	l1180
u15630:
	
l24880:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0xa0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	224
	
l24882:	
;PID.c: 222: else
;PID.c: 223: {
;PID.c: 224: if(have_person2_flag)
	movlb 1	; select bank1
	movf	(_have_person2_flag)^080h,w
	skipz
	goto	u15640
	goto	l24892
u15640:
	line	226
	
l24884:	
;PID.c: 225: {
;PID.c: 226: if(PWM_var>=0.5)PWM_var = 2;
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x3f
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15651
	goto	u15650
u15651:
	goto	l24888
u15650:
	
l24886:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	227
	
l24888:	
;PID.c: 227: else if(PWM_var <= -0.5)PWM_var = -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xbf
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15661
	goto	u15660
u15661:
	goto	l1180
u15660:
	
l24890:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	231
	
l24892:	
;PID.c: 229: else
;PID.c: 230: {
;PID.c: 231: if(PWM_var>=0.5)PWM_var = 0.5;
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x3f
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15671
	goto	u15670
u15671:
	goto	l24896
u15670:
	
l24894:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0x3f
	movwf	(pid_calc_2@PWM_var+2)^080h
	goto	l1180
	line	232
	
l24896:	
;PID.c: 232: else if(PWM_var <= -0.5)PWM_var = -0.5;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xbf
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15681
	goto	u15680
u15681:
	goto	l1180
u15680:
	
l24898:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc_2@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc_2@PWM_var+1)^080h
	movlw	0xbf
	movwf	(pid_calc_2@PWM_var+2)^080h
	line	235
	
l1180:	
	line	237
;PID.c: 233: }
;PID.c: 235: }
;PID.c: 237: return (PWM_var );
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc_2)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc_2+1)
	movlb 1	; select bank1
	movf	(pid_calc_2@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc_2+2)
	line	238
	
l1196:	
	return
	opt stack 0
GLOBAL	__end_of_pid_calc_2
	__end_of_pid_calc_2:
	signat	_pid_calc_2,8315
	global	___wmul

;; *************** function ___wmul *****************
;; Defined at:
;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      2    3[BANK0 ] unsigned int 
;;  multiplicand    2    5[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  product         2    7[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;                  2    3[BANK0 ] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text15,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
	line	4
global __ptext15
__ptext15:	;psect for function ___wmul
psect	text15
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
	line	4
	global	__size_of___wmul
	__size_of___wmul	equ	__end_of___wmul-___wmul
	
___wmul:	
;incstack = 0
	opt	stack 12
; Regs used in ___wmul: [wreg+status,2+status,0]
	line	20
	
l25326:	
	clrf	(___wmul@product)
	clrf	(___wmul@product+1)
	line	22
	
l25328:	
	btfss	(___wmul@multiplier),(0)&7
	goto	u16421
	goto	u16420
u16421:
	goto	l25332
u16420:
	line	23
	
l25330:	
	movf	(___wmul@multiplicand),w
	addwf	(___wmul@product),f
	movf	(___wmul@multiplicand+1),w
	addwfc	(___wmul@product+1),f
	line	24
	
l25332:	
	lslf	(___wmul@multiplicand),f
	rlf	(___wmul@multiplicand+1),f
	line	25
	
l25334:	
	lsrf	(___wmul@multiplier+1),f
	rrf	(___wmul@multiplier),f
	line	26
	
l25336:	
	movf	((___wmul@multiplier+1)),w
	iorwf	((___wmul@multiplier)),w
	skipz
	goto	u16431
	goto	u16430
u16431:
	goto	l25328
u16430:
	line	30
	
l25338:	
	movf	(___wmul@product+1),w
	movwf	(?___wmul+1)
	movf	(___wmul@product),w
	movwf	(?___wmul)
	line	31
	
l2844:	
	return
	opt stack 0
GLOBAL	__end_of___wmul
	__end_of___wmul:
	signat	___wmul,8314
	global	___lldiv

;; *************** function ___lldiv *****************
;; Defined at:
;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
;; Parameters:    Size  Location     Type
;;  divisor         4    3[BANK0 ] unsigned long 
;;  dividend        4    7[BANK0 ] unsigned long 
;; Auto vars:     Size  Location     Type
;;  quotient        4   11[BANK0 ] unsigned long 
;;  counter         1   15[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  4    3[BANK0 ] unsigned long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       13 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text16,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
	line	6
global __ptext16
__ptext16:	;psect for function ___lldiv
psect	text16
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
	line	6
	global	__size_of___lldiv
	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
	
___lldiv:	
;incstack = 0
	opt	stack 12
; Regs used in ___lldiv: [wreg+status,2+status,0]
	line	14
	
l25270:	
	clrf	(___lldiv@quotient)
	clrf	(___lldiv@quotient+1)
	clrf	(___lldiv@quotient+2)
	clrf	(___lldiv@quotient+3)
	line	15
	
l25272:	
	movf	(___lldiv@divisor+3),w
	iorwf	(___lldiv@divisor+2),w
	iorwf	(___lldiv@divisor+1),w
	iorwf	(___lldiv@divisor),w
	skipnz
	goto	u16341
	goto	u16340
u16341:
	goto	l25292
u16340:
	line	16
	
l25274:	
	clrf	(___lldiv@counter)
	incf	(___lldiv@counter),f
	line	17
	goto	l25278
	line	18
	
l25276:	
	lslf	(___lldiv@divisor),f
	rlf	(___lldiv@divisor+1),f
	rlf	(___lldiv@divisor+2),f
	rlf	(___lldiv@divisor+3),f
	line	19
	incf	(___lldiv@counter),f
	line	17
	
l25278:	
	btfss	(___lldiv@divisor+3),(31)&7
	goto	u16351
	goto	u16350
u16351:
	goto	l25276
u16350:
	line	22
	
l25280:	
	lslf	(___lldiv@quotient),f
	rlf	(___lldiv@quotient+1),f
	rlf	(___lldiv@quotient+2),f
	rlf	(___lldiv@quotient+3),f
	line	23
	
l25282:	
	movf	(___lldiv@divisor+3),w
	subwf	(___lldiv@dividend+3),w
	skipz
	goto	u16365
	movf	(___lldiv@divisor+2),w
	subwf	(___lldiv@dividend+2),w
	skipz
	goto	u16365
	movf	(___lldiv@divisor+1),w
	subwf	(___lldiv@dividend+1),w
	skipz
	goto	u16365
	movf	(___lldiv@divisor),w
	subwf	(___lldiv@dividend),w
u16365:
	skipc
	goto	u16361
	goto	u16360
u16361:
	goto	l25288
u16360:
	line	24
	
l25284:	
	movf	(___lldiv@divisor),w
	subwf	(___lldiv@dividend),f
	movf	(___lldiv@divisor+1),w
	subwfb	(___lldiv@dividend+1),f
	movf	(___lldiv@divisor+2),w
	subwfb	(___lldiv@dividend+2),f
	movf	(___lldiv@divisor+3),w
	subwfb	(___lldiv@dividend+3),f
	line	25
	
l25286:	
	bsf	(___lldiv@quotient)+(0/8),(0)&7
	line	27
	
l25288:	
	lsrf	(___lldiv@divisor+3),f
	rrf	(___lldiv@divisor+2),f
	rrf	(___lldiv@divisor+1),f
	rrf	(___lldiv@divisor),f
	line	28
	
l25290:	
	decfsz	(___lldiv@counter),f
	goto	u16371
	goto	u16370
u16371:
	goto	l25280
u16370:
	line	30
	
l25292:	
	movf	(___lldiv@quotient+3),w
	movwf	(?___lldiv+3)
	movf	(___lldiv@quotient+2),w
	movwf	(?___lldiv+2)
	movf	(___lldiv@quotient+1),w
	movwf	(?___lldiv+1)
	movf	(___lldiv@quotient),w
	movwf	(?___lldiv)

	line	31
	
l2752:	
	return
	opt stack 0
GLOBAL	__end_of___lldiv
	__end_of___lldiv:
	signat	___lldiv,8316
	global	_Mppt_Charge

;; *************** function _Mppt_Charge *****************
;; Defined at:
;;		line 2092 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/5
;;		On exit  : 1B/1
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_Set_Buck_Pwm_Duty
;;		___ftadd
;;		___ftge
;;		___fttol
;;		___lwtoft
;;		_pid_calc
;; This function is called by:
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text17,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	2092
global __ptext17
__ptext17:	;psect for function _Mppt_Charge
psect	text17
	file	"D:\MCUProject\ZH-SL-S4080-1\src\task.c"
	line	2092
	global	__size_of_Mppt_Charge
	__size_of_Mppt_Charge	equ	__end_of_Mppt_Charge-_Mppt_Charge
	
_Mppt_Charge:	
;incstack = 0
	opt	stack 8
; Regs used in _Mppt_Charge: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
	line	2095
	
l24904:	
;task.c: 2095: if((battery_voltage_value<dianchi_guoya_huifu)&&(charge_index==0x03))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_guoya_huifu+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15691
	goto	u15690
u15691:
	goto	l24956
u15690:
	
l24906:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u15701
	goto	u15700
u15701:
	goto	l24956
u15700:
	line	2098
	
l24908:	
;task.c: 2096: {
;task.c: 2098: if(mppt_status==0x00)
	movlb 2	; select bank2
	movf	(_mppt_status)^0100h,f
	skipz
	goto	u15711
	goto	u15710
u15711:
	goto	l24930
u15710:
	line	2100
	
l24910:	
;task.c: 2099: {
;task.c: 2100: if (charge_current_value>=I_prev)
	movlb 3	; select bank3
	movf	(_I_prev+1)^0180h,w
	movlb 1	; select bank1
	subwf	(_charge_current_value+1)^080h,w
	skipz
	goto	u15725
	movlb 3	; select bank3
	movf	(_I_prev)^0180h,w
	movlb 1	; select bank1
	subwf	(_charge_current_value)^080h,w
u15725:
	skipc
	goto	u15721
	goto	u15720
u15721:
	goto	l2024
u15720:
	line	2103
	
l24912:	
;task.c: 2101: {
;task.c: 2103: buck_pwm_value=buck_pwm_value + 200 * 0.025;
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftadd@f2+2)
	movlw	0x0
	movwf	(___ftadd@f1)
	movlw	0xa0
	movwf	(___ftadd@f1+1)
	movlw	0x40
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftadd)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftadd)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	2105
	
l24914:	
;task.c: 2105: if(buck_pwm_value>=900)
	movlw	high(0384h)
	subwf	(_buck_pwm_value+1)^080h,w
	movlw	low(0384h)
	skipnz
	subwf	(_buck_pwm_value)^080h,w
	skipc
	goto	u15731
	goto	u15730
u15731:
	goto	l24918
u15730:
	line	2107
	
l24916:	
;task.c: 2106: {
;task.c: 2107: buck_pwm_value=900;
	movlw	low(0384h)
	movwf	(_buck_pwm_value)^080h
	movlw	high(0384h)
	movwf	((_buck_pwm_value)^080h)+1
	line	2110
	
l24918:	
;task.c: 2108: }
;task.c: 2110: Set_Buck_Pwm_Duty(buck_pwm_value);
	movlb 1	; select bank1
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty)
	fcall	_Set_Buck_Pwm_Duty
	line	2112
;task.c: 2112: }
	goto	l24952
	line	2113
	
l2024:	
	line	2115
;task.c: 2113: else
;task.c: 2114: {
;task.c: 2115: mppt_status=1;
	movlb 2	; select bank2
	clrf	(_mppt_status)^0100h
	incf	(_mppt_status)^0100h,f
	line	2117
	
l24920:	
;task.c: 2117: buck_pwm_value=buck_pwm_value - 200 * 0.025;
	movlb 1	; select bank1
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftadd@f2+2)
	movlw	0x0
	movwf	(___ftadd@f1)
	movlw	0xa0
	movwf	(___ftadd@f1+1)
	movlw	0xc0
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftadd)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftadd)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	2119
	
l24922:	
;task.c: 2119: if(buck_pwm_value<=50)
	movlw	high(033h)
	subwf	(_buck_pwm_value+1)^080h,w
	movlw	low(033h)
	skipnz
	subwf	(_buck_pwm_value)^080h,w
	skipnc
	goto	u15741
	goto	u15740
u15741:
	goto	l24918
u15740:
	line	2121
	
l24924:	
;task.c: 2120: {
;task.c: 2121: buck_pwm_value=50;
	movlw	032h
	movwf	(_buck_pwm_value)^080h
	clrf	(_buck_pwm_value+1)^080h
	line	2123
	
l24926:	
;task.c: 2123: mppt_status=0;
	movlb 2	; select bank2
	clrf	(_mppt_status)^0100h
	goto	l24918
	line	2132
	
l24930:	
;task.c: 2130: else
;task.c: 2131: {
;task.c: 2132: if (charge_current_value>=I_prev)
	movlb 3	; select bank3
	movf	(_I_prev+1)^0180h,w
	movlb 1	; select bank1
	subwf	(_charge_current_value+1)^080h,w
	skipz
	goto	u15755
	movlb 3	; select bank3
	movf	(_I_prev)^0180h,w
	movlb 1	; select bank1
	subwf	(_charge_current_value)^080h,w
u15755:
	skipc
	goto	u15751
	goto	u15750
u15751:
	goto	l24942
u15750:
	line	2135
	
l24932:	
;task.c: 2133: {
;task.c: 2135: buck_pwm_value=buck_pwm_value-200 * 0.025;
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftadd@f2+2)
	movlw	0x0
	movwf	(___ftadd@f1)
	movlw	0xa0
	movwf	(___ftadd@f1+1)
	movlw	0xc0
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftadd)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftadd)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	2137
	
l24934:	
;task.c: 2137: if(buck_pwm_value<=50)
	movlw	high(033h)
	subwf	(_buck_pwm_value+1)^080h,w
	movlw	low(033h)
	skipnz
	subwf	(_buck_pwm_value)^080h,w
	skipnc
	goto	u15761
	goto	u15760
u15761:
	goto	l24918
u15760:
	goto	l24924
	line	2151
	
l24942:	
;task.c: 2149: else
;task.c: 2150: {
;task.c: 2151: mppt_status=0;
	movlb 2	; select bank2
	clrf	(_mppt_status)^0100h
	line	2153
	
l24944:	
;task.c: 2153: buck_pwm_value=buck_pwm_value+ 200 * 0.025;
	movlb 1	; select bank1
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftadd@f2+2)
	movlw	0x0
	movwf	(___ftadd@f1)
	movlw	0xa0
	movwf	(___ftadd@f1+1)
	movlw	0x40
	movwf	(___ftadd@f1+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(___fttol@f1)
	movf	(1+(?___ftadd)),w
	movwf	(___fttol@f1+1)
	movf	(2+(?___ftadd)),w
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	2155
	
l24946:	
;task.c: 2155: if(buck_pwm_value>=900)
	movlw	high(0384h)
	subwf	(_buck_pwm_value+1)^080h,w
	movlw	low(0384h)
	skipnz
	subwf	(_buck_pwm_value)^080h,w
	skipc
	goto	u15771
	goto	u15770
u15771:
	goto	l24918
u15770:
	goto	l24916
	line	2168
	
l24952:	
;task.c: 2162: }
;task.c: 2166: }
;task.c: 2168: PWM = buck_pwm_value;
	movlb 1	; select bank1
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlb 0	; select bank0
	movf	(1+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM+2)^080h
	line	2170
	
l24954:	
;task.c: 2170: cv_level_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_cv_level_time_count)^0280h
	clrf	(_cv_level_time_count+1)^0280h
	line	2172
;task.c: 2172: }
	goto	l2042
	line	2173
	
l24956:	
;task.c: 2173: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value<dianchi_guoya_baohu)&&(charge_index==0x03))
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15781
	goto	u15780
u15781:
	goto	l24972
u15780:
	
l24958:	
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15791
	goto	u15790
u15791:
	goto	l24972
u15790:
	
l24960:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,w
	xorlw	03h&0ffh
	skipz
	goto	u15801
	goto	u15800
u15801:
	goto	l24972
u15800:
	line	2175
	
l24962:	
;task.c: 2174: {
;task.c: 2175: cv_level_time_count++;
	movlb 5	; select bank5
	incf	(_cv_level_time_count)^0280h,f
	skipnz
	incf	(_cv_level_time_count+1)^0280h,f
	line	2177
	
l24964:	
;task.c: 2177: if(cv_level_time_count>=100)
	movlw	high(064h)
	subwf	(_cv_level_time_count+1)^0280h,w
	movlw	low(064h)
	skipnz
	subwf	(_cv_level_time_count)^0280h,w
	skipc
	goto	u15811
	goto	u15810
u15811:
	goto	l2042
u15810:
	line	2179
	
l24966:	
;task.c: 2178: {
;task.c: 2179: cv_level_time_count=0x00;
	clrf	(_cv_level_time_count)^0280h
	clrf	(_cv_level_time_count+1)^0280h
	line	2181
	
l24968:	
;task.c: 2181: charge_index=0x04;
	movlw	(04h)
	movlb 1	; select bank1
	movwf	(_charge_index)^080h
	line	2183
	
l24970:	
;task.c: 2183: PWM = buck_pwm_value;
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlb 0	; select bank0
	movf	(1+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___lwtoft)),w
	movlb 1	; select bank1
	movwf	(_PWM+2)^080h
	goto	l2042
	line	2187
	
l24972:	
;task.c: 2187: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index==0x04) )
	movlb 0	; select bank0
	movf	(_battery_voltage_value+1),w
	movwf	(___lwtoft@c+1)
	movf	(_battery_voltage_value),w
	movwf	(___lwtoft@c)
	fcall	___lwtoft
	movf	(0+(?___lwtoft)),w
	movwf	(___ftge@ff1)
	movf	(1+(?___lwtoft)),w
	movwf	(___ftge@ff1+1)
	movf	(2+(?___lwtoft)),w
	movwf	(___ftge@ff1+2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+1)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 2	; select bank2
	movf	(_dianchi_guoya_baohu+2)^0100h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15821
	goto	u15820
u15821:
	goto	l24954
u15820:
	
l24974:	
	movlb 1	; select bank1
	movf	(_charge_index)^080h,w
	xorlw	04h&0ffh
	skipz
	goto	u15831
	goto	u15830
u15831:
	goto	l24954
u15830:
	line	2189
	
l24976:	
;task.c: 2188: {
;task.c: 2189: pid_index = 0x02;
	movlw	(02h)
	movwf	(_pid_index)^080h
	line	2191
	
l24978:	
;task.c: 2191: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
	movlw	low(_PID_CV_charge)
	movlb 0	; select bank0
	movwf	(pid_calc@pp)
	movlw	high(_PID_CV_charge)
	movwf	(pid_calc@pp+1)
	movf	(_battery_voltage_value+1),w
	movwf	(pid_calc@NowPoint+1)
	movf	(_battery_voltage_value),w
	movwf	(pid_calc@NowPoint)
	fcall	_pid_calc
	movf	(0+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I)^0200h
	movlb 0	; select bank0
	movf	(1+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?_pid_calc)),w
	movlb 4	; select bank4
	movwf	(_PWM_I+2)^0200h
	line	2193
	
l24980:	
;task.c: 2193: PWM = PWM+PWM_I;
	movf	(_PWM_I)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 4	; select bank4
	movf	(_PWM_I+1)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 4	; select bank4
	movf	(_PWM_I+2)^0200h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_PWM+2)^080h
	line	2195
	
l24982:	
;task.c: 2195: if( PWM>=900)
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x61
	movwf	(___ftge@ff2+1)
	movlw	0x44
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15841
	goto	u15840
u15841:
	goto	l24986
u15840:
	line	2197
	
l24984:	
;task.c: 2196: {
;task.c: 2197: PWM=900;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0x61
	movwf	(_PWM+1)^080h
	movlw	0x44
	movwf	(_PWM+2)^080h
	line	2198
;task.c: 2198: }
	goto	l24990
	line	2199
	
l24986:	
;task.c: 2199: else if(PWM<=50)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x48
	movwf	(___ftge@ff1+1)
	movlw	0x42
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15851
	goto	u15850
u15851:
	goto	l24990
u15850:
	line	2201
	
l24988:	
;task.c: 2200: {
;task.c: 2201: PWM=50;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(_PWM)^080h
	movlw	0x48
	movwf	(_PWM+1)^080h
	movlw	0x42
	movwf	(_PWM+2)^080h
	line	2203
	
l24990:	
;task.c: 2202: }
;task.c: 2203: buck_pwm_value = (unsigned int)PWM;
	movlb 1	; select bank1
	movf	(_PWM)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1)
	movlb 1	; select bank1
	movf	(_PWM+1)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+1)
	movlb 1	; select bank1
	movf	(_PWM+2)^080h,w
	movlb 0	; select bank0
	movwf	(___fttol@f1+2)
	fcall	___fttol
	movf	1+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	0+(((0+(?___fttol)))),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	2205
	
l24992:	
;task.c: 2205: Set_Buck_Pwm_Duty(buck_pwm_value);
	movf	(_buck_pwm_value+1)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty+1)
	movlb 1	; select bank1
	movf	(_buck_pwm_value)^080h,w
	movlb 0	; select bank0
	movwf	(Set_Buck_Pwm_Duty@duty)
	fcall	_Set_Buck_Pwm_Duty
	line	2212
;task.c: 2206: }
	
l2042:	
	return
	opt stack 0
GLOBAL	__end_of_Mppt_Charge
	__end_of_Mppt_Charge:
	signat	_Mppt_Charge,88
	global	_pid_calc

;; *************** function _pid_calc *****************
;; Defined at:
;;		line 24 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
;; Parameters:    Size  Location     Type
;;  pp              2   55[BANK0 ] PTR struct PID_VAR
;;		 -> PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
;;  NowPoint        2   57[BANK0 ] int 
;; Auto vars:     Size  Location     Type
;;  Error           3   15[BANK1 ] float 
;;  PWM_var         3   12[BANK1 ] float 
;;  dk              3    9[BANK1 ] float 
;;  dError          3    0[BANK1 ] float 
;; Return value:  Size  Location     Type
;;                  3   55[BANK0 ] float 
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       25 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awtoft
;;		___ftadd
;;		___ftge
;;		___ftmul
;;		___ftsub
;; This function is called by:
;;		_handle_ad_loop
;;		_Mppt_Charge
;; This function uses a non-reentrant model
;;
psect	text18,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	24
global __ptext18
__ptext18:	;psect for function _pid_calc
psect	text18
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	24
	global	__size_of_pid_calc
	__size_of_pid_calc	equ	__end_of_pid_calc-_pid_calc
	
_pid_calc:	
;incstack = 0
	opt	stack 9
; Regs used in _pid_calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
	line	32
	
l24658:	
;PID.c: 26: float PWM_var;
;PID.c: 28: float dError, Error;
;PID.c: 30: float dk;
;PID.c: 32: dk=10.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x20
	movwf	(pid_calc@dk+1)^080h
	movlw	0x41
	movwf	(pid_calc@dk+2)^080h
	line	34
	
l24660:	
;PID.c: 34: Error = pp->SetPoint - NowPoint;
	movlb 0	; select bank0
	movf	(pid_calc@NowPoint+1),w
	movwf	(___awtoft@c+1)
	movf	(pid_calc@NowPoint),w
	movwf	(___awtoft@c)
	fcall	___awtoft
	movf	(0+(?___awtoft)),w
	movwf	(___ftsub@f2)
	movf	(1+(?___awtoft)),w
	movwf	(___ftsub@f2+1)
	movf	(2+(?___awtoft)),w
	movwf	(___ftsub@f2+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h

	moviw	[0]fsr1
	movwf	(___ftsub@f1)
	moviw	[1]fsr1
	movwf	(___ftsub@f1+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f1+2)
	fcall	___ftsub
	movf	(0+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@Error)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@Error+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@Error+2)^080h
	line	36
	
l24662:	
;PID.c: 36: if(limit_power_pid_flag==0x01)
	movlb 2	; select bank2
	decf	(_limit_power_pid_flag)^0100h,w
	skipz
	goto	u15051
	goto	u15050
u15051:
	goto	l24678
u15050:
	line	38
	
l24664:	
;PID.c: 37: {
;PID.c: 38: if((Error<=2)&&(Error>=-2))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15061
	goto	u15060
u15061:
	goto	l24670
u15060:
	
l24666:	
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15071
	goto	u15070
u15071:
	goto	l24670
u15070:
	line	40
	
l24668:	
;PID.c: 39: {
;PID.c: 40: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc@Error)^080h
	clrf	(pid_calc@Error+1)^080h
	clrf	(pid_calc@Error+2)^080h
	line	41
;PID.c: 41: }
	goto	l24710
	line	42
	
l24670:	
;PID.c: 42: else if(Error>=4)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15081
	goto	u15080
u15081:
	goto	l24674
u15080:
	line	44
	
l24672:	
;PID.c: 43: {
;PID.c: 44: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x48
	movwf	(pid_calc@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc@dk+2)^080h
	line	45
;PID.c: 45: }
	goto	l24710
	line	46
	
l24674:	
;PID.c: 46: else if(Error<=-4)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15091
	goto	u15090
u15091:
	goto	l1099
u15090:
	line	48
	
l24676:	
;PID.c: 47: {
;PID.c: 48: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x48
	movwf	(pid_calc@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc@dk+2)^080h
	goto	l24710
	line	50
	
l1099:	
;PID.c: 49: }
;PID.c: 50: }
	goto	l24710
	line	53
	
l24678:	
;PID.c: 51: else
;PID.c: 52: {
;PID.c: 53: if(pid_index==0x01)
	movlb 1	; select bank1
	decf	(_pid_index)^080h,w
	skipz
	goto	u15101
	goto	u15100
u15101:
	goto	l24696
u15100:
	line	55
	
l24680:	
;PID.c: 54: {
;PID.c: 55: if((Error<=1)&&(Error>=-1))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0x3f
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15111
	goto	u15110
u15111:
	goto	l24686
u15110:
	
l24682:	
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0xbf
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15121
	goto	u15120
u15121:
	goto	l24686
u15120:
	line	57
	
l24684:	
;PID.c: 56: {
;PID.c: 57: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc@Error)^080h
	clrf	(pid_calc@Error+1)^080h
	clrf	(pid_calc@Error+2)^080h
	line	58
;PID.c: 58: }
	goto	l24710
	line	59
	
l24686:	
;PID.c: 59: else if(Error>=3)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x40
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15131
	goto	u15130
u15131:
	goto	l24690
u15130:
	line	61
	
l24688:	
;PID.c: 60: {
;PID.c: 61: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x48
	movwf	(pid_calc@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc@dk+2)^080h
	line	62
;PID.c: 62: }
	goto	l24710
	line	63
	
l24690:	
;PID.c: 63: else if(Error<=-3)
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x40
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15141
	goto	u15140
u15141:
	goto	l24694
u15140:
	line	65
	
l24692:	
;PID.c: 64: {
;PID.c: 65: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x48
	movwf	(pid_calc@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc@dk+2)^080h
	line	66
;PID.c: 66: }
	goto	l24710
	line	69
	
l24694:	
;PID.c: 67: else
;PID.c: 68: {
;PID.c: 69: dk=200.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0x48
	movwf	(pid_calc@dk+1)^080h
	movlw	0x43
	movwf	(pid_calc@dk+2)^080h
	goto	l24710
	line	72
	
l24696:	
;PID.c: 72: else if(pid_index==0x02)
	movf	(_pid_index)^080h,w
	xorlw	02h&0ffh
	skipz
	goto	u15151
	goto	u15150
u15151:
	goto	l24710
u15150:
	line	74
	
l24698:	
;PID.c: 73: {
;PID.c: 74: if((Error<=1)&&(Error>=-1))
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlw	0x80
	movwf	(___ftge@ff1+1)
	movlw	0x3f
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15161
	goto	u15160
u15161:
	goto	l24704
u15160:
	
l24700:	
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x80
	movwf	(___ftge@ff2+1)
	movlw	0xbf
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15171
	goto	u15170
u15171:
	goto	l24704
u15170:
	line	76
	
l24702:	
;PID.c: 75: {
;PID.c: 76: Error=0;
	movlb 1	; select bank1
	clrf	(pid_calc@Error)^080h
	clrf	(pid_calc@Error+1)^080h
	clrf	(pid_calc@Error+2)^080h
	line	77
;PID.c: 77: }
	goto	l24710
	line	78
	
l24704:	
;PID.c: 78: else if((Error>=2)||(Error<=-2))
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15181
	goto	u15180
u15181:
	goto	l24708
u15180:
	
l24706:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15191
	goto	u15190
u15191:
	goto	l24710
u15190:
	line	80
	
l24708:	
;PID.c: 79: {
;PID.c: 80: dk=100.0;
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@dk)^080h
	movlw	0xc8
	movwf	(pid_calc@dk+1)^080h
	movlw	0x42
	movwf	(pid_calc@dk+2)^080h
	line	87
	
l24710:	
;PID.c: 81: }
;PID.c: 82: }
;PID.c: 84: }
;PID.c: 87: pp->SumError += Error;
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f1+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	moviw	[0]fsr1
	movwf	(___ftadd@f2)
	moviw	[1]fsr1
	movwf	(___ftadd@f2+1)
	moviw	[2]fsr1
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	movf	(0+(?___ftadd)),w
	movwi	[0]fsr1
	movf	(1+(?___ftadd)),w
	movwi	[1]fsr1
	movf	(2+(?___ftadd)),w
	movwi	[2]fsr1
	line	91
	
l24712:	
;PID.c: 91: if((pp->SumError)>=2) pp->SumError= 2;
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	moviw	[0]fsr1
	movwf	(___ftge@ff1)
	moviw	[1]fsr1
	movwf	(___ftge@ff1+1)
	moviw	[2]fsr1
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15201
	goto	u15200
u15201:
	goto	l24716
u15200:
	
l24714:	
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	movlw	0x0
	movwi	[0]fsr1
	movlw	0x0
	movwi	[1]fsr1
	movlw	0x40
	movwi	[2]fsr1
	goto	l24720
	line	92
	
l24716:	
;PID.c: 92: else if((pp->SumError)<=-2) pp->SumError= -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	moviw	[0]fsr1
	movwf	(___ftge@ff2)
	moviw	[1]fsr1
	movwf	(___ftge@ff2+1)
	moviw	[2]fsr1
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15211
	goto	u15210
u15211:
	goto	l24720
u15210:
	
l24718:	
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	movlw	0x0
	movwi	[0]fsr1
	movlw	0x0
	movwi	[1]fsr1
	movlw	0xc0
	movwi	[2]fsr1
	line	94
	
l24720:	
;PID.c: 94: dError = pp->LastError - pp->PrevError;
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,0Fh
	moviw	[0]fsr1
	movwf	(___ftsub@f2)
	moviw	[1]fsr1
	movwf	(___ftsub@f2+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f2+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,0Ch
	moviw	[0]fsr1
	movwf	(___ftsub@f1)
	moviw	[1]fsr1
	movwf	(___ftsub@f1+1)
	moviw	[2]fsr1
	movwf	(___ftsub@f1+2)
	fcall	___ftsub
	movf	(0+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@dError)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@dError+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftsub)),w
	movlb 1	; select bank1
	movwf	(pid_calc@dError+2)^080h
	line	96
	
l24722:	
;PID.c: 96: pp->PrevError = pp->LastError;
	movlb 0	; select bank0
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,0Ch
	moviw	[0]fsr1
	movwf	((??_pid_calc+0)+0)
	moviw	[1]fsr1
	movwf	((??_pid_calc+0)+0+1)
	moviw	[2]fsr1
	movwf	((??_pid_calc+0)+0+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,0Fh
	movf	0+(??_pid_calc+0)+0,w
	movwi	[0]fsr1
	movf	1+(??_pid_calc+0)+0,w
	movwi	[1]fsr1
	movf	2+(??_pid_calc+0)+0,w
	movwi	[2]fsr1
	line	98
	
l24724:	
;PID.c: 98: pp->LastError = Error;
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,0Ch
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movwi	[0]fsr1
	movf	(pid_calc@Error+1)^080h,w
	movwi	[1]fsr1
	movf	(pid_calc@Error+2)^080h,w
	movwi	[2]fsr1
	line	100
	
l24726:	
;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,03h
	moviw	[0]fsr1
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3192)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3192+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3192+2)^080h
	
l24728:	
;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movlb 0	; select bank0
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,012h
	moviw	[0]fsr1
	movwf	(___ftmul@f1)
	moviw	[1]fsr1
	movwf	(___ftmul@f1+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f1+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,06h
	moviw	[0]fsr1
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(pid_calc@dk)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc@dk+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc@dk+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlb 1	; select bank1
	movf	(_pid_calc$3192)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2)
	movlb 1	; select bank1
	movf	(_pid_calc$3192+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+1)
	movlb 1	; select bank1
	movf	(_pid_calc$3192+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f2)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f2+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3193)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3193+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(_pid_calc$3193+2)^080h
	
l24730:	
;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Derivative * dError ) ;
	movf	(pid_calc@dError)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(pid_calc@dError+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(pid_calc@dError+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movf	(pid_calc@pp),w
	movwf	fsr1l
	movf	(pid_calc@pp+1),w
	movwf	fsr1h
	addfsr	fsr1,09h
	moviw	[0]fsr1
	movwf	(___ftmul@f2)
	moviw	[1]fsr1
	movwf	(___ftmul@f2+1)
	moviw	[2]fsr1
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(___ftadd@f1)
	movf	(1+(?___ftmul)),w
	movwf	(___ftadd@f1+1)
	movf	(2+(?___ftmul)),w
	movwf	(___ftadd@f1+2)
	movlb 1	; select bank1
	movf	(_pid_calc$3193)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 1	; select bank1
	movf	(_pid_calc$3193+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 1	; select bank1
	movf	(_pid_calc$3193+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var+1)^080h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var+2)^080h
	line	103
	
l24732:	
;PID.c: 103: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x40
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15221
	goto	u15220
u15221:
	goto	l24736
u15220:
	
l24734:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15231
	goto	u15230
u15231:
	goto	l24740
u15230:
	
l24736:	
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x40
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15241
	goto	u15240
u15241:
	goto	l24748
u15240:
	
l24738:	
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15251
	goto	u15250
u15251:
	goto	l24748
u15250:
	line	105
	
l24740:	
;PID.c: 104: {
;PID.c: 105: if(PWM_var>=2)PWM_var = 2;
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15261
	goto	u15260
u15261:
	goto	l24744
u15260:
	
l24742:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	106
	
l24744:	
;PID.c: 106: else if(PWM_var <= -2)PWM_var = -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15271
	goto	u15270
u15271:
	goto	l1129
u15270:
	
l24746:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	108
	
l24748:	
;PID.c: 108: else if((Error>5)||(Error<-5))
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0x40
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15281
	goto	u15280
u15281:
	goto	l24752
u15280:
	
l24750:	
	movlb 1	; select bank1
	movf	(pid_calc@Error)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@Error+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0xc0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfsc	status,0
	goto	u15291
	goto	u15290
u15291:
	goto	l24760
u15290:
	line	110
	
l24752:	
;PID.c: 109: {
;PID.c: 110: if(PWM_var>=5)PWM_var = 5;
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0xa0
	movwf	(___ftge@ff2+1)
	movlw	0x40
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15301
	goto	u15300
u15301:
	goto	l24756
u15300:
	
l24754:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0xa0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	111
	
l24756:	
;PID.c: 111: else if(PWM_var <= -5)PWM_var = -5;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0xa0
	movwf	(___ftge@ff1+1)
	movlw	0xc0
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15311
	goto	u15310
u15311:
	goto	l1129
u15310:
	
l24758:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0xa0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	115
	
l24760:	
;PID.c: 113: else
;PID.c: 114: {
;PID.c: 115: if(have_person1_flag)
	movlb 1	; select bank1
	movf	(_have_person1_flag)^080h,w
	skipz
	goto	u15320
	goto	l24770
u15320:
	line	117
	
l24762:	
;PID.c: 116: {
;PID.c: 117: if(PWM_var>=0.5)PWM_var = 2;
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x3f
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15331
	goto	u15330
u15331:
	goto	l24766
u15330:
	
l24764:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0x40
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	118
	
l24766:	
;PID.c: 118: else if(PWM_var <= -0.5)PWM_var = -2;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xbf
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15341
	goto	u15340
u15341:
	goto	l1129
u15340:
	
l24768:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0xc0
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	122
	
l24770:	
;PID.c: 120: else
;PID.c: 121: {
;PID.c: 122: if(PWM_var>=0.5)PWM_var = 0.5;
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff1+2)
	movlw	0x0
	movwf	(___ftge@ff2)
	movlw	0x0
	movwf	(___ftge@ff2+1)
	movlw	0x3f
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15351
	goto	u15350
u15351:
	goto	l24774
u15350:
	
l24772:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0x3f
	movwf	(pid_calc@PWM_var+2)^080h
	goto	l1129
	line	123
	
l24774:	
;PID.c: 123: else if(PWM_var <= -0.5)PWM_var = -0.5;
	movlw	0x0
	movwf	(___ftge@ff1)
	movlw	0x0
	movwf	(___ftge@ff1+1)
	movlw	0xbf
	movwf	(___ftge@ff1+2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftge@ff2+2)
	fcall	___ftge
	btfss	status,0
	goto	u15361
	goto	u15360
u15361:
	goto	l1129
u15360:
	
l24776:	
	movlw	0x0
	movlb 1	; select bank1
	movwf	(pid_calc@PWM_var)^080h
	movlw	0x0
	movwf	(pid_calc@PWM_var+1)^080h
	movlw	0xbf
	movwf	(pid_calc@PWM_var+2)^080h
	line	126
	
l1129:	
	line	129
;PID.c: 124: }
;PID.c: 126: }
;PID.c: 129: return (PWM_var );
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+1)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc+1)
	movlb 1	; select bank1
	movf	(pid_calc@PWM_var+2)^080h,w
	movlb 0	; select bank0
	movwf	(?_pid_calc+2)
	line	130
	
l1145:	
	return
	opt stack 0
GLOBAL	__end_of_pid_calc
	__end_of_pid_calc:
	signat	_pid_calc,8315
	global	___ftsub

;; *************** function ___ftsub *****************
;; Defined at:
;;		line 18 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftsub.c"
;; Parameters:    Size  Location     Type
;;  f2              3   46[BANK0 ] float 
;;  f1              3   49[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  3   46[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		___ftadd
;; This function is called by:
;;		_pid_calc
;;		_pid_calc_2
;; This function uses a non-reentrant model
;;
psect	text19,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftsub.c"
	line	18
global __ptext19
__ptext19:	;psect for function ___ftsub
psect	text19
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftsub.c"
	line	18
	global	__size_of___ftsub
	__size_of___ftsub	equ	__end_of___ftsub-___ftsub
	
___ftsub:	
;incstack = 0
	opt	stack 9
; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
	line	23
	
l25222:	
	movlw	080h
	xorwf	(___ftsub@f2+2),f
	line	24
	
l25224:	
	movf	(___ftsub@f1),w
	movwf	(___ftadd@f1)
	movf	(___ftsub@f1+1),w
	movwf	(___ftadd@f1+1)
	movf	(___ftsub@f1+2),w
	movwf	(___ftadd@f1+2)
	movf	(___ftsub@f2),w
	movwf	(___ftadd@f2)
	movf	(___ftsub@f2+1),w
	movwf	(___ftadd@f2+1)
	movf	(___ftsub@f2+2),w
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movwf	(?___ftsub)
	movf	(1+(?___ftadd)),w
	movwf	(?___ftsub+1)
	movf	(2+(?___ftadd)),w
	movwf	(?___ftsub+2)
	line	25
	
l2707:	
	return
	opt stack 0
GLOBAL	__end_of___ftsub
	__end_of___ftsub:
	signat	___ftsub,8315
	global	___ftge

;; *************** function ___ftge *****************
;; Defined at:
;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
;; Parameters:    Size  Location     Type
;;  ff1             3   49[BANK0 ] float 
;;  ff2             3   52[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_auto_system
;;		_pid_calc
;;		_pid_calc_2
;;		_handle_ad_loop
;;		_Mppt_Charge
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text20,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
	line	4
global __ptext20
__ptext20:	;psect for function ___ftge
psect	text20
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
	line	4
	global	__size_of___ftge
	__size_of___ftge	equ	__end_of___ftge-___ftge
	
___ftge:	
;incstack = 0
	opt	stack 11
; Regs used in ___ftge: [wreg+status,2+status,0]
	line	6
	
l25150:	
	btfss	(___ftge@ff1+2),(23)&7
	goto	u16171
	goto	u16170
u16171:
	goto	l25154
u16170:
	line	7
	
l25152:	
	movf	(___ftge@ff1),w
	sublw	0
	movwf	(___ftge@ff1)
	movf	(___ftge@ff1+1),w
	skipc
	incfsz	(___ftge@ff1+1),w
	sublw	0
	movwf	1+(___ftge@ff1)
	movf	(___ftge@ff1+2),w
	skipc
	incfsz	(___ftge@ff1+2),w
	sublw	080h
	movwf	2+(___ftge@ff1)
	line	8
	
l25154:	
	btfss	(___ftge@ff2+2),(23)&7
	goto	u16181
	goto	u16180
u16181:
	goto	l25158
u16180:
	line	9
	
l25156:	
	movf	(___ftge@ff2),w
	sublw	0
	movwf	(___ftge@ff2)
	movf	(___ftge@ff2+1),w
	skipc
	incfsz	(___ftge@ff2+1),w
	sublw	0
	movwf	1+(___ftge@ff2)
	movf	(___ftge@ff2+2),w
	skipc
	incfsz	(___ftge@ff2+2),w
	sublw	080h
	movwf	2+(___ftge@ff2)
	line	10
	
l25158:	
	movlw	080h
	xorwf	(___ftge@ff1+2),f
	line	11
	
l25160:	
	movlw	080h
	xorwf	(___ftge@ff2+2),f
	line	12
	
l25162:	
	movf	(___ftge@ff2+2),w
	subwf	(___ftge@ff1+2),w
	skipz
	goto	u16195
	movf	(___ftge@ff2+1),w
	subwf	(___ftge@ff1+1),w
	skipz
	goto	u16195
	movf	(___ftge@ff2),w
	subwf	(___ftge@ff1),w
u16195:
	skipnc
	goto	u16191
	goto	u16190
u16191:
	goto	l25166
u16190:
	
l25164:	
	clrc
	
	goto	l2685
	
l25166:	
	setc
	
	line	13
	
l2685:	
	return
	opt stack 0
GLOBAL	__end_of___ftge
	__end_of___ftge:
	signat	___ftge,8312
	global	___awtoft

;; *************** function ___awtoft *****************
;; Defined at:
;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
;; Parameters:    Size  Location     Type
;;  c               2   11[BANK0 ] int 
;; Auto vars:     Size  Location     Type
;;  sign            1   14[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  3   11[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_read_param_eeprom
;;		_pid_calc
;;		_pid_calc_2
;;		_handle_ad_loop
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text21,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
	line	32
global __ptext21
__ptext21:	;psect for function ___awtoft
psect	text21
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
	line	32
	global	__size_of___awtoft
	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
	
___awtoft:	
;incstack = 0
	opt	stack 10
; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
	line	36
	
l25020:	
	clrf	(___awtoft@sign)
	line	37
	
l25022:	
	btfss	(___awtoft@c+1),7
	goto	u15931
	goto	u15930
u15931:
	goto	l25028
u15930:
	line	38
	
l25024:	
	comf	(___awtoft@c),f
	comf	(___awtoft@c+1),f
	incf	(___awtoft@c),f
	skipnz
	incf	(___awtoft@c+1),f
	line	39
	
l25026:	
	clrf	(___awtoft@sign)
	incf	(___awtoft@sign),f
	line	41
	
l25028:	
	movf	(___awtoft@c),w
	movwf	(___ftpack@arg)
	movf	(___awtoft@c+1),w
	movwf	(___ftpack@arg+1)
	clrf	(___ftpack@arg+2)
	movlw	(08Eh)
	movwf	(___ftpack@exp)
	movf	(___awtoft@sign),w
	movwf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___awtoft)
	movf	(1+(?___ftpack)),w
	movwf	(?___awtoft+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___awtoft+2)
	line	42
	
l2614:	
	return
	opt stack 0
GLOBAL	__end_of___awtoft
	__end_of___awtoft:
	signat	___awtoft,4219
	global	___lwtoft

;; *************** function ___lwtoft *****************
;; Defined at:
;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
;; Parameters:    Size  Location     Type
;;  c               2   16[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  3   16[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_auto_system
;;		_handle_ad_loop
;;		_Mppt_Charge
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text22,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
	line	28
global __ptext22
__ptext22:	;psect for function ___lwtoft
psect	text22
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
	line	28
	global	__size_of___lwtoft
	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
	
___lwtoft:	
;incstack = 0
	opt	stack 10
; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
	line	30
	
l25322:	
	movf	(___lwtoft@c),w
	movwf	(___ftpack@arg)
	movf	(___lwtoft@c+1),w
	movwf	(___ftpack@arg+1)
	clrf	(___ftpack@arg+2)
	movlw	(08Eh)
	movwf	(___ftpack@exp)
	clrf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___lwtoft)
	movf	(1+(?___ftpack)),w
	movwf	(?___lwtoft+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___lwtoft+2)
	line	31
	
l2826:	
	return
	opt stack 0
GLOBAL	__end_of___lwtoft
	__end_of___lwtoft:
	signat	___lwtoft,4219
	global	___fttol

;; *************** function ___fttol *****************
;; Defined at:
;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
;; Parameters:    Size  Location     Type
;;  f1              3   49[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;  lval            4   57[BANK0 ] unsigned long 
;;  exp1            1   61[BANK0 ] unsigned char 
;;  sign1           1   56[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  4   49[BANK0 ] long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       13 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_ad_loop
;;		_handle_task_process
;;		_Mppt_Charge
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text23,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
	line	44
global __ptext23
__ptext23:	;psect for function ___fttol
psect	text23
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
	line	44
	global	__size_of___fttol
	__size_of___fttol	equ	__end_of___fttol-___fttol
	
___fttol:	
;incstack = 0
	opt	stack 12
; Regs used in ___fttol: [wreg+status,2+status,0]
	line	49
	
l25228:	
	movf	(___fttol@f1),w
	movwf	((??___fttol+0)+0)
	movf	(___fttol@f1+1),w
	movwf	((??___fttol+0)+0+1)
	movf	(___fttol@f1+2),w
	movwf	((??___fttol+0)+0+2)
	clrc
	rlf	(??___fttol+0)+1,w
	rlf	(??___fttol+0)+2,w
	movwf	(___fttol@exp1)
	movf	((___fttol@exp1)),f
	skipz
	goto	u16261
	goto	u16260
u16261:
	goto	l25232
u16260:
	line	50
	
l25230:	
	clrf	(?___fttol)
	clrf	(?___fttol+1)
	clrf	(?___fttol+2)
	clrf	(?___fttol+3)
	goto	l2711
	line	51
	
l25232:	
	movf	(___fttol@f1),w
	movwf	((??___fttol+0)+0)
	movf	(___fttol@f1+1),w
	movwf	((??___fttol+0)+0+1)
	movf	(___fttol@f1+2),w
	movwf	((??___fttol+0)+0+2)
	movlw	017h
u16275:
	lsrf	(??___fttol+0)+2,f
	rrf	(??___fttol+0)+1,f
	rrf	(??___fttol+0)+0,f
u16270:
	decfsz	wreg,f
	goto	u16275
	movf	0+(??___fttol+0)+0,w
	movwf	(___fttol@sign1)
	line	52
	
l25234:	
	bsf	(___fttol@f1)+(15/8),(15)&7
	line	53
	
l25236:	
	movlw	0FFh
	andwf	(___fttol@f1),f
	movlw	0FFh
	andwf	(___fttol@f1+1),f
	movlw	0
	andwf	(___fttol@f1+2),f
	line	54
	
l25238:	
	movf	(___fttol@f1),w
	movwf	(___fttol@lval)
	movf	(___fttol@f1+1),w
	movwf	((___fttol@lval))+1
	movf	(___fttol@f1+2),w
	movwf	((___fttol@lval))+2
	clrf	((___fttol@lval))+3
	line	55
	
l25240:	
	movlw	low(08Eh)
	subwf	(___fttol@exp1),f
	line	56
	
l25242:	
	btfss	(___fttol@exp1),7
	goto	u16281
	goto	u16280
u16281:
	goto	l25252
u16280:
	line	57
	
l25244:	
	movf	(___fttol@exp1),w
	xorlw	80h
	addlw	-((-15)^80h)
	skipnc
	goto	u16291
	goto	u16290
u16291:
	goto	l25248
u16290:
	goto	l25230
	line	60
	
l25248:	
	lsrf	(___fttol@lval+3),f
	rrf	(___fttol@lval+2),f
	rrf	(___fttol@lval+1),f
	rrf	(___fttol@lval),f
	line	61
	
l25250:	
	incfsz	(___fttol@exp1),f
	goto	u16301
	goto	u16300
u16301:
	goto	l25248
u16300:
	goto	l25258
	line	63
	
l25252:	
	movlw	(018h)
	subwf	(___fttol@exp1),w
	skipc
	goto	u16311
	goto	u16310
u16311:
	goto	l2718
u16310:
	goto	l25230
	line	66
	
l25256:	
	lslf	(___fttol@lval),f
	rlf	(___fttol@lval+1),f
	rlf	(___fttol@lval+2),f
	rlf	(___fttol@lval+3),f
	line	67
	decf	(___fttol@exp1),f
	line	68
	
l2718:	
	line	65
	movf	(___fttol@exp1),f
	skipz
	goto	u16321
	goto	u16320
u16321:
	goto	l25256
u16320:
	line	70
	
l25258:	
	movf	(___fttol@sign1),w
	skipz
	goto	u16330
	goto	l25262
u16330:
	line	71
	
l25260:	
	comf	(___fttol@lval),f
	comf	(___fttol@lval+1),f
	comf	(___fttol@lval+2),f
	comf	(___fttol@lval+3),f
	incf	(___fttol@lval),f
	skipnz
	incf	(___fttol@lval+1),f
	skipnz
	incf	(___fttol@lval+2),f
	skipnz
	incf	(___fttol@lval+3),f
	line	72
	
l25262:	
	movf	(___fttol@lval+3),w
	movwf	(?___fttol+3)
	movf	(___fttol@lval+2),w
	movwf	(?___fttol+2)
	movf	(___fttol@lval+1),w
	movwf	(?___fttol+1)
	movf	(___fttol@lval),w
	movwf	(?___fttol)

	line	73
	
l2711:	
	return
	opt stack 0
GLOBAL	__end_of___fttol
	__end_of___fttol:
	signat	___fttol,4220
	global	_Enable_Buck_Pwm

;; *************** function _Enable_Buck_Pwm *****************
;; Defined at:
;;		line 125 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1F/1
;;		On exit  : 1F/8
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_handle_ad_loop
;; This function uses a non-reentrant model
;;
psect	text24,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	125
global __ptext24
__ptext24:	;psect for function _Enable_Buck_Pwm
psect	text24
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	125
	global	__size_of_Enable_Buck_Pwm
	__size_of_Enable_Buck_Pwm	equ	__end_of_Enable_Buck_Pwm-_Enable_Buck_Pwm
	
_Enable_Buck_Pwm:	
;incstack = 0
	opt	stack 12
; Regs used in _Enable_Buck_Pwm: []
	line	127
	
l24902:	
;pwm.c: 127: TRISCbits.TRISC2=0;
	bcf	(142)^080h,2	;volatile
	line	129
;pwm.c: 129: TMR6ON=1;
	movlb 8	; select bank8
	bsf	(8434/8)^0400h,(8434)&7	;volatile
	line	131
	
l1293:	
	return
	opt stack 0
GLOBAL	__end_of_Enable_Buck_Pwm
	__end_of_Enable_Buck_Pwm:
	signat	_Enable_Buck_Pwm,88
	global	_driver_init

;; *************** function _driver_init *****************
;; Defined at:
;;		line 221 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/7
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_Init_Ird
;;		_init_adc
;;		_init_interrupt
;;		_init_key
;;		_init_osc
;;		_init_port
;;		_init_pwm
;;		_init_timer1
;;		_init_uart1
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text25,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	221
global __ptext25
__ptext25:	;psect for function _driver_init
psect	text25
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	221
	global	__size_of_driver_init
	__size_of_driver_init	equ	__end_of_driver_init-_driver_init
	
_driver_init:	
;incstack = 0
	opt	stack 12
; Regs used in _driver_init: [wreg+status,2+status,0+pclath+cstack]
	line	223
	
l17522:	
;main.c: 223: init_osc();
	fcall	_init_osc
	line	225
	
l17524:	
;main.c: 225: init_port();
	fcall	_init_port
	line	227
	
l17526:	
;main.c: 227: init_key();
	fcall	_init_key
	line	229
;main.c: 229: init_timer1();
	fcall	_init_timer1
	line	231
;main.c: 231: init_uart1();
	fcall	_init_uart1
	line	233
;main.c: 233: Init_Ird();
	fcall	_Init_Ird
	line	235
;main.c: 235: init_adc();
	fcall	_init_adc
	line	237
;main.c: 237: init_pwm();
	fcall	_init_pwm
	line	239
	
l17528:	
;main.c: 239: init_interrupt();
	fcall	_init_interrupt
	line	242
	
l985:	
	return
	opt stack 0
GLOBAL	__end_of_driver_init
	__end_of_driver_init:
	signat	_driver_init,88
	global	_init_uart1

;; *************** function _init_uart1 *****************
;; Defined at:
;;		line 81 in file "D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/1
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text26,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
	line	81
global __ptext26
__ptext26:	;psect for function _init_uart1
psect	text26
	file	"D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
	line	81
	global	__size_of_init_uart1
	__size_of_init_uart1	equ	__end_of_init_uart1-_init_uart1
	
_init_uart1:	
;incstack = 0
	opt	stack 12
; Regs used in _init_uart1: [wreg+status,2]
	line	84
	
l17538:	
;uart.c: 84: SP1BRGL = 0x40;
	movlw	(040h)
	movlb 3	; select bank3
	movwf	(411)^0180h	;volatile
	line	85
;uart.c: 85: SP1BRGH = 0x03;
	movlw	(03h)
	movwf	(412)^0180h	;volatile
	line	86
;uart.c: 86: BAUDCON = 0x08;
	movlw	(08h)
	movwf	(415)^0180h	;volatile
	line	96
	
l17540:	
;uart.c: 96: (TRISCbits.TRISC6) = 0x01;
	movlb 1	; select bank1
	bsf	(142)^080h,6	;volatile
	line	97
	
l17542:	
;uart.c: 97: (TRISCbits.TRISC7) = 0x01;
	bsf	(142)^080h,7	;volatile
	line	98
	
l17544:	
;uart.c: 98: TXSTA = 0x00;
	movlb 3	; select bank3
	clrf	(414)^0180h	;volatile
	line	107
	
l17546:	
;uart.c: 107: RCSTA = 0x90;
	movlw	(090h)
	movwf	(413)^0180h	;volatile
	line	108
	
l17548:	
;uart.c: 108: RCIE = 0x01;
	movlb 1	; select bank1
	bsf	(1165/8)^080h,(1165)&7	;volatile
	line	109
	
l2307:	
	return
	opt stack 0
GLOBAL	__end_of_init_uart1
	__end_of_init_uart1:
	signat	_init_uart1,88
	global	_init_timer1

;; *************** function _init_timer1 *****************
;; Defined at:
;;		line 42 in file "D:\MCUProject\ZH-SL-S4080-1\src\timer.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : 17F/1
;;		On exit  : 17F/0
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text27,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\timer.c"
	line	42
global __ptext27
__ptext27:	;psect for function _init_timer1
psect	text27
	file	"D:\MCUProject\ZH-SL-S4080-1\src\timer.c"
	line	42
	global	__size_of_init_timer1
	__size_of_init_timer1	equ	__end_of_init_timer1-_init_timer1
	
_init_timer1:	
;incstack = 0
	opt	stack 12
; Regs used in _init_timer1: [wreg]
	line	44
	
l17530:	
;timer.c: 44: TMR1H = 0xE0;
	movlw	(0E0h)
	movlb 0	; select bank0
	movwf	(23)	;volatile
	line	45
;timer.c: 45: TMR1L = 0xC0;
	movlw	(0C0h)
	movwf	(22)	;volatile
	line	46
;timer.c: 46: T1CON = 0x60;
	movlw	(060h)
	movwf	(24)	;volatile
	line	50
	
l17532:	
;timer.c: 50: T1GCONbits.TMR1GE=0;
	bcf	(25),7	;volatile
	line	52
	
l17534:	
;timer.c: 52: TMR1IE = 0x01;
	movlb 1	; select bank1
	bsf	(1160/8)^080h,(1160)&7	;volatile
	line	53
	
l17536:	
;timer.c: 53: TMR1ON =0;
	movlb 0	; select bank0
	bcf	(192/8),(192)&7	;volatile
	line	54
	
l2100:	
	return
	opt stack 0
GLOBAL	__end_of_init_timer1
	__end_of_init_timer1:
	signat	_init_timer1,88
	global	_init_pwm

;; *************** function _init_pwm *****************
;; Defined at:
;;		line 34 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/0
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text28,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	34
global __ptext28
__ptext28:	;psect for function _init_pwm
psect	text28
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	34
	global	__size_of_init_pwm
	__size_of_init_pwm	equ	__end_of_init_pwm-_init_pwm
	
_init_pwm:	
;incstack = 0
	opt	stack 12
; Regs used in _init_pwm: [wreg+status,2+status,0]
	line	37
	
l17550:	
;pwm.c: 37: TRISCbits.TRISC2=1;
	movlb 1	; select bank1
	bsf	(142)^080h,2	;volatile
	line	39
;pwm.c: 39: TRISBbits.TRISB5 =1;
	bsf	(141)^080h,5	;volatile
	line	41
;pwm.c: 41: TRISAbits.TRISA4 =1;
	bsf	(140)^080h,4	;volatile
	line	43
;pwm.c: 43: APFCONbits.CCP3SEL=1;
	movlb 2	; select bank2
	bsf	(285)^0100h,6	;volatile
	line	49
	
l17552:	
;pwm.c: 49: PR6=0xFF;
	movlw	(0FFh)
	movlb 8	; select bank8
	movwf	(1053)^0400h	;volatile
	line	51
	
l17554:	
;pwm.c: 51: CCP1CONbits.CCP1M=0b1100;
	movlb 5	; select bank5
	movf	(659)^0280h,w	;volatile
	andlw	not (((1<<4)-1)<<0)
	iorlw	(0Ch & ((1<<4)-1))<<0
	movwf	(659)^0280h	;volatile
	line	53
	
l17556:	
;pwm.c: 53: CCP1CONbits.P1M=0b00;
	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
	andwf	(659)^0280h,f	;volatile
	line	55
	
l17558:	
;pwm.c: 55: CCPTMRS0bits.C1TSEL=0b10;
	movf	(670)^0280h,w	;volatile
	andlw	not (((1<<2)-1)<<0)
	iorlw	(02h & ((1<<2)-1))<<0
	movwf	(670)^0280h	;volatile
	line	57
	
l17560:	
;pwm.c: 57: CCPR1L=0x00;
	clrf	(657)^0280h	;volatile
	line	59
	
l17562:	
;pwm.c: 59: CCP1CONbits.DC1B=0b00;
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(659)^0280h,f	;volatile
	line	61
	
l17564:	
;pwm.c: 61: TMR6IF=0;
	movlb 0	; select bank0
	bcf	(155/8),(155)&7	;volatile
	line	63
	
l17566:	
;pwm.c: 63: T6CONbits.T6OUTPS=0b0000;
	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
	movlb 8	; select bank8
	andwf	(1054)^0400h,f	;volatile
	line	65
	
l17568:	
;pwm.c: 65: TMR6ON=0;
	bcf	(8434/8)^0400h,(8434)&7	;volatile
	line	67
	
l17570:	
;pwm.c: 67: T6CONbits.T6CKPS=0b00;
	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
	andwf	(1054)^0400h,f	;volatile
	line	73
	
l17572:	
;pwm.c: 73: PR4=0x9F;
	movlw	(09Fh)
	movwf	(1046)^0400h	;volatile
	line	75
	
l17574:	
;pwm.c: 75: CCP3CONbits.CCP3M=0b1100;
	movlb 6	; select bank6
	movf	(787)^0300h,w	;volatile
	andlw	not (((1<<4)-1)<<0)
	iorlw	(0Ch & ((1<<4)-1))<<0
	movwf	(787)^0300h	;volatile
	line	77
	
l17576:	
;pwm.c: 77: CCP3CONbits.P3M=0b00;
	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
	andwf	(787)^0300h,f	;volatile
	line	79
	
l17578:	
;pwm.c: 79: CCPTMRS0bits.C3TSEL=0b01;
	movlb 5	; select bank5
	movf	(670)^0280h,w	;volatile
	andlw	not (((1<<2)-1)<<4)
	iorlw	(01h & ((1<<2)-1))<<4
	movwf	(670)^0280h	;volatile
	line	81
	
l17580:	
;pwm.c: 81: CCPR3L=0x00;
	movlb 6	; select bank6
	clrf	(785)^0300h	;volatile
	line	83
;pwm.c: 83: CCP3CONbits.DC3B=0b00;
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(787)^0300h,f	;volatile
	line	85
	
l17582:	
;pwm.c: 85: TMR4IF=0;
	movlb 0	; select bank0
	bcf	(153/8),(153)&7	;volatile
	line	87
;pwm.c: 87: T4CONbits.T4OUTPS=0b0000;
	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
	movlb 8	; select bank8
	andwf	(1047)^0400h,f	;volatile
	line	89
	
l17584:	
;pwm.c: 89: TMR4ON=0;
	bcf	(8378/8)^0400h,(8378)&7	;volatile
	line	91
;pwm.c: 91: T4CONbits.T4CKPS=0b00;
	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
	andwf	(1047)^0400h,f	;volatile
	line	95
	
l17586:	
;pwm.c: 95: PR2=0x9F;
	movlw	(09Fh)
	movlb 0	; select bank0
	movwf	(27)	;volatile
	line	97
	
l17588:	
;pwm.c: 97: CCP5CONbits.CCP5M=0b1100;
	movlb 6	; select bank6
	movf	(798)^0300h,w	;volatile
	andlw	not (((1<<4)-1)<<0)
	iorlw	(0Ch & ((1<<4)-1))<<0
	movwf	(798)^0300h	;volatile
	line	99
	
l17590:	
;pwm.c: 99: CCP5CONbits.P5M=0b00;
	movlw	((0 & ((1<<2)-1))<<6)|not (((1<<2)-1)<<6)
	andwf	(798)^0300h,f	;volatile
	line	101
	
l17592:	
;pwm.c: 101: CCPTMRS1bits.C5TSEL=0b00;
	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
	movlb 5	; select bank5
	andwf	(671)^0280h,f	;volatile
	line	103
	
l17594:	
;pwm.c: 103: CCPR5L=0x00;
	movlb 6	; select bank6
	clrf	(796)^0300h	;volatile
	line	105
	
l17596:	
;pwm.c: 105: CCP5CONbits.DC5B=0b00;
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(798)^0300h,f	;volatile
	line	107
	
l17598:	
;pwm.c: 107: TMR2IF=0;
	movlb 0	; select bank0
	bcf	(137/8),(137)&7	;volatile
	line	109
	
l17600:	
;pwm.c: 109: T2CONbits.T2OUTPS=0b0000;
	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
	andwf	(28),f	;volatile
	line	111
	
l17602:	
;pwm.c: 111: TMR2ON=0;
	bcf	(226/8),(226)&7	;volatile
	line	113
	
l17604:	
;pwm.c: 113: T2CONbits.T2CKPS=0b00;
	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
	andwf	(28),f	;volatile
	line	115
	
l1290:	
	return
	opt stack 0
GLOBAL	__end_of_init_pwm
	__end_of_init_pwm:
	signat	_init_pwm,88
	global	_init_port

;; *************** function _init_port *****************
;; Defined at:
;;		line 174 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		status,2
;; Tracked objects:
;;		On entry : 17F/1
;;		On exit  : 17F/2
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text29,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	174
global __ptext29
__ptext29:	;psect for function _init_port
psect	text29
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	174
	global	__size_of_init_port
	__size_of_init_port	equ	__end_of_init_port-_init_port
	
_init_port:	
;incstack = 0
	opt	stack 12
; Regs used in _init_port: [status,2]
	line	176
	
l17478:	
;main.c: 176: ANSELA = 0x00;
	movlb 3	; select bank3
	clrf	(396)^0180h	;volatile
	line	177
;main.c: 177: ANSELB = 0x00;
	clrf	(397)^0180h	;volatile
	line	179
	
l17480:	
;main.c: 179: ANSA0 = 1;
	bsf	(3168/8)^0180h,(3168)&7	;volatile
	line	180
	
l17482:	
;main.c: 180: ANSA1 = 1;
	bsf	(3169/8)^0180h,(3169)&7	;volatile
	line	181
	
l17484:	
;main.c: 181: ANSA2 = 1;
	bsf	(3170/8)^0180h,(3170)&7	;volatile
	line	182
	
l17486:	
;main.c: 182: ANSA3 = 1;
	bsf	(3171/8)^0180h,(3171)&7	;volatile
	line	183
	
l17488:	
;main.c: 183: ANSA5 = 1;
	bsf	(3173/8)^0180h,(3173)&7	;volatile
	line	185
	
l17490:	
;main.c: 185: ANSB4 = 1;
	bsf	(3180/8)^0180h,(3180)&7	;volatile
	line	186
	
l17492:	
;main.c: 186: ANSB3 = 1;
	bsf	(3179/8)^0180h,(3179)&7	;volatile
	line	187
	
l17494:	
;main.c: 187: ANSB2 = 1;
	bsf	(3178/8)^0180h,(3178)&7	;volatile
	line	189
	
l17496:	
;main.c: 189: TRISAbits.TRISA7=1;
	movlb 1	; select bank1
	bsf	(140)^080h,7	;volatile
	line	190
	
l17498:	
;main.c: 190: TRISCbits.TRISC1=1;
	bsf	(142)^080h,1	;volatile
	line	192
	
l17500:	
;main.c: 192: TRISCbits.TRISC3=0;
	bcf	(142)^080h,3	;volatile
	line	193
	
l17502:	
;main.c: 193: TRISCbits.TRISC0=0;
	bcf	(142)^080h,0	;volatile
	line	195
	
l17504:	
;main.c: 195: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	196
	
l17506:	
;main.c: 196: (LATCbits.LATC0 = 0x00);
	bcf	(270)^0100h,0	;volatile
	line	198
	
l17508:	
;main.c: 198: TRISCbits.TRISC2=1;
	movlb 1	; select bank1
	bsf	(142)^080h,2	;volatile
	line	200
	
l17510:	
;main.c: 200: TRISBbits.TRISB5 =1;
	bsf	(141)^080h,5	;volatile
	line	202
	
l17512:	
;main.c: 202: TRISAbits.TRISA4 =1;
	bsf	(140)^080h,4	;volatile
	line	204
	
l17514:	
;main.c: 204: TRISBbits.TRISB1 =1;
	bsf	(141)^080h,1	;volatile
	line	205
	
l17516:	
;main.c: 205: TRISBbits.TRISB0 =1;
	bsf	(141)^080h,0	;volatile
	line	207
	
l17518:	
;main.c: 207: TRISAbits.TRISA6 = 0;
	bcf	(140)^080h,6	;volatile
	line	208
	
l17520:	
;main.c: 208: (LATAbits.LATA6 = 0x01);
	movlb 2	; select bank2
	bsf	(268)^0100h,6	;volatile
	line	210
	
l982:	
	return
	opt stack 0
GLOBAL	__end_of_init_port
	__end_of_init_port:
	signat	_init_port,88
	global	_init_osc

;; *************** function _init_osc *****************
;; Defined at:
;;		line 157 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/1
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text30,local,class=CODE,delta=2,merge=1
	line	157
global __ptext30
__ptext30:	;psect for function _init_osc
psect	text30
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	157
	global	__size_of_init_osc
	__size_of_init_osc	equ	__end_of_init_osc-_init_osc
	
_init_osc:	
;incstack = 0
	opt	stack 12
; Regs used in _init_osc: [wreg+status,2+status,0]
	line	159
	
l17474:	
;main.c: 159: OSCCON = 0x70;
	movlw	(070h)
	movlb 1	; select bank1
	movwf	(153)^080h	;volatile
	line	160
	
l17476:	
;main.c: 160: WDTCONbits.WDTPS=0b01110;
	movf	(151)^080h,w	;volatile
	andlw	not (((1<<5)-1)<<1)
	iorlw	(0Eh & ((1<<5)-1))<<1
	movwf	(151)^080h	;volatile
	line	161
	
l979:	
	return
	opt stack 0
GLOBAL	__end_of_init_osc
	__end_of_init_osc:
	signat	_init_osc,88
	global	_init_key

;; *************** function _init_key *****************
;; Defined at:
;;		line 45 in file "D:\MCUProject\ZH-SL-S4080-1\src\key.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 17F/2
;;		On exit  : 17F/1
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text31,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	45
global __ptext31
__ptext31:	;psect for function _init_key
psect	text31
	file	"D:\MCUProject\ZH-SL-S4080-1\src\key.c"
	line	45
	global	__size_of_init_key
	__size_of_init_key	equ	__end_of_init_key-_init_key
	
_init_key:	
;incstack = 0
	opt	stack 12
; Regs used in _init_key: []
	line	47
	
l17122:	
;key.c: 47: (TRISBbits.TRISB6) = 1;
	movlb 1	; select bank1
	bsf	(141)^080h,6	;volatile
	line	48
;key.c: 48: (TRISCbits.TRISC6) = 1;
	bsf	(142)^080h,6	;volatile
	line	49
;key.c: 49: (TRISCbits.TRISC5) = 1;
	bsf	(142)^080h,5	;volatile
	line	50
;key.c: 50: (TRISCbits.TRISC4) = 1;
	bsf	(142)^080h,4	;volatile
	line	53
	
l758:	
	return
	opt stack 0
GLOBAL	__end_of_init_key
	__end_of_init_key:
	signat	_init_key,88
	global	_init_interrupt

;; *************** function _init_interrupt *****************
;; Defined at:
;;		line 565 in file "D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/7
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text32,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
	line	565
global __ptext32
__ptext32:	;psect for function _init_interrupt
psect	text32
	file	"D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
	line	565
	global	__size_of_init_interrupt
	__size_of_init_interrupt	equ	__end_of_init_interrupt-_init_interrupt
	
_init_interrupt:	
;incstack = 0
	opt	stack 12
; Regs used in _init_interrupt: []
	line	568
	
l16500:	
;interrupt.c: 568: TRISBbits.TRISB0 = 1;
	movlb 1	; select bank1
	bsf	(141)^080h,0	;volatile
	line	570
;interrupt.c: 570: TRISBbits.TRISB1 = 1;
	bsf	(141)^080h,1	;volatile
	line	572
;interrupt.c: 572: IOCBPbits.IOCBP0 = 1;
	movlb 7	; select bank7
	bsf	(916)^0380h,0	;volatile
	line	574
;interrupt.c: 574: IOCBFbits.IOCBF0 = 0;
	bcf	(918)^0380h,0	;volatile
	line	576
;interrupt.c: 576: IOCBPbits.IOCBP1 = 1;
	bsf	(916)^0380h,1	;volatile
	line	578
;interrupt.c: 578: IOCBFbits.IOCBF1 = 0;
	bcf	(918)^0380h,1	;volatile
	line	580
;interrupt.c: 580: IOCIF = 0;
	bcf	(88/8),(88)&7	;volatile
	line	582
;interrupt.c: 582: IOCIE = 1;
	bsf	(91/8),(91)&7	;volatile
	line	584
;interrupt.c: 584: PEIE = 0x01;
	bsf	(94/8),(94)&7	;volatile
	line	585
;interrupt.c: 585: GIE = 0x01;
	bsf	(95/8),(95)&7	;volatile
	line	586
	
l378:	
	return
	opt stack 0
GLOBAL	__end_of_init_interrupt
	__end_of_init_interrupt:
	signat	_init_interrupt,88
	global	_init_adc

;; *************** function _init_adc *****************
;; Defined at:
;;		line 41 in file "D:\MCUProject\ZH-SL-S4080-1\src\adc.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 17F/0
;;		On exit  : 17F/0
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text33,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\adc.c"
	line	41
global __ptext33
__ptext33:	;psect for function _init_adc
psect	text33
	file	"D:\MCUProject\ZH-SL-S4080-1\src\adc.c"
	line	41
	global	__size_of_init_adc
	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
	
_init_adc:	
;incstack = 0
	opt	stack 12
; Regs used in _init_adc: [wreg+status,2+status,0]
	line	44
	
l16442:	
;adc.c: 44: TRISAbits.TRISA0 = 1;
	movlb 1	; select bank1
	bsf	(140)^080h,0	;volatile
	line	46
;adc.c: 46: TRISAbits.TRISA1 = 1;
	bsf	(140)^080h,1	;volatile
	line	48
;adc.c: 48: TRISAbits.TRISA2 = 1;
	bsf	(140)^080h,2	;volatile
	line	50
;adc.c: 50: TRISAbits.TRISA3 = 1;
	bsf	(140)^080h,3	;volatile
	line	52
;adc.c: 52: TRISAbits.TRISA5 = 1;
	bsf	(140)^080h,5	;volatile
	line	54
;adc.c: 54: TRISBbits.TRISB3 = 1;
	bsf	(141)^080h,3	;volatile
	line	56
;adc.c: 56: TRISBbits.TRISB2 = 1;
	bsf	(141)^080h,2	;volatile
	line	58
;adc.c: 58: TRISBbits.TRISB4 = 1;
	bsf	(141)^080h,4	;volatile
	line	62
;adc.c: 62: ADCON1bits.ADFM =0b1;
	bsf	(158)^080h,7	;volatile
	line	64
	
l16444:	
;adc.c: 64: ADCON1bits.ADCS =0b110;
	movf	(158)^080h,w	;volatile
	andlw	not (((1<<3)-1)<<4)
	iorlw	(06h & ((1<<3)-1))<<4
	movwf	(158)^080h	;volatile
	line	66
	
l16446:	
;adc.c: 66: ADCON1bits.ADNREF =0b0;
	bcf	(158)^080h,2	;volatile
	line	68
;adc.c: 68: ADCON1bits.ADPREF =0b11;
	movlw	(03h & ((1<<2)-1))<<0
	iorwf	(158)^080h,f	;volatile
	line	70
;adc.c: 70: FVRCONbits.ADFVR =0b01;
	movlb 2	; select bank2
	movf	(279)^0100h,w	;volatile
	andlw	not (((1<<2)-1)<<0)
	iorlw	(01h & ((1<<2)-1))<<0
	movwf	(279)^0100h	;volatile
	line	72
	
l16448:	
;adc.c: 72: FVRCONbits.FVREN =0b1;
	bsf	(279)^0100h,7	;volatile
	line	74
	
l16450:	
;adc.c: 74: FVRCONbits.TSEN =0b1;
	bsf	(279)^0100h,5	;volatile
	line	76
	
l16452:	
;adc.c: 76: FVRCONbits.TSRNG=0b1;
	bsf	(279)^0100h,4	;volatile
	line	78
;adc.c: 78: ADCON0bits.CHS =0b11101;
	movlb 1	; select bank1
	movf	(157)^080h,w	;volatile
	andlw	not (((1<<5)-1)<<2)
	iorlw	(01Dh & ((1<<5)-1))<<2
	movwf	(157)^080h	;volatile
	line	80
	
l16454:	
;adc.c: 80: ADCON0bits.ADON =0b0;
	bcf	(157)^080h,0	;volatile
	line	82
	
l16456:	
;adc.c: 82: PIE1bits.ADIE=0;
	bcf	(145)^080h,6	;volatile
	line	84
	
l16458:	
;adc.c: 84: PIR1bits.ADIF=0;
	movlb 0	; select bank0
	bcf	(17),6	;volatile
	line	88
	
l65:	
	return
	opt stack 0
GLOBAL	__end_of_init_adc
	__end_of_init_adc:
	signat	_init_adc,88
	global	_Init_Ird

;; *************** function _Init_Ird *****************
;; Defined at:
;;		line 528 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 17F/1
;;		On exit  : 17F/0
;;		Unchanged: 160/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_driver_init
;; This function uses a non-reentrant model
;;
psect	text34,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	528
global __ptext34
__ptext34:	;psect for function _Init_Ird
psect	text34
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	528
	global	__size_of_Init_Ird
	__size_of_Init_Ird	equ	__end_of_Init_Ird-_Init_Ird
	
_Init_Ird:	
;incstack = 0
	opt	stack 12
; Regs used in _Init_Ird: [wreg+status,2+status,0]
	line	530
	
l16740:	
;ird_remote.c: 530: TRISBbits.TRISB7 = 1;
	bsf	(141)^080h,7	;volatile
	line	532
;ird_remote.c: 532: IOCBNbits.IOCBN7 = 1;
	movlb 7	; select bank7
	bsf	(917)^0380h,7	;volatile
	line	534
;ird_remote.c: 534: IOCBFbits.IOCBF7 = 0;
	bcf	(918)^0380h,7	;volatile
	line	537
;ird_remote.c: 537: TRISBbits.TRISB6 = 1;
	movlb 1	; select bank1
	bsf	(141)^080h,6	;volatile
	line	539
;ird_remote.c: 539: IOCBNbits.IOCBN6 = 1;
	movlb 7	; select bank7
	bsf	(917)^0380h,6	;volatile
	line	541
;ird_remote.c: 541: IOCBFbits.IOCBF6 = 0;
	bcf	(918)^0380h,6	;volatile
	line	543
;ird_remote.c: 543: IOCIF = 0;
	bcf	(88/8),(88)&7	;volatile
	line	545
;ird_remote.c: 545: IOCIE = 1;
	bsf	(91/8),(91)&7	;volatile
	line	550
;ird_remote.c: 550: TMR0CS = 0;
	movlb 1	; select bank1
	bcf	(1197/8)^080h,(1197)&7	;volatile
	line	552
;ird_remote.c: 552: PSA = 0;
	bcf	(1195/8)^080h,(1195)&7	;volatile
	line	554
	
l16742:	
;ird_remote.c: 554: OPTION_REGbits.PS = 0b111;
	movlw	(07h & ((1<<3)-1))<<0
	iorwf	(149)^080h,f	;volatile
	line	556
	
l16744:	
;ird_remote.c: 556: TMR0IF = 0;
	bcf	(90/8),(90)&7	;volatile
	line	558
	
l16746:	
;ird_remote.c: 558: TMR0 = 0;
	movlb 0	; select bank0
	clrf	(21)	;volatile
	line	560
	
l16748:	
;ird_remote.c: 560: TMR0IE = 0;
	bcf	(93/8),(93)&7	;volatile
	line	562
	
l619:	
	return
	opt stack 0
GLOBAL	__end_of_Init_Ird
	__end_of_Init_Ird:
	signat	_Init_Ird,88
	global	_application_init

;; *************** function _application_init *****************
;; Defined at:
;;		line 273 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 0/7
;;		On exit  : 1F/4
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		___ftadd
;;		___ftdiv
;;		___ftmul
;;		_pid_init
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text35,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	273
global __ptext35
__ptext35:	;psect for function _application_init
psect	text35
	file	"D:\MCUProject\ZH-SL-S4080-1\src\main.c"
	line	273
	global	__size_of_application_init
	__size_of_application_init	equ	__end_of_application_init-_application_init
	
_application_init:	
;incstack = 0
	opt	stack 11
; Regs used in _application_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
	line	276
	
l22634:	
;main.c: 276: TMR1ON =1;
	movlb 0	; select bank0
	bsf	(192/8),(192)&7	;volatile
	line	278
;main.c: 278: system_check_time=0x01;
	movlb 2	; select bank2
	clrf	(_system_check_time)^0100h
	incf	(_system_check_time)^0100h,f
	line	280
;main.c: 280: open_an0_time=0x01;
	clrf	(_open_an0_time)^0100h
	incf	(_open_an0_time)^0100h,f
	line	282
;main.c: 282: open_an1_time=0x01;
	clrf	(_open_an1_time)^0100h
	incf	(_open_an1_time)^0100h,f
	line	284
;main.c: 284: open_an2_time=0x01;
	clrf	(_open_an2_time)^0100h
	incf	(_open_an2_time)^0100h,f
	line	286
;main.c: 286: open_an3_time=0x01;
	clrf	(_open_an3_time)^0100h
	incf	(_open_an3_time)^0100h,f
	line	288
;main.c: 288: open_an4_time=0x01;
	clrf	(_open_an4_time)^0100h
	incf	(_open_an4_time)^0100h,f
	line	290
;main.c: 290: open_an9_time=0x01;
	clrf	(_open_an9_time)^0100h
	incf	(_open_an9_time)^0100h,f
	line	292
;main.c: 292: open_an8_time=0x01;
	clrf	(_open_an8_time)^0100h
	incf	(_open_an8_time)^0100h,f
	line	294
;main.c: 294: open_an11_time=0x01;
	clrf	(_open_an11_time)^0100h
	incf	(_open_an11_time)^0100h,f
	line	298
	
l22636:	
;main.c: 298: pid_init ( &PID_CC_charge);
	movlw	low(_PID_CC_charge)
	movlb 0	; select bank0
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	300
;main.c: 300: pid_init ( &PID_CV_charge);
	movlw	low(_PID_CV_charge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CV_charge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	302
;main.c: 302: pid_init ( &PID_CC_discharge);
	movlw	low(_PID_CC_discharge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CC_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	304
;main.c: 304: pid_init ( &PID_CC2_discharge);
	movlw	low(_PID_CC2_discharge)
	movwf	(pid_init@pp)
	movlw	high(_PID_CC2_discharge)
	movwf	(pid_init@pp+1)
	fcall	_pid_init
	line	309
	
l22638:	
;main.c: 309: PID_CC_charge.Proportion = 0.001;
	movlw	0x12
	movlb 6	; select bank6
	movwf	0+(_PID_CC_charge)^0300h+03h
	movlw	0x83
	movwf	1+(_PID_CC_charge)^0300h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_charge)^0300h+03h
	line	311
	
l22640:	
;main.c: 311: PID_CC_charge.Integral = 0;
	clrf	0+(_PID_CC_charge)^0300h+06h
	clrf	1+(_PID_CC_charge)^0300h+06h
	clrf	2+(_PID_CC_charge)^0300h+06h
	line	313
	
l22642:	
;main.c: 313: PID_CC_charge.Derivative = 0;
	clrf	0+(_PID_CC_charge)^0300h+09h
	clrf	1+(_PID_CC_charge)^0300h+09h
	clrf	2+(_PID_CC_charge)^0300h+09h
	line	315
	
l22644:	
;main.c: 315: PID_CC_charge.SetPoint = 5.0*15.0;
	movlw	0x0
	movwf	(_PID_CC_charge)^0300h
	movlw	0x96
	movwf	(_PID_CC_charge+1)^0300h
	movlw	0x42
	movwf	(_PID_CC_charge+2)^0300h
	line	320
	
l22646:	
;main.c: 320: PID_CV_charge.Proportion = 0.001;
	movlw	0x12
	movlb 5	; select bank5
	movwf	0+(_PID_CV_charge)^0280h+03h
	movlw	0x83
	movwf	1+(_PID_CV_charge)^0280h+03h
	movlw	0x3a
	movwf	2+(_PID_CV_charge)^0280h+03h
	line	322
	
l22648:	
;main.c: 322: PID_CV_charge.Integral = 0;
	clrf	0+(_PID_CV_charge)^0280h+06h
	clrf	1+(_PID_CV_charge)^0280h+06h
	clrf	2+(_PID_CV_charge)^0280h+06h
	line	324
	
l22650:	
;main.c: 324: PID_CV_charge.Derivative = 0;
	clrf	0+(_PID_CV_charge)^0280h+09h
	clrf	1+(_PID_CV_charge)^0280h+09h
	clrf	2+(_PID_CV_charge)^0280h+09h
	line	326
	
l22652:	
;main.c: 326: PID_CV_charge.SetPoint = dianchi_cv_level+1;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftadd@f1)
	movlw	0x80
	movwf	(___ftadd@f1+1)
	movlw	0x3f
	movwf	(___ftadd@f1+2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+1)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+1)
	movlb 3	; select bank3
	movf	(_dianchi_cv_level+2)^0180h,w
	movlb 0	; select bank0
	movwf	(___ftadd@f2+2)
	fcall	___ftadd
	movf	(0+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge)^0280h
	movlb 0	; select bank0
	movf	(1+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+1)^0280h
	movlb 0	; select bank0
	movf	(2+(?___ftadd)),w
	movlb 5	; select bank5
	movwf	(_PID_CV_charge+2)^0280h
	line	330
	
l22654:	
;main.c: 330: PID_CC_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 3	; select bank3
	movwf	0+(_PID_CC_discharge)^0180h+03h
	movlw	0x83
	movwf	1+(_PID_CC_discharge)^0180h+03h
	movlw	0x3a
	movwf	2+(_PID_CC_discharge)^0180h+03h
	line	332
	
l22656:	
;main.c: 332: PID_CC_discharge.Integral = 0;
	clrf	0+(_PID_CC_discharge)^0180h+06h
	clrf	1+(_PID_CC_discharge)^0180h+06h
	clrf	2+(_PID_CC_discharge)^0180h+06h
	line	334
	
l22658:	
;main.c: 334: PID_CC_discharge.Derivative = 0;
	clrf	0+(_PID_CC_discharge)^0180h+09h
	clrf	1+(_PID_CC_discharge)^0180h+09h
	clrf	2+(_PID_CC_discharge)^0180h+09h
	line	336
	
l22660:	
;main.c: 336: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
	movlw	0x0
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlw	0xf0
	movwf	(___ftmul@f1+1)
	movlw	0x41
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge)^0180h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+1)^0180h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 3	; select bank3
	movwf	(_PID_CC_discharge+2)^0180h
	line	339
	
l22662:	
;main.c: 339: PID_CC2_discharge.Proportion = 0.001;
	movlw	0x12
	movlb 4	; select bank4
	movwf	0+(_PID_CC2_discharge)^0200h+03h
	movlw	0x83
	movwf	1+(_PID_CC2_discharge)^0200h+03h
	movlw	0x3a
	movwf	2+(_PID_CC2_discharge)^0200h+03h
	line	341
	
l22664:	
;main.c: 341: PID_CC2_discharge.Integral = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+06h
	clrf	1+(_PID_CC2_discharge)^0200h+06h
	clrf	2+(_PID_CC2_discharge)^0200h+06h
	line	343
	
l22666:	
;main.c: 343: PID_CC2_discharge.Derivative = 0;
	clrf	0+(_PID_CC2_discharge)^0200h+09h
	clrf	1+(_PID_CC2_discharge)^0200h+09h
	clrf	2+(_PID_CC2_discharge)^0200h+09h
	line	345
	
l22668:	
;main.c: 345: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlb 1	; select bank1
	movf	(_step_05_load_percent)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+1)
	movlb 1	; select bank1
	movf	(_step_05_load_percent+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftmul@f1+2)
	movlw	0x0
	movwf	(___ftdiv@f2)
	movlw	0xc8
	movwf	(___ftdiv@f2+1)
	movlw	0x42
	movwf	(___ftdiv@f2+2)
	movlb 1	; select bank1
	movf	(_load_cc_I)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1)
	movlb 1	; select bank1
	movf	(_load_cc_I+1)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+1)
	movlb 1	; select bank1
	movf	(_load_cc_I+2)^080h,w
	movlb 0	; select bank0
	movwf	(___ftdiv@f1+2)
	fcall	___ftdiv
	movf	(0+(?___ftdiv)),w
	movwf	(___ftmul@f2)
	movf	(1+(?___ftdiv)),w
	movwf	(___ftmul@f2+1)
	movf	(2+(?___ftdiv)),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movwf	(_application_init$3191)
	movf	(1+(?___ftmul)),w
	movwf	(_application_init$3191+1)
	movf	(2+(?___ftmul)),w
	movwf	(_application_init$3191+2)
	
l22670:	
;main.c: 345: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
	movlw	0x9a
	movwf	(___ftmul@f1)
	movlw	0x99
	movwf	(___ftmul@f1+1)
	movlw	0x3e
	movwf	(___ftmul@f1+2)
	movf	(_application_init$3191),w
	movwf	(___ftmul@f2)
	movf	(_application_init$3191+1),w
	movwf	(___ftmul@f2+1)
	movf	(_application_init$3191+2),w
	movwf	(___ftmul@f2+2)
	fcall	___ftmul
	movf	(0+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge)^0200h
	movlb 0	; select bank0
	movf	(1+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+1)^0200h
	movlb 0	; select bank0
	movf	(2+(?___ftmul)),w
	movlb 4	; select bank4
	movwf	(_PID_CC2_discharge+2)^0200h
	line	347
	
l22672:	
;main.c: 347: open_discharge_time=0x00;
	movlb 2	; select bank2
	clrf	(_open_discharge_time)^0100h
	line	349
	
l22674:	
;main.c: 349: ms_cnt=0x00;
	movlb 4	; select bank4
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	350
	
l22676:	
;main.c: 350: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	351
	
l22678:	
;main.c: 351: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	352
	
l22680:	
;main.c: 352: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	356
	
l991:	
	return
	opt stack 0
GLOBAL	__end_of_application_init
	__end_of_application_init:
	signat	_application_init,88
	global	_pid_init

;; *************** function _pid_init *****************
;; Defined at:
;;		line 243 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
;; Parameters:    Size  Location     Type
;;  pp              2   11[BANK0 ] PTR struct PID_VAR
;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_memset
;; This function is called by:
;;		_application_init
;;		_handle_task_process
;; This function uses a non-reentrant model
;;
psect	text36,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	243
global __ptext36
__ptext36:	;psect for function _pid_init
psect	text36
	file	"D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
	line	243
	global	__size_of_pid_init
	__size_of_pid_init	equ	__end_of_pid_init-_pid_init
	
_pid_init:	
;incstack = 0
	opt	stack 11
; Regs used in _pid_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
	line	245
	
l22682:	
;PID.c: 245: memset (pp,0,sizeof(PID));
	movf	(pid_init@pp+1),w
	movwf	(memset@p1+1)
	movf	(pid_init@pp),w
	movwf	(memset@p1)
	clrf	(memset@c)
	clrf	(memset@c+1)
	movlw	015h
	movwf	(memset@n)
	clrf	(memset@n+1)
	fcall	_memset
	line	246
	
l1199:	
	return
	opt stack 0
GLOBAL	__end_of_pid_init
	__end_of_pid_init:
	signat	_pid_init,4216
	global	_memset

;; *************** function _memset *****************
;; Defined at:
;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
;; Parameters:    Size  Location     Type
;;  p1              2    3[BANK0 ] PTR void 
;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
;;		 -> uart1_rx_buf(80), 
;;  c               2    5[BANK0 ] int 
;;  n               2    7[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  p               2    9[BANK0 ] PTR unsigned char 
;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
;;		 -> uart1_rx_buf(80), 
;; Return value:  Size  Location     Type
;;                  2    3[BANK0 ] PTR void 
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_pid_init
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text37,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
	line	8
global __ptext37
__ptext37:	;psect for function _memset
psect	text37
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
	line	8
	global	__size_of_memset
	__size_of_memset	equ	__end_of_memset-_memset
	
_memset:	
;incstack = 0
	opt	stack 12
; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
	line	18
	
l19894:	
	movf	(memset@p1+1),w
	movwf	(memset@p+1)
	movf	(memset@p1),w
	movwf	(memset@p)
	line	19
	goto	l19900
	line	20
	
l19896:	
	movf	(memset@p),w
	movwf	fsr1l
	movf	(memset@p+1),w
	movwf	fsr1h
	movf	(memset@c),w
	movwf	indf1
	
l19898:	
	incf	(memset@p),f
	skipnz
	incf	(memset@p+1),f
	line	19
	
l19900:	
	movlw	low(01h)
	subwf	(memset@n),f
	movlw	high(01h)
	subwfb	(memset@n+1),f
	incf	((memset@n)),w
	skipnz
	incf	((memset@n+1)),w

	skipz
	goto	u9951
	goto	u9950
u9951:
	goto	l19896
u9950:
	line	22
	
l2832:	
	return
	opt stack 0
GLOBAL	__end_of_memset
	__end_of_memset:
	signat	_memset,12409
	global	_Key_Menu

;; *************** function _Key_Menu *****************
;; Defined at:
;;		line 567 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
;; Parameters:    Size  Location     Type
;;  key_value       4   64[BANK0 ] unsigned long 
;; Auto vars:     Size  Location     Type
;;  remote_mac      2    0        unsigned int 
;;  code            1   68[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_Disable_Bost_Pwm1
;;		_Disable_Bost_Pwm2
;;		_Disable_Buck_Pwm
;;		_Enable_Bost_Pwm1
;;		_Enable_Bost_Pwm2
;;		_Set_Bost_Pwm1_Duty
;;		_Set_Bost_Pwm2_Duty
;;		_Set_Buck_Pwm_Duty
;;		_delay_ms
;;		_eeprom_write
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text38,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	567
global __ptext38
__ptext38:	;psect for function _Key_Menu
psect	text38
	file	"D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
	line	567
	global	__size_of_Key_Menu
	__size_of_Key_Menu	equ	__end_of_Key_Menu-_Key_Menu
	
_Key_Menu:	
;incstack = 0
	opt	stack 12
; Regs used in _Key_Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
	line	573
	
l21910:	
;ird_remote.c: 578: remote_mac=key_value>>16;
	movf	0+(((Key_Menu@key_value))+1),w
	movwf	(Key_Menu@code)
	line	586
;ird_remote.c: 586: switch(code)
	goto	l22264
	line	588
;ird_remote.c: 587: {
;ird_remote.c: 588: case 0x00:
	
l623:	
	line	589
;ird_remote.c: 589: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	590
;ird_remote.c: 590: break;
	goto	l637
	line	592
	
l21912:	
;ird_remote.c: 592: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u11891
	goto	u11890
u11891:
	goto	l637
u11890:
	line	594
	
l21914:	
;ird_remote.c: 593: {
;ird_remote.c: 594: light_mode =0x00;
	clrf	(_light_mode)^080h
	line	595
	
l21916:	
;ird_remote.c: 595: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	597
	
l21918:	
;ird_remote.c: 597: light2_mode =0x00;
	movlb 1	; select bank1
	clrf	(_light2_mode)^080h
	line	598
;ird_remote.c: 598: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	600
	
l21920:	
;ird_remote.c: 600: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	601
	
l21922:	
;ird_remote.c: 601: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	603
;ird_remote.c: 605: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	607
;ird_remote.c: 607: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	608
;ird_remote.c: 608: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	609
;ird_remote.c: 609: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	610
;ird_remote.c: 610: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	612
	
l21924:	
;ird_remote.c: 612: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	613
	
l21926:	
;ird_remote.c: 613: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	615
	
l21928:	
;ird_remote.c: 615: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	616
	
l21930:	
;ird_remote.c: 616: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	617
	
l21932:	
;ird_remote.c: 617: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	618
	
l21934:	
;ird_remote.c: 618: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	619
	
l21936:	
;ird_remote.c: 619: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	620
	
l21938:	
;ird_remote.c: 620: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	622
	
l21940:	
;ird_remote.c: 622: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	623
	
l21942:	
;ird_remote.c: 623: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	624
	
l21944:	
;ird_remote.c: 624: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	625
	
l21946:	
;ird_remote.c: 625: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	627
	
l21948:	
;ird_remote.c: 627: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	628
	
l21950:	
;ird_remote.c: 628: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	630
	
l21952:	
;ird_remote.c: 630: delay_ms(1000);
	movlw	low(03E8h)
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	movlw	high(03E8h)
	movwf	((delay_ms@count))+1
	fcall	_delay_ms
	line	632
	
l21954:	
;ird_remote.c: 632: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	633
	
l21956:	
;ird_remote.c: 633: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	635
	
l21958:	
;ird_remote.c: 635: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	636
	
l21960:	
;ird_remote.c: 636: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	637
	
l21962:	
;ird_remote.c: 637: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	638
	
l21964:	
;ird_remote.c: 638: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	639
	
l21966:	
;ird_remote.c: 639: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	640
	
l21968:	
;ird_remote.c: 640: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	643
	
l21970:	
;ird_remote.c: 643: pv_voltage_status=0x00;
	movlb 2	; select bank2
	clrf	(_pv_voltage_status)^0100h
	line	645
	
l21972:	
;ird_remote.c: 645: day_time_count=0x00;
	movlb 5	; select bank5
	clrf	(_day_time_count)^0280h
	clrf	(_day_time_count+1)^0280h
	clrf	(_day_time_count+2)^0280h
	clrf	(_day_time_count+3)^0280h
	line	647
	
l21974:	
;ird_remote.c: 647: night_time_count=0x00;
	clrf	(_night_time_count)^0280h
	clrf	(_night_time_count+1)^0280h
	clrf	(_night_time_count+2)^0280h
	clrf	(_night_time_count+3)^0280h
	line	649
	
l21976:	
;ird_remote.c: 649: pv_time_count=0x00;
	clrf	(_pv_time_count)^0280h
	clrf	(_pv_time_count+1)^0280h
	clrf	(_pv_time_count+2)^0280h
	clrf	(_pv_time_count+3)^0280h
	goto	l637
	line	653
	
l21978:	
;ird_remote.c: 653: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u11901
	goto	u11900
u11901:
	goto	l637
u11900:
	line	655
	
l21980:	
;ird_remote.c: 654: {
;ird_remote.c: 655: light_mode =0x01;
	clrf	(_light_mode)^080h
	incf	(_light_mode)^080h,f
	line	656
	
l21982:	
;ird_remote.c: 656: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	658
	
l21984:	
;ird_remote.c: 658: light2_mode =0x01;
	movlb 1	; select bank1
	clrf	(_light2_mode)^080h
	incf	(_light2_mode)^080h,f
	line	659
;ird_remote.c: 659: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	661
	
l21986:	
;ird_remote.c: 661: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	662
	
l21988:	
;ird_remote.c: 662: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	664
;ird_remote.c: 666: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	668
;ird_remote.c: 668: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	669
;ird_remote.c: 669: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	670
;ird_remote.c: 670: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	671
;ird_remote.c: 671: charge_index=0x00;
	clrf	(_charge_index)^080h
	goto	l21924
	line	714
	
l22044:	
;ird_remote.c: 714: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u11911
	goto	u11910
u11911:
	goto	l637
u11910:
	line	716
	
l22046:	
;ird_remote.c: 715: {
;ird_remote.c: 716: light_mode =0x02;
	movlw	(02h)
	movwf	(_light_mode)^080h
	line	717
	
l22048:	
;ird_remote.c: 717: eeprom_write(0x36,(unsigned char)(light_mode));
	movf	(_light_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(036h)
	fcall	_eeprom_write
	line	719
	
l22050:	
;ird_remote.c: 719: light2_mode =0x02;
	movlw	(02h)
	movlb 1	; select bank1
	movwf	(_light2_mode)^080h
	line	720
;ird_remote.c: 720: eeprom_write(0x37,(unsigned char)(light2_mode));
	movf	(_light2_mode)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(037h)
	fcall	_eeprom_write
	line	722
	
l22052:	
;ird_remote.c: 722: led_out_ctrl=0x00;
	movlb 1	; select bank1
	clrf	(_led_out_ctrl)^080h
	line	723
	
l22054:	
;ird_remote.c: 723: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	725
;ird_remote.c: 727: lr_cnt = 0x00;
	movlb 1	; select bank1
	clrf	(_work_mode)^080h
	line	729
;ird_remote.c: 729: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	730
;ird_remote.c: 730: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	731
;ird_remote.c: 731: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	732
;ird_remote.c: 732: charge_index=0x00;
	clrf	(_charge_index)^080h
	goto	l21924
	line	775
	
l22110:	
;ird_remote.c: 775: if(device_status==0x01)
	movlb 1	; select bank1
	decf	(_device_status)^080h,w
	skipz
	goto	u11921
	goto	u11920
u11921:
	goto	l22118
u11920:
	line	777
	
l22112:	
;ird_remote.c: 776: {
;ird_remote.c: 777: led_out_ctrl=led_out_ctrl+1;
	incf	(_led_out_ctrl)^080h,f
	line	779
	
l22114:	
;ird_remote.c: 779: led_out_ctrl=led_out_ctrl%2;
	movlw	(01h)
	andwf	(_led_out_ctrl)^080h,f
	line	781
	
l22116:	
;ird_remote.c: 781: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
	movf	(_led_out_ctrl)^080h,w
	movlb 0	; select bank0
	movwf	(eeprom_write@value)
	movlw	(039h)
	fcall	_eeprom_write
	line	783
	
l22118:	
;ird_remote.c: 782: }
;ird_remote.c: 783: if(led_out_ctrl==0x00 && device_status==0x01)
	movlb 1	; select bank1
	movf	(_led_out_ctrl)^080h,f
	skipz
	goto	u11931
	goto	u11930
u11931:
	goto	l22178
u11930:
	
l22120:	
	decf	(_device_status)^080h,w
	skipz
	goto	u11941
	goto	u11940
u11941:
	goto	l22178
u11940:
	line	785
	
l22122:	
;ird_remote.c: 787: lr_cnt = 0x00;
	clrf	(_work_mode)^080h
	line	789
;ird_remote.c: 789: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	790
;ird_remote.c: 790: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	791
;ird_remote.c: 791: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	792
;ird_remote.c: 792: charge_index=0x00;
	clrf	(_charge_index)^080h
	goto	l21924
	line	835
	
l22178:	
;ird_remote.c: 835: else if(led_out_ctrl==0x01 && device_status==0x01)
	decf	(_led_out_ctrl)^080h,w
	skipz
	goto	u11951
	goto	u11950
u11951:
	goto	l637
u11950:
	
l22180:	
	decf	(_device_status)^080h,w
	skipz
	goto	u11961
	goto	u11960
u11961:
	goto	l637
u11960:
	line	837
	
l22182:	
;ird_remote.c: 839: lr_cnt = 0x00;
	clrf	(_work_mode)^080h
	line	841
;ird_remote.c: 841: nop_index=0x00;
	movlb 2	; select bank2
	clrf	(_nop_index)^0100h
	line	842
;ird_remote.c: 842: discharge1_index=0x00;
	movlb 1	; select bank1
	clrf	(_discharge1_index)^080h
	line	843
;ird_remote.c: 843: discharge2_index=0x00;
	clrf	(_discharge2_index)^080h
	line	844
;ird_remote.c: 844: charge_index=0x00;
	clrf	(_charge_index)^080h
	line	846
	
l22184:	
;ird_remote.c: 846: Disable_Buck_Pwm();
	fcall	_Disable_Buck_Pwm
	line	847
	
l22186:	
;ird_remote.c: 847: Set_Buck_Pwm_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Buck_Pwm_Duty@duty)
	clrf	(Set_Buck_Pwm_Duty@duty+1)
	fcall	_Set_Buck_Pwm_Duty
	line	848
	
l22188:	
;ird_remote.c: 848: Disable_Bost_Pwm1();
	fcall	_Disable_Bost_Pwm1
	line	849
	
l22190:	
;ird_remote.c: 849: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	850
	
l22192:	
;ird_remote.c: 850: Set_Bost_Pwm1_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	851
	
l22194:	
;ird_remote.c: 851: Disable_Bost_Pwm2();
	fcall	_Disable_Bost_Pwm2
	line	852
	
l22196:	
;ird_remote.c: 852: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	853
	
l22198:	
;ird_remote.c: 853: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	855
	
l22200:	
;ird_remote.c: 855: (LATCbits.LATC3 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,3	;volatile
	line	856
	
l22202:	
;ird_remote.c: 856: Enable_Bost_Pwm1();
	fcall	_Enable_Bost_Pwm1
	line	857
	
l22204:	
;ird_remote.c: 857: (LATCbits.LATC0 = 0x01);
	movlb 2	; select bank2
	bsf	(270)^0100h,0	;volatile
	line	858
	
l22206:	
;ird_remote.c: 858: Enable_Bost_Pwm2();
	fcall	_Enable_Bost_Pwm2
	line	860
	
l22208:	
;ird_remote.c: 860: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	861
	
l22210:	
;ird_remote.c: 861: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	863
	
l22212:	
;ird_remote.c: 863: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	865
	
l22214:	
;ird_remote.c: 865: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	866
	
l22216:	
;ird_remote.c: 866: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	868
	
l22218:	
;ird_remote.c: 868: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	870
	
l22220:	
;ird_remote.c: 870: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	871
	
l22222:	
;ird_remote.c: 871: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	873
	
l22224:	
;ird_remote.c: 873: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	875
	
l22226:	
;ird_remote.c: 875: Set_Bost_Pwm1_Duty(0);
	clrf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	876
	
l22228:	
;ird_remote.c: 876: Set_Bost_Pwm2_Duty(0);
	movlb 0	; select bank0
	clrf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	878
	
l22230:	
;ird_remote.c: 878: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	line	880
	
l22232:	
;ird_remote.c: 880: Set_Bost_Pwm1_Duty(200);
	movlw	0C8h
	movwf	(Set_Bost_Pwm1_Duty@dduty)
	clrf	(Set_Bost_Pwm1_Duty@dduty+1)
	fcall	_Set_Bost_Pwm1_Duty
	line	881
	
l22234:	
;ird_remote.c: 881: Set_Bost_Pwm2_Duty(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(Set_Bost_Pwm2_Duty@dduty)
	clrf	(Set_Bost_Pwm2_Duty@dduty+1)
	fcall	_Set_Bost_Pwm2_Duty
	line	883
	
l22236:	
;ird_remote.c: 883: delay_ms(200);
	movlw	0C8h
	movlb 0	; select bank0
	movwf	(delay_ms@count)
	clrf	(delay_ms@count+1)
	fcall	_delay_ms
	goto	l21954
	line	586
	
l22264:	
	movf	(Key_Menu@code),w
	; Switch size 1, requested type "space"
; Number of cases is 5, Range of values is 0 to 136
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           16     9 (average)
; jumptable            260     6 (fixed)
;	Chosen strategy is simple_byte

	opt asmopt_off
	xorlw	0^0	; case 0
	skipnz
	goto	l623
	xorlw	16^0	; case 16
	skipnz
	goto	l21978
	xorlw	64^16	; case 64
	skipnz
	goto	l21912
	xorlw	80^64	; case 80
	skipnz
	goto	l22044
	xorlw	136^80	; case 136
	skipnz
	goto	l22110
	goto	l637
	opt asmopt_on

	line	909
	
l637:	
	return
	opt stack 0
GLOBAL	__end_of_Key_Menu
	__end_of_Key_Menu:
	signat	_Key_Menu,4216
	global	_eeprom_write

;; *************** function _eeprom_write *****************
;; Defined at:
;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
;; Parameters:    Size  Location     Type
;;  addr            1    wreg     unsigned char 
;;  value           1   62[BANK0 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  addr            1   63[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/3
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_auto_system
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text39,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
	line	6
global __ptext39
__ptext39:	;psect for function _eeprom_write
psect	text39
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
	line	6
	global	__size_of_eeprom_write
	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
	
_eeprom_write:	
;incstack = 0
	opt	stack 12
; Regs used in _eeprom_write: [wreg+status,2+status,0]
;eeprom_write@addr stored from wreg
	movwf	(eeprom_write@addr)
	line	8
	
l2396:	
	
l2397:	
	movlb 3	; select bank3
	btfsc	(3241/8)^0180h,(3241)&7	;volsfr
	goto	u6111
	goto	u6110
u6111:
	goto	l2397
u6110:
	
l16720:	
	movlb 0	; select bank0
	movf	(eeprom_write@addr),w
	movlb 3	; select bank3
	movwf	(401)^0180h	;volatile
	clrf	(401+1)^0180h	;volatile
	movlb 0	; select bank0
	movf	(eeprom_write@value),w
	movlb 3	; select bank3
	movwf	(403)^0180h	;volatile
	
l16722:	
	movlw	(03Fh)
	andwf	(405)^0180h,f	;volsfr
	
l16724:	
	bcf	(24/8),(24)&7	;volatile
	
l16726:	
	btfss	(95/8),(95)&7	;volatile
	goto	u6121
	goto	u6120
u6121:
	goto	l2400
u6120:
	
l16728:	
	bsf	(24/8),(24)&7	;volatile
	
l2400:	
	bcf	(95/8),(95)&7	;volatile
	bsf	(3242/8)^0180h,(3242)&7	;volsfr
	
l16730:	
	movlw	(055h)
	movwf	(406)^0180h	;volsfr
	movlw	(0AAh)
	movwf	(406)^0180h	;volsfr
	
l16732:	
	bsf	(3241/8)^0180h,(3241)&7	;volsfr
	
l16734:	
	bcf	(3242/8)^0180h,(3242)&7	;volsfr
	
l16736:	
	btfss	(24/8),(24)&7	;volatile
	goto	u6131
	goto	u6130
u6131:
	goto	l2403
u6130:
	
l16738:	
	bsf	(95/8),(95)&7	;volatile
	line	9
	
l2403:	
	return
	opt stack 0
GLOBAL	__end_of_eeprom_write
	__end_of_eeprom_write:
	signat	_eeprom_write,8312
	global	_delay_ms

;; *************** function _delay_ms *****************
;; Defined at:
;;		line 64 in file "D:\MCUProject\ZH-SL-S4080-1\src\delay.c"
;; Parameters:    Size  Location     Type
;;  count           2    3[BANK0 ] unsigned short 
;; Auto vars:     Size  Location     Type
;;  j               2    7[BANK0 ] unsigned short 
;;  i               2    5[BANK0 ] unsigned short 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_auto_system
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text40,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\delay.c"
	line	64
global __ptext40
__ptext40:	;psect for function _delay_ms
psect	text40
	file	"D:\MCUProject\ZH-SL-S4080-1\src\delay.c"
	line	64
	global	__size_of_delay_ms
	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
	
_delay_ms:	
;incstack = 0
	opt	stack 12
; Regs used in _delay_ms: [wreg+status,2+status,0]
	line	68
	
l21656:	
;delay.c: 66: WORD i, j;
;delay.c: 68: for (i = 0; i < count; i++)
	clrf	(delay_ms@i)
	clrf	(delay_ms@i+1)
	goto	l21670
	line	70
	
l21658:	
;delay.c: 69: {
;delay.c: 70: for (j = 0; j < 1000; j++)
	clrf	(delay_ms@j)
	clrf	(delay_ms@j+1)
	line	71
	
l75:	
	line	72
;delay.c: 71: {
;delay.c: 72: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	73
;delay.c: 73: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	74
;delay.c: 74: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	75
;delay.c: 75: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	76
;delay.c: 76: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	77
;delay.c: 77: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	78
;delay.c: 78: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	79
;delay.c: 79: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	70
	
l21664:	
	movlb 0	; select bank0
	incf	(delay_ms@j),f
	skipnz
	incf	(delay_ms@j+1),f
	
l21666:	
	movlw	high(03E8h)
	subwf	(delay_ms@j+1),w
	movlw	low(03E8h)
	skipnz
	subwf	(delay_ms@j),w
	skipc
	goto	u11611
	goto	u11610
u11611:
	goto	l75
u11610:
	line	68
	
l21668:	
	incf	(delay_ms@i),f
	skipnz
	incf	(delay_ms@i+1),f
	
l21670:	
	movf	(delay_ms@count+1),w
	subwf	(delay_ms@i+1),w
	skipz
	goto	u11625
	movf	(delay_ms@count),w
	subwf	(delay_ms@i),w
u11625:
	skipc
	goto	u11621
	goto	u11620
u11621:
	goto	l21658
u11620:
	line	82
	
l78:	
	return
	opt stack 0
GLOBAL	__end_of_delay_ms
	__end_of_delay_ms:
	signat	_delay_ms,4216
	global	_Set_Buck_Pwm_Duty

;; *************** function _Set_Buck_Pwm_Duty *****************
;; Defined at:
;;		line 157 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;  duty            2    3[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/5
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_Mppt_Charge
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text41,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	157
global __ptext41
__ptext41:	;psect for function _Set_Buck_Pwm_Duty
psect	text41
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	157
	global	__size_of_Set_Buck_Pwm_Duty
	__size_of_Set_Buck_Pwm_Duty	equ	__end_of_Set_Buck_Pwm_Duty-_Set_Buck_Pwm_Duty
	
_Set_Buck_Pwm_Duty:	
;incstack = 0
	opt	stack 12
; Regs used in _Set_Buck_Pwm_Duty: [wreg+status,2+status,0]
	line	159
	
l22268:	
;pwm.c: 159: buck_pwm_value=duty;
	movf	(Set_Buck_Pwm_Duty@duty+1),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value+1)^080h
	movlb 0	; select bank0
	movf	(Set_Buck_Pwm_Duty@duty),w
	movlb 1	; select bank1
	movwf	(_buck_pwm_value)^080h
	line	161
;pwm.c: 161: if(duty<=900)
	movlw	high(0385h)
	movlb 0	; select bank0
	subwf	(Set_Buck_Pwm_Duty@duty+1),w
	movlw	low(0385h)
	skipnz
	subwf	(Set_Buck_Pwm_Duty@duty),w
	skipnc
	goto	u11971
	goto	u11970
u11971:
	goto	l22272
u11970:
	line	163
	
l22270:	
;pwm.c: 162: {
;pwm.c: 163: CCPR1L=(unsigned char)(duty>>2);
	movf	(Set_Buck_Pwm_Duty@duty+1),w
	movwf	(??_Set_Buck_Pwm_Duty+0)+0+1
	movf	(Set_Buck_Pwm_Duty@duty),w
	movwf	(??_Set_Buck_Pwm_Duty+0)+0
	lsrf	(??_Set_Buck_Pwm_Duty+0)+1,f
	rrf	(??_Set_Buck_Pwm_Duty+0)+0,f
	lsrf	(??_Set_Buck_Pwm_Duty+0)+1,f
	rrf	(??_Set_Buck_Pwm_Duty+0)+0,f
	movf	0+(??_Set_Buck_Pwm_Duty+0)+0,w
	movlb 5	; select bank5
	movwf	(657)^0280h	;volatile
	line	165
;pwm.c: 165: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
	movlb 0	; select bank0
	movf	(Set_Buck_Pwm_Duty@duty),w
	andlw	03h
	movwf	(??_Set_Buck_Pwm_Duty+0)+0
	swapf	(??_Set_Buck_Pwm_Duty+0)+0,f
	movlb 5	; select bank5
	movf	(659)^0280h,w	;volatile
	movlb 0	; select bank0
	xorwf	(??_Set_Buck_Pwm_Duty+0)+0,w
	andlw	not (((1<<2)-1)<<4)
	xorwf	(??_Set_Buck_Pwm_Duty+0)+0,w
	movlb 5	; select bank5
	movwf	(659)^0280h	;volatile
	line	166
;pwm.c: 166: }
	goto	l1301
	line	169
	
l22272:	
	line	171
	
l22274:	
;pwm.c: 171: CCPR1L=(unsigned char)(duty>>2);
	movlw	(0E1h)
	movlb 5	; select bank5
	movwf	(657)^0280h	;volatile
	line	173
	
l22276:	
;pwm.c: 173: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(659)^0280h,f	;volatile
	line	176
	
l1301:	
	return
	opt stack 0
GLOBAL	__end_of_Set_Buck_Pwm_Duty
	__end_of_Set_Buck_Pwm_Duty:
	signat	_Set_Buck_Pwm_Duty,4216
	global	_Set_Bost_Pwm2_Duty

;; *************** function _Set_Bost_Pwm2_Duty *****************
;; Defined at:
;;		line 271 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;  dduty           2    3[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/6
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text42,local,class=CODE,delta=2,merge=1
	line	271
global __ptext42
__ptext42:	;psect for function _Set_Bost_Pwm2_Duty
psect	text42
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	271
	global	__size_of_Set_Bost_Pwm2_Duty
	__size_of_Set_Bost_Pwm2_Duty	equ	__end_of_Set_Bost_Pwm2_Duty-_Set_Bost_Pwm2_Duty
	
_Set_Bost_Pwm2_Duty:	
;incstack = 0
	opt	stack 12
; Regs used in _Set_Bost_Pwm2_Duty: [wreg+status,2+status,0]
	line	274
	
l21684:	
;pwm.c: 274: bost_pwm2_value=dduty;
	movf	(Set_Bost_Pwm2_Duty@dduty+1),w
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value+1)^080h
	movlb 0	; select bank0
	movf	(Set_Bost_Pwm2_Duty@dduty),w
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	line	276
;pwm.c: 276: if(dduty<=488)
	movlw	high(01E9h)
	movlb 0	; select bank0
	subwf	(Set_Bost_Pwm2_Duty@dduty+1),w
	movlw	low(01E9h)
	skipnz
	subwf	(Set_Bost_Pwm2_Duty@dduty),w
	skipnc
	goto	u11641
	goto	u11640
u11641:
	goto	l21688
u11640:
	line	278
	
l21686:	
;pwm.c: 277: {
;pwm.c: 278: CCPR5L=(unsigned char)(dduty>>2);
	movf	(Set_Bost_Pwm2_Duty@dduty+1),w
	movwf	(??_Set_Bost_Pwm2_Duty+0)+0+1
	movf	(Set_Bost_Pwm2_Duty@dduty),w
	movwf	(??_Set_Bost_Pwm2_Duty+0)+0
	lsrf	(??_Set_Bost_Pwm2_Duty+0)+1,f
	rrf	(??_Set_Bost_Pwm2_Duty+0)+0,f
	lsrf	(??_Set_Bost_Pwm2_Duty+0)+1,f
	rrf	(??_Set_Bost_Pwm2_Duty+0)+0,f
	movf	0+(??_Set_Bost_Pwm2_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(796)^0300h	;volatile
	line	280
;pwm.c: 280: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
	movlb 0	; select bank0
	movf	(Set_Bost_Pwm2_Duty@dduty),w
	andlw	03h
	movwf	(??_Set_Bost_Pwm2_Duty+0)+0
	swapf	(??_Set_Bost_Pwm2_Duty+0)+0,f
	movlb 6	; select bank6
	movf	(798)^0300h,w	;volatile
	movlb 0	; select bank0
	xorwf	(??_Set_Bost_Pwm2_Duty+0)+0,w
	andlw	not (((1<<2)-1)<<4)
	xorwf	(??_Set_Bost_Pwm2_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(798)^0300h	;volatile
	line	281
;pwm.c: 281: }
	goto	l1323
	line	284
	
l21688:	
	line	286
	
l21690:	
;pwm.c: 286: CCPR5L=(unsigned char)(dduty>>2);
	movlw	(07Ah)
	movlb 6	; select bank6
	movwf	(796)^0300h	;volatile
	line	288
	
l21692:	
;pwm.c: 288: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(798)^0300h,f	;volatile
	line	291
	
l1323:	
	return
	opt stack 0
GLOBAL	__end_of_Set_Bost_Pwm2_Duty
	__end_of_Set_Bost_Pwm2_Duty:
	signat	_Set_Bost_Pwm2_Duty,4216
	global	_Set_Bost_Pwm1_Duty

;; *************** function _Set_Bost_Pwm1_Duty *****************
;; Defined at:
;;		line 242 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;  dduty           2    3[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/6
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text43,local,class=CODE,delta=2,merge=1
	line	242
global __ptext43
__ptext43:	;psect for function _Set_Bost_Pwm1_Duty
psect	text43
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	242
	global	__size_of_Set_Bost_Pwm1_Duty
	__size_of_Set_Bost_Pwm1_Duty	equ	__end_of_Set_Bost_Pwm1_Duty-_Set_Bost_Pwm1_Duty
	
_Set_Bost_Pwm1_Duty:	
;incstack = 0
	opt	stack 12
; Regs used in _Set_Bost_Pwm1_Duty: [wreg+status,2+status,0]
	line	245
	
l21672:	
;pwm.c: 245: bost_pwm1_value=dduty;
	movf	(Set_Bost_Pwm1_Duty@dduty+1),w
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value+1)^080h
	movlb 0	; select bank0
	movf	(Set_Bost_Pwm1_Duty@dduty),w
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value)^080h
	line	247
;pwm.c: 247: if(dduty<=488)
	movlw	high(01E9h)
	movlb 0	; select bank0
	subwf	(Set_Bost_Pwm1_Duty@dduty+1),w
	movlw	low(01E9h)
	skipnz
	subwf	(Set_Bost_Pwm1_Duty@dduty),w
	skipnc
	goto	u11631
	goto	u11630
u11631:
	goto	l21676
u11630:
	line	249
	
l21674:	
;pwm.c: 248: {
;pwm.c: 249: CCPR3L=(unsigned char)(dduty>>2);
	movf	(Set_Bost_Pwm1_Duty@dduty+1),w
	movwf	(??_Set_Bost_Pwm1_Duty+0)+0+1
	movf	(Set_Bost_Pwm1_Duty@dduty),w
	movwf	(??_Set_Bost_Pwm1_Duty+0)+0
	lsrf	(??_Set_Bost_Pwm1_Duty+0)+1,f
	rrf	(??_Set_Bost_Pwm1_Duty+0)+0,f
	lsrf	(??_Set_Bost_Pwm1_Duty+0)+1,f
	rrf	(??_Set_Bost_Pwm1_Duty+0)+0,f
	movf	0+(??_Set_Bost_Pwm1_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(785)^0300h	;volatile
	line	251
;pwm.c: 251: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
	movlb 0	; select bank0
	movf	(Set_Bost_Pwm1_Duty@dduty),w
	andlw	03h
	movwf	(??_Set_Bost_Pwm1_Duty+0)+0
	swapf	(??_Set_Bost_Pwm1_Duty+0)+0,f
	movlb 6	; select bank6
	movf	(787)^0300h,w	;volatile
	movlb 0	; select bank0
	xorwf	(??_Set_Bost_Pwm1_Duty+0)+0,w
	andlw	not (((1<<2)-1)<<4)
	xorwf	(??_Set_Bost_Pwm1_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(787)^0300h	;volatile
	line	252
;pwm.c: 252: }
	goto	l1318
	line	255
	
l21676:	
	line	257
	
l21678:	
;pwm.c: 257: CCPR3L=(unsigned char)(dduty>>2);
	movlw	(07Ah)
	movlb 6	; select bank6
	movwf	(785)^0300h	;volatile
	line	259
	
l21680:	
;pwm.c: 259: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(787)^0300h,f	;volatile
	line	262
	
l1318:	
	return
	opt stack 0
GLOBAL	__end_of_Set_Bost_Pwm1_Duty
	__end_of_Set_Bost_Pwm1_Duty:
	signat	_Set_Bost_Pwm1_Duty,4216
	global	_Enable_Bost_Pwm2

;; *************** function _Enable_Bost_Pwm2 *****************
;; Defined at:
;;		line 199 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text44,local,class=CODE,delta=2,merge=1
	line	199
global __ptext44
__ptext44:	;psect for function _Enable_Bost_Pwm2
psect	text44
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	199
	global	__size_of_Enable_Bost_Pwm2
	__size_of_Enable_Bost_Pwm2	equ	__end_of_Enable_Bost_Pwm2-_Enable_Bost_Pwm2
	
_Enable_Bost_Pwm2:	
;incstack = 0
	opt	stack 12
; Regs used in _Enable_Bost_Pwm2: []
	line	201
	
l22280:	
;pwm.c: 201: TRISAbits.TRISA4 =0;
	movlb 1	; select bank1
	bcf	(140)^080h,4	;volatile
	line	203
;pwm.c: 203: TMR2ON=1;
	movlb 0	; select bank0
	bsf	(226/8),(226)&7	;volatile
	line	204
	
l1307:	
	return
	opt stack 0
GLOBAL	__end_of_Enable_Bost_Pwm2
	__end_of_Enable_Bost_Pwm2:
	signat	_Enable_Bost_Pwm2,88
	global	_Enable_Bost_Pwm1

;; *************** function _Enable_Bost_Pwm1 *****************
;; Defined at:
;;		line 186 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1F/2
;;		On exit  : 1F/8
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text45,local,class=CODE,delta=2,merge=1
	line	186
global __ptext45
__ptext45:	;psect for function _Enable_Bost_Pwm1
psect	text45
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	186
	global	__size_of_Enable_Bost_Pwm1
	__size_of_Enable_Bost_Pwm1	equ	__end_of_Enable_Bost_Pwm1-_Enable_Bost_Pwm1
	
_Enable_Bost_Pwm1:	
;incstack = 0
	opt	stack 12
; Regs used in _Enable_Bost_Pwm1: []
	line	188
	
l22278:	
;pwm.c: 188: TRISBbits.TRISB5 =0;
	movlb 1	; select bank1
	bcf	(141)^080h,5	;volatile
	line	190
;pwm.c: 190: TMR4ON=1;
	movlb 8	; select bank8
	bsf	(8378/8)^0400h,(8378)&7	;volatile
	line	191
	
l1304:	
	return
	opt stack 0
GLOBAL	__end_of_Enable_Bost_Pwm1
	__end_of_Enable_Bost_Pwm1:
	signat	_Enable_Bost_Pwm1,88
	global	_Disable_Buck_Pwm

;; *************** function _Disable_Buck_Pwm *****************
;; Defined at:
;;		line 141 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1C/1
;;		On exit  : 1F/8
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text46,local,class=CODE,delta=2,merge=1
	line	141
global __ptext46
__ptext46:	;psect for function _Disable_Buck_Pwm
psect	text46
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	141
	global	__size_of_Disable_Buck_Pwm
	__size_of_Disable_Buck_Pwm	equ	__end_of_Disable_Buck_Pwm-_Disable_Buck_Pwm
	
_Disable_Buck_Pwm:	
;incstack = 0
	opt	stack 12
; Regs used in _Disable_Buck_Pwm: []
	line	143
	
l22266:	
;pwm.c: 143: TRISCbits.TRISC2=1;
	movlb 1	; select bank1
	bsf	(142)^080h,2	;volatile
	line	145
;pwm.c: 145: TMR6ON=0;
	movlb 8	; select bank8
	bcf	(8434/8)^0400h,(8434)&7	;volatile
	line	147
	
l1296:	
	return
	opt stack 0
GLOBAL	__end_of_Disable_Buck_Pwm
	__end_of_Disable_Buck_Pwm:
	signat	_Disable_Buck_Pwm,88
	global	_Disable_Bost_Pwm2

;; *************** function _Disable_Bost_Pwm2 *****************
;; Defined at:
;;		line 228 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 11/6
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text47,local,class=CODE,delta=2,merge=1
	line	228
global __ptext47
__ptext47:	;psect for function _Disable_Bost_Pwm2
psect	text47
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	228
	global	__size_of_Disable_Bost_Pwm2
	__size_of_Disable_Bost_Pwm2	equ	__end_of_Disable_Bost_Pwm2-_Disable_Bost_Pwm2
	
_Disable_Bost_Pwm2:	
;incstack = 0
	opt	stack 12
; Regs used in _Disable_Bost_Pwm2: []
	line	230
	
l21694:	
;pwm.c: 230: TRISAbits.TRISA4 =1;
	movlb 1	; select bank1
	bsf	(140)^080h,4	;volatile
	line	232
;pwm.c: 232: TMR2ON=0;
	movlb 0	; select bank0
	bcf	(226/8),(226)&7	;volatile
	line	234
	
l1313:	
	return
	opt stack 0
GLOBAL	__end_of_Disable_Bost_Pwm2
	__end_of_Disable_Bost_Pwm2:
	signat	_Disable_Bost_Pwm2,88
	global	_Disable_Bost_Pwm1

;; *************** function _Disable_Bost_Pwm1 *****************
;; Defined at:
;;		line 214 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 18/5
;;		On exit  : 1F/8
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Key_Menu
;;		_scan_key_value
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text48,local,class=CODE,delta=2,merge=1
	line	214
global __ptext48
__ptext48:	;psect for function _Disable_Bost_Pwm1
psect	text48
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	214
	global	__size_of_Disable_Bost_Pwm1
	__size_of_Disable_Bost_Pwm1	equ	__end_of_Disable_Bost_Pwm1-_Disable_Bost_Pwm1
	
_Disable_Bost_Pwm1:	
;incstack = 0
	opt	stack 12
; Regs used in _Disable_Bost_Pwm1: []
	line	216
	
l21682:	
;pwm.c: 216: TRISBbits.TRISB5 =1;
	movlb 1	; select bank1
	bsf	(141)^080h,5	;volatile
	line	218
;pwm.c: 218: TMR4ON=0;
	movlb 8	; select bank8
	bcf	(8378/8)^0400h,(8378)&7	;volatile
	line	220
	
l1310:	
	return
	opt stack 0
GLOBAL	__end_of_Disable_Bost_Pwm1
	__end_of_Disable_Bost_Pwm1:
	signat	_Disable_Bost_Pwm1,88
	global	___ftdiv

;; *************** function ___ftdiv *****************
;; Defined at:
;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\ftdiv.c"
;; Parameters:    Size  Location     Type
;;  f2              3   34[BANK0 ] float 
;;  f1              3   37[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;  f3              3   44[BANK0 ] float 
;;  sign            1   48[BANK0 ] unsigned char 
;;  exp             1   47[BANK0 ] unsigned char 
;;  cntr            1   43[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  3   34[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       15 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_read_param_eeprom
;;		_auto_system
;;		_application_init
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text49,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\ftdiv.c"
	line	49
global __ptext49
__ptext49:	;psect for function ___ftdiv
psect	text49
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\ftdiv.c"
	line	49
	global	__size_of___ftdiv
	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
	
___ftdiv:	
;incstack = 0
	opt	stack 10
; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
	line	55
	
l25110:	
	movf	(___ftdiv@f1),w
	movwf	((??___ftdiv+0)+0)
	movf	(___ftdiv@f1+1),w
	movwf	((??___ftdiv+0)+0+1)
	movf	(___ftdiv@f1+2),w
	movwf	((??___ftdiv+0)+0+2)
	clrc
	rlf	(??___ftdiv+0)+1,w
	rlf	(??___ftdiv+0)+2,w
	movwf	(___ftdiv@exp)
	movf	((___ftdiv@exp)),f
	skipz
	goto	u16131
	goto	u16130
u16131:
	goto	l25114
u16130:
	line	56
	
l25112:	
	clrf	(?___ftdiv)
	clrf	(?___ftdiv+1)
	clrf	(?___ftdiv+2)
	goto	l2676
	line	57
	
l25114:	
	movf	(___ftdiv@f2),w
	movwf	((??___ftdiv+0)+0)
	movf	(___ftdiv@f2+1),w
	movwf	((??___ftdiv+0)+0+1)
	movf	(___ftdiv@f2+2),w
	movwf	((??___ftdiv+0)+0+2)
	clrc
	rlf	(??___ftdiv+0)+1,w
	rlf	(??___ftdiv+0)+2,w
	movwf	(___ftdiv@sign)
	movf	((___ftdiv@sign)),f
	skipz
	goto	u16141
	goto	u16140
u16141:
	goto	l2677
u16140:
	line	58
	
l25116:	
	clrf	(?___ftdiv)
	clrf	(?___ftdiv+1)
	clrf	(?___ftdiv+2)
	goto	l2676
	
l2677:	
	line	59
	clrf	(___ftdiv@f3)
	clrf	(___ftdiv@f3+1)
	clrf	(___ftdiv@f3+2)
	line	60
	
l25118:	
	movlw	(089h)
	addwf	(___ftdiv@sign),w
	movwf	(??___ftdiv+0)+0
	movf	0+(??___ftdiv+0)+0,w
	subwf	(___ftdiv@exp),f
	line	61
	
l25120:	
	movf	0+(((___ftdiv@f1))+2),w
	movwf	(___ftdiv@sign)
	line	62
	
l25122:	
	movf	0+(((___ftdiv@f2))+2),w
	xorwf	(___ftdiv@sign),f
	line	63
	
l25124:	
	movlw	(080h)
	andwf	(___ftdiv@sign),f
	line	64
	
l25126:	
	bsf	(___ftdiv@f1)+(15/8),(15)&7
	line	65
	
l25128:	
	movlw	0FFh
	andwf	(___ftdiv@f1),f
	movlw	0FFh
	andwf	(___ftdiv@f1+1),f
	movlw	0
	andwf	(___ftdiv@f1+2),f
	line	66
	
l25130:	
	bsf	(___ftdiv@f2)+(15/8),(15)&7
	line	67
	
l25132:	
	movlw	0FFh
	andwf	(___ftdiv@f2),f
	movlw	0FFh
	andwf	(___ftdiv@f2+1),f
	movlw	0
	andwf	(___ftdiv@f2+2),f
	line	68
	
l25134:	
	movlw	(018h)
	movwf	(___ftdiv@cntr)
	line	70
	
l25136:	
	lslf	(___ftdiv@f3),f
	rlf	(___ftdiv@f3+1),f
	rlf	(___ftdiv@f3+2),f
	line	71
	movf	(___ftdiv@f2+2),w
	subwf	(___ftdiv@f1+2),w
	skipz
	goto	u16155
	movf	(___ftdiv@f2+1),w
	subwf	(___ftdiv@f1+1),w
	skipz
	goto	u16155
	movf	(___ftdiv@f2),w
	subwf	(___ftdiv@f1),w
u16155:
	skipc
	goto	u16151
	goto	u16150
u16151:
	goto	l25142
u16150:
	line	72
	
l25138:	
	movf	(___ftdiv@f2),w
	subwf	(___ftdiv@f1),f
	movf	(___ftdiv@f2+1),w
	subwfb	(___ftdiv@f1+1),f
	movf	(___ftdiv@f2+2),w
	subwfb	(___ftdiv@f1+2),f
	line	73
	
l25140:	
	bsf	(___ftdiv@f3)+(0/8),(0)&7
	line	75
	
l25142:	
	lslf	(___ftdiv@f1),f
	rlf	(___ftdiv@f1+1),f
	rlf	(___ftdiv@f1+2),f
	line	76
	
l25144:	
	decfsz	(___ftdiv@cntr),f
	goto	u16161
	goto	u16160
u16161:
	goto	l25136
u16160:
	line	77
	
l25146:	
	movf	(___ftdiv@f3),w
	movwf	(___ftpack@arg)
	movf	(___ftdiv@f3+1),w
	movwf	(___ftpack@arg+1)
	movf	(___ftdiv@f3+2),w
	movwf	(___ftpack@arg+2)
	movf	(___ftdiv@exp),w
	movwf	(___ftpack@exp)
	movf	(___ftdiv@sign),w
	movwf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___ftdiv)
	movf	(1+(?___ftpack)),w
	movwf	(?___ftdiv+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___ftdiv+2)
	line	78
	
l2676:	
	return
	opt stack 0
GLOBAL	__end_of___ftdiv
	__end_of___ftdiv:
	signat	___ftdiv,8315
	global	___ftadd

;; *************** function ___ftadd *****************
;; Defined at:
;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
;; Parameters:    Size  Location     Type
;;  f1              3   34[BANK0 ] float 
;;  f2              3   37[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;  exp1            1   45[BANK0 ] unsigned char 
;;  exp2            1   44[BANK0 ] unsigned char 
;;  sign            1   43[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  3   34[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_application_init
;;		_pid_calc
;;		_pid_calc_2
;;		_handle_ad_loop
;;		_handle_task_process
;;		_Mppt_Charge
;;		___ftsub
;; This function uses a non-reentrant model
;;
psect	text50,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
	line	86
global __ptext50
__ptext50:	;psect for function ___ftadd
psect	text50
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
	line	86
	global	__size_of___ftadd
	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
	
___ftadd:	
;incstack = 0
	opt	stack 11
; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
	line	90
	
l25032:	
	movf	(___ftadd@f1),w
	movwf	((??___ftadd+0)+0)
	movf	(___ftadd@f1+1),w
	movwf	((??___ftadd+0)+0+1)
	movf	(___ftadd@f1+2),w
	movwf	((??___ftadd+0)+0+2)
	clrc
	rlf	(??___ftadd+0)+1,w
	rlf	(??___ftadd+0)+2,w
	movwf	(___ftadd@exp1)
	line	91
	movf	(___ftadd@f2),w
	movwf	((??___ftadd+0)+0)
	movf	(___ftadd@f2+1),w
	movwf	((??___ftadd+0)+0+1)
	movf	(___ftadd@f2+2),w
	movwf	((??___ftadd+0)+0+2)
	clrc
	rlf	(??___ftadd+0)+1,w
	rlf	(??___ftadd+0)+2,w
	movwf	(___ftadd@exp2)
	line	92
	
l25034:	
	movf	(___ftadd@exp1),w
	skipz
	goto	u15940
	goto	l25040
u15940:
	
l25036:	
	movf	(___ftadd@exp2),w
	subwf	(___ftadd@exp1),w
	skipnc
	goto	u15951
	goto	u15950
u15951:
	goto	l25044
u15950:
	
l25038:	
	movf	(___ftadd@exp2),w
	movwf	(??___ftadd+0)+0
	movf	(___ftadd@exp1),w
	subwf	(??___ftadd+0)+0,f
	movlw	(019h)
	subwf	0+(??___ftadd+0)+0,w
	skipc
	goto	u15961
	goto	u15960
u15961:
	goto	l25044
u15960:
	line	93
	
l25040:	
	movf	(___ftadd@f2),w
	movwf	(?___ftadd)
	movf	(___ftadd@f2+1),w
	movwf	(?___ftadd+1)
	movf	(___ftadd@f2+2),w
	movwf	(?___ftadd+2)
	goto	l2645
	line	94
	
l25044:	
	movf	(___ftadd@exp2),w
	skipz
	goto	u15970
	goto	l2648
u15970:
	
l25046:	
	movf	(___ftadd@exp1),w
	subwf	(___ftadd@exp2),w
	skipnc
	goto	u15981
	goto	u15980
u15981:
	goto	l25050
u15980:
	
l25048:	
	movf	(___ftadd@exp1),w
	movwf	(??___ftadd+0)+0
	movf	(___ftadd@exp2),w
	subwf	(??___ftadd+0)+0,f
	movlw	(019h)
	subwf	0+(??___ftadd+0)+0,w
	skipc
	goto	u15991
	goto	u15990
u15991:
	goto	l25050
u15990:
	
l2648:	
	line	95
	goto	l2645
	line	96
	
l25050:	
	movlw	(06h)
	movwf	(___ftadd@sign)
	line	97
	
l25052:	
	btfss	(___ftadd@f1+2),(23)&7
	goto	u16001
	goto	u16000
u16001:
	goto	l2649
u16000:
	line	98
	
l25054:	
	bsf	(___ftadd@sign)+(7/8),(7)&7
	
l2649:	
	line	99
	btfss	(___ftadd@f2+2),(23)&7
	goto	u16011
	goto	u16010
u16011:
	goto	l2650
u16010:
	line	100
	
l25056:	
	bsf	(___ftadd@sign)+(6/8),(6)&7
	
l2650:	
	line	101
	bsf	(___ftadd@f1)+(15/8),(15)&7
	line	102
	
l25058:	
	movlw	0FFh
	andwf	(___ftadd@f1),f
	movlw	0FFh
	andwf	(___ftadd@f1+1),f
	movlw	0
	andwf	(___ftadd@f1+2),f
	line	103
	
l25060:	
	bsf	(___ftadd@f2)+(15/8),(15)&7
	line	104
	movlw	0FFh
	andwf	(___ftadd@f2),f
	movlw	0FFh
	andwf	(___ftadd@f2+1),f
	movlw	0
	andwf	(___ftadd@f2+2),f
	line	106
	movf	(___ftadd@exp2),w
	subwf	(___ftadd@exp1),w
	skipnc
	goto	u16021
	goto	u16020
u16021:
	goto	l25072
u16020:
	line	110
	
l25062:	
	lslf	(___ftadd@f2),f
	rlf	(___ftadd@f2+1),f
	rlf	(___ftadd@f2+2),f
	line	111
	decf	(___ftadd@exp2),f
	line	112
	
l25064:	
	movf	(___ftadd@exp2),w
	xorwf	(___ftadd@exp1),w
	skipnz
	goto	u16031
	goto	u16030
u16031:
	goto	l25070
u16030:
	
l25066:	
	decf	(___ftadd@sign),f
	movf	((___ftadd@sign)),w
	andlw	07h
	btfss	status,2
	goto	u16041
	goto	u16040
u16041:
	goto	l25062
u16040:
	goto	l25070
	line	114
	
l25068:	
	lsrf	(___ftadd@f1+2),f
	rrf	(___ftadd@f1+1),f
	rrf	(___ftadd@f1),f
	line	115
	incf	(___ftadd@exp1),f
	line	113
	
l25070:	
	movf	(___ftadd@exp1),w
	xorwf	(___ftadd@exp2),w
	skipz
	goto	u16051
	goto	u16050
u16051:
	goto	l25068
u16050:
	goto	l2659
	line	117
	
l25072:	
	movf	(___ftadd@exp1),w
	subwf	(___ftadd@exp2),w
	skipnc
	goto	u16061
	goto	u16060
u16061:
	goto	l2659
u16060:
	line	121
	
l25074:	
	lslf	(___ftadd@f1),f
	rlf	(___ftadd@f1+1),f
	rlf	(___ftadd@f1+2),f
	line	122
	decf	(___ftadd@exp1),f
	line	123
	
l25076:	
	movf	(___ftadd@exp2),w
	xorwf	(___ftadd@exp1),w
	skipnz
	goto	u16071
	goto	u16070
u16071:
	goto	l25082
u16070:
	
l25078:	
	decf	(___ftadd@sign),f
	movf	((___ftadd@sign)),w
	andlw	07h
	btfss	status,2
	goto	u16081
	goto	u16080
u16081:
	goto	l25074
u16080:
	goto	l25082
	line	125
	
l25080:	
	lsrf	(___ftadd@f2+2),f
	rrf	(___ftadd@f2+1),f
	rrf	(___ftadd@f2),f
	line	126
	incf	(___ftadd@exp2),f
	line	124
	
l25082:	
	movf	(___ftadd@exp1),w
	xorwf	(___ftadd@exp2),w
	skipz
	goto	u16091
	goto	u16090
u16091:
	goto	l25080
u16090:
	line	129
	
l2659:	
	btfss	(___ftadd@sign),(7)&7
	goto	u16101
	goto	u16100
u16101:
	goto	l25088
u16100:
	line	131
	
l25084:	
	movlw	0FFh
	xorwf	(___ftadd@f1),f
	movlw	0FFh
	xorwf	(___ftadd@f1+1),f
	movlw	0FFh
	xorwf	(___ftadd@f1+2),f
	line	132
	
l25086:	
	incf	(___ftadd@f1),f
	skipnz
	incf	(___ftadd@f1+1),f
	skipnz
	incf	(___ftadd@f1+2),f
	line	134
	
l25088:	
	btfss	(___ftadd@sign),(6)&7
	goto	u16111
	goto	u16110
u16111:
	goto	l25094
u16110:
	line	136
	
l25090:	
	movlw	0FFh
	xorwf	(___ftadd@f2),f
	movlw	0FFh
	xorwf	(___ftadd@f2+1),f
	movlw	0FFh
	xorwf	(___ftadd@f2+2),f
	line	137
	
l25092:	
	incf	(___ftadd@f2),f
	skipnz
	incf	(___ftadd@f2+1),f
	skipnz
	incf	(___ftadd@f2+2),f
	line	139
	
l25094:	
	clrf	(___ftadd@sign)
	line	140
	
l25096:	
	movf	(___ftadd@f1),w
	addwf	(___ftadd@f2),f
	movf	(___ftadd@f1+1),w
	addwfc	(___ftadd@f2+1),f
	movf	(___ftadd@f1+2),w
	addwfc	(___ftadd@f2+2),f
	line	141
	
l25098:	
	btfss	(___ftadd@f2+2),(23)&7
	goto	u16121
	goto	u16120
u16121:
	goto	l25106
u16120:
	line	142
	
l25100:	
	movlw	0FFh
	xorwf	(___ftadd@f2),f
	movlw	0FFh
	xorwf	(___ftadd@f2+1),f
	movlw	0FFh
	xorwf	(___ftadd@f2+2),f
	line	143
	
l25102:	
	incf	(___ftadd@f2),f
	skipnz
	incf	(___ftadd@f2+1),f
	skipnz
	incf	(___ftadd@f2+2),f
	line	144
	
l25104:	
	clrf	(___ftadd@sign)
	incf	(___ftadd@sign),f
	line	146
	
l25106:	
	movf	(___ftadd@f2),w
	movwf	(___ftpack@arg)
	movf	(___ftadd@f2+1),w
	movwf	(___ftpack@arg+1)
	movf	(___ftadd@f2+2),w
	movwf	(___ftpack@arg+2)
	movf	(___ftadd@exp1),w
	movwf	(___ftpack@exp)
	movf	(___ftadd@sign),w
	movwf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___ftadd)
	movf	(1+(?___ftpack)),w
	movwf	(?___ftadd+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___ftadd+2)
	line	148
	
l2645:	
	return
	opt stack 0
GLOBAL	__end_of___ftadd
	__end_of___ftadd:
	signat	___ftadd,8315
	global	___ftmul

;; *************** function ___ftmul *****************
;; Defined at:
;;		line 51 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
;; Parameters:    Size  Location     Type
;;  f1              3   19[BANK0 ] float 
;;  f2              3   22[BANK0 ] float 
;; Auto vars:     Size  Location     Type
;;  f3_as_produc    3   29[BANK0 ] unsigned um
;;  sign            1   33[BANK0 ] unsigned char 
;;  cntr            1   32[BANK0 ] unsigned char 
;;  exp             1   28[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  3   19[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       15 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		___ftpack
;; This function is called by:
;;		_read_param_eeprom
;;		_auto_system
;;		_application_init
;;		_pid_calc
;;		_pid_calc_2
;;		_handle_ad_loop
;;		_handle_task_process
;;		_handle_uart_rx_buf
;; This function uses a non-reentrant model
;;
psect	text51,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
	line	51
global __ptext51
__ptext51:	;psect for function ___ftmul
psect	text51
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
	line	51
	global	__size_of___ftmul
	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
	
___ftmul:	
;incstack = 0
	opt	stack 10
; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
	line	56
	
l25170:	
	movf	(___ftmul@f1),w
	movwf	((??___ftmul+0)+0)
	movf	(___ftmul@f1+1),w
	movwf	((??___ftmul+0)+0+1)
	movf	(___ftmul@f1+2),w
	movwf	((??___ftmul+0)+0+2)
	clrc
	rlf	(??___ftmul+0)+1,w
	rlf	(??___ftmul+0)+2,w
	movwf	(___ftmul@exp)
	movf	((___ftmul@exp)),f
	skipz
	goto	u16201
	goto	u16200
u16201:
	goto	l25174
u16200:
	line	57
	
l25172:	
	clrf	(?___ftmul)
	clrf	(?___ftmul+1)
	clrf	(?___ftmul+2)
	goto	l2691
	line	58
	
l25174:	
	movf	(___ftmul@f2),w
	movwf	((??___ftmul+0)+0)
	movf	(___ftmul@f2+1),w
	movwf	((??___ftmul+0)+0+1)
	movf	(___ftmul@f2+2),w
	movwf	((??___ftmul+0)+0+2)
	clrc
	rlf	(??___ftmul+0)+1,w
	rlf	(??___ftmul+0)+2,w
	movwf	(___ftmul@sign)
	movf	((___ftmul@sign)),f
	skipz
	goto	u16211
	goto	u16210
u16211:
	goto	l25178
u16210:
	line	59
	
l25176:	
	clrf	(?___ftmul)
	clrf	(?___ftmul+1)
	clrf	(?___ftmul+2)
	goto	l2691
	line	60
	
l25178:	
	movf	(___ftmul@sign),w
	addlw	07Bh
	addwf	(___ftmul@exp),f
	line	61
	
l25180:	
	movf	0+(((___ftmul@f1))+2),w
	movwf	(___ftmul@sign)
	line	62
	
l25182:	
	movf	0+(((___ftmul@f2))+2),w
	xorwf	(___ftmul@sign),f
	line	63
	
l25184:	
	movlw	(080h)
	andwf	(___ftmul@sign),f
	line	64
	
l25186:	
	bsf	(___ftmul@f1)+(15/8),(15)&7
	line	66
	
l25188:	
	bsf	(___ftmul@f2)+(15/8),(15)&7
	line	67
	
l25190:	
	movlw	0FFh
	andwf	(___ftmul@f2),f
	movlw	0FFh
	andwf	(___ftmul@f2+1),f
	movlw	0
	andwf	(___ftmul@f2+2),f
	line	68
	
l25192:	
	clrf	(___ftmul@f3_as_product)
	clrf	(___ftmul@f3_as_product+1)
	clrf	(___ftmul@f3_as_product+2)
	line	69
	
l25194:	
	movlw	(07h)
	movwf	(___ftmul@cntr)
	line	71
	
l25196:	
	btfss	(___ftmul@f1),(0)&7
	goto	u16221
	goto	u16220
u16221:
	goto	l25200
u16220:
	line	72
	
l25198:	
	movf	(___ftmul@f2),w
	addwf	(___ftmul@f3_as_product),f
	movf	(___ftmul@f2+1),w
	addwfc	(___ftmul@f3_as_product+1),f
	movf	(___ftmul@f2+2),w
	addwfc	(___ftmul@f3_as_product+2),f
	line	73
	
l25200:	
	lsrf	(___ftmul@f1+2),f
	rrf	(___ftmul@f1+1),f
	rrf	(___ftmul@f1),f
	line	74
	
l25202:	
	lslf	(___ftmul@f2),f
	rlf	(___ftmul@f2+1),f
	rlf	(___ftmul@f2+2),f
	line	75
	
l25204:	
	decfsz	(___ftmul@cntr),f
	goto	u16231
	goto	u16230
u16231:
	goto	l25196
u16230:
	line	76
	
l25206:	
	movlw	(09h)
	movwf	(___ftmul@cntr)
	line	78
	
l25208:	
	btfss	(___ftmul@f1),(0)&7
	goto	u16241
	goto	u16240
u16241:
	goto	l25212
u16240:
	line	79
	
l25210:	
	movf	(___ftmul@f2),w
	addwf	(___ftmul@f3_as_product),f
	movf	(___ftmul@f2+1),w
	addwfc	(___ftmul@f3_as_product+1),f
	movf	(___ftmul@f2+2),w
	addwfc	(___ftmul@f3_as_product+2),f
	line	80
	
l25212:	
	lsrf	(___ftmul@f1+2),f
	rrf	(___ftmul@f1+1),f
	rrf	(___ftmul@f1),f
	line	81
	
l25214:	
	lsrf	(___ftmul@f3_as_product+2),f
	rrf	(___ftmul@f3_as_product+1),f
	rrf	(___ftmul@f3_as_product),f
	line	82
	
l25216:	
	decfsz	(___ftmul@cntr),f
	goto	u16251
	goto	u16250
u16251:
	goto	l25208
u16250:
	line	83
	
l25218:	
	movf	(___ftmul@f3_as_product),w
	movwf	(___ftpack@arg)
	movf	(___ftmul@f3_as_product+1),w
	movwf	(___ftpack@arg+1)
	movf	(___ftmul@f3_as_product+2),w
	movwf	(___ftpack@arg+2)
	movf	(___ftmul@exp),w
	movwf	(___ftpack@exp)
	movf	(___ftmul@sign),w
	movwf	(___ftpack@sign)
	fcall	___ftpack
	movf	(0+(?___ftpack)),w
	movwf	(?___ftmul)
	movf	(1+(?___ftpack)),w
	movwf	(?___ftmul+1)
	movf	(2+(?___ftpack)),w
	movwf	(?___ftmul+2)
	line	84
	
l2691:	
	return
	opt stack 0
GLOBAL	__end_of___ftmul
	__end_of___ftmul:
	signat	___ftmul,8315
	global	___ftpack

;; *************** function ___ftpack *****************
;; Defined at:
;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
;; Parameters:    Size  Location     Type
;;  arg             3    3[BANK0 ] unsigned um
;;  exp             1    6[BANK0 ] unsigned char 
;;  sign            1    7[BANK0 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  3    3[BANK0 ] float 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/0
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		Nothing
;; This function is called by:
;;		___awtoft
;;		___ftadd
;;		___ftdiv
;;		___ftmul
;;		___lbtoft
;;		___lwtoft
;; This function uses a non-reentrant model
;;
psect	text52,local,class=CODE,delta=2,merge=1
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
	line	62
global __ptext52
__ptext52:	;psect for function ___ftpack
psect	text52
	file	"D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
	line	62
	global	__size_of___ftpack
	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
	
___ftpack:	
;incstack = 0
	opt	stack 10
; Regs used in ___ftpack: [wreg+status,2+status,0]
	line	64
	
l24996:	
	movf	(___ftpack@exp),w
	skipz
	goto	u15860
	goto	l2625
u15860:
	
l24998:	
	movf	(___ftpack@arg+2),w
	iorwf	(___ftpack@arg+1),w
	iorwf	(___ftpack@arg),w
	skipz
	goto	u15871
	goto	u15870
u15871:
	goto	l25002
u15870:
	
l2625:	
	line	65
	clrf	(?___ftpack)
	clrf	(?___ftpack+1)
	clrf	(?___ftpack+2)
	goto	l2626
	line	67
	
l25000:	
	incf	(___ftpack@exp),f
	line	68
	lsrf	(___ftpack@arg+2),f
	rrf	(___ftpack@arg+1),f
	rrf	(___ftpack@arg),f
	line	66
	
l25002:	
	movlw	low highword(0FE0000h)
	andwf	(___ftpack@arg+2),w
	btfss	status,2
	goto	u15881
	goto	u15880
u15881:
	goto	l25000
u15880:
	goto	l25006
	line	71
	
l25004:	
	incf	(___ftpack@exp),f
	line	72
	incf	(___ftpack@arg),f
	skipnz
	incf	(___ftpack@arg+1),f
	skipnz
	incf	(___ftpack@arg+2),f
	line	73
	lsrf	(___ftpack@arg+2),f
	rrf	(___ftpack@arg+1),f
	rrf	(___ftpack@arg),f
	line	70
	
l25006:	
	movlw	low highword(0FF0000h)
	andwf	(___ftpack@arg+2),w
	btfss	status,2
	goto	u15891
	goto	u15890
u15891:
	goto	l25004
u15890:
	goto	l25010
	line	76
	
l25008:	
	decf	(___ftpack@exp),f
	line	77
	lslf	(___ftpack@arg),f
	rlf	(___ftpack@arg+1),f
	rlf	(___ftpack@arg+2),f
	line	75
	
l25010:	
	btfss	(___ftpack@arg+1),(15)&7
	goto	u15901
	goto	u15900
u15901:
	goto	l25008
u15900:
	
l2635:	
	line	79
	btfsc	(___ftpack@exp),(0)&7
	goto	u15911
	goto	u15910
u15911:
	goto	l2636
u15910:
	line	80
	
l25012:	
	bcf	(___ftpack@arg)+(15/8),(15)&7
	
l2636:	
	line	81
	lsrf	(___ftpack@exp),f
	line	82
	
l25014:	
	movf	(___ftpack@exp),w
	movwf	((??___ftpack+0)+0+2)
	clrf	((??___ftpack+0)+0+1)
	clrf	((??___ftpack+0)+0+0)
	movf	0+(??___ftpack+0)+0,w
	iorwf	(___ftpack@arg),f
	movf	1+(??___ftpack+0)+0,w
	iorwf	(___ftpack@arg+1),f
	movf	2+(??___ftpack+0)+0,w
	iorwf	(___ftpack@arg+2),f
	line	83
	
l25016:	
	movf	(___ftpack@sign),w
	skipz
	goto	u15920
	goto	l2637
u15920:
	line	84
	
l25018:	
	bsf	(___ftpack@arg)+(23/8),(23)&7
	
l2637:	
	line	85
	line	86
	
l2626:	
	return
	opt stack 0
GLOBAL	__end_of___ftpack
	__end_of___ftpack:
	signat	___ftpack,12411
	global	_isr

;; *************** function _isr *****************
;; Defined at:
;;		line 67 in file "D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  time_cnt        2    1[BANK0 ] unsigned int 
;;  r1_data         1    0[BANK0 ] unsigned char 
;;  r2_data         1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 10/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i1_Disable_Bost_Pwm1
;;		i1_Disable_Bost_Pwm2
;;		i1_Set_Bost_Pwm1_Duty
;;		i1_Set_Bost_Pwm2_Duty
;; This function is called by:
;;		Interrupt level 1
;; This function uses a non-reentrant model
;;
psect	intentry,class=CODE,delta=2
global __pintentry
__pintentry:
psect	intentry
	file	"D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
	line	67
	global	__size_of_isr
	__size_of_isr	equ	__end_of_isr-_isr
	
_isr:	
;incstack = 0
	opt	stack 8
; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
psect	intentry
	pagesel	$
	line	72
	
i1l20378:	
;interrupt.c: 69: unsigned char r1_data,r2_data;
;interrupt.c: 72: if (TMR1IE && TMR1IF)
	movlb 1	; select bank1
	btfss	(1160/8)^080h,(1160)&7	;volatile
	goto	u1075_21
	goto	u1075_20
u1075_21:
	goto	i1l20630
u1075_20:
	
i1l20380:	
	movlb 0	; select bank0
	btfss	(136/8),(136)&7	;volatile
	goto	u1076_21
	goto	u1076_20
u1076_21:
	goto	i1l20630
u1076_20:
	line	74
	
i1l20382:	
;interrupt.c: 73: {
;interrupt.c: 74: TMR1IF = 0x00;
	bcf	(136/8),(136)&7	;volatile
	line	75
	
i1l20384:	
;interrupt.c: 75: TMR1H = 0xE0;
	movlw	(0E0h)
	movwf	(23)	;volatile
	line	76
;interrupt.c: 76: TMR1L = 0xC0;
	movlw	(0C0h)
	movwf	(22)	;volatile
	line	79
;interrupt.c: 79: if(system_check_time==0x01)
	movlb 2	; select bank2
	decf	(_system_check_time)^0100h,w
	skipz
	goto	u1077_21
	goto	u1077_20
u1077_21:
	goto	i1l20432
u1077_20:
	line	81
	
i1l20386:	
;interrupt.c: 80: {
;interrupt.c: 81: system_time_count++;
	movlb 3	; select bank3
	incf	(_system_time_count)^0180h,f
	skipnz
	incf	(_system_time_count+1)^0180h,f
	line	83
	
i1l20388:	
;interrupt.c: 83: if(system_time_count>800)
	movlw	high(0321h)
	subwf	(_system_time_count+1)^0180h,w
	movlw	low(0321h)
	skipnz
	subwf	(_system_time_count)^0180h,w
	skipc
	goto	u1078_21
	goto	u1078_20
u1078_21:
	goto	i1l20424
u1078_20:
	line	85
	
i1l20390:	
;interrupt.c: 87: set_1HZ_flag^=0x01;
	clrf	(_system_time_count)^0180h
	clrf	(_system_time_count+1)^0180h
	line	89
	
i1l20392:	
;interrupt.c: 89: if(have_person1_flag==0x01)
	movlb 1	; select bank1
	decf	(_have_person1_flag)^080h,w
	skipz
	goto	u1079_21
	goto	u1079_20
u1079_21:
	goto	i1l20400
u1079_20:
	line	91
	
i1l20394:	
;interrupt.c: 90: {
;interrupt.c: 91: have_person1_time_count++;
	movlb 2	; select bank2
	incf	(_have_person1_time_count)^0100h,f
	line	93
	
i1l20396:	
;interrupt.c: 93: if(have_person1_time_count>20)
	movlw	(015h)
	subwf	(_have_person1_time_count)^0100h,w
	skipc
	goto	u1080_21
	goto	u1080_20
u1080_21:
	goto	i1l20400
u1080_20:
	line	95
	
i1l20398:	
;interrupt.c: 94: {
;interrupt.c: 95: have_person1_time_count=0x00;
	clrf	(_have_person1_time_count)^0100h
	line	97
;interrupt.c: 97: have_person1_flag=0x00;
	movlb 1	; select bank1
	clrf	(_have_person1_flag)^080h
	line	101
	
i1l20400:	
;interrupt.c: 98: }
;interrupt.c: 99: }
;interrupt.c: 101: if(have_person2_flag==0x01)
	movlb 1	; select bank1
	decf	(_have_person2_flag)^080h,w
	skipz
	goto	u1081_21
	goto	u1081_20
u1081_21:
	goto	i1l20408
u1081_20:
	line	103
	
i1l20402:	
;interrupt.c: 102: {
;interrupt.c: 103: have_person2_time_count++;
	movlb 2	; select bank2
	incf	(_have_person2_time_count)^0100h,f
	line	105
	
i1l20404:	
;interrupt.c: 105: if(have_person2_time_count>20)
	movlw	(015h)
	subwf	(_have_person2_time_count)^0100h,w
	skipc
	goto	u1082_21
	goto	u1082_20
u1082_21:
	goto	i1l20408
u1082_20:
	line	107
	
i1l20406:	
;interrupt.c: 106: {
;interrupt.c: 107: have_person2_time_count=0x00;
	clrf	(_have_person2_time_count)^0100h
	line	109
;interrupt.c: 109: have_person2_flag=0x00;
	movlb 1	; select bank1
	clrf	(_have_person2_flag)^080h
	line	113
	
i1l20408:	
;interrupt.c: 110: }
;interrupt.c: 111: }
;interrupt.c: 113: if(open_sleep_time==0x01 && device_status==0x00)
	movlb 2	; select bank2
	decf	(_open_sleep_time)^0100h,w
	skipz
	goto	u1083_21
	goto	u1083_20
u1083_21:
	goto	i1l20424
u1083_20:
	
i1l20410:	
	movlb 1	; select bank1
	movf	(_device_status)^080h,f
	skipz
	goto	u1084_21
	goto	u1084_20
u1084_21:
	goto	i1l20424
u1084_20:
	line	115
	
i1l20412:	
;interrupt.c: 114: {
;interrupt.c: 115: sleep_time_count++;
	movlb 5	; select bank5
	incf	(_sleep_time_count)^0280h,f
	skipnz
	incf	(_sleep_time_count+1)^0280h,f
	line	117
	
i1l20414:	
;interrupt.c: 117: if(sleep_time_count>=20)
	movlw	high(014h)
	subwf	(_sleep_time_count+1)^0280h,w
	movlw	low(014h)
	skipnz
	subwf	(_sleep_time_count)^0280h,w
	skipc
	goto	u1085_21
	goto	u1085_20
u1085_21:
	goto	i1l20424
u1085_20:
	line	119
	
i1l20416:	
;interrupt.c: 118: {
;interrupt.c: 119: sleep_time_count=0x00;
	clrf	(_sleep_time_count)^0280h
	clrf	(_sleep_time_count+1)^0280h
	line	121
# 121 "D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
sleep ;# 
psect	intentry
	line	123
	
i1l20418:	
;interrupt.c: 123: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	124
	
i1l20420:	
;interrupt.c: 124: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	125
	
i1l20422:	
;interrupt.c: 125: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	130
	
i1l20424:	
;interrupt.c: 126: }
;interrupt.c: 127: }
;interrupt.c: 128: }
;interrupt.c: 130: scan_key_time_count++;
	movlb 2	; select bank2
	incf	(_scan_key_time_count)^0100h,f
	line	132
	
i1l20426:	
;interrupt.c: 132: if(scan_key_time_count>=40)
	movlw	(028h)
	subwf	(_scan_key_time_count)^0100h,w
	skipc
	goto	u1086_21
	goto	u1086_20
u1086_21:
	goto	i1l20432
u1086_20:
	line	134
	
i1l20428:	
;interrupt.c: 133: {
;interrupt.c: 134: scan_key_time_count=0x00;
	clrf	(_scan_key_time_count)^0100h
	line	136
	
i1l20430:	
;interrupt.c: 136: handle_scan_key_flag=0x01;
	clrf	(_handle_scan_key_flag)^0100h
	incf	(_handle_scan_key_flag)^0100h,f
	line	141
	
i1l20432:	
;interrupt.c: 137: }
;interrupt.c: 139: }
;interrupt.c: 141: if(open_discharge_time==0x01)
	decf	(_open_discharge_time)^0100h,w
	skipz
	goto	u1087_21
	goto	u1087_20
u1087_21:
	goto	i1l20458
u1087_20:
	line	143
	
i1l20434:	
;interrupt.c: 142: {
;interrupt.c: 143: if(ms_cnt<1000)
	movlw	high(03E8h)
	movlb 4	; select bank4
	subwf	(_ms_cnt+1)^0200h,w
	movlw	low(03E8h)
	skipnz
	subwf	(_ms_cnt)^0200h,w
	skipnc
	goto	u1088_21
	goto	u1088_20
u1088_21:
	goto	i1l20438
u1088_20:
	line	145
	
i1l20436:	
;interrupt.c: 144: {
;interrupt.c: 145: ms_cnt++;
	incf	(_ms_cnt)^0200h,f
	skipnz
	incf	(_ms_cnt+1)^0200h,f
	line	146
;interrupt.c: 146: }
	goto	i1l20458
	line	149
	
i1l20438:	
;interrupt.c: 147: else
;interrupt.c: 148: {
;interrupt.c: 149: ms_cnt=0x00;
	clrf	(_ms_cnt)^0200h
	clrf	(_ms_cnt+1)^0200h
	line	151
	
i1l20440:	
;interrupt.c: 151: if(se_cnt<60)
	movlw	high(03Ch)
	subwf	(_se_cnt+1)^0200h,w
	movlw	low(03Ch)
	skipnz
	subwf	(_se_cnt)^0200h,w
	skipnc
	goto	u1089_21
	goto	u1089_20
u1089_21:
	goto	i1l20444
u1089_20:
	line	153
	
i1l20442:	
;interrupt.c: 152: {
;interrupt.c: 153: se_cnt++;
	incf	(_se_cnt)^0200h,f
	skipnz
	incf	(_se_cnt+1)^0200h,f
	line	154
;interrupt.c: 154: }
	goto	i1l20458
	line	157
	
i1l20444:	
;interrupt.c: 155: else
;interrupt.c: 156: {
;interrupt.c: 157: se_cnt=0x00;
	clrf	(_se_cnt)^0200h
	clrf	(_se_cnt+1)^0200h
	line	159
	
i1l20446:	
;interrupt.c: 159: if(mi_cnt<60)
	movlw	high(03Ch)
	subwf	(_mi_cnt+1)^0200h,w
	movlw	low(03Ch)
	skipnz
	subwf	(_mi_cnt)^0200h,w
	skipnc
	goto	u1090_21
	goto	u1090_20
u1090_21:
	goto	i1l20450
u1090_20:
	line	161
	
i1l20448:	
;interrupt.c: 160: {
;interrupt.c: 161: mi_cnt++;
	incf	(_mi_cnt)^0200h,f
	skipnz
	incf	(_mi_cnt+1)^0200h,f
	line	162
;interrupt.c: 162: }
	goto	i1l20458
	line	165
	
i1l20450:	
;interrupt.c: 163: else
;interrupt.c: 164: {
;interrupt.c: 165: mi_cnt=0x00;
	clrf	(_mi_cnt)^0200h
	clrf	(_mi_cnt+1)^0200h
	line	167
	
i1l20452:	
;interrupt.c: 167: if(ho_cnt<24)
	movlw	high(018h)
	subwf	(_ho_cnt+1),w
	movlw	low(018h)
	skipnz
	subwf	(_ho_cnt),w
	skipnc
	goto	u1091_21
	goto	u1091_20
u1091_21:
	goto	i1l20456
u1091_20:
	line	169
	
i1l20454:	
;interrupt.c: 168: {
;interrupt.c: 169: ho_cnt++;
	incf	(_ho_cnt),f
	skipnz
	incf	(_ho_cnt+1),f
	line	170
;interrupt.c: 170: }
	goto	i1l20458
	line	173
	
i1l20456:	
;interrupt.c: 171: else
;interrupt.c: 172: {
;interrupt.c: 173: ho_cnt=0x00;
	clrf	(_ho_cnt)
	clrf	(_ho_cnt+1)
	line	180
	
i1l20458:	
;interrupt.c: 174: }
;interrupt.c: 175: }
;interrupt.c: 176: }
;interrupt.c: 177: }
;interrupt.c: 178: }
;interrupt.c: 180: if(open_an0_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an0_time)^0100h,w
	skipz
	goto	u1092_21
	goto	u1092_20
u1092_21:
	goto	i1l20468
u1092_20:
	line	182
	
i1l20460:	
;interrupt.c: 181: {
;interrupt.c: 182: an0_time_count++;
	movlb 4	; select bank4
	incf	(_an0_time_count)^0200h,f
	skipnz
	incf	(_an0_time_count+1)^0200h,f
	line	184
	
i1l20462:	
;interrupt.c: 184: if(an0_time_count>=2)
	movlw	high(02h)
	subwf	(_an0_time_count+1)^0200h,w
	movlw	low(02h)
	skipnz
	subwf	(_an0_time_count)^0200h,w
	skipc
	goto	u1093_21
	goto	u1093_20
u1093_21:
	goto	i1l20468
u1093_20:
	line	186
	
i1l20464:	
;interrupt.c: 185: {
;interrupt.c: 186: an0_time_count=0x00;
	clrf	(_an0_time_count)^0200h
	clrf	(_an0_time_count+1)^0200h
	line	188
	
i1l20466:	
;interrupt.c: 188: handle_an0_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an0_process_flag)^0100h
	incf	(_handle_an0_process_flag)^0100h,f
	line	192
	
i1l20468:	
;interrupt.c: 189: }
;interrupt.c: 191: }
;interrupt.c: 192: if(open_an1_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an1_time)^0100h,w
	skipz
	goto	u1094_21
	goto	u1094_20
u1094_21:
	goto	i1l20478
u1094_20:
	line	194
	
i1l20470:	
;interrupt.c: 193: {
;interrupt.c: 194: an1_time_count++;
	movlb 4	; select bank4
	incf	(_an1_time_count)^0200h,f
	skipnz
	incf	(_an1_time_count+1)^0200h,f
	line	196
	
i1l20472:	
;interrupt.c: 196: if(an1_time_count>=1000)
	movlw	high(03E8h)
	subwf	(_an1_time_count+1)^0200h,w
	movlw	low(03E8h)
	skipnz
	subwf	(_an1_time_count)^0200h,w
	skipc
	goto	u1095_21
	goto	u1095_20
u1095_21:
	goto	i1l20478
u1095_20:
	line	198
	
i1l20474:	
;interrupt.c: 197: {
;interrupt.c: 198: an1_time_count=0x00;
	clrf	(_an1_time_count)^0200h
	clrf	(_an1_time_count+1)^0200h
	line	200
	
i1l20476:	
;interrupt.c: 200: handle_an1_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an1_process_flag)^0100h
	incf	(_handle_an1_process_flag)^0100h,f
	line	204
	
i1l20478:	
;interrupt.c: 201: }
;interrupt.c: 203: }
;interrupt.c: 204: if(open_an2_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an2_time)^0100h,w
	skipz
	goto	u1096_21
	goto	u1096_20
u1096_21:
	goto	i1l20488
u1096_20:
	line	206
	
i1l20480:	
;interrupt.c: 205: {
;interrupt.c: 206: an2_time_count++;
	movlb 4	; select bank4
	incf	(_an2_time_count)^0200h,f
	skipnz
	incf	(_an2_time_count+1)^0200h,f
	line	208
	
i1l20482:	
;interrupt.c: 208: if(an2_time_count>=5)
	movlw	high(05h)
	subwf	(_an2_time_count+1)^0200h,w
	movlw	low(05h)
	skipnz
	subwf	(_an2_time_count)^0200h,w
	skipc
	goto	u1097_21
	goto	u1097_20
u1097_21:
	goto	i1l20488
u1097_20:
	line	210
	
i1l20484:	
;interrupt.c: 209: {
;interrupt.c: 210: an2_time_count=0x00;
	clrf	(_an2_time_count)^0200h
	clrf	(_an2_time_count+1)^0200h
	line	212
	
i1l20486:	
;interrupt.c: 212: handle_an2_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an2_process_flag)^0100h
	incf	(_handle_an2_process_flag)^0100h,f
	line	217
	
i1l20488:	
;interrupt.c: 213: }
;interrupt.c: 215: }
;interrupt.c: 217: if(open_an3_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an3_time)^0100h,w
	skipz
	goto	u1098_21
	goto	u1098_20
u1098_21:
	goto	i1l20498
u1098_20:
	line	219
	
i1l20490:	
;interrupt.c: 218: {
;interrupt.c: 219: an3_time_count++;
	movlb 4	; select bank4
	incf	(_an3_time_count)^0200h,f
	skipnz
	incf	(_an3_time_count+1)^0200h,f
	line	221
	
i1l20492:	
;interrupt.c: 221: if(an3_time_count>=5)
	movlw	high(05h)
	subwf	(_an3_time_count+1)^0200h,w
	movlw	low(05h)
	skipnz
	subwf	(_an3_time_count)^0200h,w
	skipc
	goto	u1099_21
	goto	u1099_20
u1099_21:
	goto	i1l20498
u1099_20:
	line	223
	
i1l20494:	
;interrupt.c: 222: {
;interrupt.c: 223: an3_time_count=0x00;
	clrf	(_an3_time_count)^0200h
	clrf	(_an3_time_count+1)^0200h
	line	225
	
i1l20496:	
;interrupt.c: 225: handle_an3_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an3_process_flag)^0100h
	incf	(_handle_an3_process_flag)^0100h,f
	line	231
	
i1l20498:	
;interrupt.c: 226: }
;interrupt.c: 228: }
;interrupt.c: 231: if(open_an9_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an9_time)^0100h,w
	skipz
	goto	u1100_21
	goto	u1100_20
u1100_21:
	goto	i1l20508
u1100_20:
	line	233
	
i1l20500:	
;interrupt.c: 232: {
;interrupt.c: 233: an9_time_count++;
	movlb 4	; select bank4
	incf	(_an9_time_count)^0200h,f
	skipnz
	incf	(_an9_time_count+1)^0200h,f
	line	235
	
i1l20502:	
;interrupt.c: 235: if(an9_time_count>=5)
	movlw	high(05h)
	subwf	(_an9_time_count+1)^0200h,w
	movlw	low(05h)
	skipnz
	subwf	(_an9_time_count)^0200h,w
	skipc
	goto	u1101_21
	goto	u1101_20
u1101_21:
	goto	i1l20508
u1101_20:
	line	237
	
i1l20504:	
;interrupt.c: 236: {
;interrupt.c: 237: an9_time_count=0x00;
	clrf	(_an9_time_count)^0200h
	clrf	(_an9_time_count+1)^0200h
	line	239
	
i1l20506:	
;interrupt.c: 239: handle_an9_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an9_process_flag)^0100h
	incf	(_handle_an9_process_flag)^0100h,f
	line	246
	
i1l20508:	
;interrupt.c: 242: }
;interrupt.c: 244: }
;interrupt.c: 246: if(open_an4_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an4_time)^0100h,w
	skipz
	goto	u1102_21
	goto	u1102_20
u1102_21:
	goto	i1l20518
u1102_20:
	line	248
	
i1l20510:	
;interrupt.c: 247: {
;interrupt.c: 248: an4_time_count++;
	movlb 4	; select bank4
	incf	(_an4_time_count)^0200h,f
	skipnz
	incf	(_an4_time_count+1)^0200h,f
	line	250
	
i1l20512:	
;interrupt.c: 250: if(an4_time_count>=2)
	movlw	high(02h)
	subwf	(_an4_time_count+1)^0200h,w
	movlw	low(02h)
	skipnz
	subwf	(_an4_time_count)^0200h,w
	skipc
	goto	u1103_21
	goto	u1103_20
u1103_21:
	goto	i1l20518
u1103_20:
	line	252
	
i1l20514:	
;interrupt.c: 251: {
;interrupt.c: 252: an4_time_count=0x00;
	clrf	(_an4_time_count)^0200h
	clrf	(_an4_time_count+1)^0200h
	line	254
	
i1l20516:	
;interrupt.c: 254: handle_an4_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an4_process_flag)^0100h
	incf	(_handle_an4_process_flag)^0100h,f
	line	259
	
i1l20518:	
;interrupt.c: 255: }
;interrupt.c: 257: }
;interrupt.c: 259: if(open_an8_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an8_time)^0100h,w
	skipz
	goto	u1104_21
	goto	u1104_20
u1104_21:
	goto	i1l20528
u1104_20:
	line	261
	
i1l20520:	
;interrupt.c: 260: {
;interrupt.c: 261: an8_time_count++;
	movlb 4	; select bank4
	incf	(_an8_time_count)^0200h,f
	skipnz
	incf	(_an8_time_count+1)^0200h,f
	line	263
	
i1l20522:	
;interrupt.c: 263: if(an8_time_count>=2)
	movlw	high(02h)
	subwf	(_an8_time_count+1)^0200h,w
	movlw	low(02h)
	skipnz
	subwf	(_an8_time_count)^0200h,w
	skipc
	goto	u1105_21
	goto	u1105_20
u1105_21:
	goto	i1l20528
u1105_20:
	line	265
	
i1l20524:	
;interrupt.c: 264: {
;interrupt.c: 265: an8_time_count=0x00;
	clrf	(_an8_time_count)^0200h
	clrf	(_an8_time_count+1)^0200h
	line	267
	
i1l20526:	
;interrupt.c: 267: handle_an8_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an8_process_flag)^0100h
	incf	(_handle_an8_process_flag)^0100h,f
	line	272
	
i1l20528:	
;interrupt.c: 268: }
;interrupt.c: 270: }
;interrupt.c: 272: if(open_an11_time==0x01)
	movlb 2	; select bank2
	decf	(_open_an11_time)^0100h,w
	skipz
	goto	u1106_21
	goto	u1106_20
u1106_21:
	goto	i1l20538
u1106_20:
	line	274
	
i1l20530:	
;interrupt.c: 273: {
;interrupt.c: 274: an11_time_count++;
	movlb 4	; select bank4
	incf	(_an11_time_count)^0200h,f
	skipnz
	incf	(_an11_time_count+1)^0200h,f
	line	276
	
i1l20532:	
;interrupt.c: 276: if(an11_time_count>=2)
	movlw	high(02h)
	subwf	(_an11_time_count+1)^0200h,w
	movlw	low(02h)
	skipnz
	subwf	(_an11_time_count)^0200h,w
	skipc
	goto	u1107_21
	goto	u1107_20
u1107_21:
	goto	i1l20538
u1107_20:
	line	278
	
i1l20534:	
;interrupt.c: 277: {
;interrupt.c: 278: an11_time_count=0x00;
	clrf	(_an11_time_count)^0200h
	clrf	(_an11_time_count+1)^0200h
	line	280
	
i1l20536:	
;interrupt.c: 280: handle_an11_process_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_an11_process_flag)^0100h
	incf	(_handle_an11_process_flag)^0100h,f
	line	286
	
i1l20538:	
;interrupt.c: 281: }
;interrupt.c: 283: }
;interrupt.c: 286: if (uart1_time_count > 0x00)
	movlb 2	; select bank2
	movf	(_uart1_time_count)^0100h,w
	skipz
	goto	u1108_20
	goto	i1l20604
u1108_20:
	line	288
	
i1l20540:	
;interrupt.c: 287: {
;interrupt.c: 288: uart1_time_count--;
	decf	(_uart1_time_count)^0100h,f
	line	290
;interrupt.c: 290: if(uart1_time_count==0)
	movf	(_uart1_time_count)^0100h,f
	skipz
	goto	u1109_21
	goto	u1109_20
u1109_21:
	goto	i1l20604
u1109_20:
	line	292
	
i1l20542:	
;interrupt.c: 291: {
;interrupt.c: 292: if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA1)&&(uart1_rx_buf[4]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u1110_21
	goto	u1110_20
u1110_21:
	goto	i1l20550
u1110_20:
	
i1l20544:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A1h&0ffh
	skipz
	goto	u1111_21
	goto	u1111_20
u1111_21:
	goto	i1l20550
u1111_20:
	
i1l20546:	
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1112_21
	goto	u1112_20
u1112_21:
	goto	i1l20550
u1112_20:
	line	294
	
i1l20548:	
;interrupt.c: 293: {
;interrupt.c: 294: rx_frame_kind=0x01;
	movlb 2	; select bank2
	clrf	(_rx_frame_kind)^0100h
	incf	(_rx_frame_kind)^0100h,f
	line	296
;interrupt.c: 296: uart1_receive_flag=TRUE;
	clrf	(_uart1_receive_flag)^0100h
	incf	(_uart1_receive_flag)^0100h,f
	line	297
;interrupt.c: 297: }
	goto	i1l20604
	line	298
	
i1l20550:	
;interrupt.c: 298: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA2)&&(uart1_rx_buf[4]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u1113_21
	goto	u1113_20
u1113_21:
	goto	i1l20560
u1113_20:
	
i1l20552:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A2h&0ffh
	skipz
	goto	u1114_21
	goto	u1114_20
u1114_21:
	goto	i1l20560
u1114_20:
	
i1l20554:	
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1115_21
	goto	u1115_20
u1115_21:
	goto	i1l20560
u1115_20:
	line	300
	
i1l20556:	
;interrupt.c: 299: {
;interrupt.c: 300: rx_frame_kind=0x02;
	movlw	(02h)
	movlb 2	; select bank2
	movwf	(_rx_frame_kind)^0100h
	line	302
	
i1l20558:	
;interrupt.c: 302: uart1_receive_flag=TRUE;
	clrf	(_uart1_receive_flag)^0100h
	incf	(_uart1_receive_flag)^0100h,f
	line	303
;interrupt.c: 303: }
	goto	i1l20604
	line	304
	
i1l20560:	
;interrupt.c: 304: else if((uart1_receive_byte_count==21)&&(uart1_rx_buf[1]==0xA3)&&(uart1_rx_buf[20]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	015h&0ffh
	skipz
	goto	u1116_21
	goto	u1116_20
u1116_21:
	goto	i1l20570
u1116_20:
	
i1l20562:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A3h&0ffh
	skipz
	goto	u1117_21
	goto	u1117_20
u1117_21:
	goto	i1l20570
u1117_20:
	
i1l20564:	
	movf	0+(_uart1_rx_buf)^0400h+014h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1118_21
	goto	u1118_20
u1118_21:
	goto	i1l20570
u1118_20:
	line	306
	
i1l20566:	
;interrupt.c: 305: {
;interrupt.c: 306: rx_frame_kind=0x03;
	movlw	(03h)
	movlb 2	; select bank2
	movwf	(_rx_frame_kind)^0100h
	goto	i1l20558
	line	310
	
i1l20570:	
;interrupt.c: 310: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA4)&&(uart1_rx_buf[4]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u1119_21
	goto	u1119_20
u1119_21:
	goto	i1l20580
u1119_20:
	
i1l20572:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A4h&0ffh
	skipz
	goto	u1120_21
	goto	u1120_20
u1120_21:
	goto	i1l20580
u1120_20:
	
i1l20574:	
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1121_21
	goto	u1121_20
u1121_21:
	goto	i1l20580
u1121_20:
	line	312
	
i1l20576:	
;interrupt.c: 311: {
;interrupt.c: 312: rx_frame_kind=0x04;
	movlw	(04h)
	movlb 2	; select bank2
	movwf	(_rx_frame_kind)^0100h
	goto	i1l20558
	line	316
	
i1l20580:	
;interrupt.c: 316: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA5)&&(uart1_rx_buf[4]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u1122_21
	goto	u1122_20
u1122_21:
	goto	i1l20590
u1122_20:
	
i1l20582:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A5h&0ffh
	skipz
	goto	u1123_21
	goto	u1123_20
u1123_21:
	goto	i1l20590
u1123_20:
	
i1l20584:	
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1124_21
	goto	u1124_20
u1124_21:
	goto	i1l20590
u1124_20:
	line	318
	
i1l20586:	
;interrupt.c: 317: {
;interrupt.c: 318: rx_frame_kind=0x05;
	movlw	(05h)
	movlb 2	; select bank2
	movwf	(_rx_frame_kind)^0100h
	goto	i1l20558
	line	322
	
i1l20590:	
;interrupt.c: 322: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA6)&&(uart1_rx_buf[4]==0xAA))
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	xorlw	05h&0ffh
	skipz
	goto	u1125_21
	goto	u1125_20
u1125_21:
	goto	i1l340
u1125_20:
	
i1l20592:	
	movlb 8	; select bank8
	movf	0+(_uart1_rx_buf)^0400h+01h,w
	xorlw	0A6h&0ffh
	skipz
	goto	u1126_21
	goto	u1126_20
u1126_21:
	goto	i1l340
u1126_20:
	
i1l20594:	
	movf	0+(_uart1_rx_buf)^0400h+04h,w
	xorlw	0AAh&0ffh
	skipz
	goto	u1127_21
	goto	u1127_20
u1127_21:
	goto	i1l340
u1127_20:
	line	324
	
i1l20596:	
;interrupt.c: 323: {
;interrupt.c: 324: rx_frame_kind=0x06;
	movlw	(06h)
	movlb 2	; select bank2
	movwf	(_rx_frame_kind)^0100h
	goto	i1l20558
	line	328
	
i1l340:	
	line	330
;interrupt.c: 328: else
;interrupt.c: 329: {
;interrupt.c: 330: if (RCSTAbits.FERR || RCSTAbits.OERR)
	movlb 3	; select bank3
	btfsc	(413)^0180h,2	;volatile
	goto	u1128_21
	goto	u1128_20
u1128_21:
	goto	i1l344
u1128_20:
	
i1l20600:	
	btfss	(413)^0180h,1	;volatile
	goto	u1129_21
	goto	u1129_20
u1129_21:
	goto	i1l20602
u1129_20:
	
i1l344:	
	line	332
;interrupt.c: 331: {
;interrupt.c: 332: RCSTAbits.CREN = 0x00;
	bcf	(413)^0180h,4	;volatile
	line	333
;interrupt.c: 333: RCSTAbits.SPEN = 0x00;
	bcf	(413)^0180h,7	;volatile
	line	334
;interrupt.c: 334: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	335
;interrupt.c: 335: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	336
;interrupt.c: 336: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	337
;interrupt.c: 337: RCSTAbits.CREN = 0x01;
	movlb 3	; select bank3
	bsf	(413)^0180h,4	;volatile
	line	338
;interrupt.c: 338: RCSTAbits.SPEN = 0x01;
	bsf	(413)^0180h,7	;volatile
	line	341
	
i1l20602:	
;interrupt.c: 339: }
;interrupt.c: 341: uart1_receive_byte_count=0x00;
	movlb 1	; select bank1
	clrf	(_uart1_receive_byte_count)^080h
	line	348
	
i1l20604:	
;interrupt.c: 342: }
;interrupt.c: 343: }
;interrupt.c: 345: }
;interrupt.c: 348: if (uart_send_delay_timer > 0x00)
	movlb 2	; select bank2
	movf	(_uart_send_delay_timer)^0100h,w
	skipz
	goto	u1130_20
	goto	i1l20610
u1130_20:
	line	350
	
i1l20606:	
;interrupt.c: 349: {
;interrupt.c: 350: uart_send_delay_timer--;
	decf	(_uart_send_delay_timer)^0100h,f
	line	352
;interrupt.c: 352: if (uart_send_delay_timer == 0x00)
	movf	(_uart_send_delay_timer)^0100h,f
	skipz
	goto	u1131_21
	goto	u1131_20
u1131_21:
	goto	i1l20610
u1131_20:
	line	354
	
i1l20608:	
;interrupt.c: 353: {
;interrupt.c: 354: TXIE = 0x01;
	movlb 1	; select bank1
	bsf	(1164/8)^080h,(1164)&7	;volatile
	line	359
	
i1l20610:	
;interrupt.c: 355: }
;interrupt.c: 357: }
;interrupt.c: 359: if (uart_send_end_flag == 0x01)
	movlb 2	; select bank2
	decf	(_uart_send_end_flag)^0100h,w
	skipz
	goto	u1132_21
	goto	u1132_20
u1132_21:
	goto	i1l20616
u1132_20:
	line	361
	
i1l20612:	
;interrupt.c: 360: {
;interrupt.c: 361: if (TXSTAbits.TRMT)
	movlb 3	; select bank3
	btfss	(414)^0180h,1	;volatile
	goto	u1133_21
	goto	u1133_20
u1133_21:
	goto	i1l20616
u1133_20:
	line	364
	
i1l20614:	
;interrupt.c: 362: {
;interrupt.c: 364: uart_send_end_flag = 0x00;
	movlb 2	; select bank2
	clrf	(_uart_send_end_flag)^0100h
	line	372
	
i1l20616:	
;interrupt.c: 366: }
;interrupt.c: 368: }
;interrupt.c: 372: if(ird_receive_time_count>0)
	movlb 2	; select bank2
	movf	(_ird_receive_time_count)^0100h,w
	skipz
	goto	u1134_20
	goto	i1l20630
u1134_20:
	line	374
	
i1l20618:	
;interrupt.c: 373: {
;interrupt.c: 374: ird_receive_time_count--;
	decf	(_ird_receive_time_count)^0100h,f
	line	376
;interrupt.c: 376: if(ird_receive_time_count==0x00)
	movf	(_ird_receive_time_count)^0100h,f
	skipz
	goto	u1135_21
	goto	u1135_20
u1135_21:
	goto	i1l20630
u1135_20:
	line	378
	
i1l20620:	
;interrupt.c: 377: {
;interrupt.c: 378: if(receive_bit_count==32)
	movf	(_receive_bit_count)^0100h,w
	xorlw	020h&0ffh
	skipz
	goto	u1136_21
	goto	u1136_20
u1136_21:
	goto	i1l20626
u1136_20:
	line	380
	
i1l20622:	
;interrupt.c: 379: {
;interrupt.c: 380: ird_receive_flag=0x01;
	clrf	(_ird_receive_flag)^0100h
	incf	(_ird_receive_flag)^0100h,f
	line	382
	
i1l20624:	
;interrupt.c: 382: receive_bit_count=0x00;
	clrf	(_receive_bit_count)^0100h
	line	383
;interrupt.c: 383: }
	goto	i1l20630
	line	386
	
i1l20626:	
;interrupt.c: 384: else
;interrupt.c: 385: {
;interrupt.c: 386: receive_bit_count=0x00;
	clrf	(_receive_bit_count)^0100h
	line	388
;interrupt.c: 388: ird_status=0x00;
	clrf	(_ird_status)^0100h
	line	390
;interrupt.c: 390: TMR0=0;
	movlb 0	; select bank0
	clrf	(21)	;volatile
	line	392
	
i1l20628:	
;interrupt.c: 392: TMR0IF = 0;
	bcf	(90/8),(90)&7	;volatile
	line	404
	
i1l20630:	
;interrupt.c: 394: }
;interrupt.c: 395: }
;interrupt.c: 396: }
;interrupt.c: 400: }
;interrupt.c: 404: if (TXIE && TXIF)
	movlb 1	; select bank1
	btfss	(1164/8)^080h,(1164)&7	;volatile
	goto	u1137_21
	goto	u1137_20
u1137_21:
	goto	i1l353
u1137_20:
	
i1l20632:	
	movlb 0	; select bank0
	btfss	(140/8),(140)&7	;volatile
	goto	u1138_21
	goto	u1138_20
u1138_21:
	goto	i1l353
u1138_20:
	line	406
	
i1l20634:	
;interrupt.c: 405: {
;interrupt.c: 406: if (uart_send_byte_count > 0x00)
	movlb 2	; select bank2
	movf	(_uart_send_byte_count)^0100h,w
	skipz
	goto	u1139_20
	goto	i1l20642
u1139_20:
	line	408
	
i1l20636:	
;interrupt.c: 407: {
;interrupt.c: 408: uart_send_byte_count--;
	decf	(_uart_send_byte_count)^0100h,f
	line	409
	
i1l20638:	
;interrupt.c: 409: TXREG = *uart_send_point;
	movf	(_uart_send_point)^0100h,w
	movwf	fsr1l
	clrf fsr1h	
	
	movf	indf1,w
	movlb 3	; select bank3
	movwf	(410)^0180h	;volatile
	line	410
	
i1l20640:	
;interrupt.c: 410: uart_send_point++;
	movlb 2	; select bank2
	incf	(_uart_send_point)^0100h,f
	line	411
;interrupt.c: 411: }
	goto	i1l353
	line	412
	
i1l20642:	
;interrupt.c: 412: else if (uart_send_byte_count == 0x00)
	movf	(_uart_send_byte_count)^0100h,f
	skipz
	goto	u1140_21
	goto	u1140_20
u1140_21:
	goto	i1l356
u1140_20:
	line	414
	
i1l20644:	
;interrupt.c: 413: {
;interrupt.c: 414: uart_send_end_flag = 0x01;
	clrf	(_uart_send_end_flag)^0100h
	incf	(_uart_send_end_flag)^0100h,f
	line	415
;interrupt.c: 415: TXIE = 0x00;
	movlb 1	; select bank1
	bcf	(1164/8)^080h,(1164)&7	;volatile
	line	416
;interrupt.c: 416: }
	goto	i1l353
	line	417
	
i1l356:	
	line	419
;interrupt.c: 417: else
;interrupt.c: 418: {
;interrupt.c: 419: __nop();
	opt	asmopt_off
	nop
	opt	asmopt_on
	line	421
	
i1l353:	
	line	423
;interrupt.c: 420: }
;interrupt.c: 421: }
;interrupt.c: 423: if(RCIF && RCIE)
	movlb 0	; select bank0
	btfss	(141/8),(141)&7	;volatile
	goto	u1141_21
	goto	u1141_20
u1141_21:
	goto	i1l20658
u1141_20:
	
i1l20646:	
	movlb 1	; select bank1
	btfss	(1165/8)^080h,(1165)&7	;volatile
	goto	u1142_21
	goto	u1142_20
u1142_21:
	goto	i1l20658
u1142_20:
	line	426
	
i1l20648:	
;interrupt.c: 424: {
;interrupt.c: 426: r1_data=RCREG;
	movlb 3	; select bank3
	movf	(409)^0180h,w	;volatile
	movlb 0	; select bank0
	movwf	(isr@r1_data)
	line	428
;interrupt.c: 428: uart1_time_count=0x0A;
	movlw	(0Ah)
	movlb 2	; select bank2
	movwf	(_uart1_time_count)^0100h
	line	430
;interrupt.c: 430: if( (uart1_receive_byte_count<21)&&(uart1_receive_flag==FALSE) )
	movlw	(015h)
	movlb 1	; select bank1
	subwf	(_uart1_receive_byte_count)^080h,w
	skipnc
	goto	u1143_21
	goto	u1143_20
u1143_21:
	goto	i1l20658
u1143_20:
	
i1l20650:	
	movlb 2	; select bank2
	movf	(_uart1_receive_flag)^0100h,f
	skipz
	goto	u1144_21
	goto	u1144_20
u1144_21:
	goto	i1l20658
u1144_20:
	line	432
	
i1l20652:	
;interrupt.c: 431: {
;interrupt.c: 432: uart1_rx_buf[uart1_receive_byte_count]=r1_data;
	movlb 1	; select bank1
	movf	(_uart1_receive_byte_count)^080h,w
	addlw	_uart1_rx_buf&0ffh
	movwf	fsr1l
	movlw 4	; select bank8/9
	movwf fsr1h	
	
	movlb 0	; select bank0
	movf	(isr@r1_data),w
	movwf	indf1
	line	434
	
i1l20654:	
;interrupt.c: 434: if(uart1_rx_buf[0]==0x55)
	movlb 8	; select bank8
	movf	(_uart1_rx_buf)^0400h,w
	xorlw	055h&0ffh
	skipz
	goto	u1145_21
	goto	u1145_20
u1145_21:
	goto	i1l20658
u1145_20:
	line	436
	
i1l20656:	
;interrupt.c: 435: {
;interrupt.c: 436: uart1_receive_byte_count++;
	movlb 1	; select bank1
	incf	(_uart1_receive_byte_count)^080h,f
	line	445
	
i1l20658:	
;interrupt.c: 437: }
;interrupt.c: 438: }
;interrupt.c: 442: }
;interrupt.c: 445: if(IOCIE && IOCIF)
	btfss	(91/8),(91)&7	;volatile
	goto	u1146_21
	goto	u1146_20
u1146_21:
	goto	i1l375
u1146_20:
	
i1l20660:	
	btfss	(88/8),(88)&7	;volatile
	goto	u1147_21
	goto	u1147_20
u1147_21:
	goto	i1l375
u1147_20:
	line	449
	
i1l20662:	
;interrupt.c: 446: {
;interrupt.c: 447: unsigned int time_cnt;
;interrupt.c: 449: if(IOCBF6)
	movlb 7	; select bank7
	btfss	(7350/8)^0380h,(7350)&7	;volatile
	goto	u1148_21
	goto	u1148_20
u1148_21:
	goto	i1l362
u1148_20:
	line	451
	
i1l20664:	
;interrupt.c: 450: {
;interrupt.c: 451: IOCBF6=0;
	bcf	(7350/8)^0380h,(7350)&7	;volatile
	line	452
	
i1l362:	
	line	454
;interrupt.c: 452: }
;interrupt.c: 454: if(IOCBF7)
	btfss	(7351/8)^0380h,(7351)&7	;volatile
	goto	u1149_21
	goto	u1149_20
u1149_21:
	goto	i1l20714
u1149_20:
	line	456
	
i1l20666:	
;interrupt.c: 455: {
;interrupt.c: 456: IOCBF7 = 0;
	bcf	(7351/8)^0380h,(7351)&7	;volatile
	line	458
	
i1l20668:	
;interrupt.c: 458: ird_receive_time_count=150;
	movlw	(096h)
	movlb 2	; select bank2
	movwf	(_ird_receive_time_count)^0100h
	line	460
;interrupt.c: 460: if((receive_bit_count<32)&&(ird_receive_flag==0x00))
	movlw	(020h)
	subwf	(_receive_bit_count)^0100h,w
	skipnc
	goto	u1150_21
	goto	u1150_20
u1150_21:
	goto	i1l20714
u1150_20:
	
i1l20670:	
	movf	(_ird_receive_flag)^0100h,f
	skipz
	goto	u1151_21
	goto	u1151_20
u1151_21:
	goto	i1l20714
u1151_20:
	line	462
	
i1l20672:	
;interrupt.c: 461: {
;interrupt.c: 462: if(ird_status==0x00)
	movf	(_ird_status)^0100h,f
	skipz
	goto	u1152_21
	goto	u1152_20
u1152_21:
	goto	i1l20680
u1152_20:
	line	464
	
i1l20674:	
;interrupt.c: 463: {
;interrupt.c: 464: ird_status=0x01;
	clrf	(_ird_status)^0100h
	incf	(_ird_status)^0100h,f
	line	466
	
i1l20676:	
;interrupt.c: 466: TMR0=0;
	movlb 0	; select bank0
	clrf	(21)	;volatile
	line	468
	
i1l20678:	
;interrupt.c: 468: TMR0IF = 0;
	bcf	(90/8),(90)&7	;volatile
	line	470
;interrupt.c: 470: }
	goto	i1l20714
	line	471
	
i1l20680:	
;interrupt.c: 471: else if(ird_status==0x01)
	decf	(_ird_status)^0100h,w
	skipz
	goto	u1153_21
	goto	u1153_20
u1153_21:
	goto	i1l20714
u1153_20:
	line	473
	
i1l20682:	
;interrupt.c: 472: {
;interrupt.c: 473: time_cnt=TMR0;
	movlb 0	; select bank0
	movf	(21),w	;volatile
	movwf	(isr@time_cnt)
	clrf	(isr@time_cnt+1)
	line	475
	
i1l20684:	
;interrupt.c: 475: if(TMR0IF==1)
	btfss	(90/8),(90)&7	;volatile
	goto	u1154_21
	goto	u1154_20
u1154_21:
	goto	i1l20692
u1154_20:
	line	477
	
i1l20686:	
;interrupt.c: 476: {
;interrupt.c: 477: receive_bit_count=0x00;
	movlb 2	; select bank2
	clrf	(_receive_bit_count)^0100h
	line	479
	
i1l20688:	
;interrupt.c: 479: ird_data=0x00;
	movlb 5	; select bank5
	clrf	(_ird_data)^0280h
	clrf	(_ird_data+1)^0280h
	clrf	(_ird_data+2)^0280h
	clrf	(_ird_data+3)^0280h
	line	481
;interrupt.c: 481: TMR0=0;
	movlb 0	; select bank0
	clrf	(21)	;volatile
	goto	i1l20678
	line	487
	
i1l20692:	
;interrupt.c: 487: else if((time_cnt>20)&&(time_cnt<50))
	movlw	high(015h)
	subwf	(isr@time_cnt+1),w
	movlw	low(015h)
	skipnz
	subwf	(isr@time_cnt),w
	skipc
	goto	u1155_21
	goto	u1155_20
u1155_21:
	goto	i1l20702
u1155_20:
	
i1l20694:	
	movlw	high(032h)
	subwf	(isr@time_cnt+1),w
	movlw	low(032h)
	skipnz
	subwf	(isr@time_cnt),w
	skipnc
	goto	u1156_21
	goto	u1156_20
u1156_21:
	goto	i1l20702
u1156_20:
	line	489
	
i1l20696:	
;interrupt.c: 488: {
;interrupt.c: 489: receive_bit_count++;
	movlb 2	; select bank2
	incf	(_receive_bit_count)^0100h,f
	line	491
;interrupt.c: 491: ird_data=ird_data<<1;
	movlb 5	; select bank5
	lslf	(_ird_data)^0280h,f
	rlf	(_ird_data+1)^0280h,f
	rlf	(_ird_data+2)^0280h,f
	rlf	(_ird_data+3)^0280h,f
	goto	i1l20676
	line	497
	
i1l20702:	
;interrupt.c: 497: else if((time_cnt>50)&&(time_cnt<90))
	movlw	high(033h)
	subwf	(isr@time_cnt+1),w
	movlw	low(033h)
	skipnz
	subwf	(isr@time_cnt),w
	skipc
	goto	u1157_21
	goto	u1157_20
u1157_21:
	goto	i1l367
u1157_20:
	
i1l20704:	
	movlw	high(05Ah)
	subwf	(isr@time_cnt+1),w
	movlw	low(05Ah)
	skipnz
	subwf	(isr@time_cnt),w
	skipnc
	goto	u1158_21
	goto	u1158_20
u1158_21:
	goto	i1l367
u1158_20:
	line	499
	
i1l20706:	
;interrupt.c: 498: {
;interrupt.c: 499: receive_bit_count++;
	movlb 2	; select bank2
	incf	(_receive_bit_count)^0100h,f
	line	501
	
i1l20708:	
;interrupt.c: 501: ird_data=(ird_data<<1)+1;
	movlw	01h
	movwf	((??_isr+0)+0)
	movlw	0
	movwf	((??_isr+0)+0+1)
	movlw	0
	movwf	((??_isr+0)+0+2)
	movlw	0
	movwf	((??_isr+0)+0+3)
	movlb 5	; select bank5
	movf	(_ird_data)^0280h,w
	movwf	(??_isr+4)+0
	movf	(_ird_data+1)^0280h,w
	movwf	((??_isr+4)+0+1)
	movf	(_ird_data+2)^0280h,w
	movwf	((??_isr+4)+0+2)
	movf	(_ird_data+3)^0280h,w
	movwf	((??_isr+4)+0+3)
	lslf	(??_isr+4)+0,f
	rlf	(??_isr+4)+1,f
	rlf	(??_isr+4)+2,f
	rlf	(??_isr+4)+3,f
	movf	0+(??_isr+4)+0,w
	addwf	(??_isr+0)+0,f
	movf	1+(??_isr+4)+0,w
	addwfc	(??_isr+0)+1,f
	movf	2+(??_isr+4)+0,w
	addwfc	(??_isr+0)+2,f
	movf	3+(??_isr+4)+0,w
	addwfc	(??_isr+0)+3,f
	movf	3+(??_isr+0)+0,w
	movwf	(_ird_data+3)^0280h
	movf	2+(??_isr+0)+0,w
	movwf	(_ird_data+2)^0280h
	movf	1+(??_isr+0)+0,w
	movwf	(_ird_data+1)^0280h
	movf	0+(??_isr+0)+0,w
	movwf	(_ird_data)^0280h

	goto	i1l20676
	line	507
	
i1l367:	
	line	513
	
i1l20714:	
;interrupt.c: 506: }
;interrupt.c: 507: }
;interrupt.c: 508: }
;interrupt.c: 510: }
;interrupt.c: 513: if(IOCBF1)
	movlb 7	; select bank7
	btfss	(7345/8)^0380h,(7345)&7	;volatile
	goto	u1159_21
	goto	u1159_20
u1159_21:
	goto	i1l20724
u1159_20:
	line	515
	
i1l20716:	
;interrupt.c: 514: {
;interrupt.c: 515: IOCBF1 = 0;
	bcf	(7345/8)^0380h,(7345)&7	;volatile
	line	517
;interrupt.c: 517: handle_short1_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_short1_flag)^0100h
	incf	(_handle_short1_flag)^0100h,f
	line	519
	
i1l20718:	
;interrupt.c: 519: discharge1_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge1_index)^080h
	line	521
	
i1l20720:	
;interrupt.c: 521: (LATCbits.LATC3 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,3	;volatile
	line	523
;interrupt.c: 523: bost_pwm1_value=2;
	movlw	02h
	movlb 1	; select bank1
	movwf	(_bost_pwm1_value)^080h
	clrf	(_bost_pwm1_value+1)^080h
	line	525
	
i1l20722:	
;interrupt.c: 525: Set_Bost_Pwm1_Duty(bost_pwm1_value);
	movf	(_bost_pwm1_value+1)^080h,w
	movwf	(i1Set_Bost_Pwm1_Duty@dduty+1)
	movf	(_bost_pwm1_value)^080h,w
	movwf	(i1Set_Bost_Pwm1_Duty@dduty)
	fcall	i1_Set_Bost_Pwm1_Duty
	line	527
;interrupt.c: 527: Disable_Bost_Pwm1();
	fcall	i1_Disable_Bost_Pwm1
	line	530
	
i1l20724:	
;interrupt.c: 528: }
;interrupt.c: 530: if(IOCBF0)
	movlb 7	; select bank7
	btfss	(7344/8)^0380h,(7344)&7	;volatile
	goto	u1160_21
	goto	u1160_20
u1160_21:
	goto	i1l375
u1160_20:
	line	532
	
i1l20726:	
;interrupt.c: 531: {
;interrupt.c: 532: IOCBF0 = 0;
	bcf	(7344/8)^0380h,(7344)&7	;volatile
	line	534
;interrupt.c: 534: handle_short2_flag=0x01;
	movlb 2	; select bank2
	clrf	(_handle_short2_flag)^0100h
	incf	(_handle_short2_flag)^0100h,f
	line	536
	
i1l20728:	
;interrupt.c: 536: discharge2_index=0x03;
	movlw	(03h)
	movlb 1	; select bank1
	movwf	(_discharge2_index)^080h
	line	538
	
i1l20730:	
;interrupt.c: 538: (LATCbits.LATC0 = 0x00);
	movlb 2	; select bank2
	bcf	(270)^0100h,0	;volatile
	line	540
;interrupt.c: 540: bost_pwm2_value=2;
	movlw	02h
	movlb 1	; select bank1
	movwf	(_bost_pwm2_value)^080h
	clrf	(_bost_pwm2_value+1)^080h
	line	542
	
i1l20732:	
;interrupt.c: 542: Set_Bost_Pwm2_Duty(bost_pwm2_value);
	movf	(_bost_pwm2_value+1)^080h,w
	movwf	(i1Set_Bost_Pwm2_Duty@dduty+1)
	movf	(_bost_pwm2_value)^080h,w
	movwf	(i1Set_Bost_Pwm2_Duty@dduty)
	fcall	i1_Set_Bost_Pwm2_Duty
	line	544
;interrupt.c: 544: Disable_Bost_Pwm2();
	fcall	i1_Disable_Bost_Pwm2
	line	550
	
i1l375:	
	retfie
	opt stack 0
GLOBAL	__end_of_isr
	__end_of_isr:
	signat	_isr,88
	global	i1_Set_Bost_Pwm2_Duty

;; *************** function i1_Set_Bost_Pwm2_Duty *****************
;; Defined at:
;;		line 271 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;  dduty           2    0[COMMON] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/1
;;		On exit  : 1F/6
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_isr
;; This function uses a non-reentrant model
;;
psect	text54,local,class=CODE,delta=2,merge=1
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	271
global __ptext54
__ptext54:	;psect for function i1_Set_Bost_Pwm2_Duty
psect	text54
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	271
	global	__size_ofi1_Set_Bost_Pwm2_Duty
	__size_ofi1_Set_Bost_Pwm2_Duty	equ	__end_ofi1_Set_Bost_Pwm2_Duty-i1_Set_Bost_Pwm2_Duty
	
i1_Set_Bost_Pwm2_Duty:	
;incstack = 0
	opt	stack 8
; Regs used in i1_Set_Bost_Pwm2_Duty: [wreg+status,2+status,0]
	line	274
	
i1l20368:	
;pwm.c: 274: bost_pwm2_value=dduty;
	movf	(i1Set_Bost_Pwm2_Duty@dduty+1),w
	movwf	(_bost_pwm2_value+1)^080h
	movf	(i1Set_Bost_Pwm2_Duty@dduty),w
	movwf	(_bost_pwm2_value)^080h
	line	276
;pwm.c: 276: if(dduty<=488)
	movlw	high(01E9h)
	subwf	(i1Set_Bost_Pwm2_Duty@dduty+1),w
	movlw	low(01E9h)
	skipnz
	subwf	(i1Set_Bost_Pwm2_Duty@dduty),w
	skipnc
	goto	u1074_21
	goto	u1074_20
u1074_21:
	goto	i1l20372
u1074_20:
	line	278
	
i1l20370:	
;pwm.c: 277: {
;pwm.c: 278: CCPR5L=(unsigned char)(dduty>>2);
	movf	(i1Set_Bost_Pwm2_Duty@dduty+1),w
	movwf	(??i1_Set_Bost_Pwm2_Duty+0)+0+1
	movf	(i1Set_Bost_Pwm2_Duty@dduty),w
	movwf	(??i1_Set_Bost_Pwm2_Duty+0)+0
	lsrf	(??i1_Set_Bost_Pwm2_Duty+0)+1,f
	rrf	(??i1_Set_Bost_Pwm2_Duty+0)+0,f
	lsrf	(??i1_Set_Bost_Pwm2_Duty+0)+1,f
	rrf	(??i1_Set_Bost_Pwm2_Duty+0)+0,f
	movf	0+(??i1_Set_Bost_Pwm2_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(796)^0300h	;volatile
	line	280
;pwm.c: 280: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
	movf	(i1Set_Bost_Pwm2_Duty@dduty),w
	andlw	03h
	movwf	(??i1_Set_Bost_Pwm2_Duty+0)+0
	swapf	(??i1_Set_Bost_Pwm2_Duty+0)+0,f
	movf	(798)^0300h,w	;volatile
	xorwf	(??i1_Set_Bost_Pwm2_Duty+0)+0,w
	andlw	not (((1<<2)-1)<<4)
	xorwf	(??i1_Set_Bost_Pwm2_Duty+0)+0,w
	movwf	(798)^0300h	;volatile
	line	281
;pwm.c: 281: }
	goto	i1l1323
	line	284
	
i1l20372:	
	line	286
	
i1l20374:	
;pwm.c: 286: CCPR5L=(unsigned char)(dduty>>2);
	movlw	(07Ah)
	movlb 6	; select bank6
	movwf	(796)^0300h	;volatile
	line	288
	
i1l20376:	
;pwm.c: 288: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(798)^0300h,f	;volatile
	line	291
	
i1l1323:	
	return
	opt stack 0
GLOBAL	__end_ofi1_Set_Bost_Pwm2_Duty
	__end_ofi1_Set_Bost_Pwm2_Duty:
	signat	i1_Set_Bost_Pwm2_Duty,88
	global	i1_Set_Bost_Pwm1_Duty

;; *************** function i1_Set_Bost_Pwm1_Duty *****************
;; Defined at:
;;		line 242 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;  dduty           2    0[COMMON] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 1F/1
;;		On exit  : 1F/6
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_isr
;; This function uses a non-reentrant model
;;
psect	text55,local,class=CODE,delta=2,merge=1
	line	242
global __ptext55
__ptext55:	;psect for function i1_Set_Bost_Pwm1_Duty
psect	text55
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	242
	global	__size_ofi1_Set_Bost_Pwm1_Duty
	__size_ofi1_Set_Bost_Pwm1_Duty	equ	__end_ofi1_Set_Bost_Pwm1_Duty-i1_Set_Bost_Pwm1_Duty
	
i1_Set_Bost_Pwm1_Duty:	
;incstack = 0
	opt	stack 8
; Regs used in i1_Set_Bost_Pwm1_Duty: [wreg+status,2+status,0]
	line	245
	
i1l20358:	
;pwm.c: 245: bost_pwm1_value=dduty;
	movf	(i1Set_Bost_Pwm1_Duty@dduty+1),w
	movwf	(_bost_pwm1_value+1)^080h
	movf	(i1Set_Bost_Pwm1_Duty@dduty),w
	movwf	(_bost_pwm1_value)^080h
	line	247
;pwm.c: 247: if(dduty<=488)
	movlw	high(01E9h)
	subwf	(i1Set_Bost_Pwm1_Duty@dduty+1),w
	movlw	low(01E9h)
	skipnz
	subwf	(i1Set_Bost_Pwm1_Duty@dduty),w
	skipnc
	goto	u1073_21
	goto	u1073_20
u1073_21:
	goto	i1l20362
u1073_20:
	line	249
	
i1l20360:	
;pwm.c: 248: {
;pwm.c: 249: CCPR3L=(unsigned char)(dduty>>2);
	movf	(i1Set_Bost_Pwm1_Duty@dduty+1),w
	movwf	(??i1_Set_Bost_Pwm1_Duty+0)+0+1
	movf	(i1Set_Bost_Pwm1_Duty@dduty),w
	movwf	(??i1_Set_Bost_Pwm1_Duty+0)+0
	lsrf	(??i1_Set_Bost_Pwm1_Duty+0)+1,f
	rrf	(??i1_Set_Bost_Pwm1_Duty+0)+0,f
	lsrf	(??i1_Set_Bost_Pwm1_Duty+0)+1,f
	rrf	(??i1_Set_Bost_Pwm1_Duty+0)+0,f
	movf	0+(??i1_Set_Bost_Pwm1_Duty+0)+0,w
	movlb 6	; select bank6
	movwf	(785)^0300h	;volatile
	line	251
;pwm.c: 251: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
	movf	(i1Set_Bost_Pwm1_Duty@dduty),w
	andlw	03h
	movwf	(??i1_Set_Bost_Pwm1_Duty+0)+0
	swapf	(??i1_Set_Bost_Pwm1_Duty+0)+0,f
	movf	(787)^0300h,w	;volatile
	xorwf	(??i1_Set_Bost_Pwm1_Duty+0)+0,w
	andlw	not (((1<<2)-1)<<4)
	xorwf	(??i1_Set_Bost_Pwm1_Duty+0)+0,w
	movwf	(787)^0300h	;volatile
	line	252
;pwm.c: 252: }
	goto	i1l1318
	line	255
	
i1l20362:	
	line	257
	
i1l20364:	
;pwm.c: 257: CCPR3L=(unsigned char)(dduty>>2);
	movlw	(07Ah)
	movlb 6	; select bank6
	movwf	(785)^0300h	;volatile
	line	259
	
i1l20366:	
;pwm.c: 259: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
	andwf	(787)^0300h,f	;volatile
	line	262
	
i1l1318:	
	return
	opt stack 0
GLOBAL	__end_ofi1_Set_Bost_Pwm1_Duty
	__end_ofi1_Set_Bost_Pwm1_Duty:
	signat	i1_Set_Bost_Pwm1_Duty,88
	global	i1_Disable_Bost_Pwm2

;; *************** function i1_Disable_Bost_Pwm2 *****************
;; Defined at:
;;		line 228 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1F/6
;;		On exit  : 1F/0
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_isr
;; This function uses a non-reentrant model
;;
psect	text56,local,class=CODE,delta=2,merge=1
	line	228
global __ptext56
__ptext56:	;psect for function i1_Disable_Bost_Pwm2
psect	text56
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	228
	global	__size_ofi1_Disable_Bost_Pwm2
	__size_ofi1_Disable_Bost_Pwm2	equ	__end_ofi1_Disable_Bost_Pwm2-i1_Disable_Bost_Pwm2
	
i1_Disable_Bost_Pwm2:	
;incstack = 0
	opt	stack 8
; Regs used in i1_Disable_Bost_Pwm2: []
	line	230
	
i1l20356:	
;pwm.c: 230: TRISAbits.TRISA4 =1;
	movlb 1	; select bank1
	bsf	(140)^080h,4	;volatile
	line	232
;pwm.c: 232: TMR2ON=0;
	movlb 0	; select bank0
	bcf	(226/8),(226)&7	;volatile
	line	234
	
i1l1313:	
	return
	opt stack 0
GLOBAL	__end_ofi1_Disable_Bost_Pwm2
	__end_ofi1_Disable_Bost_Pwm2:
	signat	i1_Disable_Bost_Pwm2,88
	global	i1_Disable_Bost_Pwm1

;; *************** function i1_Disable_Bost_Pwm1 *****************
;; Defined at:
;;		line 214 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 1F/6
;;		On exit  : 1F/8
;;		Unchanged: 0/0
;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_isr
;; This function uses a non-reentrant model
;;
psect	text57,local,class=CODE,delta=2,merge=1
	line	214
global __ptext57
__ptext57:	;psect for function i1_Disable_Bost_Pwm1
psect	text57
	file	"D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
	line	214
	global	__size_ofi1_Disable_Bost_Pwm1
	__size_ofi1_Disable_Bost_Pwm1	equ	__end_ofi1_Disable_Bost_Pwm1-i1_Disable_Bost_Pwm1
	
i1_Disable_Bost_Pwm1:	
;incstack = 0
	opt	stack 8
; Regs used in i1_Disable_Bost_Pwm1: []
	line	216
	
i1l20354:	
;pwm.c: 216: TRISBbits.TRISB5 =1;
	movlb 1	; select bank1
	bsf	(141)^080h,5	;volatile
	line	218
;pwm.c: 218: TMR4ON=0;
	movlb 8	; select bank8
	bcf	(8378/8)^0400h,(8378)&7	;volatile
	line	220
	
i1l1310:	
	return
	opt stack 0
GLOBAL	__end_ofi1_Disable_Bost_Pwm1
	__end_ofi1_Disable_Bost_Pwm1:
	signat	i1_Disable_Bost_Pwm1,88
global	___latbits
___latbits	equ	3
	global	btemp
	btemp set 07Eh

	DABS	1,126,2	;btemp
	global	wtemp
	global	wtemp0
	wtemp set btemp
	wtemp0 set btemp
	global	wtemp1
	wtemp1 set btemp+2
	global	wtemp2
	wtemp2 set btemp+4
	global	wtemp3
	wtemp3 set btemp+6
	global	wtemp4
	wtemp4 set btemp+8
	global	wtemp5
	wtemp5 set btemp+10
	global	wtemp6
	wtemp6 set btemp+1
	global	ttemp
	global	ttemp0
	ttemp set btemp
	ttemp0 set btemp
	global	ttemp1
	ttemp1 set btemp+3
	global	ttemp2
	ttemp2 set btemp+6
	global	ttemp3
	ttemp3 set btemp+9
	global	ttemp4
	ttemp4 set btemp+1
	global	ltemp
	global	ltemp0
	ltemp set btemp
	ltemp0 set btemp
	global	ltemp1
	ltemp1 set btemp+4
	global	ltemp2
	ltemp2 set btemp+8
	global	ltemp3
	ltemp3 set btemp+2
global __pbssBIGRAM
__pbssBIGRAM	equ	9072
	end
