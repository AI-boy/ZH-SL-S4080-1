Version 3.2 HI-TECH Software Intermediate Code
"29 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an1_process_flag `uc ~T0 @X0 0 e ]
"61 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _temperature_value `ui ~T0 @X0 0 e ]
"151 D:\MCUProject\ZH-SL-S4080-1\include\task.h
[v _start_ad_convert `(ui ~T0 @X0 0 ef1`uc ]
[s S108 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S108 . ADPREF0 ADPREF1 ADNREF . ADCS0 ADCS1 ADCS2 ADFM ]
[s S109 :2 `uc 1 :2 `uc 1 :3 `uc 1 ]
[n S109 . ADPREF . ADCS ]
[u S107 `S108 1 `S109 1 ]
[n S107 . . . ]
"2088 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[v _ADCON1bits `VS107 ~T0 @X0 0 e@158 ]
"59 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _mcu_value `ui ~T0 @X0 0 e ]
"34 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an2_process_flag `uc ~T0 @X0 0 e ]
"63 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _pv_voltage_value `ui ~T0 @X0 0 e ]
"49 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an9_process_flag `uc ~T0 @X0 0 e ]
"69 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _charge_current_value `ui ~T0 @X0 0 e ]
"30 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _buck_pwm_value `ui ~T0 @X0 0 e ]
"53
[v _Set_Buck_Pwm_Duty `(v ~T0 @X0 0 ef1`ui ]
"39 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an3_process_flag `uc ~T0 @X0 0 e ]
"65 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _battery_voltage_value `ui ~T0 @X0 0 e ]
"13 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _b_v `f ~T0 @X0 0 e ]
"77
[v _volt_id `uc ~T0 @X0 0 e ]
"49 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _Enable_Buck_Pwm `(v ~T0 @X0 0 ef ]
"26 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _bt_00_lv `f ~T0 @X0 0 e ]
"153 D:\MCUProject\ZH-SL-S4080-1\include\task.h
[v _Mppt_Charge `(v ~T0 @X0 0 ef ]
"51 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _Disable_Buck_Pwm `(v ~T0 @X0 0 ef ]
"39
[v _P_prev `l ~T0 @X0 0 e ]
"41
[v _P_last `l ~T0 @X0 0 e ]
"44 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an4_process_flag `uc ~T0 @X0 0 e ]
"67 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _load_voltage_value `ui ~T0 @X0 0 e ]
"14 D:\MCUProject\ZH-SL-S4080-1\include\PID.h
[s S382 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 `f 1 ]
[n S382 PID_VAR SetPoint Proportion Integral Derivative LastError PrevError SumError ]
"32
[v _PID_CC_discharge `S382 ~T0 @X0 0 e ]
"32 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _bost_pwm1_value `ui ~T0 @X0 0 e ]
"59
[v _Set_Bost_Pwm1_Duty `(v ~T0 @X0 0 ef1`ui ]
"19 D:\MCUProject\ZH-SL-S4080-1\include\delay.h
[v _delay_ms `(v ~T0 @X0 0 ef1`us ]
"57 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _Disable_Bost_Pwm1 `(v ~T0 @X0 0 ef ]
[s S115 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S115 . LATC0 LATC1 LATC2 LATC3 LATC4 LATC5 LATC6 LATC7 ]
[u S114 `S115 1 ]
[n S114 . . ]
"2276 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[v _LATCbits `VS114 ~T0 @X0 0 e@270 ]
"24 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an0_process_flag `uc ~T0 @X0 0 e ]
"71 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _discharge_current_value `ui ~T0 @X0 0 e ]
"16 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _open_discharge_time `uc ~T0 @X0 0 e ]
"55 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _Enable_Bost_Pwm1 `(v ~T0 @X0 0 ef ]
"67 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _step_01_time_limit `ui ~T0 @X0 0 e ]
"69
[v _step_02_time_limit `ui ~T0 @X0 0 e ]
"71
[v _step_03_time_limit `ui ~T0 @X0 0 e ]
"73
[v _step_04_time_limit `ui ~T0 @X0 0 e ]
"75
[v _step_05_time_limit `ui ~T0 @X0 0 e ]
"20 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _ho_cnt `ui ~T0 @X0 0 e ]
"85 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _bt_volt_80 `f ~T0 @X0 0 e ]
"87
[v _bt_volt_60 `f ~T0 @X0 0 e ]
"89
[v _bt_volt_40 `f ~T0 @X0 0 e ]
"91
[v _bt_volt_20 `f ~T0 @X0 0 e ]
"93
[v _bt_volt_00 `f ~T0 @X0 0 e ]
"53
[v _load_cc_I `f ~T0 @X0 0 e ]
"57
[v _step_01_load_percent `f ~T0 @X0 0 e ]
"59
[v _step_02_load_percent `f ~T0 @X0 0 e ]
"61
[v _step_03_load_percent `f ~T0 @X0 0 e ]
"63
[v _step_04_load_percent `f ~T0 @X0 0 e ]
"65
[v _step_05_load_percent `f ~T0 @X0 0 e ]
"137
[v _light_mode `uc ~T0 @X0 0 e ]
"52 D:\MCUProject\ZH-SL-S4080-1\include\key.h
[v _have_person1_flag `uc ~T0 @X0 0 e ]
"56
[v _have_person2_flag `uc ~T0 @X0 0 e ]
"28 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"143 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _led_out_ctrl `uc ~T0 @X0 0 e ]
"38 D:\MCUProject\ZH-SL-S4080-1\include\PID.h
[v _pid_calc `(f ~T0 @X0 0 ef2`*S382`i ]
"58 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an11_process_flag `uc ~T0 @X0 0 e ]
"73 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _load_voltage2_value `ui ~T0 @X0 0 e ]
"34 D:\MCUProject\ZH-SL-S4080-1\include\PID.h
[v _PID_CC2_discharge `S382 ~T0 @X0 0 e ]
"34 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _bost_pwm2_value `ui ~T0 @X0 0 e ]
"65
[v _Set_Bost_Pwm2_Duty `(v ~T0 @X0 0 ef1`ui ]
"63
[v _Disable_Bost_Pwm2 `(v ~T0 @X0 0 ef ]
"54 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_an8_process_flag `uc ~T0 @X0 0 e ]
"75 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _discharge_current2_value `ui ~T0 @X0 0 e ]
"61 D:\MCUProject\ZH-SL-S4080-1\include\pwm.h
[v _Enable_Bost_Pwm2 `(v ~T0 @X0 0 ef ]
"139 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _light2_mode `uc ~T0 @X0 0 e ]
"40 D:\MCUProject\ZH-SL-S4080-1\include\PID.h
[v _pid_calc_2 `(f ~T0 @X0 0 ef2`*S382`i ]
[s S103 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S103 . ADON GO_nDONE CHS0 CHS1 CHS2 CHS3 CHS4 ]
[s S104 :1 `uc 1 :1 `uc 1 :5 `uc 1 ]
[n S104 . . ADGO CHS ]
[s S105 :1 `uc 1 :1 `uc 1 ]
[n S105 . . GO ]
[s S106 :1 `uc 1 :1 `uc 1 ]
[n S106 . . nDONE ]
[u S102 `S103 1 `S104 1 `S105 1 `S106 1 ]
[n S102 . . . . . ]
"2007 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[v _ADCON0bits `VS102 ~T0 @X0 0 e@157 ]
[v F3172 `(v ~T0 @X0 1 tf1`ul ]
"154 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic.h
[v __delay `JF3172 ~T0 @X0 0 e ]
[p i __delay ]
"1959 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[v _ADRESH `Vuc ~T0 @X0 0 e@156 ]
"1940
[v _ADRESL `Vuc ~T0 @X0 0 e@155 ]
"78 D:\MCUProject\ZH-SL-S4080-1\include\adc.h
[v _adc_buffer `ui ~T0 @X0 -> 0 `x e ]
"61 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _handle_short1_flag `uc ~T0 @X0 0 e ]
"62
[v _handle_short2_flag `uc ~T0 @X0 0 e ]
"36 D:\MCUProject\ZH-SL-S4080-1\include\PID.h
[v _pid_init `(v ~T0 @X0 0 ef1`*S382 ]
"28
[v _PID_CC_charge `S382 ~T0 @X0 0 e ]
"30
[v _PID_CV_charge `S382 ~T0 @X0 0 e ]
"17 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _ms_cnt `ui ~T0 @X0 0 e ]
"18
[v _se_cnt `ui ~T0 @X0 0 e ]
"19
[v _mi_cnt `ui ~T0 @X0 0 e ]
"60 D:\MCUProject\ZH-SL-S4080-1\include\key.h
[v _device_status `uc ~T0 @X0 0 e ]
"64
[v _key1_index `uc ~T0 @X0 0 e ]
[s S111 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S111 . LATA0 LATA1 LATA2 LATA3 LATA4 LATA5 LATA6 LATA7 ]
[u S110 `S111 1 ]
[n S110 . . ]
"2154 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[v _LATAbits `VS110 ~T0 @X0 0 e@268 ]
"67 D:\MCUProject\ZH-SL-S4080-1\include\interrupt.h
[v _open_sleep_time `uc ~T0 @X0 0 e ]
"23 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _today_index `uc ~T0 @X0 0 e ]
"41 D:\Program Files (x86)\Microchip\xc8\v1.30\include\eeprom_routines.h
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"25 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _bt_00_hv `f ~T0 @X0 0 e ]
[; ;htc.h: 22: extern void __builtin_software_breakpoint(void);
[; ;pic16f1938.h: 44: extern volatile unsigned char INDF0 @ 0x000;
"46 D:\Program Files (x86)\Microchip\xc8\v1.30\include\pic16f1938.h
[; ;pic16f1938.h: 46: asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
[; ;pic16f1938.h: 49: typedef union {
[; ;pic16f1938.h: 50: struct {
[; ;pic16f1938.h: 51: unsigned INDF0 :8;
[; ;pic16f1938.h: 52: };
[; ;pic16f1938.h: 53: } INDF0bits_t;
[; ;pic16f1938.h: 54: extern volatile INDF0bits_t INDF0bits @ 0x000;
[; ;pic16f1938.h: 63: extern volatile unsigned char INDF1 @ 0x001;
"65
[; ;pic16f1938.h: 65: asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
[; ;pic16f1938.h: 68: typedef union {
[; ;pic16f1938.h: 69: struct {
[; ;pic16f1938.h: 70: unsigned INDF1 :8;
[; ;pic16f1938.h: 71: };
[; ;pic16f1938.h: 72: } INDF1bits_t;
[; ;pic16f1938.h: 73: extern volatile INDF1bits_t INDF1bits @ 0x001;
[; ;pic16f1938.h: 82: extern volatile unsigned char PCL @ 0x002;
"84
[; ;pic16f1938.h: 84: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f1938.h: 87: typedef union {
[; ;pic16f1938.h: 88: struct {
[; ;pic16f1938.h: 89: unsigned PCL :8;
[; ;pic16f1938.h: 90: };
[; ;pic16f1938.h: 91: } PCLbits_t;
[; ;pic16f1938.h: 92: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic16f1938.h: 101: extern volatile unsigned char STATUS @ 0x003;
"103
[; ;pic16f1938.h: 103: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f1938.h: 106: typedef union {
[; ;pic16f1938.h: 107: struct {
[; ;pic16f1938.h: 108: unsigned C :1;
[; ;pic16f1938.h: 109: unsigned DC :1;
[; ;pic16f1938.h: 110: unsigned Z :1;
[; ;pic16f1938.h: 111: unsigned nPD :1;
[; ;pic16f1938.h: 112: unsigned nTO :1;
[; ;pic16f1938.h: 113: };
[; ;pic16f1938.h: 114: struct {
[; ;pic16f1938.h: 115: unsigned CARRY :1;
[; ;pic16f1938.h: 116: };
[; ;pic16f1938.h: 117: struct {
[; ;pic16f1938.h: 118: unsigned :2;
[; ;pic16f1938.h: 119: unsigned ZERO :1;
[; ;pic16f1938.h: 120: };
[; ;pic16f1938.h: 121: } STATUSbits_t;
[; ;pic16f1938.h: 122: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f1938.h: 161: extern volatile unsigned short FSR0 @ 0x004;
[; ;pic16f1938.h: 164: extern volatile unsigned char FSR0L @ 0x004;
"166
[; ;pic16f1938.h: 166: asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
[; ;pic16f1938.h: 169: typedef union {
[; ;pic16f1938.h: 170: struct {
[; ;pic16f1938.h: 171: unsigned FSR0L :8;
[; ;pic16f1938.h: 172: };
[; ;pic16f1938.h: 173: } FSR0Lbits_t;
[; ;pic16f1938.h: 174: extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;
[; ;pic16f1938.h: 183: extern volatile unsigned char FSR0H @ 0x005;
"185
[; ;pic16f1938.h: 185: asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
[; ;pic16f1938.h: 188: typedef union {
[; ;pic16f1938.h: 189: struct {
[; ;pic16f1938.h: 190: unsigned FSR0H :8;
[; ;pic16f1938.h: 191: };
[; ;pic16f1938.h: 192: } FSR0Hbits_t;
[; ;pic16f1938.h: 193: extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;
[; ;pic16f1938.h: 202: extern volatile unsigned short FSR1 @ 0x006;
[; ;pic16f1938.h: 205: extern volatile unsigned char FSR1L @ 0x006;
"207
[; ;pic16f1938.h: 207: asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
[; ;pic16f1938.h: 210: typedef union {
[; ;pic16f1938.h: 211: struct {
[; ;pic16f1938.h: 212: unsigned FSR1L :8;
[; ;pic16f1938.h: 213: };
[; ;pic16f1938.h: 214: } FSR1Lbits_t;
[; ;pic16f1938.h: 215: extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;
[; ;pic16f1938.h: 224: extern volatile unsigned char FSR1H @ 0x007;
"226
[; ;pic16f1938.h: 226: asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
[; ;pic16f1938.h: 229: typedef union {
[; ;pic16f1938.h: 230: struct {
[; ;pic16f1938.h: 231: unsigned FSR1H :8;
[; ;pic16f1938.h: 232: };
[; ;pic16f1938.h: 233: } FSR1Hbits_t;
[; ;pic16f1938.h: 234: extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;
[; ;pic16f1938.h: 243: extern volatile unsigned char BSR @ 0x008;
"245
[; ;pic16f1938.h: 245: asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
[; ;pic16f1938.h: 248: typedef union {
[; ;pic16f1938.h: 249: struct {
[; ;pic16f1938.h: 250: unsigned BSR0 :1;
[; ;pic16f1938.h: 251: unsigned BSR1 :1;
[; ;pic16f1938.h: 252: unsigned BSR2 :1;
[; ;pic16f1938.h: 253: unsigned BSR3 :1;
[; ;pic16f1938.h: 254: unsigned BSR4 :1;
[; ;pic16f1938.h: 255: };
[; ;pic16f1938.h: 256: struct {
[; ;pic16f1938.h: 257: unsigned BSR :5;
[; ;pic16f1938.h: 258: };
[; ;pic16f1938.h: 259: } BSRbits_t;
[; ;pic16f1938.h: 260: extern volatile BSRbits_t BSRbits @ 0x008;
[; ;pic16f1938.h: 294: extern volatile unsigned char WREG @ 0x009;
"296
[; ;pic16f1938.h: 296: asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
[; ;pic16f1938.h: 299: typedef union {
[; ;pic16f1938.h: 300: struct {
[; ;pic16f1938.h: 301: unsigned WREG0 :8;
[; ;pic16f1938.h: 302: };
[; ;pic16f1938.h: 303: } WREGbits_t;
[; ;pic16f1938.h: 304: extern volatile WREGbits_t WREGbits @ 0x009;
[; ;pic16f1938.h: 313: extern volatile unsigned char PCLATH @ 0x00A;
"315
[; ;pic16f1938.h: 315: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f1938.h: 318: typedef union {
[; ;pic16f1938.h: 319: struct {
[; ;pic16f1938.h: 320: unsigned PCLATH :7;
[; ;pic16f1938.h: 321: };
[; ;pic16f1938.h: 322: } PCLATHbits_t;
[; ;pic16f1938.h: 323: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f1938.h: 332: extern volatile unsigned char INTCON @ 0x00B;
"334
[; ;pic16f1938.h: 334: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f1938.h: 337: typedef union {
[; ;pic16f1938.h: 338: struct {
[; ;pic16f1938.h: 339: unsigned IOCIF :1;
[; ;pic16f1938.h: 340: unsigned INTF :1;
[; ;pic16f1938.h: 341: unsigned TMR0IF :1;
[; ;pic16f1938.h: 342: unsigned IOCIE :1;
[; ;pic16f1938.h: 343: unsigned INTE :1;
[; ;pic16f1938.h: 344: unsigned TMR0IE :1;
[; ;pic16f1938.h: 345: unsigned PEIE :1;
[; ;pic16f1938.h: 346: unsigned GIE :1;
[; ;pic16f1938.h: 347: };
[; ;pic16f1938.h: 348: struct {
[; ;pic16f1938.h: 349: unsigned :2;
[; ;pic16f1938.h: 350: unsigned T0IF :1;
[; ;pic16f1938.h: 351: unsigned :2;
[; ;pic16f1938.h: 352: unsigned T0IE :1;
[; ;pic16f1938.h: 353: };
[; ;pic16f1938.h: 354: } INTCONbits_t;
[; ;pic16f1938.h: 355: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f1938.h: 409: extern volatile unsigned char PORTA @ 0x00C;
"411
[; ;pic16f1938.h: 411: asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
[; ;pic16f1938.h: 414: typedef union {
[; ;pic16f1938.h: 415: struct {
[; ;pic16f1938.h: 416: unsigned RA0 :1;
[; ;pic16f1938.h: 417: unsigned RA1 :1;
[; ;pic16f1938.h: 418: unsigned RA2 :1;
[; ;pic16f1938.h: 419: unsigned RA3 :1;
[; ;pic16f1938.h: 420: unsigned RA4 :1;
[; ;pic16f1938.h: 421: unsigned RA5 :1;
[; ;pic16f1938.h: 422: unsigned RA6 :1;
[; ;pic16f1938.h: 423: unsigned RA7 :1;
[; ;pic16f1938.h: 424: };
[; ;pic16f1938.h: 425: } PORTAbits_t;
[; ;pic16f1938.h: 426: extern volatile PORTAbits_t PORTAbits @ 0x00C;
[; ;pic16f1938.h: 470: extern volatile unsigned char PORTB @ 0x00D;
"472
[; ;pic16f1938.h: 472: asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
[; ;pic16f1938.h: 475: typedef union {
[; ;pic16f1938.h: 476: struct {
[; ;pic16f1938.h: 477: unsigned RB0 :1;
[; ;pic16f1938.h: 478: unsigned RB1 :1;
[; ;pic16f1938.h: 479: unsigned RB2 :1;
[; ;pic16f1938.h: 480: unsigned RB3 :1;
[; ;pic16f1938.h: 481: unsigned RB4 :1;
[; ;pic16f1938.h: 482: unsigned RB5 :1;
[; ;pic16f1938.h: 483: unsigned RB6 :1;
[; ;pic16f1938.h: 484: unsigned RB7 :1;
[; ;pic16f1938.h: 485: };
[; ;pic16f1938.h: 486: } PORTBbits_t;
[; ;pic16f1938.h: 487: extern volatile PORTBbits_t PORTBbits @ 0x00D;
[; ;pic16f1938.h: 531: extern volatile unsigned char PORTC @ 0x00E;
"533
[; ;pic16f1938.h: 533: asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
[; ;pic16f1938.h: 536: typedef union {
[; ;pic16f1938.h: 537: struct {
[; ;pic16f1938.h: 538: unsigned RC0 :1;
[; ;pic16f1938.h: 539: unsigned RC1 :1;
[; ;pic16f1938.h: 540: unsigned RC2 :1;
[; ;pic16f1938.h: 541: unsigned RC3 :1;
[; ;pic16f1938.h: 542: unsigned RC4 :1;
[; ;pic16f1938.h: 543: unsigned RC5 :1;
[; ;pic16f1938.h: 544: unsigned RC6 :1;
[; ;pic16f1938.h: 545: unsigned RC7 :1;
[; ;pic16f1938.h: 546: };
[; ;pic16f1938.h: 547: } PORTCbits_t;
[; ;pic16f1938.h: 548: extern volatile PORTCbits_t PORTCbits @ 0x00E;
[; ;pic16f1938.h: 592: extern volatile unsigned char PORTE @ 0x010;
"594
[; ;pic16f1938.h: 594: asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
[; ;pic16f1938.h: 597: typedef union {
[; ;pic16f1938.h: 598: struct {
[; ;pic16f1938.h: 599: unsigned :3;
[; ;pic16f1938.h: 600: unsigned RE3 :1;
[; ;pic16f1938.h: 601: };
[; ;pic16f1938.h: 602: } PORTEbits_t;
[; ;pic16f1938.h: 603: extern volatile PORTEbits_t PORTEbits @ 0x010;
[; ;pic16f1938.h: 612: extern volatile unsigned char PIR1 @ 0x011;
"614
[; ;pic16f1938.h: 614: asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
[; ;pic16f1938.h: 617: typedef union {
[; ;pic16f1938.h: 618: struct {
[; ;pic16f1938.h: 619: unsigned TMR1IF :1;
[; ;pic16f1938.h: 620: unsigned TMR2IF :1;
[; ;pic16f1938.h: 621: unsigned CCP1IF :1;
[; ;pic16f1938.h: 622: unsigned SSPIF :1;
[; ;pic16f1938.h: 623: unsigned TXIF :1;
[; ;pic16f1938.h: 624: unsigned RCIF :1;
[; ;pic16f1938.h: 625: unsigned ADIF :1;
[; ;pic16f1938.h: 626: unsigned TMR1GIF :1;
[; ;pic16f1938.h: 627: };
[; ;pic16f1938.h: 628: } PIR1bits_t;
[; ;pic16f1938.h: 629: extern volatile PIR1bits_t PIR1bits @ 0x011;
[; ;pic16f1938.h: 673: extern volatile unsigned char PIR2 @ 0x012;
"675
[; ;pic16f1938.h: 675: asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
[; ;pic16f1938.h: 678: typedef union {
[; ;pic16f1938.h: 679: struct {
[; ;pic16f1938.h: 680: unsigned CCP2IF :1;
[; ;pic16f1938.h: 681: unsigned :1;
[; ;pic16f1938.h: 682: unsigned LCDIF :1;
[; ;pic16f1938.h: 683: unsigned BCLIF :1;
[; ;pic16f1938.h: 684: unsigned EEIF :1;
[; ;pic16f1938.h: 685: unsigned C1IF :1;
[; ;pic16f1938.h: 686: unsigned C2IF :1;
[; ;pic16f1938.h: 687: unsigned OSFIF :1;
[; ;pic16f1938.h: 688: };
[; ;pic16f1938.h: 689: } PIR2bits_t;
[; ;pic16f1938.h: 690: extern volatile PIR2bits_t PIR2bits @ 0x012;
[; ;pic16f1938.h: 729: extern volatile unsigned char PIR3 @ 0x013;
"731
[; ;pic16f1938.h: 731: asm("PIR3 equ 013h");
[; <" PIR3 equ 013h ;# ">
[; ;pic16f1938.h: 734: typedef union {
[; ;pic16f1938.h: 735: struct {
[; ;pic16f1938.h: 736: unsigned :1;
[; ;pic16f1938.h: 737: unsigned TMR4IF :1;
[; ;pic16f1938.h: 738: unsigned :1;
[; ;pic16f1938.h: 739: unsigned TMR6IF :1;
[; ;pic16f1938.h: 740: unsigned CCP3IF :1;
[; ;pic16f1938.h: 741: unsigned CCP4IF :1;
[; ;pic16f1938.h: 742: unsigned CCP5IF :1;
[; ;pic16f1938.h: 743: };
[; ;pic16f1938.h: 744: } PIR3bits_t;
[; ;pic16f1938.h: 745: extern volatile PIR3bits_t PIR3bits @ 0x013;
[; ;pic16f1938.h: 774: extern volatile unsigned char TMR0 @ 0x015;
"776
[; ;pic16f1938.h: 776: asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
[; ;pic16f1938.h: 779: typedef union {
[; ;pic16f1938.h: 780: struct {
[; ;pic16f1938.h: 781: unsigned TMR0 :8;
[; ;pic16f1938.h: 782: };
[; ;pic16f1938.h: 783: } TMR0bits_t;
[; ;pic16f1938.h: 784: extern volatile TMR0bits_t TMR0bits @ 0x015;
[; ;pic16f1938.h: 793: extern volatile unsigned short TMR1 @ 0x016;
"795
[; ;pic16f1938.h: 795: asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
[; ;pic16f1938.h: 799: extern volatile unsigned char TMR1L @ 0x016;
"801
[; ;pic16f1938.h: 801: asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
[; ;pic16f1938.h: 804: typedef union {
[; ;pic16f1938.h: 805: struct {
[; ;pic16f1938.h: 806: unsigned TMR1L :8;
[; ;pic16f1938.h: 807: };
[; ;pic16f1938.h: 808: } TMR1Lbits_t;
[; ;pic16f1938.h: 809: extern volatile TMR1Lbits_t TMR1Lbits @ 0x016;
[; ;pic16f1938.h: 818: extern volatile unsigned char TMR1H @ 0x017;
"820
[; ;pic16f1938.h: 820: asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
[; ;pic16f1938.h: 823: typedef union {
[; ;pic16f1938.h: 824: struct {
[; ;pic16f1938.h: 825: unsigned TMR1H :8;
[; ;pic16f1938.h: 826: };
[; ;pic16f1938.h: 827: } TMR1Hbits_t;
[; ;pic16f1938.h: 828: extern volatile TMR1Hbits_t TMR1Hbits @ 0x017;
[; ;pic16f1938.h: 837: extern volatile unsigned char T1CON @ 0x018;
"839
[; ;pic16f1938.h: 839: asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
[; ;pic16f1938.h: 842: typedef union {
[; ;pic16f1938.h: 843: struct {
[; ;pic16f1938.h: 844: unsigned TMR1ON :1;
[; ;pic16f1938.h: 845: unsigned :1;
[; ;pic16f1938.h: 846: unsigned nT1SYNC :1;
[; ;pic16f1938.h: 847: unsigned T1OSCEN :1;
[; ;pic16f1938.h: 848: unsigned T1CKPS0 :1;
[; ;pic16f1938.h: 849: unsigned T1CKPS1 :1;
[; ;pic16f1938.h: 850: unsigned TMR1CS0 :1;
[; ;pic16f1938.h: 851: unsigned TMR1CS1 :1;
[; ;pic16f1938.h: 852: };
[; ;pic16f1938.h: 853: struct {
[; ;pic16f1938.h: 854: unsigned :4;
[; ;pic16f1938.h: 855: unsigned T1CKPS :2;
[; ;pic16f1938.h: 856: unsigned TMR1CS :2;
[; ;pic16f1938.h: 857: };
[; ;pic16f1938.h: 858: } T1CONbits_t;
[; ;pic16f1938.h: 859: extern volatile T1CONbits_t T1CONbits @ 0x018;
[; ;pic16f1938.h: 908: extern volatile unsigned char T1GCON @ 0x019;
"910
[; ;pic16f1938.h: 910: asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
[; ;pic16f1938.h: 913: typedef union {
[; ;pic16f1938.h: 914: struct {
[; ;pic16f1938.h: 915: unsigned T1GSS0 :1;
[; ;pic16f1938.h: 916: unsigned T1GSS1 :1;
[; ;pic16f1938.h: 917: unsigned T1GVAL :1;
[; ;pic16f1938.h: 918: unsigned T1GGO_nDONE :1;
[; ;pic16f1938.h: 919: unsigned T1GSPM :1;
[; ;pic16f1938.h: 920: unsigned T1GTM :1;
[; ;pic16f1938.h: 921: unsigned T1GPOL :1;
[; ;pic16f1938.h: 922: unsigned TMR1GE :1;
[; ;pic16f1938.h: 923: };
[; ;pic16f1938.h: 924: struct {
[; ;pic16f1938.h: 925: unsigned T1GSS :2;
[; ;pic16f1938.h: 926: unsigned :1;
[; ;pic16f1938.h: 927: unsigned T1GGO :1;
[; ;pic16f1938.h: 928: };
[; ;pic16f1938.h: 929: } T1GCONbits_t;
[; ;pic16f1938.h: 930: extern volatile T1GCONbits_t T1GCONbits @ 0x019;
[; ;pic16f1938.h: 984: extern volatile unsigned char TMR2 @ 0x01A;
"986
[; ;pic16f1938.h: 986: asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
[; ;pic16f1938.h: 989: typedef union {
[; ;pic16f1938.h: 990: struct {
[; ;pic16f1938.h: 991: unsigned TMR2 :8;
[; ;pic16f1938.h: 992: };
[; ;pic16f1938.h: 993: } TMR2bits_t;
[; ;pic16f1938.h: 994: extern volatile TMR2bits_t TMR2bits @ 0x01A;
[; ;pic16f1938.h: 1003: extern volatile unsigned char PR2 @ 0x01B;
"1005
[; ;pic16f1938.h: 1005: asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
[; ;pic16f1938.h: 1008: typedef union {
[; ;pic16f1938.h: 1009: struct {
[; ;pic16f1938.h: 1010: unsigned PR2 :8;
[; ;pic16f1938.h: 1011: };
[; ;pic16f1938.h: 1012: } PR2bits_t;
[; ;pic16f1938.h: 1013: extern volatile PR2bits_t PR2bits @ 0x01B;
[; ;pic16f1938.h: 1022: extern volatile unsigned char T2CON @ 0x01C;
"1024
[; ;pic16f1938.h: 1024: asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
[; ;pic16f1938.h: 1027: typedef union {
[; ;pic16f1938.h: 1028: struct {
[; ;pic16f1938.h: 1029: unsigned T2CKPS0 :1;
[; ;pic16f1938.h: 1030: unsigned T2CKPS1 :1;
[; ;pic16f1938.h: 1031: unsigned TMR2ON :1;
[; ;pic16f1938.h: 1032: unsigned T2OUTPS0 :1;
[; ;pic16f1938.h: 1033: unsigned T2OUTPS1 :1;
[; ;pic16f1938.h: 1034: unsigned T2OUTPS2 :1;
[; ;pic16f1938.h: 1035: unsigned T2OUTPS3 :1;
[; ;pic16f1938.h: 1036: };
[; ;pic16f1938.h: 1037: struct {
[; ;pic16f1938.h: 1038: unsigned T2CKPS :2;
[; ;pic16f1938.h: 1039: unsigned :1;
[; ;pic16f1938.h: 1040: unsigned T2OUTPS :4;
[; ;pic16f1938.h: 1041: };
[; ;pic16f1938.h: 1042: } T2CONbits_t;
[; ;pic16f1938.h: 1043: extern volatile T2CONbits_t T2CONbits @ 0x01C;
[; ;pic16f1938.h: 1092: extern volatile unsigned char CPSCON0 @ 0x01E;
"1094
[; ;pic16f1938.h: 1094: asm("CPSCON0 equ 01Eh");
[; <" CPSCON0 equ 01Eh ;# ">
[; ;pic16f1938.h: 1097: typedef union {
[; ;pic16f1938.h: 1098: struct {
[; ;pic16f1938.h: 1099: unsigned T0XCS :1;
[; ;pic16f1938.h: 1100: unsigned CPSOUT :1;
[; ;pic16f1938.h: 1101: unsigned CPSRNG0 :1;
[; ;pic16f1938.h: 1102: unsigned CPSRNG1 :1;
[; ;pic16f1938.h: 1103: unsigned :2;
[; ;pic16f1938.h: 1104: unsigned CPSRM :1;
[; ;pic16f1938.h: 1105: unsigned CPSON :1;
[; ;pic16f1938.h: 1106: };
[; ;pic16f1938.h: 1107: struct {
[; ;pic16f1938.h: 1108: unsigned :2;
[; ;pic16f1938.h: 1109: unsigned CPSRNG :2;
[; ;pic16f1938.h: 1110: };
[; ;pic16f1938.h: 1111: } CPSCON0bits_t;
[; ;pic16f1938.h: 1112: extern volatile CPSCON0bits_t CPSCON0bits @ 0x01E;
[; ;pic16f1938.h: 1151: extern volatile unsigned char CPSCON1 @ 0x01F;
"1153
[; ;pic16f1938.h: 1153: asm("CPSCON1 equ 01Fh");
[; <" CPSCON1 equ 01Fh ;# ">
[; ;pic16f1938.h: 1156: typedef union {
[; ;pic16f1938.h: 1157: struct {
[; ;pic16f1938.h: 1158: unsigned CPSCH0 :1;
[; ;pic16f1938.h: 1159: unsigned CPSCH1 :1;
[; ;pic16f1938.h: 1160: unsigned CPSCH2 :1;
[; ;pic16f1938.h: 1161: };
[; ;pic16f1938.h: 1162: struct {
[; ;pic16f1938.h: 1163: unsigned CPSCH :3;
[; ;pic16f1938.h: 1164: };
[; ;pic16f1938.h: 1165: } CPSCON1bits_t;
[; ;pic16f1938.h: 1166: extern volatile CPSCON1bits_t CPSCON1bits @ 0x01F;
[; ;pic16f1938.h: 1190: extern volatile unsigned char TRISA @ 0x08C;
"1192
[; ;pic16f1938.h: 1192: asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
[; ;pic16f1938.h: 1195: typedef union {
[; ;pic16f1938.h: 1196: struct {
[; ;pic16f1938.h: 1197: unsigned TRISA0 :1;
[; ;pic16f1938.h: 1198: unsigned TRISA1 :1;
[; ;pic16f1938.h: 1199: unsigned TRISA2 :1;
[; ;pic16f1938.h: 1200: unsigned TRISA3 :1;
[; ;pic16f1938.h: 1201: unsigned TRISA4 :1;
[; ;pic16f1938.h: 1202: unsigned TRISA5 :1;
[; ;pic16f1938.h: 1203: unsigned TRISA6 :1;
[; ;pic16f1938.h: 1204: unsigned TRISA7 :1;
[; ;pic16f1938.h: 1205: };
[; ;pic16f1938.h: 1206: } TRISAbits_t;
[; ;pic16f1938.h: 1207: extern volatile TRISAbits_t TRISAbits @ 0x08C;
[; ;pic16f1938.h: 1251: extern volatile unsigned char TRISB @ 0x08D;
"1253
[; ;pic16f1938.h: 1253: asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
[; ;pic16f1938.h: 1256: typedef union {
[; ;pic16f1938.h: 1257: struct {
[; ;pic16f1938.h: 1258: unsigned TRISB0 :1;
[; ;pic16f1938.h: 1259: unsigned TRISB1 :1;
[; ;pic16f1938.h: 1260: unsigned TRISB2 :1;
[; ;pic16f1938.h: 1261: unsigned TRISB3 :1;
[; ;pic16f1938.h: 1262: unsigned TRISB4 :1;
[; ;pic16f1938.h: 1263: unsigned TRISB5 :1;
[; ;pic16f1938.h: 1264: unsigned TRISB6 :1;
[; ;pic16f1938.h: 1265: unsigned TRISB7 :1;
[; ;pic16f1938.h: 1266: };
[; ;pic16f1938.h: 1267: } TRISBbits_t;
[; ;pic16f1938.h: 1268: extern volatile TRISBbits_t TRISBbits @ 0x08D;
[; ;pic16f1938.h: 1312: extern volatile unsigned char TRISC @ 0x08E;
"1314
[; ;pic16f1938.h: 1314: asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
[; ;pic16f1938.h: 1317: typedef union {
[; ;pic16f1938.h: 1318: struct {
[; ;pic16f1938.h: 1319: unsigned TRISC0 :1;
[; ;pic16f1938.h: 1320: unsigned TRISC1 :1;
[; ;pic16f1938.h: 1321: unsigned TRISC2 :1;
[; ;pic16f1938.h: 1322: unsigned TRISC3 :1;
[; ;pic16f1938.h: 1323: unsigned TRISC4 :1;
[; ;pic16f1938.h: 1324: unsigned TRISC5 :1;
[; ;pic16f1938.h: 1325: unsigned TRISC6 :1;
[; ;pic16f1938.h: 1326: unsigned TRISC7 :1;
[; ;pic16f1938.h: 1327: };
[; ;pic16f1938.h: 1328: } TRISCbits_t;
[; ;pic16f1938.h: 1329: extern volatile TRISCbits_t TRISCbits @ 0x08E;
[; ;pic16f1938.h: 1373: extern volatile unsigned char TRISE @ 0x090;
"1375
[; ;pic16f1938.h: 1375: asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
[; ;pic16f1938.h: 1378: typedef union {
[; ;pic16f1938.h: 1379: struct {
[; ;pic16f1938.h: 1380: unsigned :3;
[; ;pic16f1938.h: 1381: unsigned TRISE3 :1;
[; ;pic16f1938.h: 1382: };
[; ;pic16f1938.h: 1383: } TRISEbits_t;
[; ;pic16f1938.h: 1384: extern volatile TRISEbits_t TRISEbits @ 0x090;
[; ;pic16f1938.h: 1393: extern volatile unsigned char PIE1 @ 0x091;
"1395
[; ;pic16f1938.h: 1395: asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
[; ;pic16f1938.h: 1398: typedef union {
[; ;pic16f1938.h: 1399: struct {
[; ;pic16f1938.h: 1400: unsigned TMR1IE :1;
[; ;pic16f1938.h: 1401: unsigned TMR2IE :1;
[; ;pic16f1938.h: 1402: unsigned CCP1IE :1;
[; ;pic16f1938.h: 1403: unsigned SSPIE :1;
[; ;pic16f1938.h: 1404: unsigned TXIE :1;
[; ;pic16f1938.h: 1405: unsigned RCIE :1;
[; ;pic16f1938.h: 1406: unsigned ADIE :1;
[; ;pic16f1938.h: 1407: unsigned TMR1GIE :1;
[; ;pic16f1938.h: 1408: };
[; ;pic16f1938.h: 1409: } PIE1bits_t;
[; ;pic16f1938.h: 1410: extern volatile PIE1bits_t PIE1bits @ 0x091;
[; ;pic16f1938.h: 1454: extern volatile unsigned char PIE2 @ 0x092;
"1456
[; ;pic16f1938.h: 1456: asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
[; ;pic16f1938.h: 1459: typedef union {
[; ;pic16f1938.h: 1460: struct {
[; ;pic16f1938.h: 1461: unsigned CCP2IE :1;
[; ;pic16f1938.h: 1462: unsigned :1;
[; ;pic16f1938.h: 1463: unsigned LCDIE :1;
[; ;pic16f1938.h: 1464: unsigned BCLIE :1;
[; ;pic16f1938.h: 1465: unsigned EEIE :1;
[; ;pic16f1938.h: 1466: unsigned C1IE :1;
[; ;pic16f1938.h: 1467: unsigned C2IE :1;
[; ;pic16f1938.h: 1468: unsigned OSFIE :1;
[; ;pic16f1938.h: 1469: };
[; ;pic16f1938.h: 1470: } PIE2bits_t;
[; ;pic16f1938.h: 1471: extern volatile PIE2bits_t PIE2bits @ 0x092;
[; ;pic16f1938.h: 1510: extern volatile unsigned char PIE3 @ 0x093;
"1512
[; ;pic16f1938.h: 1512: asm("PIE3 equ 093h");
[; <" PIE3 equ 093h ;# ">
[; ;pic16f1938.h: 1515: typedef union {
[; ;pic16f1938.h: 1516: struct {
[; ;pic16f1938.h: 1517: unsigned :1;
[; ;pic16f1938.h: 1518: unsigned TMR4IE :1;
[; ;pic16f1938.h: 1519: unsigned :1;
[; ;pic16f1938.h: 1520: unsigned TMR6IE :1;
[; ;pic16f1938.h: 1521: unsigned CCP3IE :1;
[; ;pic16f1938.h: 1522: unsigned CCP4IE :1;
[; ;pic16f1938.h: 1523: unsigned CCP5IE :1;
[; ;pic16f1938.h: 1524: };
[; ;pic16f1938.h: 1525: } PIE3bits_t;
[; ;pic16f1938.h: 1526: extern volatile PIE3bits_t PIE3bits @ 0x093;
[; ;pic16f1938.h: 1555: extern volatile unsigned char OPTION_REG @ 0x095;
"1557
[; ;pic16f1938.h: 1557: asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
[; ;pic16f1938.h: 1560: typedef union {
[; ;pic16f1938.h: 1561: struct {
[; ;pic16f1938.h: 1562: unsigned PS0 :1;
[; ;pic16f1938.h: 1563: unsigned PS1 :1;
[; ;pic16f1938.h: 1564: unsigned PS2 :1;
[; ;pic16f1938.h: 1565: unsigned PSA :1;
[; ;pic16f1938.h: 1566: unsigned TMR0SE :1;
[; ;pic16f1938.h: 1567: unsigned TMR0CS :1;
[; ;pic16f1938.h: 1568: unsigned INTEDG :1;
[; ;pic16f1938.h: 1569: unsigned nWPUEN :1;
[; ;pic16f1938.h: 1570: };
[; ;pic16f1938.h: 1571: struct {
[; ;pic16f1938.h: 1572: unsigned PS :3;
[; ;pic16f1938.h: 1573: unsigned :1;
[; ;pic16f1938.h: 1574: unsigned T0SE :1;
[; ;pic16f1938.h: 1575: unsigned T0CS :1;
[; ;pic16f1938.h: 1576: };
[; ;pic16f1938.h: 1577: } OPTION_REGbits_t;
[; ;pic16f1938.h: 1578: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x095;
[; ;pic16f1938.h: 1637: extern volatile unsigned char PCON @ 0x096;
"1639
[; ;pic16f1938.h: 1639: asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
[; ;pic16f1938.h: 1642: typedef union {
[; ;pic16f1938.h: 1643: struct {
[; ;pic16f1938.h: 1644: unsigned nBOR :1;
[; ;pic16f1938.h: 1645: unsigned nPOR :1;
[; ;pic16f1938.h: 1646: unsigned nRI :1;
[; ;pic16f1938.h: 1647: unsigned nRMCLR :1;
[; ;pic16f1938.h: 1648: unsigned :2;
[; ;pic16f1938.h: 1649: unsigned STKUNF :1;
[; ;pic16f1938.h: 1650: unsigned STKOVF :1;
[; ;pic16f1938.h: 1651: };
[; ;pic16f1938.h: 1652: } PCONbits_t;
[; ;pic16f1938.h: 1653: extern volatile PCONbits_t PCONbits @ 0x096;
[; ;pic16f1938.h: 1687: extern volatile unsigned char WDTCON @ 0x097;
"1689
[; ;pic16f1938.h: 1689: asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
[; ;pic16f1938.h: 1692: typedef union {
[; ;pic16f1938.h: 1693: struct {
[; ;pic16f1938.h: 1694: unsigned SWDTEN :1;
[; ;pic16f1938.h: 1695: unsigned WDTPS0 :1;
[; ;pic16f1938.h: 1696: unsigned WDTPS1 :1;
[; ;pic16f1938.h: 1697: unsigned WDTPS2 :1;
[; ;pic16f1938.h: 1698: unsigned WDTPS3 :1;
[; ;pic16f1938.h: 1699: unsigned WDTPS4 :1;
[; ;pic16f1938.h: 1700: };
[; ;pic16f1938.h: 1701: struct {
[; ;pic16f1938.h: 1702: unsigned :1;
[; ;pic16f1938.h: 1703: unsigned WDTPS :5;
[; ;pic16f1938.h: 1704: };
[; ;pic16f1938.h: 1705: } WDTCONbits_t;
[; ;pic16f1938.h: 1706: extern volatile WDTCONbits_t WDTCONbits @ 0x097;
[; ;pic16f1938.h: 1745: extern volatile unsigned char OSCTUNE @ 0x098;
"1747
[; ;pic16f1938.h: 1747: asm("OSCTUNE equ 098h");
[; <" OSCTUNE equ 098h ;# ">
[; ;pic16f1938.h: 1750: typedef union {
[; ;pic16f1938.h: 1751: struct {
[; ;pic16f1938.h: 1752: unsigned TUN0 :1;
[; ;pic16f1938.h: 1753: unsigned TUN1 :1;
[; ;pic16f1938.h: 1754: unsigned TUN2 :1;
[; ;pic16f1938.h: 1755: unsigned TUN3 :1;
[; ;pic16f1938.h: 1756: unsigned TUN4 :1;
[; ;pic16f1938.h: 1757: unsigned TUN5 :1;
[; ;pic16f1938.h: 1758: };
[; ;pic16f1938.h: 1759: struct {
[; ;pic16f1938.h: 1760: unsigned TUN :6;
[; ;pic16f1938.h: 1761: };
[; ;pic16f1938.h: 1762: } OSCTUNEbits_t;
[; ;pic16f1938.h: 1763: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x098;
[; ;pic16f1938.h: 1802: extern volatile unsigned char OSCCON @ 0x099;
"1804
[; ;pic16f1938.h: 1804: asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
[; ;pic16f1938.h: 1807: typedef union {
[; ;pic16f1938.h: 1808: struct {
[; ;pic16f1938.h: 1809: unsigned SCS0 :1;
[; ;pic16f1938.h: 1810: unsigned SCS1 :1;
[; ;pic16f1938.h: 1811: unsigned :1;
[; ;pic16f1938.h: 1812: unsigned IRCF0 :1;
[; ;pic16f1938.h: 1813: unsigned IRCF1 :1;
[; ;pic16f1938.h: 1814: unsigned IRCF2 :1;
[; ;pic16f1938.h: 1815: unsigned IRCF3 :1;
[; ;pic16f1938.h: 1816: unsigned SPLLEN :1;
[; ;pic16f1938.h: 1817: };
[; ;pic16f1938.h: 1818: struct {
[; ;pic16f1938.h: 1819: unsigned SCS :2;
[; ;pic16f1938.h: 1820: unsigned :1;
[; ;pic16f1938.h: 1821: unsigned IRCF :4;
[; ;pic16f1938.h: 1822: };
[; ;pic16f1938.h: 1823: } OSCCONbits_t;
[; ;pic16f1938.h: 1824: extern volatile OSCCONbits_t OSCCONbits @ 0x099;
[; ;pic16f1938.h: 1873: extern volatile unsigned char OSCSTAT @ 0x09A;
"1875
[; ;pic16f1938.h: 1875: asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
[; ;pic16f1938.h: 1878: typedef union {
[; ;pic16f1938.h: 1879: struct {
[; ;pic16f1938.h: 1880: unsigned HFIOFS :1;
[; ;pic16f1938.h: 1881: unsigned LFIOFR :1;
[; ;pic16f1938.h: 1882: unsigned MFIOFR :1;
[; ;pic16f1938.h: 1883: unsigned HFIOFL :1;
[; ;pic16f1938.h: 1884: unsigned HFIOFR :1;
[; ;pic16f1938.h: 1885: unsigned OSTS :1;
[; ;pic16f1938.h: 1886: unsigned PLLR :1;
[; ;pic16f1938.h: 1887: unsigned T1OSCR :1;
[; ;pic16f1938.h: 1888: };
[; ;pic16f1938.h: 1889: } OSCSTATbits_t;
[; ;pic16f1938.h: 1890: extern volatile OSCSTATbits_t OSCSTATbits @ 0x09A;
[; ;pic16f1938.h: 1934: extern volatile unsigned short ADRES @ 0x09B;
"1936
[; ;pic16f1938.h: 1936: asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
[; ;pic16f1938.h: 1940: extern volatile unsigned char ADRESL @ 0x09B;
"1942
[; ;pic16f1938.h: 1942: asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
[; ;pic16f1938.h: 1945: typedef union {
[; ;pic16f1938.h: 1946: struct {
[; ;pic16f1938.h: 1947: unsigned ADRESL :8;
[; ;pic16f1938.h: 1948: };
[; ;pic16f1938.h: 1949: } ADRESLbits_t;
[; ;pic16f1938.h: 1950: extern volatile ADRESLbits_t ADRESLbits @ 0x09B;
[; ;pic16f1938.h: 1959: extern volatile unsigned char ADRESH @ 0x09C;
"1961
[; ;pic16f1938.h: 1961: asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
[; ;pic16f1938.h: 1964: typedef union {
[; ;pic16f1938.h: 1965: struct {
[; ;pic16f1938.h: 1966: unsigned ADRESH :8;
[; ;pic16f1938.h: 1967: };
[; ;pic16f1938.h: 1968: } ADRESHbits_t;
[; ;pic16f1938.h: 1969: extern volatile ADRESHbits_t ADRESHbits @ 0x09C;
[; ;pic16f1938.h: 1978: extern volatile unsigned char ADCON0 @ 0x09D;
"1980
[; ;pic16f1938.h: 1980: asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
[; ;pic16f1938.h: 1983: typedef union {
[; ;pic16f1938.h: 1984: struct {
[; ;pic16f1938.h: 1985: unsigned ADON :1;
[; ;pic16f1938.h: 1986: unsigned GO_nDONE :1;
[; ;pic16f1938.h: 1987: unsigned CHS0 :1;
[; ;pic16f1938.h: 1988: unsigned CHS1 :1;
[; ;pic16f1938.h: 1989: unsigned CHS2 :1;
[; ;pic16f1938.h: 1990: unsigned CHS3 :1;
[; ;pic16f1938.h: 1991: unsigned CHS4 :1;
[; ;pic16f1938.h: 1992: };
[; ;pic16f1938.h: 1993: struct {
[; ;pic16f1938.h: 1994: unsigned :1;
[; ;pic16f1938.h: 1995: unsigned ADGO :1;
[; ;pic16f1938.h: 1996: unsigned CHS :5;
[; ;pic16f1938.h: 1997: };
[; ;pic16f1938.h: 1998: struct {
[; ;pic16f1938.h: 1999: unsigned :1;
[; ;pic16f1938.h: 2000: unsigned GO :1;
[; ;pic16f1938.h: 2001: };
[; ;pic16f1938.h: 2002: struct {
[; ;pic16f1938.h: 2003: unsigned :1;
[; ;pic16f1938.h: 2004: unsigned nDONE :1;
[; ;pic16f1938.h: 2005: };
[; ;pic16f1938.h: 2006: } ADCON0bits_t;
[; ;pic16f1938.h: 2007: extern volatile ADCON0bits_t ADCON0bits @ 0x09D;
[; ;pic16f1938.h: 2066: extern volatile unsigned char ADCON1 @ 0x09E;
"2068
[; ;pic16f1938.h: 2068: asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
[; ;pic16f1938.h: 2071: typedef union {
[; ;pic16f1938.h: 2072: struct {
[; ;pic16f1938.h: 2073: unsigned ADPREF0 :1;
[; ;pic16f1938.h: 2074: unsigned ADPREF1 :1;
[; ;pic16f1938.h: 2075: unsigned ADNREF :1;
[; ;pic16f1938.h: 2076: unsigned :1;
[; ;pic16f1938.h: 2077: unsigned ADCS0 :1;
[; ;pic16f1938.h: 2078: unsigned ADCS1 :1;
[; ;pic16f1938.h: 2079: unsigned ADCS2 :1;
[; ;pic16f1938.h: 2080: unsigned ADFM :1;
[; ;pic16f1938.h: 2081: };
[; ;pic16f1938.h: 2082: struct {
[; ;pic16f1938.h: 2083: unsigned ADPREF :2;
[; ;pic16f1938.h: 2084: unsigned :2;
[; ;pic16f1938.h: 2085: unsigned ADCS :3;
[; ;pic16f1938.h: 2086: };
[; ;pic16f1938.h: 2087: } ADCON1bits_t;
[; ;pic16f1938.h: 2088: extern volatile ADCON1bits_t ADCON1bits @ 0x09E;
[; ;pic16f1938.h: 2137: extern volatile unsigned char LATA @ 0x10C;
"2139
[; ;pic16f1938.h: 2139: asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
[; ;pic16f1938.h: 2142: typedef union {
[; ;pic16f1938.h: 2143: struct {
[; ;pic16f1938.h: 2144: unsigned LATA0 :1;
[; ;pic16f1938.h: 2145: unsigned LATA1 :1;
[; ;pic16f1938.h: 2146: unsigned LATA2 :1;
[; ;pic16f1938.h: 2147: unsigned LATA3 :1;
[; ;pic16f1938.h: 2148: unsigned LATA4 :1;
[; ;pic16f1938.h: 2149: unsigned LATA5 :1;
[; ;pic16f1938.h: 2150: unsigned LATA6 :1;
[; ;pic16f1938.h: 2151: unsigned LATA7 :1;
[; ;pic16f1938.h: 2152: };
[; ;pic16f1938.h: 2153: } LATAbits_t;
[; ;pic16f1938.h: 2154: extern volatile LATAbits_t LATAbits @ 0x10C;
[; ;pic16f1938.h: 2198: extern volatile unsigned char LATB @ 0x10D;
"2200
[; ;pic16f1938.h: 2200: asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
[; ;pic16f1938.h: 2203: typedef union {
[; ;pic16f1938.h: 2204: struct {
[; ;pic16f1938.h: 2205: unsigned LATB0 :1;
[; ;pic16f1938.h: 2206: unsigned LATB1 :1;
[; ;pic16f1938.h: 2207: unsigned LATB2 :1;
[; ;pic16f1938.h: 2208: unsigned LATB3 :1;
[; ;pic16f1938.h: 2209: unsigned LATB4 :1;
[; ;pic16f1938.h: 2210: unsigned LATB5 :1;
[; ;pic16f1938.h: 2211: unsigned LATB6 :1;
[; ;pic16f1938.h: 2212: unsigned LATB7 :1;
[; ;pic16f1938.h: 2213: };
[; ;pic16f1938.h: 2214: } LATBbits_t;
[; ;pic16f1938.h: 2215: extern volatile LATBbits_t LATBbits @ 0x10D;
[; ;pic16f1938.h: 2259: extern volatile unsigned char LATC @ 0x10E;
"2261
[; ;pic16f1938.h: 2261: asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
[; ;pic16f1938.h: 2264: typedef union {
[; ;pic16f1938.h: 2265: struct {
[; ;pic16f1938.h: 2266: unsigned LATC0 :1;
[; ;pic16f1938.h: 2267: unsigned LATC1 :1;
[; ;pic16f1938.h: 2268: unsigned LATC2 :1;
[; ;pic16f1938.h: 2269: unsigned LATC3 :1;
[; ;pic16f1938.h: 2270: unsigned LATC4 :1;
[; ;pic16f1938.h: 2271: unsigned LATC5 :1;
[; ;pic16f1938.h: 2272: unsigned LATC6 :1;
[; ;pic16f1938.h: 2273: unsigned LATC7 :1;
[; ;pic16f1938.h: 2274: };
[; ;pic16f1938.h: 2275: } LATCbits_t;
[; ;pic16f1938.h: 2276: extern volatile LATCbits_t LATCbits @ 0x10E;
[; ;pic16f1938.h: 2320: extern volatile unsigned char LATE @ 0x110;
"2322
[; ;pic16f1938.h: 2322: asm("LATE equ 0110h");
[; <" LATE equ 0110h ;# ">
[; ;pic16f1938.h: 2325: typedef union {
[; ;pic16f1938.h: 2326: struct {
[; ;pic16f1938.h: 2327: unsigned :3;
[; ;pic16f1938.h: 2328: unsigned LATE3 :1;
[; ;pic16f1938.h: 2329: };
[; ;pic16f1938.h: 2330: } LATEbits_t;
[; ;pic16f1938.h: 2331: extern volatile LATEbits_t LATEbits @ 0x110;
[; ;pic16f1938.h: 2340: extern volatile unsigned char CM1CON0 @ 0x111;
"2342
[; ;pic16f1938.h: 2342: asm("CM1CON0 equ 0111h");
[; <" CM1CON0 equ 0111h ;# ">
[; ;pic16f1938.h: 2345: typedef union {
[; ;pic16f1938.h: 2346: struct {
[; ;pic16f1938.h: 2347: unsigned C1SYNC :1;
[; ;pic16f1938.h: 2348: unsigned C1HYS :1;
[; ;pic16f1938.h: 2349: unsigned C1SP :1;
[; ;pic16f1938.h: 2350: unsigned :1;
[; ;pic16f1938.h: 2351: unsigned C1POL :1;
[; ;pic16f1938.h: 2352: unsigned C1OE :1;
[; ;pic16f1938.h: 2353: unsigned C1OUT :1;
[; ;pic16f1938.h: 2354: unsigned C1ON :1;
[; ;pic16f1938.h: 2355: };
[; ;pic16f1938.h: 2356: } CM1CON0bits_t;
[; ;pic16f1938.h: 2357: extern volatile CM1CON0bits_t CM1CON0bits @ 0x111;
[; ;pic16f1938.h: 2396: extern volatile unsigned char CM1CON1 @ 0x112;
"2398
[; ;pic16f1938.h: 2398: asm("CM1CON1 equ 0112h");
[; <" CM1CON1 equ 0112h ;# ">
[; ;pic16f1938.h: 2401: typedef union {
[; ;pic16f1938.h: 2402: struct {
[; ;pic16f1938.h: 2403: unsigned C1NCH0 :1;
[; ;pic16f1938.h: 2404: unsigned C1NCH1 :1;
[; ;pic16f1938.h: 2405: unsigned :2;
[; ;pic16f1938.h: 2406: unsigned C1PCH0 :1;
[; ;pic16f1938.h: 2407: unsigned C1PCH1 :1;
[; ;pic16f1938.h: 2408: unsigned C1INTN :1;
[; ;pic16f1938.h: 2409: unsigned C1INTP :1;
[; ;pic16f1938.h: 2410: };
[; ;pic16f1938.h: 2411: struct {
[; ;pic16f1938.h: 2412: unsigned C1NCH :2;
[; ;pic16f1938.h: 2413: unsigned :2;
[; ;pic16f1938.h: 2414: unsigned C1PCH :2;
[; ;pic16f1938.h: 2415: };
[; ;pic16f1938.h: 2416: } CM1CON1bits_t;
[; ;pic16f1938.h: 2417: extern volatile CM1CON1bits_t CM1CON1bits @ 0x112;
[; ;pic16f1938.h: 2461: extern volatile unsigned char CM2CON0 @ 0x113;
"2463
[; ;pic16f1938.h: 2463: asm("CM2CON0 equ 0113h");
[; <" CM2CON0 equ 0113h ;# ">
[; ;pic16f1938.h: 2466: typedef union {
[; ;pic16f1938.h: 2467: struct {
[; ;pic16f1938.h: 2468: unsigned C2SYNC :1;
[; ;pic16f1938.h: 2469: unsigned C2HYS :1;
[; ;pic16f1938.h: 2470: unsigned C2SP :1;
[; ;pic16f1938.h: 2471: unsigned :1;
[; ;pic16f1938.h: 2472: unsigned C2POL :1;
[; ;pic16f1938.h: 2473: unsigned C2OE :1;
[; ;pic16f1938.h: 2474: unsigned C2OUT :1;
[; ;pic16f1938.h: 2475: unsigned C2ON :1;
[; ;pic16f1938.h: 2476: };
[; ;pic16f1938.h: 2477: } CM2CON0bits_t;
[; ;pic16f1938.h: 2478: extern volatile CM2CON0bits_t CM2CON0bits @ 0x113;
[; ;pic16f1938.h: 2517: extern volatile unsigned char CM2CON1 @ 0x114;
"2519
[; ;pic16f1938.h: 2519: asm("CM2CON1 equ 0114h");
[; <" CM2CON1 equ 0114h ;# ">
[; ;pic16f1938.h: 2522: typedef union {
[; ;pic16f1938.h: 2523: struct {
[; ;pic16f1938.h: 2524: unsigned C2NCH0 :1;
[; ;pic16f1938.h: 2525: unsigned C2NCH1 :1;
[; ;pic16f1938.h: 2526: unsigned :2;
[; ;pic16f1938.h: 2527: unsigned C2PCH0 :1;
[; ;pic16f1938.h: 2528: unsigned C2PCH1 :1;
[; ;pic16f1938.h: 2529: unsigned C2INTN :1;
[; ;pic16f1938.h: 2530: unsigned C2INTP :1;
[; ;pic16f1938.h: 2531: };
[; ;pic16f1938.h: 2532: struct {
[; ;pic16f1938.h: 2533: unsigned C2NCH :2;
[; ;pic16f1938.h: 2534: unsigned :2;
[; ;pic16f1938.h: 2535: unsigned C2PCH :2;
[; ;pic16f1938.h: 2536: };
[; ;pic16f1938.h: 2537: } CM2CON1bits_t;
[; ;pic16f1938.h: 2538: extern volatile CM2CON1bits_t CM2CON1bits @ 0x114;
[; ;pic16f1938.h: 2582: extern volatile unsigned char CMOUT @ 0x115;
"2584
[; ;pic16f1938.h: 2584: asm("CMOUT equ 0115h");
[; <" CMOUT equ 0115h ;# ">
[; ;pic16f1938.h: 2587: typedef union {
[; ;pic16f1938.h: 2588: struct {
[; ;pic16f1938.h: 2589: unsigned MC1OUT :1;
[; ;pic16f1938.h: 2590: unsigned MC2OUT :1;
[; ;pic16f1938.h: 2591: };
[; ;pic16f1938.h: 2592: } CMOUTbits_t;
[; ;pic16f1938.h: 2593: extern volatile CMOUTbits_t CMOUTbits @ 0x115;
[; ;pic16f1938.h: 2607: extern volatile unsigned char BORCON @ 0x116;
"2609
[; ;pic16f1938.h: 2609: asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
[; ;pic16f1938.h: 2612: typedef union {
[; ;pic16f1938.h: 2613: struct {
[; ;pic16f1938.h: 2614: unsigned BORRDY :1;
[; ;pic16f1938.h: 2615: unsigned :6;
[; ;pic16f1938.h: 2616: unsigned SBOREN :1;
[; ;pic16f1938.h: 2617: };
[; ;pic16f1938.h: 2618: } BORCONbits_t;
[; ;pic16f1938.h: 2619: extern volatile BORCONbits_t BORCONbits @ 0x116;
[; ;pic16f1938.h: 2633: extern volatile unsigned char FVRCON @ 0x117;
"2635
[; ;pic16f1938.h: 2635: asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
[; ;pic16f1938.h: 2638: typedef union {
[; ;pic16f1938.h: 2639: struct {
[; ;pic16f1938.h: 2640: unsigned ADFVR0 :1;
[; ;pic16f1938.h: 2641: unsigned ADFVR1 :1;
[; ;pic16f1938.h: 2642: unsigned CDAFVR0 :1;
[; ;pic16f1938.h: 2643: unsigned CDAFVR1 :1;
[; ;pic16f1938.h: 2644: unsigned TSRNG :1;
[; ;pic16f1938.h: 2645: unsigned TSEN :1;
[; ;pic16f1938.h: 2646: unsigned FVRRDY :1;
[; ;pic16f1938.h: 2647: unsigned FVREN :1;
[; ;pic16f1938.h: 2648: };
[; ;pic16f1938.h: 2649: struct {
[; ;pic16f1938.h: 2650: unsigned ADFVR :2;
[; ;pic16f1938.h: 2651: unsigned CDAFVR :2;
[; ;pic16f1938.h: 2652: };
[; ;pic16f1938.h: 2653: } FVRCONbits_t;
[; ;pic16f1938.h: 2654: extern volatile FVRCONbits_t FVRCONbits @ 0x117;
[; ;pic16f1938.h: 2708: extern volatile unsigned char DACCON0 @ 0x118;
"2710
[; ;pic16f1938.h: 2710: asm("DACCON0 equ 0118h");
[; <" DACCON0 equ 0118h ;# ">
[; ;pic16f1938.h: 2713: typedef union {
[; ;pic16f1938.h: 2714: struct {
[; ;pic16f1938.h: 2715: unsigned DACNSS :1;
[; ;pic16f1938.h: 2716: unsigned :1;
[; ;pic16f1938.h: 2717: unsigned DACPSS0 :1;
[; ;pic16f1938.h: 2718: unsigned DACPSS1 :1;
[; ;pic16f1938.h: 2719: unsigned :1;
[; ;pic16f1938.h: 2720: unsigned DACOE :1;
[; ;pic16f1938.h: 2721: unsigned DACLPS :1;
[; ;pic16f1938.h: 2722: unsigned DACEN :1;
[; ;pic16f1938.h: 2723: };
[; ;pic16f1938.h: 2724: struct {
[; ;pic16f1938.h: 2725: unsigned :2;
[; ;pic16f1938.h: 2726: unsigned DACPSS :2;
[; ;pic16f1938.h: 2727: };
[; ;pic16f1938.h: 2728: } DACCON0bits_t;
[; ;pic16f1938.h: 2729: extern volatile DACCON0bits_t DACCON0bits @ 0x118;
[; ;pic16f1938.h: 2768: extern volatile unsigned char DACCON1 @ 0x119;
"2770
[; ;pic16f1938.h: 2770: asm("DACCON1 equ 0119h");
[; <" DACCON1 equ 0119h ;# ">
[; ;pic16f1938.h: 2773: typedef union {
[; ;pic16f1938.h: 2774: struct {
[; ;pic16f1938.h: 2775: unsigned DACR0 :1;
[; ;pic16f1938.h: 2776: unsigned DACR1 :1;
[; ;pic16f1938.h: 2777: unsigned DACR2 :1;
[; ;pic16f1938.h: 2778: unsigned DACR3 :1;
[; ;pic16f1938.h: 2779: unsigned DACR4 :1;
[; ;pic16f1938.h: 2780: };
[; ;pic16f1938.h: 2781: struct {
[; ;pic16f1938.h: 2782: unsigned DACR :5;
[; ;pic16f1938.h: 2783: };
[; ;pic16f1938.h: 2784: } DACCON1bits_t;
[; ;pic16f1938.h: 2785: extern volatile DACCON1bits_t DACCON1bits @ 0x119;
[; ;pic16f1938.h: 2819: extern volatile unsigned char SRCON0 @ 0x11A;
"2821
[; ;pic16f1938.h: 2821: asm("SRCON0 equ 011Ah");
[; <" SRCON0 equ 011Ah ;# ">
[; ;pic16f1938.h: 2824: typedef union {
[; ;pic16f1938.h: 2825: struct {
[; ;pic16f1938.h: 2826: unsigned SRPR :1;
[; ;pic16f1938.h: 2827: unsigned SRPS :1;
[; ;pic16f1938.h: 2828: unsigned SRNQEN :1;
[; ;pic16f1938.h: 2829: unsigned SRQEN :1;
[; ;pic16f1938.h: 2830: unsigned SRCLK0 :1;
[; ;pic16f1938.h: 2831: unsigned SRCLK1 :1;
[; ;pic16f1938.h: 2832: unsigned SRCLK2 :1;
[; ;pic16f1938.h: 2833: unsigned SRLEN :1;
[; ;pic16f1938.h: 2834: };
[; ;pic16f1938.h: 2835: struct {
[; ;pic16f1938.h: 2836: unsigned :4;
[; ;pic16f1938.h: 2837: unsigned SRCLK :3;
[; ;pic16f1938.h: 2838: };
[; ;pic16f1938.h: 2839: } SRCON0bits_t;
[; ;pic16f1938.h: 2840: extern volatile SRCON0bits_t SRCON0bits @ 0x11A;
[; ;pic16f1938.h: 2889: extern volatile unsigned char SRCON1 @ 0x11B;
"2891
[; ;pic16f1938.h: 2891: asm("SRCON1 equ 011Bh");
[; <" SRCON1 equ 011Bh ;# ">
[; ;pic16f1938.h: 2894: typedef union {
[; ;pic16f1938.h: 2895: struct {
[; ;pic16f1938.h: 2896: unsigned SRRC1E :1;
[; ;pic16f1938.h: 2897: unsigned SRRC2E :1;
[; ;pic16f1938.h: 2898: unsigned SRRCKE :1;
[; ;pic16f1938.h: 2899: unsigned SRRPE :1;
[; ;pic16f1938.h: 2900: unsigned SRSC1E :1;
[; ;pic16f1938.h: 2901: unsigned SRSC2E :1;
[; ;pic16f1938.h: 2902: unsigned SRSCKE :1;
[; ;pic16f1938.h: 2903: unsigned SRSPE :1;
[; ;pic16f1938.h: 2904: };
[; ;pic16f1938.h: 2905: } SRCON1bits_t;
[; ;pic16f1938.h: 2906: extern volatile SRCON1bits_t SRCON1bits @ 0x11B;
[; ;pic16f1938.h: 2950: extern volatile unsigned char APFCON @ 0x11D;
"2952
[; ;pic16f1938.h: 2952: asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
[; ;pic16f1938.h: 2955: typedef union {
[; ;pic16f1938.h: 2956: struct {
[; ;pic16f1938.h: 2957: unsigned CCP2SEL :1;
[; ;pic16f1938.h: 2958: unsigned SSSEL :1;
[; ;pic16f1938.h: 2959: unsigned C2OUTSEL :1;
[; ;pic16f1938.h: 2960: unsigned SRNQSEL :1;
[; ;pic16f1938.h: 2961: unsigned P2BSEL :1;
[; ;pic16f1938.h: 2962: unsigned T1GSEL :1;
[; ;pic16f1938.h: 2963: unsigned CCP3SEL :1;
[; ;pic16f1938.h: 2964: };
[; ;pic16f1938.h: 2965: } APFCONbits_t;
[; ;pic16f1938.h: 2966: extern volatile APFCONbits_t APFCONbits @ 0x11D;
[; ;pic16f1938.h: 3005: extern volatile unsigned char ANSELA @ 0x18C;
"3007
[; ;pic16f1938.h: 3007: asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
[; ;pic16f1938.h: 3010: typedef union {
[; ;pic16f1938.h: 3011: struct {
[; ;pic16f1938.h: 3012: unsigned ANSA0 :1;
[; ;pic16f1938.h: 3013: unsigned ANSA1 :1;
[; ;pic16f1938.h: 3014: unsigned ANSA2 :1;
[; ;pic16f1938.h: 3015: unsigned ANSA3 :1;
[; ;pic16f1938.h: 3016: unsigned ANSA4 :1;
[; ;pic16f1938.h: 3017: unsigned ANSA5 :1;
[; ;pic16f1938.h: 3018: };
[; ;pic16f1938.h: 3019: struct {
[; ;pic16f1938.h: 3020: unsigned ANSELA :6;
[; ;pic16f1938.h: 3021: };
[; ;pic16f1938.h: 3022: } ANSELAbits_t;
[; ;pic16f1938.h: 3023: extern volatile ANSELAbits_t ANSELAbits @ 0x18C;
[; ;pic16f1938.h: 3062: extern volatile unsigned char ANSELB @ 0x18D;
"3064
[; ;pic16f1938.h: 3064: asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
[; ;pic16f1938.h: 3067: typedef union {
[; ;pic16f1938.h: 3068: struct {
[; ;pic16f1938.h: 3069: unsigned ANSB0 :1;
[; ;pic16f1938.h: 3070: unsigned ANSB1 :1;
[; ;pic16f1938.h: 3071: unsigned ANSB2 :1;
[; ;pic16f1938.h: 3072: unsigned ANSB3 :1;
[; ;pic16f1938.h: 3073: unsigned ANSB4 :1;
[; ;pic16f1938.h: 3074: unsigned ANSB5 :1;
[; ;pic16f1938.h: 3075: };
[; ;pic16f1938.h: 3076: struct {
[; ;pic16f1938.h: 3077: unsigned ANSELB :6;
[; ;pic16f1938.h: 3078: };
[; ;pic16f1938.h: 3079: } ANSELBbits_t;
[; ;pic16f1938.h: 3080: extern volatile ANSELBbits_t ANSELBbits @ 0x18D;
[; ;pic16f1938.h: 3119: extern volatile unsigned short EEADR @ 0x191;
"3121
[; ;pic16f1938.h: 3121: asm("EEADR equ 0191h");
[; <" EEADR equ 0191h ;# ">
[; ;pic16f1938.h: 3125: extern volatile unsigned char EEADRL @ 0x191;
"3127
[; ;pic16f1938.h: 3127: asm("EEADRL equ 0191h");
[; <" EEADRL equ 0191h ;# ">
[; ;pic16f1938.h: 3130: typedef union {
[; ;pic16f1938.h: 3131: struct {
[; ;pic16f1938.h: 3132: unsigned EEADRL :8;
[; ;pic16f1938.h: 3133: };
[; ;pic16f1938.h: 3134: } EEADRLbits_t;
[; ;pic16f1938.h: 3135: extern volatile EEADRLbits_t EEADRLbits @ 0x191;
[; ;pic16f1938.h: 3144: extern volatile unsigned char EEADRH @ 0x192;
"3146
[; ;pic16f1938.h: 3146: asm("EEADRH equ 0192h");
[; <" EEADRH equ 0192h ;# ">
[; ;pic16f1938.h: 3149: typedef union {
[; ;pic16f1938.h: 3150: struct {
[; ;pic16f1938.h: 3151: unsigned EEADRH :7;
[; ;pic16f1938.h: 3152: };
[; ;pic16f1938.h: 3153: } EEADRHbits_t;
[; ;pic16f1938.h: 3154: extern volatile EEADRHbits_t EEADRHbits @ 0x192;
[; ;pic16f1938.h: 3163: extern volatile unsigned short EEDAT @ 0x193;
"3165
[; ;pic16f1938.h: 3165: asm("EEDAT equ 0193h");
[; <" EEDAT equ 0193h ;# ">
[; ;pic16f1938.h: 3169: extern volatile unsigned char EEDATL @ 0x193;
"3171
[; ;pic16f1938.h: 3171: asm("EEDATL equ 0193h");
[; <" EEDATL equ 0193h ;# ">
[; ;pic16f1938.h: 3174: extern volatile unsigned char EEDATA @ 0x193;
"3176
[; ;pic16f1938.h: 3176: asm("EEDATA equ 0193h");
[; <" EEDATA equ 0193h ;# ">
[; ;pic16f1938.h: 3179: typedef union {
[; ;pic16f1938.h: 3180: struct {
[; ;pic16f1938.h: 3181: unsigned EEDATL :8;
[; ;pic16f1938.h: 3182: };
[; ;pic16f1938.h: 3183: } EEDATLbits_t;
[; ;pic16f1938.h: 3184: extern volatile EEDATLbits_t EEDATLbits @ 0x193;
[; ;pic16f1938.h: 3192: typedef union {
[; ;pic16f1938.h: 3193: struct {
[; ;pic16f1938.h: 3194: unsigned EEDATL :8;
[; ;pic16f1938.h: 3195: };
[; ;pic16f1938.h: 3196: } EEDATAbits_t;
[; ;pic16f1938.h: 3197: extern volatile EEDATAbits_t EEDATAbits @ 0x193;
[; ;pic16f1938.h: 3206: extern volatile unsigned char EEDATH @ 0x194;
"3208
[; ;pic16f1938.h: 3208: asm("EEDATH equ 0194h");
[; <" EEDATH equ 0194h ;# ">
[; ;pic16f1938.h: 3211: typedef union {
[; ;pic16f1938.h: 3212: struct {
[; ;pic16f1938.h: 3213: unsigned EEDATH :6;
[; ;pic16f1938.h: 3214: };
[; ;pic16f1938.h: 3215: } EEDATHbits_t;
[; ;pic16f1938.h: 3216: extern volatile EEDATHbits_t EEDATHbits @ 0x194;
[; ;pic16f1938.h: 3225: extern volatile unsigned char EECON1 @ 0x195;
"3227
[; ;pic16f1938.h: 3227: asm("EECON1 equ 0195h");
[; <" EECON1 equ 0195h ;# ">
[; ;pic16f1938.h: 3230: typedef union {
[; ;pic16f1938.h: 3231: struct {
[; ;pic16f1938.h: 3232: unsigned RD :1;
[; ;pic16f1938.h: 3233: unsigned WR :1;
[; ;pic16f1938.h: 3234: unsigned WREN :1;
[; ;pic16f1938.h: 3235: unsigned WRERR :1;
[; ;pic16f1938.h: 3236: unsigned FREE :1;
[; ;pic16f1938.h: 3237: unsigned LWLO :1;
[; ;pic16f1938.h: 3238: unsigned CFGS :1;
[; ;pic16f1938.h: 3239: unsigned EEPGD :1;
[; ;pic16f1938.h: 3240: };
[; ;pic16f1938.h: 3241: } EECON1bits_t;
[; ;pic16f1938.h: 3242: extern volatile EECON1bits_t EECON1bits @ 0x195;
[; ;pic16f1938.h: 3286: extern volatile unsigned char EECON2 @ 0x196;
"3288
[; ;pic16f1938.h: 3288: asm("EECON2 equ 0196h");
[; <" EECON2 equ 0196h ;# ">
[; ;pic16f1938.h: 3291: typedef union {
[; ;pic16f1938.h: 3292: struct {
[; ;pic16f1938.h: 3293: unsigned EECON2 :8;
[; ;pic16f1938.h: 3294: };
[; ;pic16f1938.h: 3295: } EECON2bits_t;
[; ;pic16f1938.h: 3296: extern volatile EECON2bits_t EECON2bits @ 0x196;
[; ;pic16f1938.h: 3305: extern volatile unsigned char RCREG @ 0x199;
"3307
[; ;pic16f1938.h: 3307: asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
[; ;pic16f1938.h: 3310: typedef union {
[; ;pic16f1938.h: 3311: struct {
[; ;pic16f1938.h: 3312: unsigned RCREG :8;
[; ;pic16f1938.h: 3313: };
[; ;pic16f1938.h: 3314: } RCREGbits_t;
[; ;pic16f1938.h: 3315: extern volatile RCREGbits_t RCREGbits @ 0x199;
[; ;pic16f1938.h: 3324: extern volatile unsigned char TXREG @ 0x19A;
"3326
[; ;pic16f1938.h: 3326: asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
[; ;pic16f1938.h: 3329: typedef union {
[; ;pic16f1938.h: 3330: struct {
[; ;pic16f1938.h: 3331: unsigned TXREG :8;
[; ;pic16f1938.h: 3332: };
[; ;pic16f1938.h: 3333: } TXREGbits_t;
[; ;pic16f1938.h: 3334: extern volatile TXREGbits_t TXREGbits @ 0x19A;
[; ;pic16f1938.h: 3343: extern volatile unsigned short SP1BRG @ 0x19B;
"3345
[; ;pic16f1938.h: 3345: asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
[; ;pic16f1938.h: 3349: extern volatile unsigned char SP1BRGL @ 0x19B;
"3351
[; ;pic16f1938.h: 3351: asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
[; ;pic16f1938.h: 3354: extern volatile unsigned char SPBRG @ 0x19B;
"3356
[; ;pic16f1938.h: 3356: asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
[; ;pic16f1938.h: 3358: extern volatile unsigned char SPBRGL @ 0x19B;
"3360
[; ;pic16f1938.h: 3360: asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
[; ;pic16f1938.h: 3363: typedef union {
[; ;pic16f1938.h: 3364: struct {
[; ;pic16f1938.h: 3365: unsigned SPBRGL :8;
[; ;pic16f1938.h: 3366: };
[; ;pic16f1938.h: 3367: } SP1BRGLbits_t;
[; ;pic16f1938.h: 3368: extern volatile SP1BRGLbits_t SP1BRGLbits @ 0x19B;
[; ;pic16f1938.h: 3376: typedef union {
[; ;pic16f1938.h: 3377: struct {
[; ;pic16f1938.h: 3378: unsigned SPBRGL :8;
[; ;pic16f1938.h: 3379: };
[; ;pic16f1938.h: 3380: } SPBRGbits_t;
[; ;pic16f1938.h: 3381: extern volatile SPBRGbits_t SPBRGbits @ 0x19B;
[; ;pic16f1938.h: 3388: typedef union {
[; ;pic16f1938.h: 3389: struct {
[; ;pic16f1938.h: 3390: unsigned SPBRGL :8;
[; ;pic16f1938.h: 3391: };
[; ;pic16f1938.h: 3392: } SPBRGLbits_t;
[; ;pic16f1938.h: 3393: extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;
[; ;pic16f1938.h: 3402: extern volatile unsigned char SP1BRGH @ 0x19C;
"3404
[; ;pic16f1938.h: 3404: asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
[; ;pic16f1938.h: 3407: extern volatile unsigned char SPBRGH @ 0x19C;
"3409
[; ;pic16f1938.h: 3409: asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
[; ;pic16f1938.h: 3412: typedef union {
[; ;pic16f1938.h: 3413: struct {
[; ;pic16f1938.h: 3414: unsigned SPBRGH :8;
[; ;pic16f1938.h: 3415: };
[; ;pic16f1938.h: 3416: } SP1BRGHbits_t;
[; ;pic16f1938.h: 3417: extern volatile SP1BRGHbits_t SP1BRGHbits @ 0x19C;
[; ;pic16f1938.h: 3425: typedef union {
[; ;pic16f1938.h: 3426: struct {
[; ;pic16f1938.h: 3427: unsigned SPBRGH :8;
[; ;pic16f1938.h: 3428: };
[; ;pic16f1938.h: 3429: } SPBRGHbits_t;
[; ;pic16f1938.h: 3430: extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;
[; ;pic16f1938.h: 3439: extern volatile unsigned char RCSTA @ 0x19D;
"3441
[; ;pic16f1938.h: 3441: asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
[; ;pic16f1938.h: 3444: typedef union {
[; ;pic16f1938.h: 3445: struct {
[; ;pic16f1938.h: 3446: unsigned RX9D :1;
[; ;pic16f1938.h: 3447: unsigned OERR :1;
[; ;pic16f1938.h: 3448: unsigned FERR :1;
[; ;pic16f1938.h: 3449: unsigned ADDEN :1;
[; ;pic16f1938.h: 3450: unsigned CREN :1;
[; ;pic16f1938.h: 3451: unsigned SREN :1;
[; ;pic16f1938.h: 3452: unsigned RX9 :1;
[; ;pic16f1938.h: 3453: unsigned SPEN :1;
[; ;pic16f1938.h: 3454: };
[; ;pic16f1938.h: 3455: } RCSTAbits_t;
[; ;pic16f1938.h: 3456: extern volatile RCSTAbits_t RCSTAbits @ 0x19D;
[; ;pic16f1938.h: 3500: extern volatile unsigned char TXSTA @ 0x19E;
"3502
[; ;pic16f1938.h: 3502: asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
[; ;pic16f1938.h: 3505: typedef union {
[; ;pic16f1938.h: 3506: struct {
[; ;pic16f1938.h: 3507: unsigned TX9D :1;
[; ;pic16f1938.h: 3508: unsigned TRMT :1;
[; ;pic16f1938.h: 3509: unsigned BRGH :1;
[; ;pic16f1938.h: 3510: unsigned SENDB :1;
[; ;pic16f1938.h: 3511: unsigned SYNC :1;
[; ;pic16f1938.h: 3512: unsigned TXEN :1;
[; ;pic16f1938.h: 3513: unsigned TX9 :1;
[; ;pic16f1938.h: 3514: unsigned CSRC :1;
[; ;pic16f1938.h: 3515: };
[; ;pic16f1938.h: 3516: } TXSTAbits_t;
[; ;pic16f1938.h: 3517: extern volatile TXSTAbits_t TXSTAbits @ 0x19E;
[; ;pic16f1938.h: 3561: extern volatile unsigned char BAUDCON @ 0x19F;
"3563
[; ;pic16f1938.h: 3563: asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
[; ;pic16f1938.h: 3566: typedef union {
[; ;pic16f1938.h: 3567: struct {
[; ;pic16f1938.h: 3568: unsigned ABDEN :1;
[; ;pic16f1938.h: 3569: unsigned WUE :1;
[; ;pic16f1938.h: 3570: unsigned :1;
[; ;pic16f1938.h: 3571: unsigned BRG16 :1;
[; ;pic16f1938.h: 3572: unsigned SCKP :1;
[; ;pic16f1938.h: 3573: unsigned :1;
[; ;pic16f1938.h: 3574: unsigned RCIDL :1;
[; ;pic16f1938.h: 3575: unsigned ABDOVF :1;
[; ;pic16f1938.h: 3576: };
[; ;pic16f1938.h: 3577: } BAUDCONbits_t;
[; ;pic16f1938.h: 3578: extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;
[; ;pic16f1938.h: 3612: extern volatile unsigned char WPUB @ 0x20D;
"3614
[; ;pic16f1938.h: 3614: asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
[; ;pic16f1938.h: 3617: typedef union {
[; ;pic16f1938.h: 3618: struct {
[; ;pic16f1938.h: 3619: unsigned WPUB0 :1;
[; ;pic16f1938.h: 3620: unsigned WPUB1 :1;
[; ;pic16f1938.h: 3621: unsigned WPUB2 :1;
[; ;pic16f1938.h: 3622: unsigned WPUB3 :1;
[; ;pic16f1938.h: 3623: unsigned WPUB4 :1;
[; ;pic16f1938.h: 3624: unsigned WPUB5 :1;
[; ;pic16f1938.h: 3625: unsigned WPUB6 :1;
[; ;pic16f1938.h: 3626: unsigned WPUB7 :1;
[; ;pic16f1938.h: 3627: };
[; ;pic16f1938.h: 3628: struct {
[; ;pic16f1938.h: 3629: unsigned WPUB :8;
[; ;pic16f1938.h: 3630: };
[; ;pic16f1938.h: 3631: } WPUBbits_t;
[; ;pic16f1938.h: 3632: extern volatile WPUBbits_t WPUBbits @ 0x20D;
[; ;pic16f1938.h: 3681: extern volatile unsigned char WPUE @ 0x210;
"3683
[; ;pic16f1938.h: 3683: asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
[; ;pic16f1938.h: 3686: typedef union {
[; ;pic16f1938.h: 3687: struct {
[; ;pic16f1938.h: 3688: unsigned :3;
[; ;pic16f1938.h: 3689: unsigned WPUE3 :1;
[; ;pic16f1938.h: 3690: };
[; ;pic16f1938.h: 3691: } WPUEbits_t;
[; ;pic16f1938.h: 3692: extern volatile WPUEbits_t WPUEbits @ 0x210;
[; ;pic16f1938.h: 3701: extern volatile unsigned char SSPBUF @ 0x211;
"3703
[; ;pic16f1938.h: 3703: asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
[; ;pic16f1938.h: 3706: typedef union {
[; ;pic16f1938.h: 3707: struct {
[; ;pic16f1938.h: 3708: unsigned SSPBUF :8;
[; ;pic16f1938.h: 3709: };
[; ;pic16f1938.h: 3710: } SSPBUFbits_t;
[; ;pic16f1938.h: 3711: extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;
[; ;pic16f1938.h: 3720: extern volatile unsigned char SSPADD @ 0x212;
"3722
[; ;pic16f1938.h: 3722: asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
[; ;pic16f1938.h: 3725: typedef union {
[; ;pic16f1938.h: 3726: struct {
[; ;pic16f1938.h: 3727: unsigned SSPADD :8;
[; ;pic16f1938.h: 3728: };
[; ;pic16f1938.h: 3729: } SSPADDbits_t;
[; ;pic16f1938.h: 3730: extern volatile SSPADDbits_t SSPADDbits @ 0x212;
[; ;pic16f1938.h: 3739: extern volatile unsigned char SSPMSK @ 0x213;
"3741
[; ;pic16f1938.h: 3741: asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
[; ;pic16f1938.h: 3744: typedef union {
[; ;pic16f1938.h: 3745: struct {
[; ;pic16f1938.h: 3746: unsigned SSPMSK :8;
[; ;pic16f1938.h: 3747: };
[; ;pic16f1938.h: 3748: } SSPMSKbits_t;
[; ;pic16f1938.h: 3749: extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;
[; ;pic16f1938.h: 3758: extern volatile unsigned char SSPSTAT @ 0x214;
"3760
[; ;pic16f1938.h: 3760: asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
[; ;pic16f1938.h: 3763: typedef union {
[; ;pic16f1938.h: 3764: struct {
[; ;pic16f1938.h: 3765: unsigned BF :1;
[; ;pic16f1938.h: 3766: unsigned UA :1;
[; ;pic16f1938.h: 3767: unsigned R_nW :1;
[; ;pic16f1938.h: 3768: unsigned S :1;
[; ;pic16f1938.h: 3769: unsigned P :1;
[; ;pic16f1938.h: 3770: unsigned D_nA :1;
[; ;pic16f1938.h: 3771: unsigned CKE :1;
[; ;pic16f1938.h: 3772: unsigned SMP :1;
[; ;pic16f1938.h: 3773: };
[; ;pic16f1938.h: 3774: } SSPSTATbits_t;
[; ;pic16f1938.h: 3775: extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;
[; ;pic16f1938.h: 3819: extern volatile unsigned char SSPCON1 @ 0x215;
"3821
[; ;pic16f1938.h: 3821: asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
[; ;pic16f1938.h: 3824: extern volatile unsigned char SSPCON @ 0x215;
"3826
[; ;pic16f1938.h: 3826: asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
[; ;pic16f1938.h: 3829: typedef union {
[; ;pic16f1938.h: 3830: struct {
[; ;pic16f1938.h: 3831: unsigned SSPM0 :1;
[; ;pic16f1938.h: 3832: unsigned SSPM1 :1;
[; ;pic16f1938.h: 3833: unsigned SSPM2 :1;
[; ;pic16f1938.h: 3834: unsigned SSPM3 :1;
[; ;pic16f1938.h: 3835: unsigned CKP :1;
[; ;pic16f1938.h: 3836: unsigned SSPEN :1;
[; ;pic16f1938.h: 3837: unsigned SSPOV :1;
[; ;pic16f1938.h: 3838: unsigned WCOL :1;
[; ;pic16f1938.h: 3839: };
[; ;pic16f1938.h: 3840: } SSPCON1bits_t;
[; ;pic16f1938.h: 3841: extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;
[; ;pic16f1938.h: 3884: typedef union {
[; ;pic16f1938.h: 3885: struct {
[; ;pic16f1938.h: 3886: unsigned SSPM0 :1;
[; ;pic16f1938.h: 3887: unsigned SSPM1 :1;
[; ;pic16f1938.h: 3888: unsigned SSPM2 :1;
[; ;pic16f1938.h: 3889: unsigned SSPM3 :1;
[; ;pic16f1938.h: 3890: unsigned CKP :1;
[; ;pic16f1938.h: 3891: unsigned SSPEN :1;
[; ;pic16f1938.h: 3892: unsigned SSPOV :1;
[; ;pic16f1938.h: 3893: unsigned WCOL :1;
[; ;pic16f1938.h: 3894: };
[; ;pic16f1938.h: 3895: } SSPCONbits_t;
[; ;pic16f1938.h: 3896: extern volatile SSPCONbits_t SSPCONbits @ 0x215;
[; ;pic16f1938.h: 3940: extern volatile unsigned char SSPCON2 @ 0x216;
"3942
[; ;pic16f1938.h: 3942: asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
[; ;pic16f1938.h: 3945: typedef union {
[; ;pic16f1938.h: 3946: struct {
[; ;pic16f1938.h: 3947: unsigned SEN :1;
[; ;pic16f1938.h: 3948: unsigned RSEN :1;
[; ;pic16f1938.h: 3949: unsigned PEN :1;
[; ;pic16f1938.h: 3950: unsigned RCEN :1;
[; ;pic16f1938.h: 3951: unsigned ACKEN :1;
[; ;pic16f1938.h: 3952: unsigned ACKDT :1;
[; ;pic16f1938.h: 3953: unsigned ACKSTAT :1;
[; ;pic16f1938.h: 3954: unsigned GCEN :1;
[; ;pic16f1938.h: 3955: };
[; ;pic16f1938.h: 3956: } SSPCON2bits_t;
[; ;pic16f1938.h: 3957: extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;
[; ;pic16f1938.h: 4001: extern volatile unsigned char SSPCON3 @ 0x217;
"4003
[; ;pic16f1938.h: 4003: asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
[; ;pic16f1938.h: 4006: typedef union {
[; ;pic16f1938.h: 4007: struct {
[; ;pic16f1938.h: 4008: unsigned DHEN :1;
[; ;pic16f1938.h: 4009: unsigned AHEN :1;
[; ;pic16f1938.h: 4010: unsigned SBCDE :1;
[; ;pic16f1938.h: 4011: unsigned SDAHT :1;
[; ;pic16f1938.h: 4012: unsigned BOEN :1;
[; ;pic16f1938.h: 4013: unsigned SCIE :1;
[; ;pic16f1938.h: 4014: unsigned PCIE :1;
[; ;pic16f1938.h: 4015: unsigned ACKTIM :1;
[; ;pic16f1938.h: 4016: };
[; ;pic16f1938.h: 4017: } SSPCON3bits_t;
[; ;pic16f1938.h: 4018: extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;
[; ;pic16f1938.h: 4062: extern volatile unsigned short CCPR1 @ 0x291;
"4064
[; ;pic16f1938.h: 4064: asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
[; ;pic16f1938.h: 4068: extern volatile unsigned char CCPR1L @ 0x291;
"4070
[; ;pic16f1938.h: 4070: asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
[; ;pic16f1938.h: 4073: typedef union {
[; ;pic16f1938.h: 4074: struct {
[; ;pic16f1938.h: 4075: unsigned CCPR1L :8;
[; ;pic16f1938.h: 4076: };
[; ;pic16f1938.h: 4077: } CCPR1Lbits_t;
[; ;pic16f1938.h: 4078: extern volatile CCPR1Lbits_t CCPR1Lbits @ 0x291;
[; ;pic16f1938.h: 4087: extern volatile unsigned char CCPR1H @ 0x292;
"4089
[; ;pic16f1938.h: 4089: asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
[; ;pic16f1938.h: 4092: typedef union {
[; ;pic16f1938.h: 4093: struct {
[; ;pic16f1938.h: 4094: unsigned CCPR1H :8;
[; ;pic16f1938.h: 4095: };
[; ;pic16f1938.h: 4096: } CCPR1Hbits_t;
[; ;pic16f1938.h: 4097: extern volatile CCPR1Hbits_t CCPR1Hbits @ 0x292;
[; ;pic16f1938.h: 4106: extern volatile unsigned char CCP1CON @ 0x293;
"4108
[; ;pic16f1938.h: 4108: asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
[; ;pic16f1938.h: 4111: typedef union {
[; ;pic16f1938.h: 4112: struct {
[; ;pic16f1938.h: 4113: unsigned CCP1M0 :1;
[; ;pic16f1938.h: 4114: unsigned CCP1M1 :1;
[; ;pic16f1938.h: 4115: unsigned CCP1M2 :1;
[; ;pic16f1938.h: 4116: unsigned CCP1M3 :1;
[; ;pic16f1938.h: 4117: unsigned DC1B0 :1;
[; ;pic16f1938.h: 4118: unsigned DC1B1 :1;
[; ;pic16f1938.h: 4119: unsigned P1M0 :1;
[; ;pic16f1938.h: 4120: unsigned P1M1 :1;
[; ;pic16f1938.h: 4121: };
[; ;pic16f1938.h: 4122: struct {
[; ;pic16f1938.h: 4123: unsigned CCP1M :4;
[; ;pic16f1938.h: 4124: unsigned DC1B :2;
[; ;pic16f1938.h: 4125: unsigned P1M :2;
[; ;pic16f1938.h: 4126: };
[; ;pic16f1938.h: 4127: } CCP1CONbits_t;
[; ;pic16f1938.h: 4128: extern volatile CCP1CONbits_t CCP1CONbits @ 0x293;
[; ;pic16f1938.h: 4187: extern volatile unsigned char PWM1CON @ 0x294;
"4189
[; ;pic16f1938.h: 4189: asm("PWM1CON equ 0294h");
[; <" PWM1CON equ 0294h ;# ">
[; ;pic16f1938.h: 4192: typedef union {
[; ;pic16f1938.h: 4193: struct {
[; ;pic16f1938.h: 4194: unsigned P1DC0 :1;
[; ;pic16f1938.h: 4195: unsigned P1DC1 :1;
[; ;pic16f1938.h: 4196: unsigned P1DC2 :1;
[; ;pic16f1938.h: 4197: unsigned P1DC3 :1;
[; ;pic16f1938.h: 4198: unsigned P1DC4 :1;
[; ;pic16f1938.h: 4199: unsigned P1DC5 :1;
[; ;pic16f1938.h: 4200: unsigned P1DC6 :1;
[; ;pic16f1938.h: 4201: unsigned P1RSEN :1;
[; ;pic16f1938.h: 4202: };
[; ;pic16f1938.h: 4203: struct {
[; ;pic16f1938.h: 4204: unsigned P1DC :6;
[; ;pic16f1938.h: 4205: };
[; ;pic16f1938.h: 4206: } PWM1CONbits_t;
[; ;pic16f1938.h: 4207: extern volatile PWM1CONbits_t PWM1CONbits @ 0x294;
[; ;pic16f1938.h: 4251: extern volatile unsigned char CCP1AS @ 0x295;
"4253
[; ;pic16f1938.h: 4253: asm("CCP1AS equ 0295h");
[; <" CCP1AS equ 0295h ;# ">
[; ;pic16f1938.h: 4256: extern volatile unsigned char ECCP1AS @ 0x295;
"4258
[; ;pic16f1938.h: 4258: asm("ECCP1AS equ 0295h");
[; <" ECCP1AS equ 0295h ;# ">
[; ;pic16f1938.h: 4261: typedef union {
[; ;pic16f1938.h: 4262: struct {
[; ;pic16f1938.h: 4263: unsigned PSS1BD0 :1;
[; ;pic16f1938.h: 4264: unsigned PSS1BD1 :1;
[; ;pic16f1938.h: 4265: unsigned PSS1AC0 :1;
[; ;pic16f1938.h: 4266: unsigned PSS1AC1 :1;
[; ;pic16f1938.h: 4267: unsigned CCP1AS0 :1;
[; ;pic16f1938.h: 4268: unsigned CCP1AS1 :1;
[; ;pic16f1938.h: 4269: unsigned CCP1AS2 :1;
[; ;pic16f1938.h: 4270: unsigned CCP1ASE :1;
[; ;pic16f1938.h: 4271: };
[; ;pic16f1938.h: 4272: } CCP1ASbits_t;
[; ;pic16f1938.h: 4273: extern volatile CCP1ASbits_t CCP1ASbits @ 0x295;
[; ;pic16f1938.h: 4316: typedef union {
[; ;pic16f1938.h: 4317: struct {
[; ;pic16f1938.h: 4318: unsigned PSS1BD0 :1;
[; ;pic16f1938.h: 4319: unsigned PSS1BD1 :1;
[; ;pic16f1938.h: 4320: unsigned PSS1AC0 :1;
[; ;pic16f1938.h: 4321: unsigned PSS1AC1 :1;
[; ;pic16f1938.h: 4322: unsigned CCP1AS0 :1;
[; ;pic16f1938.h: 4323: unsigned CCP1AS1 :1;
[; ;pic16f1938.h: 4324: unsigned CCP1AS2 :1;
[; ;pic16f1938.h: 4325: unsigned CCP1ASE :1;
[; ;pic16f1938.h: 4326: };
[; ;pic16f1938.h: 4327: } ECCP1ASbits_t;
[; ;pic16f1938.h: 4328: extern volatile ECCP1ASbits_t ECCP1ASbits @ 0x295;
[; ;pic16f1938.h: 4372: extern volatile unsigned char PSTR1CON @ 0x296;
"4374
[; ;pic16f1938.h: 4374: asm("PSTR1CON equ 0296h");
[; <" PSTR1CON equ 0296h ;# ">
[; ;pic16f1938.h: 4377: typedef union {
[; ;pic16f1938.h: 4378: struct {
[; ;pic16f1938.h: 4379: unsigned STR1A :1;
[; ;pic16f1938.h: 4380: unsigned STR1B :1;
[; ;pic16f1938.h: 4381: unsigned STR1C :1;
[; ;pic16f1938.h: 4382: unsigned STR1D :1;
[; ;pic16f1938.h: 4383: unsigned STR1SYNC :1;
[; ;pic16f1938.h: 4384: };
[; ;pic16f1938.h: 4385: } PSTR1CONbits_t;
[; ;pic16f1938.h: 4386: extern volatile PSTR1CONbits_t PSTR1CONbits @ 0x296;
[; ;pic16f1938.h: 4415: extern volatile unsigned short CCPR2 @ 0x298;
"4417
[; ;pic16f1938.h: 4417: asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
[; ;pic16f1938.h: 4421: extern volatile unsigned char CCPR2L @ 0x298;
"4423
[; ;pic16f1938.h: 4423: asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
[; ;pic16f1938.h: 4426: typedef union {
[; ;pic16f1938.h: 4427: struct {
[; ;pic16f1938.h: 4428: unsigned CCPR2L :8;
[; ;pic16f1938.h: 4429: };
[; ;pic16f1938.h: 4430: } CCPR2Lbits_t;
[; ;pic16f1938.h: 4431: extern volatile CCPR2Lbits_t CCPR2Lbits @ 0x298;
[; ;pic16f1938.h: 4440: extern volatile unsigned char CCPR2H @ 0x299;
"4442
[; ;pic16f1938.h: 4442: asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
[; ;pic16f1938.h: 4445: typedef union {
[; ;pic16f1938.h: 4446: struct {
[; ;pic16f1938.h: 4447: unsigned CCPR2H :8;
[; ;pic16f1938.h: 4448: };
[; ;pic16f1938.h: 4449: } CCPR2Hbits_t;
[; ;pic16f1938.h: 4450: extern volatile CCPR2Hbits_t CCPR2Hbits @ 0x299;
[; ;pic16f1938.h: 4459: extern volatile unsigned char CCP2CON @ 0x29A;
"4461
[; ;pic16f1938.h: 4461: asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
[; ;pic16f1938.h: 4464: typedef union {
[; ;pic16f1938.h: 4465: struct {
[; ;pic16f1938.h: 4466: unsigned CCP2M0 :1;
[; ;pic16f1938.h: 4467: unsigned CCP2M1 :1;
[; ;pic16f1938.h: 4468: unsigned CCP2M2 :1;
[; ;pic16f1938.h: 4469: unsigned CCP2M3 :1;
[; ;pic16f1938.h: 4470: unsigned DC2B0 :1;
[; ;pic16f1938.h: 4471: unsigned DC2B1 :1;
[; ;pic16f1938.h: 4472: unsigned P2M0 :1;
[; ;pic16f1938.h: 4473: unsigned P2M1 :1;
[; ;pic16f1938.h: 4474: };
[; ;pic16f1938.h: 4475: struct {
[; ;pic16f1938.h: 4476: unsigned CCP2M :4;
[; ;pic16f1938.h: 4477: unsigned DC2B :2;
[; ;pic16f1938.h: 4478: unsigned P2M :2;
[; ;pic16f1938.h: 4479: };
[; ;pic16f1938.h: 4480: } CCP2CONbits_t;
[; ;pic16f1938.h: 4481: extern volatile CCP2CONbits_t CCP2CONbits @ 0x29A;
[; ;pic16f1938.h: 4540: extern volatile unsigned char PWM2CON @ 0x29B;
"4542
[; ;pic16f1938.h: 4542: asm("PWM2CON equ 029Bh");
[; <" PWM2CON equ 029Bh ;# ">
[; ;pic16f1938.h: 4545: typedef union {
[; ;pic16f1938.h: 4546: struct {
[; ;pic16f1938.h: 4547: unsigned P2DC0 :1;
[; ;pic16f1938.h: 4548: unsigned P2DC1 :1;
[; ;pic16f1938.h: 4549: unsigned P2DC2 :1;
[; ;pic16f1938.h: 4550: unsigned P2DC3 :1;
[; ;pic16f1938.h: 4551: unsigned P2DC4 :1;
[; ;pic16f1938.h: 4552: unsigned P2DC5 :1;
[; ;pic16f1938.h: 4553: unsigned P2DC6 :1;
[; ;pic16f1938.h: 4554: unsigned P2RSEN :1;
[; ;pic16f1938.h: 4555: };
[; ;pic16f1938.h: 4556: } PWM2CONbits_t;
[; ;pic16f1938.h: 4557: extern volatile PWM2CONbits_t PWM2CONbits @ 0x29B;
[; ;pic16f1938.h: 4601: extern volatile unsigned char CCP2AS @ 0x29C;
"4603
[; ;pic16f1938.h: 4603: asm("CCP2AS equ 029Ch");
[; <" CCP2AS equ 029Ch ;# ">
[; ;pic16f1938.h: 4606: extern volatile unsigned char ECCP2AS @ 0x29C;
"4608
[; ;pic16f1938.h: 4608: asm("ECCP2AS equ 029Ch");
[; <" ECCP2AS equ 029Ch ;# ">
[; ;pic16f1938.h: 4611: typedef union {
[; ;pic16f1938.h: 4612: struct {
[; ;pic16f1938.h: 4613: unsigned PSS2BD0 :1;
[; ;pic16f1938.h: 4614: unsigned PSS2BD1 :1;
[; ;pic16f1938.h: 4615: unsigned PSS2AC0 :1;
[; ;pic16f1938.h: 4616: unsigned PSS2AC1 :1;
[; ;pic16f1938.h: 4617: unsigned CCP2AS0 :1;
[; ;pic16f1938.h: 4618: unsigned CCP2AS1 :1;
[; ;pic16f1938.h: 4619: unsigned CCP2AS2 :1;
[; ;pic16f1938.h: 4620: unsigned CCP2ASE :1;
[; ;pic16f1938.h: 4621: };
[; ;pic16f1938.h: 4622: } CCP2ASbits_t;
[; ;pic16f1938.h: 4623: extern volatile CCP2ASbits_t CCP2ASbits @ 0x29C;
[; ;pic16f1938.h: 4666: typedef union {
[; ;pic16f1938.h: 4667: struct {
[; ;pic16f1938.h: 4668: unsigned PSS2BD0 :1;
[; ;pic16f1938.h: 4669: unsigned PSS2BD1 :1;
[; ;pic16f1938.h: 4670: unsigned PSS2AC0 :1;
[; ;pic16f1938.h: 4671: unsigned PSS2AC1 :1;
[; ;pic16f1938.h: 4672: unsigned CCP2AS0 :1;
[; ;pic16f1938.h: 4673: unsigned CCP2AS1 :1;
[; ;pic16f1938.h: 4674: unsigned CCP2AS2 :1;
[; ;pic16f1938.h: 4675: unsigned CCP2ASE :1;
[; ;pic16f1938.h: 4676: };
[; ;pic16f1938.h: 4677: } ECCP2ASbits_t;
[; ;pic16f1938.h: 4678: extern volatile ECCP2ASbits_t ECCP2ASbits @ 0x29C;
[; ;pic16f1938.h: 4722: extern volatile unsigned char PSTR2CON @ 0x29D;
"4724
[; ;pic16f1938.h: 4724: asm("PSTR2CON equ 029Dh");
[; <" PSTR2CON equ 029Dh ;# ">
[; ;pic16f1938.h: 4727: typedef union {
[; ;pic16f1938.h: 4728: struct {
[; ;pic16f1938.h: 4729: unsigned STR2A :1;
[; ;pic16f1938.h: 4730: unsigned STR2B :1;
[; ;pic16f1938.h: 4731: unsigned STR2C :1;
[; ;pic16f1938.h: 4732: unsigned STR2D :1;
[; ;pic16f1938.h: 4733: unsigned STR2SYNC :1;
[; ;pic16f1938.h: 4734: };
[; ;pic16f1938.h: 4735: } PSTR2CONbits_t;
[; ;pic16f1938.h: 4736: extern volatile PSTR2CONbits_t PSTR2CONbits @ 0x29D;
[; ;pic16f1938.h: 4765: extern volatile unsigned char CCPTMRS0 @ 0x29E;
"4767
[; ;pic16f1938.h: 4767: asm("CCPTMRS0 equ 029Eh");
[; <" CCPTMRS0 equ 029Eh ;# ">
[; ;pic16f1938.h: 4770: typedef union {
[; ;pic16f1938.h: 4771: struct {
[; ;pic16f1938.h: 4772: unsigned C1TSEL0 :1;
[; ;pic16f1938.h: 4773: unsigned C1TSEL1 :1;
[; ;pic16f1938.h: 4774: unsigned C2TSEL0 :1;
[; ;pic16f1938.h: 4775: unsigned C2TSEL1 :1;
[; ;pic16f1938.h: 4776: unsigned C3TSEL0 :1;
[; ;pic16f1938.h: 4777: unsigned C3TSEL1 :1;
[; ;pic16f1938.h: 4778: unsigned C4TSEL0 :1;
[; ;pic16f1938.h: 4779: unsigned C4TSEL1 :1;
[; ;pic16f1938.h: 4780: };
[; ;pic16f1938.h: 4781: struct {
[; ;pic16f1938.h: 4782: unsigned C1TSEL :2;
[; ;pic16f1938.h: 4783: unsigned C2TSEL :2;
[; ;pic16f1938.h: 4784: unsigned C3TSEL :2;
[; ;pic16f1938.h: 4785: unsigned C4TSEL :2;
[; ;pic16f1938.h: 4786: };
[; ;pic16f1938.h: 4787: } CCPTMRS0bits_t;
[; ;pic16f1938.h: 4788: extern volatile CCPTMRS0bits_t CCPTMRS0bits @ 0x29E;
[; ;pic16f1938.h: 4852: extern volatile unsigned char CCPTMRS1 @ 0x29F;
"4854
[; ;pic16f1938.h: 4854: asm("CCPTMRS1 equ 029Fh");
[; <" CCPTMRS1 equ 029Fh ;# ">
[; ;pic16f1938.h: 4857: typedef union {
[; ;pic16f1938.h: 4858: struct {
[; ;pic16f1938.h: 4859: unsigned C5TSEL0 :1;
[; ;pic16f1938.h: 4860: unsigned C5TSEL1 :1;
[; ;pic16f1938.h: 4861: };
[; ;pic16f1938.h: 4862: struct {
[; ;pic16f1938.h: 4863: unsigned C5TSEL :2;
[; ;pic16f1938.h: 4864: };
[; ;pic16f1938.h: 4865: } CCPTMRS1bits_t;
[; ;pic16f1938.h: 4866: extern volatile CCPTMRS1bits_t CCPTMRS1bits @ 0x29F;
[; ;pic16f1938.h: 4885: extern volatile unsigned short CCPR3 @ 0x311;
"4887
[; ;pic16f1938.h: 4887: asm("CCPR3 equ 0311h");
[; <" CCPR3 equ 0311h ;# ">
[; ;pic16f1938.h: 4891: extern volatile unsigned char CCPR3L @ 0x311;
"4893
[; ;pic16f1938.h: 4893: asm("CCPR3L equ 0311h");
[; <" CCPR3L equ 0311h ;# ">
[; ;pic16f1938.h: 4896: typedef union {
[; ;pic16f1938.h: 4897: struct {
[; ;pic16f1938.h: 4898: unsigned CCPR3L :8;
[; ;pic16f1938.h: 4899: };
[; ;pic16f1938.h: 4900: } CCPR3Lbits_t;
[; ;pic16f1938.h: 4901: extern volatile CCPR3Lbits_t CCPR3Lbits @ 0x311;
[; ;pic16f1938.h: 4910: extern volatile unsigned char CCPR3H @ 0x312;
"4912
[; ;pic16f1938.h: 4912: asm("CCPR3H equ 0312h");
[; <" CCPR3H equ 0312h ;# ">
[; ;pic16f1938.h: 4915: typedef union {
[; ;pic16f1938.h: 4916: struct {
[; ;pic16f1938.h: 4917: unsigned CCPR3H :8;
[; ;pic16f1938.h: 4918: };
[; ;pic16f1938.h: 4919: } CCPR3Hbits_t;
[; ;pic16f1938.h: 4920: extern volatile CCPR3Hbits_t CCPR3Hbits @ 0x312;
[; ;pic16f1938.h: 4929: extern volatile unsigned char CCP3CON @ 0x313;
"4931
[; ;pic16f1938.h: 4931: asm("CCP3CON equ 0313h");
[; <" CCP3CON equ 0313h ;# ">
[; ;pic16f1938.h: 4934: typedef union {
[; ;pic16f1938.h: 4935: struct {
[; ;pic16f1938.h: 4936: unsigned CCP3M0 :1;
[; ;pic16f1938.h: 4937: unsigned CCP3M1 :1;
[; ;pic16f1938.h: 4938: unsigned CCP3M2 :1;
[; ;pic16f1938.h: 4939: unsigned CCP3M3 :1;
[; ;pic16f1938.h: 4940: unsigned DC3B0 :1;
[; ;pic16f1938.h: 4941: unsigned DC3B1 :1;
[; ;pic16f1938.h: 4942: unsigned P3M0 :1;
[; ;pic16f1938.h: 4943: unsigned P3M1 :1;
[; ;pic16f1938.h: 4944: };
[; ;pic16f1938.h: 4945: struct {
[; ;pic16f1938.h: 4946: unsigned CCP3M :4;
[; ;pic16f1938.h: 4947: unsigned DC3B :2;
[; ;pic16f1938.h: 4948: unsigned P3M :2;
[; ;pic16f1938.h: 4949: };
[; ;pic16f1938.h: 4950: } CCP3CONbits_t;
[; ;pic16f1938.h: 4951: extern volatile CCP3CONbits_t CCP3CONbits @ 0x313;
[; ;pic16f1938.h: 4995: extern volatile unsigned char PWM3CON @ 0x314;
"4997
[; ;pic16f1938.h: 4997: asm("PWM3CON equ 0314h");
[; <" PWM3CON equ 0314h ;# ">
[; ;pic16f1938.h: 5000: typedef union {
[; ;pic16f1938.h: 5001: struct {
[; ;pic16f1938.h: 5002: unsigned P3DC0 :1;
[; ;pic16f1938.h: 5003: unsigned P3DC1 :1;
[; ;pic16f1938.h: 5004: unsigned P3DC2 :1;
[; ;pic16f1938.h: 5005: unsigned P3DC3 :1;
[; ;pic16f1938.h: 5006: unsigned P3DC4 :1;
[; ;pic16f1938.h: 5007: unsigned P3DC5 :1;
[; ;pic16f1938.h: 5008: unsigned P3DC6 :1;
[; ;pic16f1938.h: 5009: unsigned P3RSEN :1;
[; ;pic16f1938.h: 5010: };
[; ;pic16f1938.h: 5011: } PWM3CONbits_t;
[; ;pic16f1938.h: 5012: extern volatile PWM3CONbits_t PWM3CONbits @ 0x314;
[; ;pic16f1938.h: 5056: extern volatile unsigned char CCP3AS @ 0x315;
"5058
[; ;pic16f1938.h: 5058: asm("CCP3AS equ 0315h");
[; <" CCP3AS equ 0315h ;# ">
[; ;pic16f1938.h: 5061: extern volatile unsigned char ECCP3AS @ 0x315;
"5063
[; ;pic16f1938.h: 5063: asm("ECCP3AS equ 0315h");
[; <" ECCP3AS equ 0315h ;# ">
[; ;pic16f1938.h: 5066: typedef union {
[; ;pic16f1938.h: 5067: struct {
[; ;pic16f1938.h: 5068: unsigned PSS3BD0 :1;
[; ;pic16f1938.h: 5069: unsigned PSS3BD1 :1;
[; ;pic16f1938.h: 5070: unsigned PSS3AC0 :1;
[; ;pic16f1938.h: 5071: unsigned PSS3AC1 :1;
[; ;pic16f1938.h: 5072: unsigned CCP3AS0 :1;
[; ;pic16f1938.h: 5073: unsigned CCP3AS1 :1;
[; ;pic16f1938.h: 5074: unsigned CCP3AS2 :1;
[; ;pic16f1938.h: 5075: unsigned CCP3ASE :1;
[; ;pic16f1938.h: 5076: };
[; ;pic16f1938.h: 5077: } CCP3ASbits_t;
[; ;pic16f1938.h: 5078: extern volatile CCP3ASbits_t CCP3ASbits @ 0x315;
[; ;pic16f1938.h: 5121: typedef union {
[; ;pic16f1938.h: 5122: struct {
[; ;pic16f1938.h: 5123: unsigned PSS3BD0 :1;
[; ;pic16f1938.h: 5124: unsigned PSS3BD1 :1;
[; ;pic16f1938.h: 5125: unsigned PSS3AC0 :1;
[; ;pic16f1938.h: 5126: unsigned PSS3AC1 :1;
[; ;pic16f1938.h: 5127: unsigned CCP3AS0 :1;
[; ;pic16f1938.h: 5128: unsigned CCP3AS1 :1;
[; ;pic16f1938.h: 5129: unsigned CCP3AS2 :1;
[; ;pic16f1938.h: 5130: unsigned CCP3ASE :1;
[; ;pic16f1938.h: 5131: };
[; ;pic16f1938.h: 5132: } ECCP3ASbits_t;
[; ;pic16f1938.h: 5133: extern volatile ECCP3ASbits_t ECCP3ASbits @ 0x315;
[; ;pic16f1938.h: 5177: extern volatile unsigned char PSTR3CON @ 0x316;
"5179
[; ;pic16f1938.h: 5179: asm("PSTR3CON equ 0316h");
[; <" PSTR3CON equ 0316h ;# ">
[; ;pic16f1938.h: 5182: typedef union {
[; ;pic16f1938.h: 5183: struct {
[; ;pic16f1938.h: 5184: unsigned STR3A :1;
[; ;pic16f1938.h: 5185: unsigned STR3B :1;
[; ;pic16f1938.h: 5186: unsigned STR3C :1;
[; ;pic16f1938.h: 5187: unsigned STR3D :1;
[; ;pic16f1938.h: 5188: unsigned STR3SYNC :1;
[; ;pic16f1938.h: 5189: };
[; ;pic16f1938.h: 5190: } PSTR3CONbits_t;
[; ;pic16f1938.h: 5191: extern volatile PSTR3CONbits_t PSTR3CONbits @ 0x316;
[; ;pic16f1938.h: 5220: extern volatile unsigned short CCPR4 @ 0x318;
"5222
[; ;pic16f1938.h: 5222: asm("CCPR4 equ 0318h");
[; <" CCPR4 equ 0318h ;# ">
[; ;pic16f1938.h: 5226: extern volatile unsigned char CCPR4L @ 0x318;
"5228
[; ;pic16f1938.h: 5228: asm("CCPR4L equ 0318h");
[; <" CCPR4L equ 0318h ;# ">
[; ;pic16f1938.h: 5231: typedef union {
[; ;pic16f1938.h: 5232: struct {
[; ;pic16f1938.h: 5233: unsigned CCPR4L :8;
[; ;pic16f1938.h: 5234: };
[; ;pic16f1938.h: 5235: } CCPR4Lbits_t;
[; ;pic16f1938.h: 5236: extern volatile CCPR4Lbits_t CCPR4Lbits @ 0x318;
[; ;pic16f1938.h: 5245: extern volatile unsigned char CCPR4H @ 0x319;
"5247
[; ;pic16f1938.h: 5247: asm("CCPR4H equ 0319h");
[; <" CCPR4H equ 0319h ;# ">
[; ;pic16f1938.h: 5250: typedef union {
[; ;pic16f1938.h: 5251: struct {
[; ;pic16f1938.h: 5252: unsigned CCPR4H :8;
[; ;pic16f1938.h: 5253: };
[; ;pic16f1938.h: 5254: } CCPR4Hbits_t;
[; ;pic16f1938.h: 5255: extern volatile CCPR4Hbits_t CCPR4Hbits @ 0x319;
[; ;pic16f1938.h: 5264: extern volatile unsigned char CCP4CON @ 0x31A;
"5266
[; ;pic16f1938.h: 5266: asm("CCP4CON equ 031Ah");
[; <" CCP4CON equ 031Ah ;# ">
[; ;pic16f1938.h: 5269: typedef union {
[; ;pic16f1938.h: 5270: struct {
[; ;pic16f1938.h: 5271: unsigned CCP4M0 :1;
[; ;pic16f1938.h: 5272: unsigned CCP4M1 :1;
[; ;pic16f1938.h: 5273: unsigned CCP4M2 :1;
[; ;pic16f1938.h: 5274: unsigned CCP4M3 :1;
[; ;pic16f1938.h: 5275: unsigned DC4B0 :1;
[; ;pic16f1938.h: 5276: unsigned DC4B1 :1;
[; ;pic16f1938.h: 5277: };
[; ;pic16f1938.h: 5278: } CCP4CONbits_t;
[; ;pic16f1938.h: 5279: extern volatile CCP4CONbits_t CCP4CONbits @ 0x31A;
[; ;pic16f1938.h: 5313: extern volatile unsigned short CCPR5 @ 0x31C;
"5315
[; ;pic16f1938.h: 5315: asm("CCPR5 equ 031Ch");
[; <" CCPR5 equ 031Ch ;# ">
[; ;pic16f1938.h: 5319: extern volatile unsigned char CCPR5L @ 0x31C;
"5321
[; ;pic16f1938.h: 5321: asm("CCPR5L equ 031Ch");
[; <" CCPR5L equ 031Ch ;# ">
[; ;pic16f1938.h: 5324: typedef union {
[; ;pic16f1938.h: 5325: struct {
[; ;pic16f1938.h: 5326: unsigned CCPR5L :8;
[; ;pic16f1938.h: 5327: };
[; ;pic16f1938.h: 5328: } CCPR5Lbits_t;
[; ;pic16f1938.h: 5329: extern volatile CCPR5Lbits_t CCPR5Lbits @ 0x31C;
[; ;pic16f1938.h: 5338: extern volatile unsigned char CCPR5H @ 0x31D;
"5340
[; ;pic16f1938.h: 5340: asm("CCPR5H equ 031Dh");
[; <" CCPR5H equ 031Dh ;# ">
[; ;pic16f1938.h: 5343: typedef union {
[; ;pic16f1938.h: 5344: struct {
[; ;pic16f1938.h: 5345: unsigned CCPR5H :8;
[; ;pic16f1938.h: 5346: };
[; ;pic16f1938.h: 5347: } CCPR5Hbits_t;
[; ;pic16f1938.h: 5348: extern volatile CCPR5Hbits_t CCPR5Hbits @ 0x31D;
[; ;pic16f1938.h: 5357: extern volatile unsigned char CCP5CON @ 0x31E;
"5359
[; ;pic16f1938.h: 5359: asm("CCP5CON equ 031Eh");
[; <" CCP5CON equ 031Eh ;# ">
[; ;pic16f1938.h: 5362: typedef union {
[; ;pic16f1938.h: 5363: struct {
[; ;pic16f1938.h: 5364: unsigned CCP5M0 :1;
[; ;pic16f1938.h: 5365: unsigned CCP5M1 :1;
[; ;pic16f1938.h: 5366: unsigned CCP5M2 :1;
[; ;pic16f1938.h: 5367: unsigned CCP5M3 :1;
[; ;pic16f1938.h: 5368: unsigned DC5B0 :1;
[; ;pic16f1938.h: 5369: unsigned DC5B1 :1;
[; ;pic16f1938.h: 5370: };
[; ;pic16f1938.h: 5371: struct {
[; ;pic16f1938.h: 5372: unsigned CCP5M :4;
[; ;pic16f1938.h: 5373: unsigned DC5B :2;
[; ;pic16f1938.h: 5374: unsigned P5M :2;
[; ;pic16f1938.h: 5375: };
[; ;pic16f1938.h: 5376: } CCP5CONbits_t;
[; ;pic16f1938.h: 5377: extern volatile CCP5CONbits_t CCP5CONbits @ 0x31E;
[; ;pic16f1938.h: 5411: extern volatile unsigned char IOCBP @ 0x394;
"5413
[; ;pic16f1938.h: 5413: asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
[; ;pic16f1938.h: 5416: typedef union {
[; ;pic16f1938.h: 5417: struct {
[; ;pic16f1938.h: 5418: unsigned IOCBP0 :1;
[; ;pic16f1938.h: 5419: unsigned IOCBP1 :1;
[; ;pic16f1938.h: 5420: unsigned IOCBP2 :1;
[; ;pic16f1938.h: 5421: unsigned IOCBP3 :1;
[; ;pic16f1938.h: 5422: unsigned IOCBP4 :1;
[; ;pic16f1938.h: 5423: unsigned IOCBP5 :1;
[; ;pic16f1938.h: 5424: unsigned IOCBP6 :1;
[; ;pic16f1938.h: 5425: unsigned IOCBP7 :1;
[; ;pic16f1938.h: 5426: };
[; ;pic16f1938.h: 5427: struct {
[; ;pic16f1938.h: 5428: unsigned IOCBP :8;
[; ;pic16f1938.h: 5429: };
[; ;pic16f1938.h: 5430: } IOCBPbits_t;
[; ;pic16f1938.h: 5431: extern volatile IOCBPbits_t IOCBPbits @ 0x394;
[; ;pic16f1938.h: 5480: extern volatile unsigned char IOCBN @ 0x395;
"5482
[; ;pic16f1938.h: 5482: asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
[; ;pic16f1938.h: 5485: typedef union {
[; ;pic16f1938.h: 5486: struct {
[; ;pic16f1938.h: 5487: unsigned IOCBN0 :1;
[; ;pic16f1938.h: 5488: unsigned IOCBN1 :1;
[; ;pic16f1938.h: 5489: unsigned IOCBN2 :1;
[; ;pic16f1938.h: 5490: unsigned IOCBN3 :1;
[; ;pic16f1938.h: 5491: unsigned IOCBN4 :1;
[; ;pic16f1938.h: 5492: unsigned IOCBN5 :1;
[; ;pic16f1938.h: 5493: unsigned IOCBN6 :1;
[; ;pic16f1938.h: 5494: unsigned IOCBN7 :1;
[; ;pic16f1938.h: 5495: };
[; ;pic16f1938.h: 5496: struct {
[; ;pic16f1938.h: 5497: unsigned IOCBN :8;
[; ;pic16f1938.h: 5498: };
[; ;pic16f1938.h: 5499: } IOCBNbits_t;
[; ;pic16f1938.h: 5500: extern volatile IOCBNbits_t IOCBNbits @ 0x395;
[; ;pic16f1938.h: 5549: extern volatile unsigned char IOCBF @ 0x396;
"5551
[; ;pic16f1938.h: 5551: asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
[; ;pic16f1938.h: 5554: typedef union {
[; ;pic16f1938.h: 5555: struct {
[; ;pic16f1938.h: 5556: unsigned IOCBF0 :1;
[; ;pic16f1938.h: 5557: unsigned IOCBF1 :1;
[; ;pic16f1938.h: 5558: unsigned IOCBF2 :1;
[; ;pic16f1938.h: 5559: unsigned IOCBF3 :1;
[; ;pic16f1938.h: 5560: unsigned IOCBF4 :1;
[; ;pic16f1938.h: 5561: unsigned IOCBF5 :1;
[; ;pic16f1938.h: 5562: unsigned IOCBF6 :1;
[; ;pic16f1938.h: 5563: unsigned IOCBF7 :1;
[; ;pic16f1938.h: 5564: };
[; ;pic16f1938.h: 5565: struct {
[; ;pic16f1938.h: 5566: unsigned IOCBF :8;
[; ;pic16f1938.h: 5567: };
[; ;pic16f1938.h: 5568: } IOCBFbits_t;
[; ;pic16f1938.h: 5569: extern volatile IOCBFbits_t IOCBFbits @ 0x396;
[; ;pic16f1938.h: 5618: extern volatile unsigned char TMR4 @ 0x415;
"5620
[; ;pic16f1938.h: 5620: asm("TMR4 equ 0415h");
[; <" TMR4 equ 0415h ;# ">
[; ;pic16f1938.h: 5623: typedef union {
[; ;pic16f1938.h: 5624: struct {
[; ;pic16f1938.h: 5625: unsigned TMR4 :8;
[; ;pic16f1938.h: 5626: };
[; ;pic16f1938.h: 5627: } TMR4bits_t;
[; ;pic16f1938.h: 5628: extern volatile TMR4bits_t TMR4bits @ 0x415;
[; ;pic16f1938.h: 5637: extern volatile unsigned char PR4 @ 0x416;
"5639
[; ;pic16f1938.h: 5639: asm("PR4 equ 0416h");
[; <" PR4 equ 0416h ;# ">
[; ;pic16f1938.h: 5642: typedef union {
[; ;pic16f1938.h: 5643: struct {
[; ;pic16f1938.h: 5644: unsigned PR4 :8;
[; ;pic16f1938.h: 5645: };
[; ;pic16f1938.h: 5646: } PR4bits_t;
[; ;pic16f1938.h: 5647: extern volatile PR4bits_t PR4bits @ 0x416;
[; ;pic16f1938.h: 5656: extern volatile unsigned char T4CON @ 0x417;
"5658
[; ;pic16f1938.h: 5658: asm("T4CON equ 0417h");
[; <" T4CON equ 0417h ;# ">
[; ;pic16f1938.h: 5661: typedef union {
[; ;pic16f1938.h: 5662: struct {
[; ;pic16f1938.h: 5663: unsigned T4CKPS0 :1;
[; ;pic16f1938.h: 5664: unsigned T4CKPS1 :1;
[; ;pic16f1938.h: 5665: unsigned TMR4ON :1;
[; ;pic16f1938.h: 5666: unsigned T4OUTPS0 :1;
[; ;pic16f1938.h: 5667: unsigned T4OUTPS1 :1;
[; ;pic16f1938.h: 5668: unsigned T4OUTPS2 :1;
[; ;pic16f1938.h: 5669: unsigned T4OUTPS3 :1;
[; ;pic16f1938.h: 5670: };
[; ;pic16f1938.h: 5671: struct {
[; ;pic16f1938.h: 5672: unsigned T4CKPS :2;
[; ;pic16f1938.h: 5673: unsigned :1;
[; ;pic16f1938.h: 5674: unsigned T4OUTPS :4;
[; ;pic16f1938.h: 5675: };
[; ;pic16f1938.h: 5676: } T4CONbits_t;
[; ;pic16f1938.h: 5677: extern volatile T4CONbits_t T4CONbits @ 0x417;
[; ;pic16f1938.h: 5726: extern volatile unsigned char TMR6 @ 0x41C;
"5728
[; ;pic16f1938.h: 5728: asm("TMR6 equ 041Ch");
[; <" TMR6 equ 041Ch ;# ">
[; ;pic16f1938.h: 5731: typedef union {
[; ;pic16f1938.h: 5732: struct {
[; ;pic16f1938.h: 5733: unsigned TMR6 :8;
[; ;pic16f1938.h: 5734: };
[; ;pic16f1938.h: 5735: } TMR6bits_t;
[; ;pic16f1938.h: 5736: extern volatile TMR6bits_t TMR6bits @ 0x41C;
[; ;pic16f1938.h: 5745: extern volatile unsigned char PR6 @ 0x41D;
"5747
[; ;pic16f1938.h: 5747: asm("PR6 equ 041Dh");
[; <" PR6 equ 041Dh ;# ">
[; ;pic16f1938.h: 5750: typedef union {
[; ;pic16f1938.h: 5751: struct {
[; ;pic16f1938.h: 5752: unsigned PR6 :8;
[; ;pic16f1938.h: 5753: };
[; ;pic16f1938.h: 5754: } PR6bits_t;
[; ;pic16f1938.h: 5755: extern volatile PR6bits_t PR6bits @ 0x41D;
[; ;pic16f1938.h: 5764: extern volatile unsigned char T6CON @ 0x41E;
"5766
[; ;pic16f1938.h: 5766: asm("T6CON equ 041Eh");
[; <" T6CON equ 041Eh ;# ">
[; ;pic16f1938.h: 5769: typedef union {
[; ;pic16f1938.h: 5770: struct {
[; ;pic16f1938.h: 5771: unsigned T6CKPS0 :1;
[; ;pic16f1938.h: 5772: unsigned T6CKPS1 :1;
[; ;pic16f1938.h: 5773: unsigned TMR6ON :1;
[; ;pic16f1938.h: 5774: unsigned T6OUTPS0 :1;
[; ;pic16f1938.h: 5775: unsigned T6OUTPS1 :1;
[; ;pic16f1938.h: 5776: unsigned T6OUTPS2 :1;
[; ;pic16f1938.h: 5777: unsigned T6OUTPS3 :1;
[; ;pic16f1938.h: 5778: };
[; ;pic16f1938.h: 5779: struct {
[; ;pic16f1938.h: 5780: unsigned T6CKPS :2;
[; ;pic16f1938.h: 5781: unsigned :1;
[; ;pic16f1938.h: 5782: unsigned T6OUTPS :4;
[; ;pic16f1938.h: 5783: };
[; ;pic16f1938.h: 5784: } T6CONbits_t;
[; ;pic16f1938.h: 5785: extern volatile T6CONbits_t T6CONbits @ 0x41E;
[; ;pic16f1938.h: 5834: extern volatile unsigned char LCDCON @ 0x791;
"5836
[; ;pic16f1938.h: 5836: asm("LCDCON equ 0791h");
[; <" LCDCON equ 0791h ;# ">
[; ;pic16f1938.h: 5839: typedef union {
[; ;pic16f1938.h: 5840: struct {
[; ;pic16f1938.h: 5841: unsigned LMUX0 :1;
[; ;pic16f1938.h: 5842: unsigned LMUX1 :1;
[; ;pic16f1938.h: 5843: unsigned CS0 :1;
[; ;pic16f1938.h: 5844: unsigned CS1 :1;
[; ;pic16f1938.h: 5845: unsigned :1;
[; ;pic16f1938.h: 5846: unsigned WERR :1;
[; ;pic16f1938.h: 5847: unsigned SLPEN :1;
[; ;pic16f1938.h: 5848: unsigned LCDEN :1;
[; ;pic16f1938.h: 5849: };
[; ;pic16f1938.h: 5850: struct {
[; ;pic16f1938.h: 5851: unsigned LMUX :2;
[; ;pic16f1938.h: 5852: unsigned CS :2;
[; ;pic16f1938.h: 5853: };
[; ;pic16f1938.h: 5854: } LCDCONbits_t;
[; ;pic16f1938.h: 5855: extern volatile LCDCONbits_t LCDCONbits @ 0x791;
[; ;pic16f1938.h: 5904: extern volatile unsigned char LCDPS @ 0x792;
"5906
[; ;pic16f1938.h: 5906: asm("LCDPS equ 0792h");
[; <" LCDPS equ 0792h ;# ">
[; ;pic16f1938.h: 5909: typedef union {
[; ;pic16f1938.h: 5910: struct {
[; ;pic16f1938.h: 5911: unsigned LP0 :1;
[; ;pic16f1938.h: 5912: unsigned LP1 :1;
[; ;pic16f1938.h: 5913: unsigned LP2 :1;
[; ;pic16f1938.h: 5914: unsigned LP3 :1;
[; ;pic16f1938.h: 5915: unsigned WA :1;
[; ;pic16f1938.h: 5916: unsigned LCDA :1;
[; ;pic16f1938.h: 5917: unsigned BIASMD :1;
[; ;pic16f1938.h: 5918: unsigned WFT :1;
[; ;pic16f1938.h: 5919: };
[; ;pic16f1938.h: 5920: struct {
[; ;pic16f1938.h: 5921: unsigned LP :4;
[; ;pic16f1938.h: 5922: };
[; ;pic16f1938.h: 5923: } LCDPSbits_t;
[; ;pic16f1938.h: 5924: extern volatile LCDPSbits_t LCDPSbits @ 0x792;
[; ;pic16f1938.h: 5973: extern volatile unsigned char LCDREF @ 0x793;
"5975
[; ;pic16f1938.h: 5975: asm("LCDREF equ 0793h");
[; <" LCDREF equ 0793h ;# ">
[; ;pic16f1938.h: 5978: typedef union {
[; ;pic16f1938.h: 5979: struct {
[; ;pic16f1938.h: 5980: unsigned :1;
[; ;pic16f1938.h: 5981: unsigned VLCD1PE :1;
[; ;pic16f1938.h: 5982: unsigned VLCD2PE :1;
[; ;pic16f1938.h: 5983: unsigned VLCD3PE :1;
[; ;pic16f1938.h: 5984: unsigned :1;
[; ;pic16f1938.h: 5985: unsigned LCDIRI :1;
[; ;pic16f1938.h: 5986: unsigned LCDIRS :1;
[; ;pic16f1938.h: 5987: unsigned LCDIRE :1;
[; ;pic16f1938.h: 5988: };
[; ;pic16f1938.h: 5989: } LCDREFbits_t;
[; ;pic16f1938.h: 5990: extern volatile LCDREFbits_t LCDREFbits @ 0x793;
[; ;pic16f1938.h: 6024: extern volatile unsigned char LCDCST @ 0x794;
"6026
[; ;pic16f1938.h: 6026: asm("LCDCST equ 0794h");
[; <" LCDCST equ 0794h ;# ">
[; ;pic16f1938.h: 6029: typedef union {
[; ;pic16f1938.h: 6030: struct {
[; ;pic16f1938.h: 6031: unsigned LCDCST0 :1;
[; ;pic16f1938.h: 6032: unsigned LCDCST1 :1;
[; ;pic16f1938.h: 6033: unsigned LCDCST2 :1;
[; ;pic16f1938.h: 6034: };
[; ;pic16f1938.h: 6035: struct {
[; ;pic16f1938.h: 6036: unsigned LCDCST :3;
[; ;pic16f1938.h: 6037: };
[; ;pic16f1938.h: 6038: } LCDCSTbits_t;
[; ;pic16f1938.h: 6039: extern volatile LCDCSTbits_t LCDCSTbits @ 0x794;
[; ;pic16f1938.h: 6063: extern volatile unsigned char LCDRL @ 0x795;
"6065
[; ;pic16f1938.h: 6065: asm("LCDRL equ 0795h");
[; <" LCDRL equ 0795h ;# ">
[; ;pic16f1938.h: 6068: typedef union {
[; ;pic16f1938.h: 6069: struct {
[; ;pic16f1938.h: 6070: unsigned LRLAT0 :1;
[; ;pic16f1938.h: 6071: unsigned LRLAT1 :1;
[; ;pic16f1938.h: 6072: unsigned LRLAT2 :1;
[; ;pic16f1938.h: 6073: unsigned :1;
[; ;pic16f1938.h: 6074: unsigned LRLBP0 :1;
[; ;pic16f1938.h: 6075: unsigned LRLBP1 :1;
[; ;pic16f1938.h: 6076: unsigned LRLAP0 :1;
[; ;pic16f1938.h: 6077: unsigned LRLAP1 :1;
[; ;pic16f1938.h: 6078: };
[; ;pic16f1938.h: 6079: struct {
[; ;pic16f1938.h: 6080: unsigned LRLAT :3;
[; ;pic16f1938.h: 6081: unsigned :1;
[; ;pic16f1938.h: 6082: unsigned LRLBP :2;
[; ;pic16f1938.h: 6083: unsigned LRLAP :2;
[; ;pic16f1938.h: 6084: };
[; ;pic16f1938.h: 6085: } LCDRLbits_t;
[; ;pic16f1938.h: 6086: extern volatile LCDRLbits_t LCDRLbits @ 0x795;
[; ;pic16f1938.h: 6140: extern volatile unsigned char LCDSE0 @ 0x798;
"6142
[; ;pic16f1938.h: 6142: asm("LCDSE0 equ 0798h");
[; <" LCDSE0 equ 0798h ;# ">
[; ;pic16f1938.h: 6145: typedef union {
[; ;pic16f1938.h: 6146: struct {
[; ;pic16f1938.h: 6147: unsigned SE0 :1;
[; ;pic16f1938.h: 6148: unsigned SE1 :1;
[; ;pic16f1938.h: 6149: unsigned SE2 :1;
[; ;pic16f1938.h: 6150: unsigned SE3 :1;
[; ;pic16f1938.h: 6151: unsigned SE4 :1;
[; ;pic16f1938.h: 6152: unsigned SE5 :1;
[; ;pic16f1938.h: 6153: unsigned SE6 :1;
[; ;pic16f1938.h: 6154: unsigned SE7 :1;
[; ;pic16f1938.h: 6155: };
[; ;pic16f1938.h: 6156: } LCDSE0bits_t;
[; ;pic16f1938.h: 6157: extern volatile LCDSE0bits_t LCDSE0bits @ 0x798;
[; ;pic16f1938.h: 6201: extern volatile unsigned char LCDSE1 @ 0x799;
"6203
[; ;pic16f1938.h: 6203: asm("LCDSE1 equ 0799h");
[; <" LCDSE1 equ 0799h ;# ">
[; ;pic16f1938.h: 6206: typedef union {
[; ;pic16f1938.h: 6207: struct {
[; ;pic16f1938.h: 6208: unsigned SE8 :1;
[; ;pic16f1938.h: 6209: unsigned SE9 :1;
[; ;pic16f1938.h: 6210: unsigned SE10 :1;
[; ;pic16f1938.h: 6211: unsigned SE11 :1;
[; ;pic16f1938.h: 6212: unsigned SE12 :1;
[; ;pic16f1938.h: 6213: unsigned SE13 :1;
[; ;pic16f1938.h: 6214: unsigned SE14 :1;
[; ;pic16f1938.h: 6215: unsigned SE15 :1;
[; ;pic16f1938.h: 6216: };
[; ;pic16f1938.h: 6217: } LCDSE1bits_t;
[; ;pic16f1938.h: 6218: extern volatile LCDSE1bits_t LCDSE1bits @ 0x799;
[; ;pic16f1938.h: 6262: extern volatile unsigned char LCDDATA0 @ 0x7A0;
"6264
[; ;pic16f1938.h: 6264: asm("LCDDATA0 equ 07A0h");
[; <" LCDDATA0 equ 07A0h ;# ">
[; ;pic16f1938.h: 6267: typedef union {
[; ;pic16f1938.h: 6268: struct {
[; ;pic16f1938.h: 6269: unsigned SEG0COM0 :1;
[; ;pic16f1938.h: 6270: unsigned SEG1COM0 :1;
[; ;pic16f1938.h: 6271: unsigned SEG2COM0 :1;
[; ;pic16f1938.h: 6272: unsigned SEG3COM0 :1;
[; ;pic16f1938.h: 6273: unsigned SEG4COM0 :1;
[; ;pic16f1938.h: 6274: unsigned SEG5COM0 :1;
[; ;pic16f1938.h: 6275: unsigned SEG6COM0 :1;
[; ;pic16f1938.h: 6276: unsigned SEG7COM0 :1;
[; ;pic16f1938.h: 6277: };
[; ;pic16f1938.h: 6278: } LCDDATA0bits_t;
[; ;pic16f1938.h: 6279: extern volatile LCDDATA0bits_t LCDDATA0bits @ 0x7A0;
[; ;pic16f1938.h: 6323: extern volatile unsigned char LCDDATA1 @ 0x7A1;
"6325
[; ;pic16f1938.h: 6325: asm("LCDDATA1 equ 07A1h");
[; <" LCDDATA1 equ 07A1h ;# ">
[; ;pic16f1938.h: 6328: typedef union {
[; ;pic16f1938.h: 6329: struct {
[; ;pic16f1938.h: 6330: unsigned SEG8COM0 :1;
[; ;pic16f1938.h: 6331: unsigned SEG9COM0 :1;
[; ;pic16f1938.h: 6332: unsigned SEG10COM0 :1;
[; ;pic16f1938.h: 6333: unsigned SEG11COM0 :1;
[; ;pic16f1938.h: 6334: unsigned SEG12COM0 :1;
[; ;pic16f1938.h: 6335: unsigned SEG13COM0 :1;
[; ;pic16f1938.h: 6336: unsigned SEG14COM0 :1;
[; ;pic16f1938.h: 6337: unsigned SEG15COM0 :1;
[; ;pic16f1938.h: 6338: };
[; ;pic16f1938.h: 6339: } LCDDATA1bits_t;
[; ;pic16f1938.h: 6340: extern volatile LCDDATA1bits_t LCDDATA1bits @ 0x7A1;
[; ;pic16f1938.h: 6384: extern volatile unsigned char LCDDATA3 @ 0x7A3;
"6386
[; ;pic16f1938.h: 6386: asm("LCDDATA3 equ 07A3h");
[; <" LCDDATA3 equ 07A3h ;# ">
[; ;pic16f1938.h: 6389: typedef union {
[; ;pic16f1938.h: 6390: struct {
[; ;pic16f1938.h: 6391: unsigned SEG0COM1 :1;
[; ;pic16f1938.h: 6392: unsigned SEG1COM1 :1;
[; ;pic16f1938.h: 6393: unsigned SEG2COM1 :1;
[; ;pic16f1938.h: 6394: unsigned SEG3COM1 :1;
[; ;pic16f1938.h: 6395: unsigned SEG4COM1 :1;
[; ;pic16f1938.h: 6396: unsigned SEG5COM1 :1;
[; ;pic16f1938.h: 6397: unsigned SEG6COM1 :1;
[; ;pic16f1938.h: 6398: unsigned SEG7COM1 :1;
[; ;pic16f1938.h: 6399: };
[; ;pic16f1938.h: 6400: } LCDDATA3bits_t;
[; ;pic16f1938.h: 6401: extern volatile LCDDATA3bits_t LCDDATA3bits @ 0x7A3;
[; ;pic16f1938.h: 6445: extern volatile unsigned char LCDDATA4 @ 0x7A4;
"6447
[; ;pic16f1938.h: 6447: asm("LCDDATA4 equ 07A4h");
[; <" LCDDATA4 equ 07A4h ;# ">
[; ;pic16f1938.h: 6450: typedef union {
[; ;pic16f1938.h: 6451: struct {
[; ;pic16f1938.h: 6452: unsigned SEG8COM1 :1;
[; ;pic16f1938.h: 6453: unsigned SEG9COM1 :1;
[; ;pic16f1938.h: 6454: unsigned SEG10COM1 :1;
[; ;pic16f1938.h: 6455: unsigned SEG11COM1 :1;
[; ;pic16f1938.h: 6456: unsigned SEG12COM1 :1;
[; ;pic16f1938.h: 6457: unsigned SEG13COM1 :1;
[; ;pic16f1938.h: 6458: unsigned SEG14COM1 :1;
[; ;pic16f1938.h: 6459: unsigned SEG15COM1 :1;
[; ;pic16f1938.h: 6460: };
[; ;pic16f1938.h: 6461: } LCDDATA4bits_t;
[; ;pic16f1938.h: 6462: extern volatile LCDDATA4bits_t LCDDATA4bits @ 0x7A4;
[; ;pic16f1938.h: 6506: extern volatile unsigned char LCDDATA6 @ 0x7A6;
"6508
[; ;pic16f1938.h: 6508: asm("LCDDATA6 equ 07A6h");
[; <" LCDDATA6 equ 07A6h ;# ">
[; ;pic16f1938.h: 6511: typedef union {
[; ;pic16f1938.h: 6512: struct {
[; ;pic16f1938.h: 6513: unsigned SEG0COM2 :1;
[; ;pic16f1938.h: 6514: unsigned SEG1COM2 :1;
[; ;pic16f1938.h: 6515: unsigned SEG2COM2 :1;
[; ;pic16f1938.h: 6516: unsigned SEG3COM2 :1;
[; ;pic16f1938.h: 6517: unsigned SEG4COM2 :1;
[; ;pic16f1938.h: 6518: unsigned SEG5COM2 :1;
[; ;pic16f1938.h: 6519: unsigned SEG6COM2 :1;
[; ;pic16f1938.h: 6520: unsigned SEG7COM2 :1;
[; ;pic16f1938.h: 6521: };
[; ;pic16f1938.h: 6522: } LCDDATA6bits_t;
[; ;pic16f1938.h: 6523: extern volatile LCDDATA6bits_t LCDDATA6bits @ 0x7A6;
[; ;pic16f1938.h: 6567: extern volatile unsigned char LCDDATA7 @ 0x7A7;
"6569
[; ;pic16f1938.h: 6569: asm("LCDDATA7 equ 07A7h");
[; <" LCDDATA7 equ 07A7h ;# ">
[; ;pic16f1938.h: 6572: typedef union {
[; ;pic16f1938.h: 6573: struct {
[; ;pic16f1938.h: 6574: unsigned SEG8COM2 :1;
[; ;pic16f1938.h: 6575: unsigned SEG9COM2 :1;
[; ;pic16f1938.h: 6576: unsigned SEG10COM2 :1;
[; ;pic16f1938.h: 6577: unsigned SEG11COM2 :1;
[; ;pic16f1938.h: 6578: unsigned SEG12COM2 :1;
[; ;pic16f1938.h: 6579: unsigned SEG13COM2 :1;
[; ;pic16f1938.h: 6580: unsigned SEG14COM2 :1;
[; ;pic16f1938.h: 6581: unsigned SEG15COM2 :1;
[; ;pic16f1938.h: 6582: };
[; ;pic16f1938.h: 6583: } LCDDATA7bits_t;
[; ;pic16f1938.h: 6584: extern volatile LCDDATA7bits_t LCDDATA7bits @ 0x7A7;
[; ;pic16f1938.h: 6628: extern volatile unsigned char LCDDATA9 @ 0x7A9;
"6630
[; ;pic16f1938.h: 6630: asm("LCDDATA9 equ 07A9h");
[; <" LCDDATA9 equ 07A9h ;# ">
[; ;pic16f1938.h: 6633: typedef union {
[; ;pic16f1938.h: 6634: struct {
[; ;pic16f1938.h: 6635: unsigned SEG0COM3 :1;
[; ;pic16f1938.h: 6636: unsigned SEG1COM3 :1;
[; ;pic16f1938.h: 6637: unsigned SEG2COM3 :1;
[; ;pic16f1938.h: 6638: unsigned SEG3COM3 :1;
[; ;pic16f1938.h: 6639: unsigned SEG4COM3 :1;
[; ;pic16f1938.h: 6640: unsigned SEG5COM3 :1;
[; ;pic16f1938.h: 6641: unsigned SEG6COM3 :1;
[; ;pic16f1938.h: 6642: unsigned SEG7COM3 :1;
[; ;pic16f1938.h: 6643: };
[; ;pic16f1938.h: 6644: } LCDDATA9bits_t;
[; ;pic16f1938.h: 6645: extern volatile LCDDATA9bits_t LCDDATA9bits @ 0x7A9;
[; ;pic16f1938.h: 6689: extern volatile unsigned char LCDDATA10 @ 0x7AA;
"6691
[; ;pic16f1938.h: 6691: asm("LCDDATA10 equ 07AAh");
[; <" LCDDATA10 equ 07AAh ;# ">
[; ;pic16f1938.h: 6694: typedef union {
[; ;pic16f1938.h: 6695: struct {
[; ;pic16f1938.h: 6696: unsigned SEG8COM3 :1;
[; ;pic16f1938.h: 6697: unsigned SEG9COM3 :1;
[; ;pic16f1938.h: 6698: unsigned SEG10COM3 :1;
[; ;pic16f1938.h: 6699: unsigned SEG11COM3 :1;
[; ;pic16f1938.h: 6700: unsigned SEG12COM3 :1;
[; ;pic16f1938.h: 6701: unsigned SEG13COM3 :1;
[; ;pic16f1938.h: 6702: unsigned SEG14COM3 :1;
[; ;pic16f1938.h: 6703: unsigned SEG15COM3 :1;
[; ;pic16f1938.h: 6704: };
[; ;pic16f1938.h: 6705: } LCDDATA10bits_t;
[; ;pic16f1938.h: 6706: extern volatile LCDDATA10bits_t LCDDATA10bits @ 0x7AA;
[; ;pic16f1938.h: 6750: extern volatile unsigned char STATUS_SHAD @ 0xFE4;
"6752
[; ;pic16f1938.h: 6752: asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
[; ;pic16f1938.h: 6755: typedef union {
[; ;pic16f1938.h: 6756: struct {
[; ;pic16f1938.h: 6757: unsigned C_SHAD :1;
[; ;pic16f1938.h: 6758: unsigned DC_SHAD :1;
[; ;pic16f1938.h: 6759: unsigned Z_SHAD :1;
[; ;pic16f1938.h: 6760: };
[; ;pic16f1938.h: 6761: } STATUS_SHADbits_t;
[; ;pic16f1938.h: 6762: extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;
[; ;pic16f1938.h: 6781: extern volatile unsigned char WREG_SHAD @ 0xFE5;
"6783
[; ;pic16f1938.h: 6783: asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
[; ;pic16f1938.h: 6786: typedef union {
[; ;pic16f1938.h: 6787: struct {
[; ;pic16f1938.h: 6788: unsigned WREG_SHAD :8;
[; ;pic16f1938.h: 6789: };
[; ;pic16f1938.h: 6790: } WREG_SHADbits_t;
[; ;pic16f1938.h: 6791: extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;
[; ;pic16f1938.h: 6800: extern volatile unsigned char BSR_SHAD @ 0xFE6;
"6802
[; ;pic16f1938.h: 6802: asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
[; ;pic16f1938.h: 6805: typedef union {
[; ;pic16f1938.h: 6806: struct {
[; ;pic16f1938.h: 6807: unsigned BSR_SHAD :5;
[; ;pic16f1938.h: 6808: };
[; ;pic16f1938.h: 6809: } BSR_SHADbits_t;
[; ;pic16f1938.h: 6810: extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;
[; ;pic16f1938.h: 6819: extern volatile unsigned char PCLATH_SHAD @ 0xFE7;
"6821
[; ;pic16f1938.h: 6821: asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
[; ;pic16f1938.h: 6824: typedef union {
[; ;pic16f1938.h: 6825: struct {
[; ;pic16f1938.h: 6826: unsigned PCLATH_SHAD :7;
[; ;pic16f1938.h: 6827: };
[; ;pic16f1938.h: 6828: } PCLATH_SHADbits_t;
[; ;pic16f1938.h: 6829: extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;
[; ;pic16f1938.h: 6838: extern volatile unsigned char FSR0L_SHAD @ 0xFE8;
"6840
[; ;pic16f1938.h: 6840: asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
[; ;pic16f1938.h: 6843: typedef union {
[; ;pic16f1938.h: 6844: struct {
[; ;pic16f1938.h: 6845: unsigned FSR0L_SHAD :8;
[; ;pic16f1938.h: 6846: };
[; ;pic16f1938.h: 6847: } FSR0L_SHADbits_t;
[; ;pic16f1938.h: 6848: extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;
[; ;pic16f1938.h: 6857: extern volatile unsigned char FSR0H_SHAD @ 0xFE9;
"6859
[; ;pic16f1938.h: 6859: asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
[; ;pic16f1938.h: 6862: typedef union {
[; ;pic16f1938.h: 6863: struct {
[; ;pic16f1938.h: 6864: unsigned FSR0H_SHAD :8;
[; ;pic16f1938.h: 6865: };
[; ;pic16f1938.h: 6866: } FSR0H_SHADbits_t;
[; ;pic16f1938.h: 6867: extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;
[; ;pic16f1938.h: 6876: extern volatile unsigned char FSR1L_SHAD @ 0xFEA;
"6878
[; ;pic16f1938.h: 6878: asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
[; ;pic16f1938.h: 6881: typedef union {
[; ;pic16f1938.h: 6882: struct {
[; ;pic16f1938.h: 6883: unsigned FSR1L_SHAD :8;
[; ;pic16f1938.h: 6884: };
[; ;pic16f1938.h: 6885: } FSR1L_SHADbits_t;
[; ;pic16f1938.h: 6886: extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;
[; ;pic16f1938.h: 6895: extern volatile unsigned char FSR1H_SHAD @ 0xFEB;
"6897
[; ;pic16f1938.h: 6897: asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
[; ;pic16f1938.h: 6900: typedef union {
[; ;pic16f1938.h: 6901: struct {
[; ;pic16f1938.h: 6902: unsigned FSR1H_SHAD :8;
[; ;pic16f1938.h: 6903: };
[; ;pic16f1938.h: 6904: } FSR1H_SHADbits_t;
[; ;pic16f1938.h: 6905: extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;
[; ;pic16f1938.h: 6914: extern volatile unsigned char STKPTR @ 0xFED;
"6916
[; ;pic16f1938.h: 6916: asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
[; ;pic16f1938.h: 6919: typedef union {
[; ;pic16f1938.h: 6920: struct {
[; ;pic16f1938.h: 6921: unsigned STKPTR :5;
[; ;pic16f1938.h: 6922: };
[; ;pic16f1938.h: 6923: } STKPTRbits_t;
[; ;pic16f1938.h: 6924: extern volatile STKPTRbits_t STKPTRbits @ 0xFED;
[; ;pic16f1938.h: 6933: extern volatile unsigned char TOSL @ 0xFEE;
"6935
[; ;pic16f1938.h: 6935: asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
[; ;pic16f1938.h: 6938: typedef union {
[; ;pic16f1938.h: 6939: struct {
[; ;pic16f1938.h: 6940: unsigned TOSL :8;
[; ;pic16f1938.h: 6941: };
[; ;pic16f1938.h: 6942: } TOSLbits_t;
[; ;pic16f1938.h: 6943: extern volatile TOSLbits_t TOSLbits @ 0xFEE;
[; ;pic16f1938.h: 6952: extern volatile unsigned char TOSH @ 0xFEF;
"6954
[; ;pic16f1938.h: 6954: asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
[; ;pic16f1938.h: 6957: typedef union {
[; ;pic16f1938.h: 6958: struct {
[; ;pic16f1938.h: 6959: unsigned TOSH :7;
[; ;pic16f1938.h: 6960: };
[; ;pic16f1938.h: 6961: } TOSHbits_t;
[; ;pic16f1938.h: 6962: extern volatile TOSHbits_t TOSHbits @ 0xFEF;
[; ;pic16f1938.h: 6977: extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;
[; ;pic16f1938.h: 6979: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;
[; ;pic16f1938.h: 6981: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f1938.h: 6983: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f1938.h: 6985: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f1938.h: 6987: extern volatile __bit ACKTIM @ (((unsigned) &SSPCON3)*8) + 7;
[; ;pic16f1938.h: 6989: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f1938.h: 6991: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f1938.h: 6993: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f1938.h: 6995: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f1938.h: 6997: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f1938.h: 6999: extern volatile __bit ADFVR0 @ (((unsigned) &FVRCON)*8) + 0;
[; ;pic16f1938.h: 7001: extern volatile __bit ADFVR1 @ (((unsigned) &FVRCON)*8) + 1;
[; ;pic16f1938.h: 7003: extern volatile __bit ADGO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1938.h: 7005: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f1938.h: 7007: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f1938.h: 7009: extern volatile __bit ADNREF @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f1938.h: 7011: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f1938.h: 7013: extern volatile __bit ADPREF0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f1938.h: 7015: extern volatile __bit ADPREF1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f1938.h: 7017: extern volatile __bit AHEN @ (((unsigned) &SSPCON3)*8) + 1;
[; ;pic16f1938.h: 7019: extern volatile __bit ANSA0 @ (((unsigned) &ANSELA)*8) + 0;
[; ;pic16f1938.h: 7021: extern volatile __bit ANSA1 @ (((unsigned) &ANSELA)*8) + 1;
[; ;pic16f1938.h: 7023: extern volatile __bit ANSA2 @ (((unsigned) &ANSELA)*8) + 2;
[; ;pic16f1938.h: 7025: extern volatile __bit ANSA3 @ (((unsigned) &ANSELA)*8) + 3;
[; ;pic16f1938.h: 7027: extern volatile __bit ANSA4 @ (((unsigned) &ANSELA)*8) + 4;
[; ;pic16f1938.h: 7029: extern volatile __bit ANSA5 @ (((unsigned) &ANSELA)*8) + 5;
[; ;pic16f1938.h: 7031: extern volatile __bit ANSB0 @ (((unsigned) &ANSELB)*8) + 0;
[; ;pic16f1938.h: 7033: extern volatile __bit ANSB1 @ (((unsigned) &ANSELB)*8) + 1;
[; ;pic16f1938.h: 7035: extern volatile __bit ANSB2 @ (((unsigned) &ANSELB)*8) + 2;
[; ;pic16f1938.h: 7037: extern volatile __bit ANSB3 @ (((unsigned) &ANSELB)*8) + 3;
[; ;pic16f1938.h: 7039: extern volatile __bit ANSB4 @ (((unsigned) &ANSELB)*8) + 4;
[; ;pic16f1938.h: 7041: extern volatile __bit ANSB5 @ (((unsigned) &ANSELB)*8) + 5;
[; ;pic16f1938.h: 7043: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f1938.h: 7045: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f1938.h: 7047: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f1938.h: 7049: extern volatile __bit BIASMD @ (((unsigned) &LCDPS)*8) + 6;
[; ;pic16f1938.h: 7051: extern volatile __bit BOEN @ (((unsigned) &SSPCON3)*8) + 4;
[; ;pic16f1938.h: 7053: extern volatile __bit BORRDY @ (((unsigned) &BORCON)*8) + 0;
[; ;pic16f1938.h: 7055: extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;
[; ;pic16f1938.h: 7057: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f1938.h: 7059: extern volatile __bit BSR0 @ (((unsigned) &BSR)*8) + 0;
[; ;pic16f1938.h: 7061: extern volatile __bit BSR1 @ (((unsigned) &BSR)*8) + 1;
[; ;pic16f1938.h: 7063: extern volatile __bit BSR2 @ (((unsigned) &BSR)*8) + 2;
[; ;pic16f1938.h: 7065: extern volatile __bit BSR3 @ (((unsigned) &BSR)*8) + 3;
[; ;pic16f1938.h: 7067: extern volatile __bit BSR4 @ (((unsigned) &BSR)*8) + 4;
[; ;pic16f1938.h: 7069: extern volatile __bit C1HYS @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f1938.h: 7071: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f1938.h: 7073: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f1938.h: 7075: extern volatile __bit C1INTN @ (((unsigned) &CM1CON1)*8) + 6;
[; ;pic16f1938.h: 7077: extern volatile __bit C1INTP @ (((unsigned) &CM1CON1)*8) + 7;
[; ;pic16f1938.h: 7079: extern volatile __bit C1NCH0 @ (((unsigned) &CM1CON1)*8) + 0;
[; ;pic16f1938.h: 7081: extern volatile __bit C1NCH1 @ (((unsigned) &CM1CON1)*8) + 1;
[; ;pic16f1938.h: 7083: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f1938.h: 7085: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f1938.h: 7087: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f1938.h: 7089: extern volatile __bit C1PCH0 @ (((unsigned) &CM1CON1)*8) + 4;
[; ;pic16f1938.h: 7091: extern volatile __bit C1PCH1 @ (((unsigned) &CM1CON1)*8) + 5;
[; ;pic16f1938.h: 7093: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f1938.h: 7095: extern volatile __bit C1SP @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f1938.h: 7097: extern volatile __bit C1SYNC @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f1938.h: 7099: extern volatile __bit C1TSEL0 @ (((unsigned) &CCPTMRS0)*8) + 0;
[; ;pic16f1938.h: 7101: extern volatile __bit C1TSEL1 @ (((unsigned) &CCPTMRS0)*8) + 1;
[; ;pic16f1938.h: 7103: extern volatile __bit C2HYS @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f1938.h: 7105: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f1938.h: 7107: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f1938.h: 7109: extern volatile __bit C2INTN @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f1938.h: 7111: extern volatile __bit C2INTP @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f1938.h: 7113: extern volatile __bit C2NCH0 @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f1938.h: 7115: extern volatile __bit C2NCH1 @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f1938.h: 7117: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f1938.h: 7119: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f1938.h: 7121: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f1938.h: 7123: extern volatile __bit C2OUTSEL @ (((unsigned) &APFCON)*8) + 2;
[; ;pic16f1938.h: 7125: extern volatile __bit C2PCH0 @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f1938.h: 7127: extern volatile __bit C2PCH1 @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f1938.h: 7129: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f1938.h: 7131: extern volatile __bit C2SP @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f1938.h: 7133: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f1938.h: 7135: extern volatile __bit C2TSEL0 @ (((unsigned) &CCPTMRS0)*8) + 2;
[; ;pic16f1938.h: 7137: extern volatile __bit C2TSEL1 @ (((unsigned) &CCPTMRS0)*8) + 3;
[; ;pic16f1938.h: 7139: extern volatile __bit C3TSEL0 @ (((unsigned) &CCPTMRS0)*8) + 4;
[; ;pic16f1938.h: 7141: extern volatile __bit C3TSEL1 @ (((unsigned) &CCPTMRS0)*8) + 5;
[; ;pic16f1938.h: 7143: extern volatile __bit C4TSEL0 @ (((unsigned) &CCPTMRS0)*8) + 6;
[; ;pic16f1938.h: 7145: extern volatile __bit C4TSEL1 @ (((unsigned) &CCPTMRS0)*8) + 7;
[; ;pic16f1938.h: 7147: extern volatile __bit C5TSEL0 @ (((unsigned) &CCPTMRS1)*8) + 0;
[; ;pic16f1938.h: 7149: extern volatile __bit C5TSEL1 @ (((unsigned) &CCPTMRS1)*8) + 1;
[; ;pic16f1938.h: 7151: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f1938.h: 7153: extern volatile __bit CCP1AS0 @ (((unsigned) &CCP1AS)*8) + 4;
[; ;pic16f1938.h: 7155: extern volatile __bit CCP1AS1 @ (((unsigned) &CCP1AS)*8) + 5;
[; ;pic16f1938.h: 7157: extern volatile __bit CCP1AS2 @ (((unsigned) &CCP1AS)*8) + 6;
[; ;pic16f1938.h: 7159: extern volatile __bit CCP1ASE @ (((unsigned) &CCP1AS)*8) + 7;
[; ;pic16f1938.h: 7161: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f1938.h: 7163: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f1938.h: 7165: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f1938.h: 7167: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f1938.h: 7169: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f1938.h: 7171: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f1938.h: 7173: extern volatile __bit CCP2AS0 @ (((unsigned) &CCP2AS)*8) + 4;
[; ;pic16f1938.h: 7175: extern volatile __bit CCP2AS1 @ (((unsigned) &CCP2AS)*8) + 5;
[; ;pic16f1938.h: 7177: extern volatile __bit CCP2AS2 @ (((unsigned) &CCP2AS)*8) + 6;
[; ;pic16f1938.h: 7179: extern volatile __bit CCP2ASE @ (((unsigned) &CCP2AS)*8) + 7;
[; ;pic16f1938.h: 7181: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f1938.h: 7183: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f1938.h: 7185: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f1938.h: 7187: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f1938.h: 7189: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f1938.h: 7191: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f1938.h: 7193: extern volatile __bit CCP2SEL @ (((unsigned) &APFCON)*8) + 0;
[; ;pic16f1938.h: 7195: extern volatile __bit CCP3AS0 @ (((unsigned) &CCP3AS)*8) + 4;
[; ;pic16f1938.h: 7197: extern volatile __bit CCP3AS1 @ (((unsigned) &CCP3AS)*8) + 5;
[; ;pic16f1938.h: 7199: extern volatile __bit CCP3AS2 @ (((unsigned) &CCP3AS)*8) + 6;
[; ;pic16f1938.h: 7201: extern volatile __bit CCP3ASE @ (((unsigned) &CCP3AS)*8) + 7;
[; ;pic16f1938.h: 7203: extern volatile __bit CCP3IE @ (((unsigned) &PIE3)*8) + 4;
[; ;pic16f1938.h: 7205: extern volatile __bit CCP3IF @ (((unsigned) &PIR3)*8) + 4;
[; ;pic16f1938.h: 7207: extern volatile __bit CCP3M0 @ (((unsigned) &CCP3CON)*8) + 0;
[; ;pic16f1938.h: 7209: extern volatile __bit CCP3M1 @ (((unsigned) &CCP3CON)*8) + 1;
[; ;pic16f1938.h: 7211: extern volatile __bit CCP3M2 @ (((unsigned) &CCP3CON)*8) + 2;
[; ;pic16f1938.h: 7213: extern volatile __bit CCP3M3 @ (((unsigned) &CCP3CON)*8) + 3;
[; ;pic16f1938.h: 7215: extern volatile __bit CCP3SEL @ (((unsigned) &APFCON)*8) + 6;
[; ;pic16f1938.h: 7217: extern volatile __bit CCP4IE @ (((unsigned) &PIE3)*8) + 5;
[; ;pic16f1938.h: 7219: extern volatile __bit CCP4IF @ (((unsigned) &PIR3)*8) + 5;
[; ;pic16f1938.h: 7221: extern volatile __bit CCP4M0 @ (((unsigned) &CCP4CON)*8) + 0;
[; ;pic16f1938.h: 7223: extern volatile __bit CCP4M1 @ (((unsigned) &CCP4CON)*8) + 1;
[; ;pic16f1938.h: 7225: extern volatile __bit CCP4M2 @ (((unsigned) &CCP4CON)*8) + 2;
[; ;pic16f1938.h: 7227: extern volatile __bit CCP4M3 @ (((unsigned) &CCP4CON)*8) + 3;
[; ;pic16f1938.h: 7229: extern volatile __bit CCP5IE @ (((unsigned) &PIE3)*8) + 6;
[; ;pic16f1938.h: 7231: extern volatile __bit CCP5IF @ (((unsigned) &PIR3)*8) + 6;
[; ;pic16f1938.h: 7233: extern volatile __bit CCP5M0 @ (((unsigned) &CCP5CON)*8) + 0;
[; ;pic16f1938.h: 7235: extern volatile __bit CCP5M1 @ (((unsigned) &CCP5CON)*8) + 1;
[; ;pic16f1938.h: 7237: extern volatile __bit CCP5M2 @ (((unsigned) &CCP5CON)*8) + 2;
[; ;pic16f1938.h: 7239: extern volatile __bit CCP5M3 @ (((unsigned) &CCP5CON)*8) + 3;
[; ;pic16f1938.h: 7241: extern volatile __bit CDAFVR0 @ (((unsigned) &FVRCON)*8) + 2;
[; ;pic16f1938.h: 7243: extern volatile __bit CDAFVR1 @ (((unsigned) &FVRCON)*8) + 3;
[; ;pic16f1938.h: 7245: extern volatile __bit CFGS @ (((unsigned) &EECON1)*8) + 6;
[; ;pic16f1938.h: 7247: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f1938.h: 7249: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f1938.h: 7251: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f1938.h: 7253: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f1938.h: 7255: extern volatile __bit CHS4 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f1938.h: 7257: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f1938.h: 7259: extern volatile __bit CKP @ (((unsigned) &SSPCON1)*8) + 4;
[; ;pic16f1938.h: 7261: extern volatile __bit CPSCH0 @ (((unsigned) &CPSCON1)*8) + 0;
[; ;pic16f1938.h: 7263: extern volatile __bit CPSCH1 @ (((unsigned) &CPSCON1)*8) + 1;
[; ;pic16f1938.h: 7265: extern volatile __bit CPSCH2 @ (((unsigned) &CPSCON1)*8) + 2;
[; ;pic16f1938.h: 7267: extern volatile __bit CPSON @ (((unsigned) &CPSCON0)*8) + 7;
[; ;pic16f1938.h: 7269: extern volatile __bit CPSOUT @ (((unsigned) &CPSCON0)*8) + 1;
[; ;pic16f1938.h: 7271: extern volatile __bit CPSRM @ (((unsigned) &CPSCON0)*8) + 6;
[; ;pic16f1938.h: 7273: extern volatile __bit CPSRNG0 @ (((unsigned) &CPSCON0)*8) + 2;
[; ;pic16f1938.h: 7275: extern volatile __bit CPSRNG1 @ (((unsigned) &CPSCON0)*8) + 3;
[; ;pic16f1938.h: 7277: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f1938.h: 7279: extern volatile __bit CS0 @ (((unsigned) &LCDCON)*8) + 2;
[; ;pic16f1938.h: 7281: extern volatile __bit CS1 @ (((unsigned) &LCDCON)*8) + 3;
[; ;pic16f1938.h: 7283: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f1938.h: 7285: extern volatile __bit C_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 0;
[; ;pic16f1938.h: 7287: extern volatile __bit DACEN @ (((unsigned) &DACCON0)*8) + 7;
[; ;pic16f1938.h: 7289: extern volatile __bit DACLPS @ (((unsigned) &DACCON0)*8) + 6;
[; ;pic16f1938.h: 7291: extern volatile __bit DACNSS @ (((unsigned) &DACCON0)*8) + 0;
[; ;pic16f1938.h: 7293: extern volatile __bit DACOE @ (((unsigned) &DACCON0)*8) + 5;
[; ;pic16f1938.h: 7295: extern volatile __bit DACPSS0 @ (((unsigned) &DACCON0)*8) + 2;
[; ;pic16f1938.h: 7297: extern volatile __bit DACPSS1 @ (((unsigned) &DACCON0)*8) + 3;
[; ;pic16f1938.h: 7299: extern volatile __bit DACR0 @ (((unsigned) &DACCON1)*8) + 0;
[; ;pic16f1938.h: 7301: extern volatile __bit DACR1 @ (((unsigned) &DACCON1)*8) + 1;
[; ;pic16f1938.h: 7303: extern volatile __bit DACR2 @ (((unsigned) &DACCON1)*8) + 2;
[; ;pic16f1938.h: 7305: extern volatile __bit DACR3 @ (((unsigned) &DACCON1)*8) + 3;
[; ;pic16f1938.h: 7307: extern volatile __bit DACR4 @ (((unsigned) &DACCON1)*8) + 4;
[; ;pic16f1938.h: 7309: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f1938.h: 7311: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f1938.h: 7313: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f1938.h: 7315: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f1938.h: 7317: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f1938.h: 7319: extern volatile __bit DC3B0 @ (((unsigned) &CCP3CON)*8) + 4;
[; ;pic16f1938.h: 7321: extern volatile __bit DC3B1 @ (((unsigned) &CCP3CON)*8) + 5;
[; ;pic16f1938.h: 7323: extern volatile __bit DC4B0 @ (((unsigned) &CCP4CON)*8) + 4;
[; ;pic16f1938.h: 7325: extern volatile __bit DC4B1 @ (((unsigned) &CCP4CON)*8) + 5;
[; ;pic16f1938.h: 7327: extern volatile __bit DC5B0 @ (((unsigned) &CCP5CON)*8) + 4;
[; ;pic16f1938.h: 7329: extern volatile __bit DC5B1 @ (((unsigned) &CCP5CON)*8) + 5;
[; ;pic16f1938.h: 7331: extern volatile __bit DC_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 1;
[; ;pic16f1938.h: 7333: extern volatile __bit DHEN @ (((unsigned) &SSPCON3)*8) + 0;
[; ;pic16f1938.h: 7335: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f1938.h: 7337: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f1938.h: 7339: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f1938.h: 7341: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f1938.h: 7343: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f1938.h: 7345: extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;
[; ;pic16f1938.h: 7347: extern volatile __bit FVREN @ (((unsigned) &FVRCON)*8) + 7;
[; ;pic16f1938.h: 7349: extern volatile __bit FVRRDY @ (((unsigned) &FVRCON)*8) + 6;
[; ;pic16f1938.h: 7351: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f1938.h: 7353: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f1938.h: 7355: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1938.h: 7357: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1938.h: 7359: extern volatile __bit HFIOFL @ (((unsigned) &OSCSTAT)*8) + 3;
[; ;pic16f1938.h: 7361: extern volatile __bit HFIOFR @ (((unsigned) &OSCSTAT)*8) + 4;
[; ;pic16f1938.h: 7363: extern volatile __bit HFIOFS @ (((unsigned) &OSCSTAT)*8) + 0;
[; ;pic16f1938.h: 7365: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f1938.h: 7367: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f1938.h: 7369: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f1938.h: 7371: extern volatile __bit IOCBF0 @ (((unsigned) &IOCBF)*8) + 0;
[; ;pic16f1938.h: 7373: extern volatile __bit IOCBF1 @ (((unsigned) &IOCBF)*8) + 1;
[; ;pic16f1938.h: 7375: extern volatile __bit IOCBF2 @ (((unsigned) &IOCBF)*8) + 2;
[; ;pic16f1938.h: 7377: extern volatile __bit IOCBF3 @ (((unsigned) &IOCBF)*8) + 3;
[; ;pic16f1938.h: 7379: extern volatile __bit IOCBF4 @ (((unsigned) &IOCBF)*8) + 4;
[; ;pic16f1938.h: 7381: extern volatile __bit IOCBF5 @ (((unsigned) &IOCBF)*8) + 5;
[; ;pic16f1938.h: 7383: extern volatile __bit IOCBF6 @ (((unsigned) &IOCBF)*8) + 6;
[; ;pic16f1938.h: 7385: extern volatile __bit IOCBF7 @ (((unsigned) &IOCBF)*8) + 7;
[; ;pic16f1938.h: 7387: extern volatile __bit IOCBN0 @ (((unsigned) &IOCBN)*8) + 0;
[; ;pic16f1938.h: 7389: extern volatile __bit IOCBN1 @ (((unsigned) &IOCBN)*8) + 1;
[; ;pic16f1938.h: 7391: extern volatile __bit IOCBN2 @ (((unsigned) &IOCBN)*8) + 2;
[; ;pic16f1938.h: 7393: extern volatile __bit IOCBN3 @ (((unsigned) &IOCBN)*8) + 3;
[; ;pic16f1938.h: 7395: extern volatile __bit IOCBN4 @ (((unsigned) &IOCBN)*8) + 4;
[; ;pic16f1938.h: 7397: extern volatile __bit IOCBN5 @ (((unsigned) &IOCBN)*8) + 5;
[; ;pic16f1938.h: 7399: extern volatile __bit IOCBN6 @ (((unsigned) &IOCBN)*8) + 6;
[; ;pic16f1938.h: 7401: extern volatile __bit IOCBN7 @ (((unsigned) &IOCBN)*8) + 7;
[; ;pic16f1938.h: 7403: extern volatile __bit IOCBP0 @ (((unsigned) &IOCBP)*8) + 0;
[; ;pic16f1938.h: 7405: extern volatile __bit IOCBP1 @ (((unsigned) &IOCBP)*8) + 1;
[; ;pic16f1938.h: 7407: extern volatile __bit IOCBP2 @ (((unsigned) &IOCBP)*8) + 2;
[; ;pic16f1938.h: 7409: extern volatile __bit IOCBP3 @ (((unsigned) &IOCBP)*8) + 3;
[; ;pic16f1938.h: 7411: extern volatile __bit IOCBP4 @ (((unsigned) &IOCBP)*8) + 4;
[; ;pic16f1938.h: 7413: extern volatile __bit IOCBP5 @ (((unsigned) &IOCBP)*8) + 5;
[; ;pic16f1938.h: 7415: extern volatile __bit IOCBP6 @ (((unsigned) &IOCBP)*8) + 6;
[; ;pic16f1938.h: 7417: extern volatile __bit IOCBP7 @ (((unsigned) &IOCBP)*8) + 7;
[; ;pic16f1938.h: 7419: extern volatile __bit IOCIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f1938.h: 7421: extern volatile __bit IOCIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f1938.h: 7423: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f1938.h: 7425: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f1938.h: 7427: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f1938.h: 7429: extern volatile __bit IRCF3 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f1938.h: 7431: extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic16f1938.h: 7433: extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic16f1938.h: 7435: extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic16f1938.h: 7437: extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;
[; ;pic16f1938.h: 7439: extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic16f1938.h: 7441: extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;
[; ;pic16f1938.h: 7443: extern volatile __bit LATA6 @ (((unsigned) &LATA)*8) + 6;
[; ;pic16f1938.h: 7445: extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;
[; ;pic16f1938.h: 7447: extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;
[; ;pic16f1938.h: 7449: extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;
[; ;pic16f1938.h: 7451: extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;
[; ;pic16f1938.h: 7453: extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;
[; ;pic16f1938.h: 7455: extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic16f1938.h: 7457: extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic16f1938.h: 7459: extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic16f1938.h: 7461: extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic16f1938.h: 7463: extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic16f1938.h: 7465: extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic16f1938.h: 7467: extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic16f1938.h: 7469: extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic16f1938.h: 7471: extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic16f1938.h: 7473: extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic16f1938.h: 7475: extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic16f1938.h: 7477: extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic16f1938.h: 7479: extern volatile __bit LATE3 @ (((unsigned) &LATE)*8) + 3;
[; ;pic16f1938.h: 7481: extern volatile __bit LCDA @ (((unsigned) &LCDPS)*8) + 5;
[; ;pic16f1938.h: 7483: extern volatile __bit LCDCST0 @ (((unsigned) &LCDCST)*8) + 0;
[; ;pic16f1938.h: 7485: extern volatile __bit LCDCST1 @ (((unsigned) &LCDCST)*8) + 1;
[; ;pic16f1938.h: 7487: extern volatile __bit LCDCST2 @ (((unsigned) &LCDCST)*8) + 2;
[; ;pic16f1938.h: 7489: extern volatile __bit LCDEN @ (((unsigned) &LCDCON)*8) + 7;
[; ;pic16f1938.h: 7491: extern volatile __bit LCDIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f1938.h: 7493: extern volatile __bit LCDIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f1938.h: 7495: extern volatile __bit LCDIRE @ (((unsigned) &LCDREF)*8) + 7;
[; ;pic16f1938.h: 7497: extern volatile __bit LCDIRI @ (((unsigned) &LCDREF)*8) + 5;
[; ;pic16f1938.h: 7499: extern volatile __bit LCDIRS @ (((unsigned) &LCDREF)*8) + 6;
[; ;pic16f1938.h: 7501: extern volatile __bit LFIOFR @ (((unsigned) &OSCSTAT)*8) + 1;
[; ;pic16f1938.h: 7503: extern volatile __bit LMUX0 @ (((unsigned) &LCDCON)*8) + 0;
[; ;pic16f1938.h: 7505: extern volatile __bit LMUX1 @ (((unsigned) &LCDCON)*8) + 1;
[; ;pic16f1938.h: 7507: extern volatile __bit LP0 @ (((unsigned) &LCDPS)*8) + 0;
[; ;pic16f1938.h: 7509: extern volatile __bit LP1 @ (((unsigned) &LCDPS)*8) + 1;
[; ;pic16f1938.h: 7511: extern volatile __bit LP2 @ (((unsigned) &LCDPS)*8) + 2;
[; ;pic16f1938.h: 7513: extern volatile __bit LP3 @ (((unsigned) &LCDPS)*8) + 3;
[; ;pic16f1938.h: 7515: extern volatile __bit LRLAP0 @ (((unsigned) &LCDRL)*8) + 6;
[; ;pic16f1938.h: 7517: extern volatile __bit LRLAP1 @ (((unsigned) &LCDRL)*8) + 7;
[; ;pic16f1938.h: 7519: extern volatile __bit LRLAT0 @ (((unsigned) &LCDRL)*8) + 0;
[; ;pic16f1938.h: 7521: extern volatile __bit LRLAT1 @ (((unsigned) &LCDRL)*8) + 1;
[; ;pic16f1938.h: 7523: extern volatile __bit LRLAT2 @ (((unsigned) &LCDRL)*8) + 2;
[; ;pic16f1938.h: 7525: extern volatile __bit LRLBP0 @ (((unsigned) &LCDRL)*8) + 4;
[; ;pic16f1938.h: 7527: extern volatile __bit LRLBP1 @ (((unsigned) &LCDRL)*8) + 5;
[; ;pic16f1938.h: 7529: extern volatile __bit LWLO @ (((unsigned) &EECON1)*8) + 5;
[; ;pic16f1938.h: 7531: extern volatile __bit MC1OUT @ (((unsigned) &CMOUT)*8) + 0;
[; ;pic16f1938.h: 7533: extern volatile __bit MC2OUT @ (((unsigned) &CMOUT)*8) + 1;
[; ;pic16f1938.h: 7535: extern volatile __bit MFIOFR @ (((unsigned) &OSCSTAT)*8) + 2;
[; ;pic16f1938.h: 7537: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f1938.h: 7539: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f1938.h: 7541: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f1938.h: 7543: extern volatile __bit OSTS @ (((unsigned) &OSCSTAT)*8) + 5;
[; ;pic16f1938.h: 7545: extern volatile __bit P1DC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f1938.h: 7547: extern volatile __bit P1DC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f1938.h: 7549: extern volatile __bit P1DC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f1938.h: 7551: extern volatile __bit P1DC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f1938.h: 7553: extern volatile __bit P1DC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f1938.h: 7555: extern volatile __bit P1DC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f1938.h: 7557: extern volatile __bit P1DC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f1938.h: 7559: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f1938.h: 7561: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f1938.h: 7563: extern volatile __bit P1RSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f1938.h: 7565: extern volatile __bit P2BSEL @ (((unsigned) &APFCON)*8) + 4;
[; ;pic16f1938.h: 7567: extern volatile __bit P2DC0 @ (((unsigned) &PWM2CON)*8) + 0;
[; ;pic16f1938.h: 7569: extern volatile __bit P2DC1 @ (((unsigned) &PWM2CON)*8) + 1;
[; ;pic16f1938.h: 7571: extern volatile __bit P2DC2 @ (((unsigned) &PWM2CON)*8) + 2;
[; ;pic16f1938.h: 7573: extern volatile __bit P2DC3 @ (((unsigned) &PWM2CON)*8) + 3;
[; ;pic16f1938.h: 7575: extern volatile __bit P2DC4 @ (((unsigned) &PWM2CON)*8) + 4;
[; ;pic16f1938.h: 7577: extern volatile __bit P2DC5 @ (((unsigned) &PWM2CON)*8) + 5;
[; ;pic16f1938.h: 7579: extern volatile __bit P2DC6 @ (((unsigned) &PWM2CON)*8) + 6;
[; ;pic16f1938.h: 7581: extern volatile __bit P2M0 @ (((unsigned) &CCP2CON)*8) + 6;
[; ;pic16f1938.h: 7583: extern volatile __bit P2M1 @ (((unsigned) &CCP2CON)*8) + 7;
[; ;pic16f1938.h: 7585: extern volatile __bit P2RSEN @ (((unsigned) &PWM2CON)*8) + 7;
[; ;pic16f1938.h: 7587: extern volatile __bit P3DC0 @ (((unsigned) &PWM3CON)*8) + 0;
[; ;pic16f1938.h: 7589: extern volatile __bit P3DC1 @ (((unsigned) &PWM3CON)*8) + 1;
[; ;pic16f1938.h: 7591: extern volatile __bit P3DC2 @ (((unsigned) &PWM3CON)*8) + 2;
[; ;pic16f1938.h: 7593: extern volatile __bit P3DC3 @ (((unsigned) &PWM3CON)*8) + 3;
[; ;pic16f1938.h: 7595: extern volatile __bit P3DC4 @ (((unsigned) &PWM3CON)*8) + 4;
[; ;pic16f1938.h: 7597: extern volatile __bit P3DC5 @ (((unsigned) &PWM3CON)*8) + 5;
[; ;pic16f1938.h: 7599: extern volatile __bit P3DC6 @ (((unsigned) &PWM3CON)*8) + 6;
[; ;pic16f1938.h: 7601: extern volatile __bit P3M0 @ (((unsigned) &CCP3CON)*8) + 6;
[; ;pic16f1938.h: 7603: extern volatile __bit P3M1 @ (((unsigned) &CCP3CON)*8) + 7;
[; ;pic16f1938.h: 7605: extern volatile __bit P3RSEN @ (((unsigned) &PWM3CON)*8) + 7;
[; ;pic16f1938.h: 7607: extern volatile __bit PCIE @ (((unsigned) &SSPCON3)*8) + 6;
[; ;pic16f1938.h: 7609: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f1938.h: 7611: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f1938.h: 7613: extern volatile __bit PLLR @ (((unsigned) &OSCSTAT)*8) + 6;
[; ;pic16f1938.h: 7615: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f1938.h: 7617: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f1938.h: 7619: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f1938.h: 7621: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f1938.h: 7623: extern volatile __bit PSS1AC0 @ (((unsigned) &CCP1AS)*8) + 2;
[; ;pic16f1938.h: 7625: extern volatile __bit PSS1AC1 @ (((unsigned) &CCP1AS)*8) + 3;
[; ;pic16f1938.h: 7627: extern volatile __bit PSS1BD0 @ (((unsigned) &CCP1AS)*8) + 0;
[; ;pic16f1938.h: 7629: extern volatile __bit PSS1BD1 @ (((unsigned) &CCP1AS)*8) + 1;
[; ;pic16f1938.h: 7631: extern volatile __bit PSS2AC0 @ (((unsigned) &CCP2AS)*8) + 2;
[; ;pic16f1938.h: 7633: extern volatile __bit PSS2AC1 @ (((unsigned) &CCP2AS)*8) + 3;
[; ;pic16f1938.h: 7635: extern volatile __bit PSS2BD0 @ (((unsigned) &CCP2AS)*8) + 0;
[; ;pic16f1938.h: 7637: extern volatile __bit PSS2BD1 @ (((unsigned) &CCP2AS)*8) + 1;
[; ;pic16f1938.h: 7639: extern volatile __bit PSS3AC0 @ (((unsigned) &CCP3AS)*8) + 2;
[; ;pic16f1938.h: 7641: extern volatile __bit PSS3AC1 @ (((unsigned) &CCP3AS)*8) + 3;
[; ;pic16f1938.h: 7643: extern volatile __bit PSS3BD0 @ (((unsigned) &CCP3AS)*8) + 0;
[; ;pic16f1938.h: 7645: extern volatile __bit PSS3BD1 @ (((unsigned) &CCP3AS)*8) + 1;
[; ;pic16f1938.h: 7647: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f1938.h: 7649: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f1938.h: 7651: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f1938.h: 7653: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f1938.h: 7655: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f1938.h: 7657: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f1938.h: 7659: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f1938.h: 7661: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f1938.h: 7663: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f1938.h: 7665: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f1938.h: 7667: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f1938.h: 7669: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f1938.h: 7671: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f1938.h: 7673: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f1938.h: 7675: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f1938.h: 7677: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f1938.h: 7679: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f1938.h: 7681: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f1938.h: 7683: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f1938.h: 7685: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f1938.h: 7687: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f1938.h: 7689: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f1938.h: 7691: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f1938.h: 7693: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f1938.h: 7695: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f1938.h: 7697: extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic16f1938.h: 7699: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f1938.h: 7701: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f1938.h: 7703: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f1938.h: 7705: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f1938.h: 7707: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f1938.h: 7709: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f1938.h: 7711: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f1938.h: 7713: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f1938.h: 7715: extern volatile __bit SBCDE @ (((unsigned) &SSPCON3)*8) + 2;
[; ;pic16f1938.h: 7717: extern volatile __bit SBOREN @ (((unsigned) &BORCON)*8) + 7;
[; ;pic16f1938.h: 7719: extern volatile __bit SCIE @ (((unsigned) &SSPCON3)*8) + 5;
[; ;pic16f1938.h: 7721: extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic16f1938.h: 7723: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f1938.h: 7725: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f1938.h: 7727: extern volatile __bit SDAHT @ (((unsigned) &SSPCON3)*8) + 3;
[; ;pic16f1938.h: 7729: extern volatile __bit SE0 @ (((unsigned) &LCDSE0)*8) + 0;
[; ;pic16f1938.h: 7731: extern volatile __bit SE1 @ (((unsigned) &LCDSE0)*8) + 1;
[; ;pic16f1938.h: 7733: extern volatile __bit SE10 @ (((unsigned) &LCDSE1)*8) + 2;
[; ;pic16f1938.h: 7735: extern volatile __bit SE11 @ (((unsigned) &LCDSE1)*8) + 3;
[; ;pic16f1938.h: 7737: extern volatile __bit SE12 @ (((unsigned) &LCDSE1)*8) + 4;
[; ;pic16f1938.h: 7739: extern volatile __bit SE13 @ (((unsigned) &LCDSE1)*8) + 5;
[; ;pic16f1938.h: 7741: extern volatile __bit SE14 @ (((unsigned) &LCDSE1)*8) + 6;
[; ;pic16f1938.h: 7743: extern volatile __bit SE15 @ (((unsigned) &LCDSE1)*8) + 7;
[; ;pic16f1938.h: 7745: extern volatile __bit SE2 @ (((unsigned) &LCDSE0)*8) + 2;
[; ;pic16f1938.h: 7747: extern volatile __bit SE3 @ (((unsigned) &LCDSE0)*8) + 3;
[; ;pic16f1938.h: 7749: extern volatile __bit SE4 @ (((unsigned) &LCDSE0)*8) + 4;
[; ;pic16f1938.h: 7751: extern volatile __bit SE5 @ (((unsigned) &LCDSE0)*8) + 5;
[; ;pic16f1938.h: 7753: extern volatile __bit SE6 @ (((unsigned) &LCDSE0)*8) + 6;
[; ;pic16f1938.h: 7755: extern volatile __bit SE7 @ (((unsigned) &LCDSE0)*8) + 7;
[; ;pic16f1938.h: 7757: extern volatile __bit SE8 @ (((unsigned) &LCDSE1)*8) + 0;
[; ;pic16f1938.h: 7759: extern volatile __bit SE9 @ (((unsigned) &LCDSE1)*8) + 1;
[; ;pic16f1938.h: 7761: extern volatile __bit SEG0COM0 @ (((unsigned) &LCDDATA0)*8) + 0;
[; ;pic16f1938.h: 7763: extern volatile __bit SEG0COM1 @ (((unsigned) &LCDDATA3)*8) + 0;
[; ;pic16f1938.h: 7765: extern volatile __bit SEG0COM2 @ (((unsigned) &LCDDATA6)*8) + 0;
[; ;pic16f1938.h: 7767: extern volatile __bit SEG0COM3 @ (((unsigned) &LCDDATA9)*8) + 0;
[; ;pic16f1938.h: 7769: extern volatile __bit SEG10COM0 @ (((unsigned) &LCDDATA1)*8) + 2;
[; ;pic16f1938.h: 7771: extern volatile __bit SEG10COM1 @ (((unsigned) &LCDDATA4)*8) + 2;
[; ;pic16f1938.h: 7773: extern volatile __bit SEG10COM2 @ (((unsigned) &LCDDATA7)*8) + 2;
[; ;pic16f1938.h: 7775: extern volatile __bit SEG10COM3 @ (((unsigned) &LCDDATA10)*8) + 2;
[; ;pic16f1938.h: 7777: extern volatile __bit SEG11COM0 @ (((unsigned) &LCDDATA1)*8) + 3;
[; ;pic16f1938.h: 7779: extern volatile __bit SEG11COM1 @ (((unsigned) &LCDDATA4)*8) + 3;
[; ;pic16f1938.h: 7781: extern volatile __bit SEG11COM2 @ (((unsigned) &LCDDATA7)*8) + 3;
[; ;pic16f1938.h: 7783: extern volatile __bit SEG11COM3 @ (((unsigned) &LCDDATA10)*8) + 3;
[; ;pic16f1938.h: 7785: extern volatile __bit SEG12COM0 @ (((unsigned) &LCDDATA1)*8) + 4;
[; ;pic16f1938.h: 7787: extern volatile __bit SEG12COM1 @ (((unsigned) &LCDDATA4)*8) + 4;
[; ;pic16f1938.h: 7789: extern volatile __bit SEG12COM2 @ (((unsigned) &LCDDATA7)*8) + 4;
[; ;pic16f1938.h: 7791: extern volatile __bit SEG12COM3 @ (((unsigned) &LCDDATA10)*8) + 4;
[; ;pic16f1938.h: 7793: extern volatile __bit SEG13COM0 @ (((unsigned) &LCDDATA1)*8) + 5;
[; ;pic16f1938.h: 7795: extern volatile __bit SEG13COM1 @ (((unsigned) &LCDDATA4)*8) + 5;
[; ;pic16f1938.h: 7797: extern volatile __bit SEG13COM2 @ (((unsigned) &LCDDATA7)*8) + 5;
[; ;pic16f1938.h: 7799: extern volatile __bit SEG13COM3 @ (((unsigned) &LCDDATA10)*8) + 5;
[; ;pic16f1938.h: 7801: extern volatile __bit SEG14COM0 @ (((unsigned) &LCDDATA1)*8) + 6;
[; ;pic16f1938.h: 7803: extern volatile __bit SEG14COM1 @ (((unsigned) &LCDDATA4)*8) + 6;
[; ;pic16f1938.h: 7805: extern volatile __bit SEG14COM2 @ (((unsigned) &LCDDATA7)*8) + 6;
[; ;pic16f1938.h: 7807: extern volatile __bit SEG14COM3 @ (((unsigned) &LCDDATA10)*8) + 6;
[; ;pic16f1938.h: 7809: extern volatile __bit SEG15COM0 @ (((unsigned) &LCDDATA1)*8) + 7;
[; ;pic16f1938.h: 7811: extern volatile __bit SEG15COM1 @ (((unsigned) &LCDDATA4)*8) + 7;
[; ;pic16f1938.h: 7813: extern volatile __bit SEG15COM2 @ (((unsigned) &LCDDATA7)*8) + 7;
[; ;pic16f1938.h: 7815: extern volatile __bit SEG15COM3 @ (((unsigned) &LCDDATA10)*8) + 7;
[; ;pic16f1938.h: 7817: extern volatile __bit SEG1COM0 @ (((unsigned) &LCDDATA0)*8) + 1;
[; ;pic16f1938.h: 7819: extern volatile __bit SEG1COM1 @ (((unsigned) &LCDDATA3)*8) + 1;
[; ;pic16f1938.h: 7821: extern volatile __bit SEG1COM2 @ (((unsigned) &LCDDATA6)*8) + 1;
[; ;pic16f1938.h: 7823: extern volatile __bit SEG1COM3 @ (((unsigned) &LCDDATA9)*8) + 1;
[; ;pic16f1938.h: 7825: extern volatile __bit SEG2COM0 @ (((unsigned) &LCDDATA0)*8) + 2;
[; ;pic16f1938.h: 7827: extern volatile __bit SEG2COM1 @ (((unsigned) &LCDDATA3)*8) + 2;
[; ;pic16f1938.h: 7829: extern volatile __bit SEG2COM2 @ (((unsigned) &LCDDATA6)*8) + 2;
[; ;pic16f1938.h: 7831: extern volatile __bit SEG2COM3 @ (((unsigned) &LCDDATA9)*8) + 2;
[; ;pic16f1938.h: 7833: extern volatile __bit SEG3COM0 @ (((unsigned) &LCDDATA0)*8) + 3;
[; ;pic16f1938.h: 7835: extern volatile __bit SEG3COM1 @ (((unsigned) &LCDDATA3)*8) + 3;
[; ;pic16f1938.h: 7837: extern volatile __bit SEG3COM2 @ (((unsigned) &LCDDATA6)*8) + 3;
[; ;pic16f1938.h: 7839: extern volatile __bit SEG3COM3 @ (((unsigned) &LCDDATA9)*8) + 3;
[; ;pic16f1938.h: 7841: extern volatile __bit SEG4COM0 @ (((unsigned) &LCDDATA0)*8) + 4;
[; ;pic16f1938.h: 7843: extern volatile __bit SEG4COM1 @ (((unsigned) &LCDDATA3)*8) + 4;
[; ;pic16f1938.h: 7845: extern volatile __bit SEG4COM2 @ (((unsigned) &LCDDATA6)*8) + 4;
[; ;pic16f1938.h: 7847: extern volatile __bit SEG4COM3 @ (((unsigned) &LCDDATA9)*8) + 4;
[; ;pic16f1938.h: 7849: extern volatile __bit SEG5COM0 @ (((unsigned) &LCDDATA0)*8) + 5;
[; ;pic16f1938.h: 7851: extern volatile __bit SEG5COM1 @ (((unsigned) &LCDDATA3)*8) + 5;
[; ;pic16f1938.h: 7853: extern volatile __bit SEG5COM2 @ (((unsigned) &LCDDATA6)*8) + 5;
[; ;pic16f1938.h: 7855: extern volatile __bit SEG5COM3 @ (((unsigned) &LCDDATA9)*8) + 5;
[; ;pic16f1938.h: 7857: extern volatile __bit SEG6COM0 @ (((unsigned) &LCDDATA0)*8) + 6;
[; ;pic16f1938.h: 7859: extern volatile __bit SEG6COM1 @ (((unsigned) &LCDDATA3)*8) + 6;
[; ;pic16f1938.h: 7861: extern volatile __bit SEG6COM2 @ (((unsigned) &LCDDATA6)*8) + 6;
[; ;pic16f1938.h: 7863: extern volatile __bit SEG6COM3 @ (((unsigned) &LCDDATA9)*8) + 6;
[; ;pic16f1938.h: 7865: extern volatile __bit SEG7COM0 @ (((unsigned) &LCDDATA0)*8) + 7;
[; ;pic16f1938.h: 7867: extern volatile __bit SEG7COM1 @ (((unsigned) &LCDDATA3)*8) + 7;
[; ;pic16f1938.h: 7869: extern volatile __bit SEG7COM2 @ (((unsigned) &LCDDATA6)*8) + 7;
[; ;pic16f1938.h: 7871: extern volatile __bit SEG7COM3 @ (((unsigned) &LCDDATA9)*8) + 7;
[; ;pic16f1938.h: 7873: extern volatile __bit SEG8COM0 @ (((unsigned) &LCDDATA1)*8) + 0;
[; ;pic16f1938.h: 7875: extern volatile __bit SEG8COM1 @ (((unsigned) &LCDDATA4)*8) + 0;
[; ;pic16f1938.h: 7877: extern volatile __bit SEG8COM2 @ (((unsigned) &LCDDATA7)*8) + 0;
[; ;pic16f1938.h: 7879: extern volatile __bit SEG8COM3 @ (((unsigned) &LCDDATA10)*8) + 0;
[; ;pic16f1938.h: 7881: extern volatile __bit SEG9COM0 @ (((unsigned) &LCDDATA1)*8) + 1;
[; ;pic16f1938.h: 7883: extern volatile __bit SEG9COM1 @ (((unsigned) &LCDDATA4)*8) + 1;
[; ;pic16f1938.h: 7885: extern volatile __bit SEG9COM2 @ (((unsigned) &LCDDATA7)*8) + 1;
[; ;pic16f1938.h: 7887: extern volatile __bit SEG9COM3 @ (((unsigned) &LCDDATA10)*8) + 1;
[; ;pic16f1938.h: 7889: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f1938.h: 7891: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f1938.h: 7893: extern volatile __bit SLPEN @ (((unsigned) &LCDCON)*8) + 6;
[; ;pic16f1938.h: 7895: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f1938.h: 7897: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f1938.h: 7899: extern volatile __bit SPLLEN @ (((unsigned) &OSCCON)*8) + 7;
[; ;pic16f1938.h: 7901: extern volatile __bit SRCLK0 @ (((unsigned) &SRCON0)*8) + 4;
[; ;pic16f1938.h: 7903: extern volatile __bit SRCLK1 @ (((unsigned) &SRCON0)*8) + 5;
[; ;pic16f1938.h: 7905: extern volatile __bit SRCLK2 @ (((unsigned) &SRCON0)*8) + 6;
[; ;pic16f1938.h: 7907: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f1938.h: 7909: extern volatile __bit SRLEN @ (((unsigned) &SRCON0)*8) + 7;
[; ;pic16f1938.h: 7911: extern volatile __bit SRNQEN @ (((unsigned) &SRCON0)*8) + 2;
[; ;pic16f1938.h: 7913: extern volatile __bit SRNQSEL @ (((unsigned) &APFCON)*8) + 3;
[; ;pic16f1938.h: 7915: extern volatile __bit SRPR @ (((unsigned) &SRCON0)*8) + 0;
[; ;pic16f1938.h: 7917: extern volatile __bit SRPS @ (((unsigned) &SRCON0)*8) + 1;
[; ;pic16f1938.h: 7919: extern volatile __bit SRQEN @ (((unsigned) &SRCON0)*8) + 3;
[; ;pic16f1938.h: 7921: extern volatile __bit SRRC1E @ (((unsigned) &SRCON1)*8) + 0;
[; ;pic16f1938.h: 7923: extern volatile __bit SRRC2E @ (((unsigned) &SRCON1)*8) + 1;
[; ;pic16f1938.h: 7925: extern volatile __bit SRRCKE @ (((unsigned) &SRCON1)*8) + 2;
[; ;pic16f1938.h: 7927: extern volatile __bit SRRPE @ (((unsigned) &SRCON1)*8) + 3;
[; ;pic16f1938.h: 7929: extern volatile __bit SRSC1E @ (((unsigned) &SRCON1)*8) + 4;
[; ;pic16f1938.h: 7931: extern volatile __bit SRSC2E @ (((unsigned) &SRCON1)*8) + 5;
[; ;pic16f1938.h: 7933: extern volatile __bit SRSCKE @ (((unsigned) &SRCON1)*8) + 6;
[; ;pic16f1938.h: 7935: extern volatile __bit SRSPE @ (((unsigned) &SRCON1)*8) + 7;
[; ;pic16f1938.h: 7937: extern volatile __bit SSPEN @ (((unsigned) &SSPCON1)*8) + 5;
[; ;pic16f1938.h: 7939: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f1938.h: 7941: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f1938.h: 7943: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON1)*8) + 0;
[; ;pic16f1938.h: 7945: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON1)*8) + 1;
[; ;pic16f1938.h: 7947: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON1)*8) + 2;
[; ;pic16f1938.h: 7949: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON1)*8) + 3;
[; ;pic16f1938.h: 7951: extern volatile __bit SSPOV @ (((unsigned) &SSPCON1)*8) + 6;
[; ;pic16f1938.h: 7953: extern volatile __bit SSSEL @ (((unsigned) &APFCON)*8) + 1;
[; ;pic16f1938.h: 7955: extern volatile __bit STKOVF @ (((unsigned) &PCON)*8) + 7;
[; ;pic16f1938.h: 7957: extern volatile __bit STKUNF @ (((unsigned) &PCON)*8) + 6;
[; ;pic16f1938.h: 7959: extern volatile __bit STR1A @ (((unsigned) &PSTR1CON)*8) + 0;
[; ;pic16f1938.h: 7961: extern volatile __bit STR1B @ (((unsigned) &PSTR1CON)*8) + 1;
[; ;pic16f1938.h: 7963: extern volatile __bit STR1C @ (((unsigned) &PSTR1CON)*8) + 2;
[; ;pic16f1938.h: 7965: extern volatile __bit STR1D @ (((unsigned) &PSTR1CON)*8) + 3;
[; ;pic16f1938.h: 7967: extern volatile __bit STR1SYNC @ (((unsigned) &PSTR1CON)*8) + 4;
[; ;pic16f1938.h: 7969: extern volatile __bit STR2A @ (((unsigned) &PSTR2CON)*8) + 0;
[; ;pic16f1938.h: 7971: extern volatile __bit STR2B @ (((unsigned) &PSTR2CON)*8) + 1;
[; ;pic16f1938.h: 7973: extern volatile __bit STR2C @ (((unsigned) &PSTR2CON)*8) + 2;
[; ;pic16f1938.h: 7975: extern volatile __bit STR2D @ (((unsigned) &PSTR2CON)*8) + 3;
[; ;pic16f1938.h: 7977: extern volatile __bit STR2SYNC @ (((unsigned) &PSTR2CON)*8) + 4;
[; ;pic16f1938.h: 7979: extern volatile __bit STR3A @ (((unsigned) &PSTR3CON)*8) + 0;
[; ;pic16f1938.h: 7981: extern volatile __bit STR3B @ (((unsigned) &PSTR3CON)*8) + 1;
[; ;pic16f1938.h: 7983: extern volatile __bit STR3C @ (((unsigned) &PSTR3CON)*8) + 2;
[; ;pic16f1938.h: 7985: extern volatile __bit STR3D @ (((unsigned) &PSTR3CON)*8) + 3;
[; ;pic16f1938.h: 7987: extern volatile __bit STR3SYNC @ (((unsigned) &PSTR3CON)*8) + 4;
[; ;pic16f1938.h: 7989: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f1938.h: 7991: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f1938.h: 7993: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1938.h: 7995: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1938.h: 7997: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1938.h: 7999: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1938.h: 8001: extern volatile __bit T0XCS @ (((unsigned) &CPSCON0)*8) + 0;
[; ;pic16f1938.h: 8003: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f1938.h: 8005: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f1938.h: 8007: extern volatile __bit T1GGO @ (((unsigned) &T1GCON)*8) + 3;
[; ;pic16f1938.h: 8009: extern volatile __bit T1GGO_nDONE @ (((unsigned) &T1GCON)*8) + 3;
[; ;pic16f1938.h: 8011: extern volatile __bit T1GPOL @ (((unsigned) &T1GCON)*8) + 6;
[; ;pic16f1938.h: 8013: extern volatile __bit T1GSEL @ (((unsigned) &APFCON)*8) + 5;
[; ;pic16f1938.h: 8015: extern volatile __bit T1GSPM @ (((unsigned) &T1GCON)*8) + 4;
[; ;pic16f1938.h: 8017: extern volatile __bit T1GSS0 @ (((unsigned) &T1GCON)*8) + 0;
[; ;pic16f1938.h: 8019: extern volatile __bit T1GSS1 @ (((unsigned) &T1GCON)*8) + 1;
[; ;pic16f1938.h: 8021: extern volatile __bit T1GTM @ (((unsigned) &T1GCON)*8) + 5;
[; ;pic16f1938.h: 8023: extern volatile __bit T1GVAL @ (((unsigned) &T1GCON)*8) + 2;
[; ;pic16f1938.h: 8025: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f1938.h: 8027: extern volatile __bit T1OSCR @ (((unsigned) &OSCSTAT)*8) + 7;
[; ;pic16f1938.h: 8029: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f1938.h: 8031: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f1938.h: 8033: extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f1938.h: 8035: extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f1938.h: 8037: extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f1938.h: 8039: extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f1938.h: 8041: extern volatile __bit T4CKPS0 @ (((unsigned) &T4CON)*8) + 0;
[; ;pic16f1938.h: 8043: extern volatile __bit T4CKPS1 @ (((unsigned) &T4CON)*8) + 1;
[; ;pic16f1938.h: 8045: extern volatile __bit T4OUTPS0 @ (((unsigned) &T4CON)*8) + 3;
[; ;pic16f1938.h: 8047: extern volatile __bit T4OUTPS1 @ (((unsigned) &T4CON)*8) + 4;
[; ;pic16f1938.h: 8049: extern volatile __bit T4OUTPS2 @ (((unsigned) &T4CON)*8) + 5;
[; ;pic16f1938.h: 8051: extern volatile __bit T4OUTPS3 @ (((unsigned) &T4CON)*8) + 6;
[; ;pic16f1938.h: 8053: extern volatile __bit T6CKPS0 @ (((unsigned) &T6CON)*8) + 0;
[; ;pic16f1938.h: 8055: extern volatile __bit T6CKPS1 @ (((unsigned) &T6CON)*8) + 1;
[; ;pic16f1938.h: 8057: extern volatile __bit T6OUTPS0 @ (((unsigned) &T6CON)*8) + 3;
[; ;pic16f1938.h: 8059: extern volatile __bit T6OUTPS1 @ (((unsigned) &T6CON)*8) + 4;
[; ;pic16f1938.h: 8061: extern volatile __bit T6OUTPS2 @ (((unsigned) &T6CON)*8) + 5;
[; ;pic16f1938.h: 8063: extern volatile __bit T6OUTPS3 @ (((unsigned) &T6CON)*8) + 6;
[; ;pic16f1938.h: 8065: extern volatile __bit TMR0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1938.h: 8067: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1938.h: 8069: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1938.h: 8071: extern volatile __bit TMR0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1938.h: 8073: extern volatile __bit TMR1CS0 @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f1938.h: 8075: extern volatile __bit TMR1CS1 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f1938.h: 8077: extern volatile __bit TMR1GE @ (((unsigned) &T1GCON)*8) + 7;
[; ;pic16f1938.h: 8079: extern volatile __bit TMR1GIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f1938.h: 8081: extern volatile __bit TMR1GIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f1938.h: 8083: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f1938.h: 8085: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f1938.h: 8087: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f1938.h: 8089: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f1938.h: 8091: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f1938.h: 8093: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f1938.h: 8095: extern volatile __bit TMR4IE @ (((unsigned) &PIE3)*8) + 1;
[; ;pic16f1938.h: 8097: extern volatile __bit TMR4IF @ (((unsigned) &PIR3)*8) + 1;
[; ;pic16f1938.h: 8099: extern volatile __bit TMR4ON @ (((unsigned) &T4CON)*8) + 2;
[; ;pic16f1938.h: 8101: extern volatile __bit TMR6IE @ (((unsigned) &PIE3)*8) + 3;
[; ;pic16f1938.h: 8103: extern volatile __bit TMR6IF @ (((unsigned) &PIR3)*8) + 3;
[; ;pic16f1938.h: 8105: extern volatile __bit TMR6ON @ (((unsigned) &T6CON)*8) + 2;
[; ;pic16f1938.h: 8107: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f1938.h: 8109: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f1938.h: 8111: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f1938.h: 8113: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f1938.h: 8115: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f1938.h: 8117: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f1938.h: 8119: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f1938.h: 8121: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f1938.h: 8123: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f1938.h: 8125: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f1938.h: 8127: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f1938.h: 8129: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f1938.h: 8131: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f1938.h: 8133: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f1938.h: 8135: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f1938.h: 8137: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f1938.h: 8139: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f1938.h: 8141: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f1938.h: 8143: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f1938.h: 8145: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f1938.h: 8147: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f1938.h: 8149: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f1938.h: 8151: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f1938.h: 8153: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f1938.h: 8155: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f1938.h: 8157: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f1938.h: 8159: extern volatile __bit TSEN @ (((unsigned) &FVRCON)*8) + 5;
[; ;pic16f1938.h: 8161: extern volatile __bit TSRNG @ (((unsigned) &FVRCON)*8) + 4;
[; ;pic16f1938.h: 8163: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f1938.h: 8165: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f1938.h: 8167: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f1938.h: 8169: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f1938.h: 8171: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f1938.h: 8173: extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;
[; ;pic16f1938.h: 8175: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f1938.h: 8177: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f1938.h: 8179: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f1938.h: 8181: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f1938.h: 8183: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f1938.h: 8185: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f1938.h: 8187: extern volatile __bit VLCD1PE @ (((unsigned) &LCDREF)*8) + 1;
[; ;pic16f1938.h: 8189: extern volatile __bit VLCD2PE @ (((unsigned) &LCDREF)*8) + 2;
[; ;pic16f1938.h: 8191: extern volatile __bit VLCD3PE @ (((unsigned) &LCDREF)*8) + 3;
[; ;pic16f1938.h: 8193: extern volatile __bit WA @ (((unsigned) &LCDPS)*8) + 4;
[; ;pic16f1938.h: 8195: extern volatile __bit WCOL @ (((unsigned) &SSPCON1)*8) + 7;
[; ;pic16f1938.h: 8197: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f1938.h: 8199: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f1938.h: 8201: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f1938.h: 8203: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f1938.h: 8205: extern volatile __bit WDTPS4 @ (((unsigned) &WDTCON)*8) + 5;
[; ;pic16f1938.h: 8207: extern volatile __bit WERR @ (((unsigned) &LCDCON)*8) + 5;
[; ;pic16f1938.h: 8209: extern volatile __bit WFT @ (((unsigned) &LCDPS)*8) + 7;
[; ;pic16f1938.h: 8211: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f1938.h: 8213: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f1938.h: 8215: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f1938.h: 8217: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f1938.h: 8219: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f1938.h: 8221: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f1938.h: 8223: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f1938.h: 8225: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f1938.h: 8227: extern volatile __bit WPUE3 @ (((unsigned) &WPUE)*8) + 3;
[; ;pic16f1938.h: 8229: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f1938.h: 8231: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f1938.h: 8233: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f1938.h: 8235: extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic16f1938.h: 8237: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f1938.h: 8239: extern volatile __bit Z_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 2;
[; ;pic16f1938.h: 8241: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f1938.h: 8243: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1938.h: 8245: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f1938.h: 8247: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f1938.h: 8249: extern volatile __bit nRI @ (((unsigned) &PCON)*8) + 2;
[; ;pic16f1938.h: 8251: extern volatile __bit nRMCLR @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f1938.h: 8253: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f1938.h: 8255: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f1938.h: 8257: extern volatile __bit nWPUEN @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
[; ;stddef.h: 2: typedef int ptrdiff_t;
[; ;stddef.h: 3: typedef unsigned size_t;
[; ;stddef.h: 4: typedef unsigned short wchar_t;
[; ;stddef.h: 13: extern int errno;
[; ;GenericTypeDefs.h: 65: typedef enum _BOOL { FALSE = 0, TRUE } BOOL;
[; ;GenericTypeDefs.h: 68: typedef enum _BIT { CLEAR = 0, SET } BIT;
[; ;GenericTypeDefs.h: 75: typedef signed int INT;
[; ;GenericTypeDefs.h: 76: typedef signed char INT8;
[; ;GenericTypeDefs.h: 77: typedef signed short int INT16;
[; ;GenericTypeDefs.h: 78: typedef signed long int INT32;
[; ;GenericTypeDefs.h: 82: typedef signed long long INT64;
[; ;GenericTypeDefs.h: 86: typedef unsigned int UINT;
[; ;GenericTypeDefs.h: 87: typedef unsigned char UINT8;
[; ;GenericTypeDefs.h: 88: typedef unsigned short int UINT16;
[; ;GenericTypeDefs.h: 93: typedef unsigned long int UINT32;
[; ;GenericTypeDefs.h: 96: typedef unsigned long long UINT64;
[; ;GenericTypeDefs.h: 99: typedef union
[; ;GenericTypeDefs.h: 100: {
[; ;GenericTypeDefs.h: 101: UINT8 Val;
[; ;GenericTypeDefs.h: 102: struct
[; ;GenericTypeDefs.h: 103: {
[; ;GenericTypeDefs.h: 104: UINT8 b0:1;
[; ;GenericTypeDefs.h: 105: UINT8 b1:1;
[; ;GenericTypeDefs.h: 106: UINT8 b2:1;
[; ;GenericTypeDefs.h: 107: UINT8 b3:1;
[; ;GenericTypeDefs.h: 108: UINT8 b4:1;
[; ;GenericTypeDefs.h: 109: UINT8 b5:1;
[; ;GenericTypeDefs.h: 110: UINT8 b6:1;
[; ;GenericTypeDefs.h: 111: UINT8 b7:1;
[; ;GenericTypeDefs.h: 112: } bits;
[; ;GenericTypeDefs.h: 113: } UINT8_VAL, UINT8_BITS;
[; ;GenericTypeDefs.h: 115: typedef union
[; ;GenericTypeDefs.h: 116: {
[; ;GenericTypeDefs.h: 117: UINT16 Val;
[; ;GenericTypeDefs.h: 118: UINT8 v[2] ;
[; ;GenericTypeDefs.h: 119: struct 
[; ;GenericTypeDefs.h: 120: {
[; ;GenericTypeDefs.h: 121: UINT8 LB;
[; ;GenericTypeDefs.h: 122: UINT8 HB;
[; ;GenericTypeDefs.h: 123: } byte;
[; ;GenericTypeDefs.h: 124: struct 
[; ;GenericTypeDefs.h: 125: {
[; ;GenericTypeDefs.h: 126: UINT8 b0:1;
[; ;GenericTypeDefs.h: 127: UINT8 b1:1;
[; ;GenericTypeDefs.h: 128: UINT8 b2:1;
[; ;GenericTypeDefs.h: 129: UINT8 b3:1;
[; ;GenericTypeDefs.h: 130: UINT8 b4:1;
[; ;GenericTypeDefs.h: 131: UINT8 b5:1;
[; ;GenericTypeDefs.h: 132: UINT8 b6:1;
[; ;GenericTypeDefs.h: 133: UINT8 b7:1;
[; ;GenericTypeDefs.h: 134: UINT8 b8:1;
[; ;GenericTypeDefs.h: 135: UINT8 b9:1;
[; ;GenericTypeDefs.h: 136: UINT8 b10:1;
[; ;GenericTypeDefs.h: 137: UINT8 b11:1;
[; ;GenericTypeDefs.h: 138: UINT8 b12:1;
[; ;GenericTypeDefs.h: 139: UINT8 b13:1;
[; ;GenericTypeDefs.h: 140: UINT8 b14:1;
[; ;GenericTypeDefs.h: 141: UINT8 b15:1;
[; ;GenericTypeDefs.h: 142: } bits;
[; ;GenericTypeDefs.h: 143: } UINT16_VAL, UINT16_BITS;
[; ;GenericTypeDefs.h: 187: typedef union
[; ;GenericTypeDefs.h: 188: {
[; ;GenericTypeDefs.h: 189: UINT32 Val;
[; ;GenericTypeDefs.h: 190: UINT16 w[2] ;
[; ;GenericTypeDefs.h: 191: UINT8 v[4] ;
[; ;GenericTypeDefs.h: 192: struct 
[; ;GenericTypeDefs.h: 193: {
[; ;GenericTypeDefs.h: 194: UINT16 LW;
[; ;GenericTypeDefs.h: 195: UINT16 HW;
[; ;GenericTypeDefs.h: 196: } word;
[; ;GenericTypeDefs.h: 197: struct 
[; ;GenericTypeDefs.h: 198: {
[; ;GenericTypeDefs.h: 199: UINT8 LB;
[; ;GenericTypeDefs.h: 200: UINT8 HB;
[; ;GenericTypeDefs.h: 201: UINT8 UB;
[; ;GenericTypeDefs.h: 202: UINT8 MB;
[; ;GenericTypeDefs.h: 203: } byte;
[; ;GenericTypeDefs.h: 204: struct 
[; ;GenericTypeDefs.h: 205: {
[; ;GenericTypeDefs.h: 206: UINT16_VAL low;
[; ;GenericTypeDefs.h: 207: UINT16_VAL high;
[; ;GenericTypeDefs.h: 208: }wordUnion;
[; ;GenericTypeDefs.h: 209: struct 
[; ;GenericTypeDefs.h: 210: {
[; ;GenericTypeDefs.h: 211: UINT8 b0:1;
[; ;GenericTypeDefs.h: 212: UINT8 b1:1;
[; ;GenericTypeDefs.h: 213: UINT8 b2:1;
[; ;GenericTypeDefs.h: 214: UINT8 b3:1;
[; ;GenericTypeDefs.h: 215: UINT8 b4:1;
[; ;GenericTypeDefs.h: 216: UINT8 b5:1;
[; ;GenericTypeDefs.h: 217: UINT8 b6:1;
[; ;GenericTypeDefs.h: 218: UINT8 b7:1;
[; ;GenericTypeDefs.h: 219: UINT8 b8:1;
[; ;GenericTypeDefs.h: 220: UINT8 b9:1;
[; ;GenericTypeDefs.h: 221: UINT8 b10:1;
[; ;GenericTypeDefs.h: 222: UINT8 b11:1;
[; ;GenericTypeDefs.h: 223: UINT8 b12:1;
[; ;GenericTypeDefs.h: 224: UINT8 b13:1;
[; ;GenericTypeDefs.h: 225: UINT8 b14:1;
[; ;GenericTypeDefs.h: 226: UINT8 b15:1;
[; ;GenericTypeDefs.h: 227: UINT8 b16:1;
[; ;GenericTypeDefs.h: 228: UINT8 b17:1;
[; ;GenericTypeDefs.h: 229: UINT8 b18:1;
[; ;GenericTypeDefs.h: 230: UINT8 b19:1;
[; ;GenericTypeDefs.h: 231: UINT8 b20:1;
[; ;GenericTypeDefs.h: 232: UINT8 b21:1;
[; ;GenericTypeDefs.h: 233: UINT8 b22:1;
[; ;GenericTypeDefs.h: 234: UINT8 b23:1;
[; ;GenericTypeDefs.h: 235: UINT8 b24:1;
[; ;GenericTypeDefs.h: 236: UINT8 b25:1;
[; ;GenericTypeDefs.h: 237: UINT8 b26:1;
[; ;GenericTypeDefs.h: 238: UINT8 b27:1;
[; ;GenericTypeDefs.h: 239: UINT8 b28:1;
[; ;GenericTypeDefs.h: 240: UINT8 b29:1;
[; ;GenericTypeDefs.h: 241: UINT8 b30:1;
[; ;GenericTypeDefs.h: 242: UINT8 b31:1;
[; ;GenericTypeDefs.h: 243: } bits;
[; ;GenericTypeDefs.h: 244: } UINT32_VAL;
[; ;GenericTypeDefs.h: 248: typedef union
[; ;GenericTypeDefs.h: 249: {
[; ;GenericTypeDefs.h: 250: UINT64 Val;
[; ;GenericTypeDefs.h: 251: UINT32 d[2] ;
[; ;GenericTypeDefs.h: 252: UINT16 w[4] ;
[; ;GenericTypeDefs.h: 253: UINT8 v[8] ;
[; ;GenericTypeDefs.h: 254: struct 
[; ;GenericTypeDefs.h: 255: {
[; ;GenericTypeDefs.h: 256: UINT32 LD;
[; ;GenericTypeDefs.h: 257: UINT32 HD;
[; ;GenericTypeDefs.h: 258: } dword;
[; ;GenericTypeDefs.h: 259: struct 
[; ;GenericTypeDefs.h: 260: {
[; ;GenericTypeDefs.h: 261: UINT16 LW;
[; ;GenericTypeDefs.h: 262: UINT16 HW;
[; ;GenericTypeDefs.h: 263: UINT16 UW;
[; ;GenericTypeDefs.h: 264: UINT16 MW;
[; ;GenericTypeDefs.h: 265: } word;
[; ;GenericTypeDefs.h: 266: struct 
[; ;GenericTypeDefs.h: 267: {
[; ;GenericTypeDefs.h: 268: UINT8 b0:1;
[; ;GenericTypeDefs.h: 269: UINT8 b1:1;
[; ;GenericTypeDefs.h: 270: UINT8 b2:1;
[; ;GenericTypeDefs.h: 271: UINT8 b3:1;
[; ;GenericTypeDefs.h: 272: UINT8 b4:1;
[; ;GenericTypeDefs.h: 273: UINT8 b5:1;
[; ;GenericTypeDefs.h: 274: UINT8 b6:1;
[; ;GenericTypeDefs.h: 275: UINT8 b7:1;
[; ;GenericTypeDefs.h: 276: UINT8 b8:1;
[; ;GenericTypeDefs.h: 277: UINT8 b9:1;
[; ;GenericTypeDefs.h: 278: UINT8 b10:1;
[; ;GenericTypeDefs.h: 279: UINT8 b11:1;
[; ;GenericTypeDefs.h: 280: UINT8 b12:1;
[; ;GenericTypeDefs.h: 281: UINT8 b13:1;
[; ;GenericTypeDefs.h: 282: UINT8 b14:1;
[; ;GenericTypeDefs.h: 283: UINT8 b15:1;
[; ;GenericTypeDefs.h: 284: UINT8 b16:1;
[; ;GenericTypeDefs.h: 285: UINT8 b17:1;
[; ;GenericTypeDefs.h: 286: UINT8 b18:1;
[; ;GenericTypeDefs.h: 287: UINT8 b19:1;
[; ;GenericTypeDefs.h: 288: UINT8 b20:1;
[; ;GenericTypeDefs.h: 289: UINT8 b21:1;
[; ;GenericTypeDefs.h: 290: UINT8 b22:1;
[; ;GenericTypeDefs.h: 291: UINT8 b23:1;
[; ;GenericTypeDefs.h: 292: UINT8 b24:1;
[; ;GenericTypeDefs.h: 293: UINT8 b25:1;
[; ;GenericTypeDefs.h: 294: UINT8 b26:1;
[; ;GenericTypeDefs.h: 295: UINT8 b27:1;
[; ;GenericTypeDefs.h: 296: UINT8 b28:1;
[; ;GenericTypeDefs.h: 297: UINT8 b29:1;
[; ;GenericTypeDefs.h: 298: UINT8 b30:1;
[; ;GenericTypeDefs.h: 299: UINT8 b31:1;
[; ;GenericTypeDefs.h: 300: UINT8 b32:1;
[; ;GenericTypeDefs.h: 301: UINT8 b33:1;
[; ;GenericTypeDefs.h: 302: UINT8 b34:1;
[; ;GenericTypeDefs.h: 303: UINT8 b35:1;
[; ;GenericTypeDefs.h: 304: UINT8 b36:1;
[; ;GenericTypeDefs.h: 305: UINT8 b37:1;
[; ;GenericTypeDefs.h: 306: UINT8 b38:1;
[; ;GenericTypeDefs.h: 307: UINT8 b39:1;
[; ;GenericTypeDefs.h: 308: UINT8 b40:1;
[; ;GenericTypeDefs.h: 309: UINT8 b41:1;
[; ;GenericTypeDefs.h: 310: UINT8 b42:1;
[; ;GenericTypeDefs.h: 311: UINT8 b43:1;
[; ;GenericTypeDefs.h: 312: UINT8 b44:1;
[; ;GenericTypeDefs.h: 313: UINT8 b45:1;
[; ;GenericTypeDefs.h: 314: UINT8 b46:1;
[; ;GenericTypeDefs.h: 315: UINT8 b47:1;
[; ;GenericTypeDefs.h: 316: UINT8 b48:1;
[; ;GenericTypeDefs.h: 317: UINT8 b49:1;
[; ;GenericTypeDefs.h: 318: UINT8 b50:1;
[; ;GenericTypeDefs.h: 319: UINT8 b51:1;
[; ;GenericTypeDefs.h: 320: UINT8 b52:1;
[; ;GenericTypeDefs.h: 321: UINT8 b53:1;
[; ;GenericTypeDefs.h: 322: UINT8 b54:1;
[; ;GenericTypeDefs.h: 323: UINT8 b55:1;
[; ;GenericTypeDefs.h: 324: UINT8 b56:1;
[; ;GenericTypeDefs.h: 325: UINT8 b57:1;
[; ;GenericTypeDefs.h: 326: UINT8 b58:1;
[; ;GenericTypeDefs.h: 327: UINT8 b59:1;
[; ;GenericTypeDefs.h: 328: UINT8 b60:1;
[; ;GenericTypeDefs.h: 329: UINT8 b61:1;
[; ;GenericTypeDefs.h: 330: UINT8 b62:1;
[; ;GenericTypeDefs.h: 331: UINT8 b63:1;
[; ;GenericTypeDefs.h: 332: } bits;
[; ;GenericTypeDefs.h: 333: } UINT64_VAL;
[; ;GenericTypeDefs.h: 339: typedef void VOID;
[; ;GenericTypeDefs.h: 341: typedef char CHAR8;
[; ;GenericTypeDefs.h: 342: typedef unsigned char UCHAR8;
[; ;GenericTypeDefs.h: 344: typedef unsigned char BYTE;
[; ;GenericTypeDefs.h: 345: typedef unsigned short int WORD;
[; ;GenericTypeDefs.h: 346: typedef unsigned long DWORD;
[; ;GenericTypeDefs.h: 349: typedef unsigned long long QWORD;
[; ;GenericTypeDefs.h: 350: typedef signed char CHAR;
[; ;GenericTypeDefs.h: 351: typedef signed short int SHORT;
[; ;GenericTypeDefs.h: 352: typedef signed long LONG;
[; ;GenericTypeDefs.h: 355: typedef signed long long LONGLONG;
[; ;GenericTypeDefs.h: 356: typedef union
[; ;GenericTypeDefs.h: 357: {
[; ;GenericTypeDefs.h: 358: BYTE Val;
[; ;GenericTypeDefs.h: 359: struct 
[; ;GenericTypeDefs.h: 360: {
[; ;GenericTypeDefs.h: 361: BYTE b0:1;
[; ;GenericTypeDefs.h: 362: BYTE b1:1;
[; ;GenericTypeDefs.h: 363: BYTE b2:1;
[; ;GenericTypeDefs.h: 364: BYTE b3:1;
[; ;GenericTypeDefs.h: 365: BYTE b4:1;
[; ;GenericTypeDefs.h: 366: BYTE b5:1;
[; ;GenericTypeDefs.h: 367: BYTE b6:1;
[; ;GenericTypeDefs.h: 368: BYTE b7:1;
[; ;GenericTypeDefs.h: 369: } bits;
[; ;GenericTypeDefs.h: 370: } BYTE_VAL, BYTE_BITS;
[; ;GenericTypeDefs.h: 372: typedef union
[; ;GenericTypeDefs.h: 373: {
[; ;GenericTypeDefs.h: 374: WORD Val;
[; ;GenericTypeDefs.h: 375: BYTE v[2] ;
[; ;GenericTypeDefs.h: 376: struct 
[; ;GenericTypeDefs.h: 377: {
[; ;GenericTypeDefs.h: 378: BYTE LB;
[; ;GenericTypeDefs.h: 379: BYTE HB;
[; ;GenericTypeDefs.h: 380: } byte;
[; ;GenericTypeDefs.h: 381: struct 
[; ;GenericTypeDefs.h: 382: {
[; ;GenericTypeDefs.h: 383: BYTE b0:1;
[; ;GenericTypeDefs.h: 384: BYTE b1:1;
[; ;GenericTypeDefs.h: 385: BYTE b2:1;
[; ;GenericTypeDefs.h: 386: BYTE b3:1;
[; ;GenericTypeDefs.h: 387: BYTE b4:1;
[; ;GenericTypeDefs.h: 388: BYTE b5:1;
[; ;GenericTypeDefs.h: 389: BYTE b6:1;
[; ;GenericTypeDefs.h: 390: BYTE b7:1;
[; ;GenericTypeDefs.h: 391: BYTE b8:1;
[; ;GenericTypeDefs.h: 392: BYTE b9:1;
[; ;GenericTypeDefs.h: 393: BYTE b10:1;
[; ;GenericTypeDefs.h: 394: BYTE b11:1;
[; ;GenericTypeDefs.h: 395: BYTE b12:1;
[; ;GenericTypeDefs.h: 396: BYTE b13:1;
[; ;GenericTypeDefs.h: 397: BYTE b14:1;
[; ;GenericTypeDefs.h: 398: BYTE b15:1;
[; ;GenericTypeDefs.h: 399: } bits;
[; ;GenericTypeDefs.h: 400: } WORD_VAL, WORD_BITS;
[; ;GenericTypeDefs.h: 402: typedef union
[; ;GenericTypeDefs.h: 403: {
[; ;GenericTypeDefs.h: 404: DWORD Val;
[; ;GenericTypeDefs.h: 405: WORD w[2] ;
[; ;GenericTypeDefs.h: 406: BYTE v[4] ;
[; ;GenericTypeDefs.h: 407: struct 
[; ;GenericTypeDefs.h: 408: {
[; ;GenericTypeDefs.h: 409: WORD LW;
[; ;GenericTypeDefs.h: 410: WORD HW;
[; ;GenericTypeDefs.h: 411: } word;
[; ;GenericTypeDefs.h: 412: struct 
[; ;GenericTypeDefs.h: 413: {
[; ;GenericTypeDefs.h: 414: BYTE LB;
[; ;GenericTypeDefs.h: 415: BYTE HB;
[; ;GenericTypeDefs.h: 416: BYTE UB;
[; ;GenericTypeDefs.h: 417: BYTE MB;
[; ;GenericTypeDefs.h: 418: } byte;
[; ;GenericTypeDefs.h: 419: struct 
[; ;GenericTypeDefs.h: 420: {
[; ;GenericTypeDefs.h: 421: WORD_VAL low;
[; ;GenericTypeDefs.h: 422: WORD_VAL high;
[; ;GenericTypeDefs.h: 423: }wordUnion;
[; ;GenericTypeDefs.h: 424: struct 
[; ;GenericTypeDefs.h: 425: {
[; ;GenericTypeDefs.h: 426: BYTE b0:1;
[; ;GenericTypeDefs.h: 427: BYTE b1:1;
[; ;GenericTypeDefs.h: 428: BYTE b2:1;
[; ;GenericTypeDefs.h: 429: BYTE b3:1;
[; ;GenericTypeDefs.h: 430: BYTE b4:1;
[; ;GenericTypeDefs.h: 431: BYTE b5:1;
[; ;GenericTypeDefs.h: 432: BYTE b6:1;
[; ;GenericTypeDefs.h: 433: BYTE b7:1;
[; ;GenericTypeDefs.h: 434: BYTE b8:1;
[; ;GenericTypeDefs.h: 435: BYTE b9:1;
[; ;GenericTypeDefs.h: 436: BYTE b10:1;
[; ;GenericTypeDefs.h: 437: BYTE b11:1;
[; ;GenericTypeDefs.h: 438: BYTE b12:1;
[; ;GenericTypeDefs.h: 439: BYTE b13:1;
[; ;GenericTypeDefs.h: 440: BYTE b14:1;
[; ;GenericTypeDefs.h: 441: BYTE b15:1;
[; ;GenericTypeDefs.h: 442: BYTE b16:1;
[; ;GenericTypeDefs.h: 443: BYTE b17:1;
[; ;GenericTypeDefs.h: 444: BYTE b18:1;
[; ;GenericTypeDefs.h: 445: BYTE b19:1;
[; ;GenericTypeDefs.h: 446: BYTE b20:1;
[; ;GenericTypeDefs.h: 447: BYTE b21:1;
[; ;GenericTypeDefs.h: 448: BYTE b22:1;
[; ;GenericTypeDefs.h: 449: BYTE b23:1;
[; ;GenericTypeDefs.h: 450: BYTE b24:1;
[; ;GenericTypeDefs.h: 451: BYTE b25:1;
[; ;GenericTypeDefs.h: 452: BYTE b26:1;
[; ;GenericTypeDefs.h: 453: BYTE b27:1;
[; ;GenericTypeDefs.h: 454: BYTE b28:1;
[; ;GenericTypeDefs.h: 455: BYTE b29:1;
[; ;GenericTypeDefs.h: 456: BYTE b30:1;
[; ;GenericTypeDefs.h: 457: BYTE b31:1;
[; ;GenericTypeDefs.h: 458: } bits;
[; ;GenericTypeDefs.h: 459: } DWORD_VAL;
[; ;GenericTypeDefs.h: 462: typedef union
[; ;GenericTypeDefs.h: 463: {
[; ;GenericTypeDefs.h: 464: QWORD Val;
[; ;GenericTypeDefs.h: 465: DWORD d[2] ;
[; ;GenericTypeDefs.h: 466: WORD w[4] ;
[; ;GenericTypeDefs.h: 467: BYTE v[8] ;
[; ;GenericTypeDefs.h: 468: struct 
[; ;GenericTypeDefs.h: 469: {
[; ;GenericTypeDefs.h: 470: DWORD LD;
[; ;GenericTypeDefs.h: 471: DWORD HD;
[; ;GenericTypeDefs.h: 472: } dword;
[; ;GenericTypeDefs.h: 473: struct 
[; ;GenericTypeDefs.h: 474: {
[; ;GenericTypeDefs.h: 475: WORD LW;
[; ;GenericTypeDefs.h: 476: WORD HW;
[; ;GenericTypeDefs.h: 477: WORD UW;
[; ;GenericTypeDefs.h: 478: WORD MW;
[; ;GenericTypeDefs.h: 479: } word;
[; ;GenericTypeDefs.h: 480: struct 
[; ;GenericTypeDefs.h: 481: {
[; ;GenericTypeDefs.h: 482: BYTE b0:1;
[; ;GenericTypeDefs.h: 483: BYTE b1:1;
[; ;GenericTypeDefs.h: 484: BYTE b2:1;
[; ;GenericTypeDefs.h: 485: BYTE b3:1;
[; ;GenericTypeDefs.h: 486: BYTE b4:1;
[; ;GenericTypeDefs.h: 487: BYTE b5:1;
[; ;GenericTypeDefs.h: 488: BYTE b6:1;
[; ;GenericTypeDefs.h: 489: BYTE b7:1;
[; ;GenericTypeDefs.h: 490: BYTE b8:1;
[; ;GenericTypeDefs.h: 491: BYTE b9:1;
[; ;GenericTypeDefs.h: 492: BYTE b10:1;
[; ;GenericTypeDefs.h: 493: BYTE b11:1;
[; ;GenericTypeDefs.h: 494: BYTE b12:1;
[; ;GenericTypeDefs.h: 495: BYTE b13:1;
[; ;GenericTypeDefs.h: 496: BYTE b14:1;
[; ;GenericTypeDefs.h: 497: BYTE b15:1;
[; ;GenericTypeDefs.h: 498: BYTE b16:1;
[; ;GenericTypeDefs.h: 499: BYTE b17:1;
[; ;GenericTypeDefs.h: 500: BYTE b18:1;
[; ;GenericTypeDefs.h: 501: BYTE b19:1;
[; ;GenericTypeDefs.h: 502: BYTE b20:1;
[; ;GenericTypeDefs.h: 503: BYTE b21:1;
[; ;GenericTypeDefs.h: 504: BYTE b22:1;
[; ;GenericTypeDefs.h: 505: BYTE b23:1;
[; ;GenericTypeDefs.h: 506: BYTE b24:1;
[; ;GenericTypeDefs.h: 507: BYTE b25:1;
[; ;GenericTypeDefs.h: 508: BYTE b26:1;
[; ;GenericTypeDefs.h: 509: BYTE b27:1;
[; ;GenericTypeDefs.h: 510: BYTE b28:1;
[; ;GenericTypeDefs.h: 511: BYTE b29:1;
[; ;GenericTypeDefs.h: 512: BYTE b30:1;
[; ;GenericTypeDefs.h: 513: BYTE b31:1;
[; ;GenericTypeDefs.h: 514: BYTE b32:1;
[; ;GenericTypeDefs.h: 515: BYTE b33:1;
[; ;GenericTypeDefs.h: 516: BYTE b34:1;
[; ;GenericTypeDefs.h: 517: BYTE b35:1;
[; ;GenericTypeDefs.h: 518: BYTE b36:1;
[; ;GenericTypeDefs.h: 519: BYTE b37:1;
[; ;GenericTypeDefs.h: 520: BYTE b38:1;
[; ;GenericTypeDefs.h: 521: BYTE b39:1;
[; ;GenericTypeDefs.h: 522: BYTE b40:1;
[; ;GenericTypeDefs.h: 523: BYTE b41:1;
[; ;GenericTypeDefs.h: 524: BYTE b42:1;
[; ;GenericTypeDefs.h: 525: BYTE b43:1;
[; ;GenericTypeDefs.h: 526: BYTE b44:1;
[; ;GenericTypeDefs.h: 527: BYTE b45:1;
[; ;GenericTypeDefs.h: 528: BYTE b46:1;
[; ;GenericTypeDefs.h: 529: BYTE b47:1;
[; ;GenericTypeDefs.h: 530: BYTE b48:1;
[; ;GenericTypeDefs.h: 531: BYTE b49:1;
[; ;GenericTypeDefs.h: 532: BYTE b50:1;
[; ;GenericTypeDefs.h: 533: BYTE b51:1;
[; ;GenericTypeDefs.h: 534: BYTE b52:1;
[; ;GenericTypeDefs.h: 535: BYTE b53:1;
[; ;GenericTypeDefs.h: 536: BYTE b54:1;
[; ;GenericTypeDefs.h: 537: BYTE b55:1;
[; ;GenericTypeDefs.h: 538: BYTE b56:1;
[; ;GenericTypeDefs.h: 539: BYTE b57:1;
[; ;GenericTypeDefs.h: 540: BYTE b58:1;
[; ;GenericTypeDefs.h: 541: BYTE b59:1;
[; ;GenericTypeDefs.h: 542: BYTE b60:1;
[; ;GenericTypeDefs.h: 543: BYTE b61:1;
[; ;GenericTypeDefs.h: 544: BYTE b62:1;
[; ;GenericTypeDefs.h: 545: BYTE b63:1;
[; ;GenericTypeDefs.h: 546: } bits;
[; ;GenericTypeDefs.h: 547: } QWORD_VAL;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...);
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...);
[; ;stdio.h: 198: extern int vprintf(const char *, va_list);
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap);
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list);
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 35: extern char * strcat(char *, const char *);
[; ;string.h: 36: extern char * strcpy(char *, const char *);
[; ;string.h: 37: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 38: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 39: extern char * strdup(const char *);
[; ;string.h: 40: extern char * strtok(char *, const char *);
[; ;string.h: 43: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 44: extern int strcmp(const char *, const char *);
[; ;string.h: 45: extern int stricmp(const char *, const char *);
[; ;string.h: 46: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 47: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 48: extern void * memchr(const void *, int, size_t);
[; ;string.h: 49: extern size_t strcspn(const char *, const char *);
[; ;string.h: 50: extern char * strpbrk(const char *, const char *);
[; ;string.h: 51: extern size_t strspn(const char *, const char *);
[; ;string.h: 52: extern char * strstr(const char *, const char *);
[; ;string.h: 53: extern char * stristr(const char *, const char *);
[; ;string.h: 54: extern char * strerror(int);
[; ;string.h: 55: extern size_t strlen(const char *);
[; ;string.h: 56: extern char * strchr(const char *, int);
[; ;string.h: 57: extern char * strichr(const char *, int);
[; ;string.h: 58: extern char * strrchr(const char *, int);
[; ;string.h: 59: extern char * strrichr(const char *, int);
[; ;delay.h: 17: extern void delay_1us(void);
[; ;delay.h: 19: extern void delay_ms(WORD count);
[; ;interrupt.h: 12: extern void init_interrupt(void);
[; ;interrupt.h: 16: extern unsigned char open_discharge_time;
[; ;interrupt.h: 17: extern unsigned int ms_cnt;
[; ;interrupt.h: 18: extern unsigned int se_cnt;
[; ;interrupt.h: 19: extern unsigned int mi_cnt;
[; ;interrupt.h: 20: extern unsigned int ho_cnt;
[; ;interrupt.h: 22: extern unsigned char open_an0_time;
[; ;interrupt.h: 23: extern unsigned int an0_time_count;
[; ;interrupt.h: 24: extern unsigned char handle_an0_process_flag;
[; ;interrupt.h: 27: extern unsigned char open_an1_time;
[; ;interrupt.h: 28: extern unsigned int an1_time_count;
[; ;interrupt.h: 29: extern unsigned char handle_an1_process_flag;
[; ;interrupt.h: 32: extern unsigned char open_an2_time;
[; ;interrupt.h: 33: extern unsigned int an2_time_count;
[; ;interrupt.h: 34: extern unsigned char handle_an2_process_flag;
[; ;interrupt.h: 37: extern unsigned char open_an3_time;
[; ;interrupt.h: 38: extern unsigned int an3_time_count;
[; ;interrupt.h: 39: extern unsigned char handle_an3_process_flag;
[; ;interrupt.h: 42: extern unsigned char open_an4_time;
[; ;interrupt.h: 43: extern unsigned int an4_time_count;
[; ;interrupt.h: 44: extern unsigned char handle_an4_process_flag;
[; ;interrupt.h: 47: extern unsigned char open_an9_time;
[; ;interrupt.h: 48: extern unsigned int an9_time_count;
[; ;interrupt.h: 49: extern unsigned char handle_an9_process_flag;
[; ;interrupt.h: 52: extern unsigned char open_an8_time;
[; ;interrupt.h: 53: extern unsigned int an8_time_count;
[; ;interrupt.h: 54: extern unsigned char handle_an8_process_flag;
[; ;interrupt.h: 56: extern unsigned char open_an11_time;
[; ;interrupt.h: 57: extern unsigned int an11_time_count;
[; ;interrupt.h: 58: extern unsigned char handle_an11_process_flag;
[; ;interrupt.h: 61: extern unsigned char handle_short1_flag;
[; ;interrupt.h: 62: extern unsigned char handle_short2_flag;
[; ;interrupt.h: 65: extern unsigned char set_1HZ_flag;
[; ;interrupt.h: 67: extern unsigned char open_sleep_time;
[; ;interrupt.h: 68: extern unsigned int sleep_time_count;
[; ;led.h: 43: extern void init_led(void);
[; ;timer.h: 15: extern void init_timer1(void);
[; ;uart.h: 24: extern void init_uart1(void);
[; ;uart.h: 26: extern void uart1_send_byte(BYTE data);
[; ;uart.h: 28: extern void uart1_send_nbyte(BYTE *data,DWORD size);
[; ;uart.h: 30: extern BYTE uart1_read_byte(void);
[; ;uart.h: 32: extern void uart1_read_nbyte(BYTE *buffer,BYTE length);
[; ;uart.h: 34: extern bit handle_even_check(unsigned char databyte);
[; ;uart.h: 36: extern void handle_uart_rx_buf(void);
[; ;uart.h: 44: extern unsigned char uart1_rx_buf[80];
[; ;uart.h: 46: extern unsigned char uart1_tx_buf[80];
[; ;uart.h: 51: extern unsigned char uart1_time_count;
[; ;uart.h: 53: extern unsigned char uart1_receive_byte_count;
[; ;uart.h: 55: extern BOOL uart1_receive_flag;
[; ;uart.h: 57: extern unsigned char uart1_rx_control_flag;
[; ;uart.h: 60: extern unsigned char uart_send_delay_timer;
[; ;uart.h: 61: extern unsigned char uart_send_end_flag;
[; ;uart.h: 62: extern unsigned char uart_send_byte_count;
[; ;uart.h: 63: extern unsigned char*uart_send_point;
[; ;uart.h: 65: extern unsigned char rx_frame_kind;
[; ;uart.h: 66: extern unsigned char tx_frame_kind;
[; ;adc.h: 59: extern unsigned int mcu_value;
[; ;adc.h: 61: extern unsigned int temperature_value;
[; ;adc.h: 63: extern unsigned int pv_voltage_value;
[; ;adc.h: 65: extern unsigned int battery_voltage_value;
[; ;adc.h: 67: extern unsigned int load_voltage_value;
[; ;adc.h: 69: extern unsigned int charge_current_value;
[; ;adc.h: 71: extern unsigned int discharge_current_value;
[; ;adc.h: 73: extern unsigned int load_voltage2_value;
[; ;adc.h: 75: extern unsigned int discharge_current2_value;
[; ;adc.h: 78: extern unsigned int adc_buffer[64];
[; ;adc.h: 85: extern void init_adc(void);
[; ;pwm.h: 28: extern unsigned int pwm_duty_value;
[; ;pwm.h: 30: extern unsigned int buck_pwm_value;
[; ;pwm.h: 32: extern unsigned int bost_pwm1_value;
[; ;pwm.h: 34: extern unsigned int bost_pwm2_value;
[; ;pwm.h: 39: extern long int P_prev;
[; ;pwm.h: 41: extern long int P_last;
[; ;pwm.h: 47: extern void init_pwm(void);
[; ;pwm.h: 49: extern void Enable_Buck_Pwm(void);
[; ;pwm.h: 51: extern void Disable_Buck_Pwm(void);
[; ;pwm.h: 53: extern void Set_Buck_Pwm_Duty(unsigned int duty);
[; ;pwm.h: 55: extern void Enable_Bost_Pwm1(void);
[; ;pwm.h: 57: extern void Disable_Bost_Pwm1(void);
[; ;pwm.h: 59: extern void Set_Bost_Pwm1_Duty(unsigned int dduty);
[; ;pwm.h: 61: extern void Enable_Bost_Pwm2(void);
[; ;pwm.h: 63: extern void Disable_Bost_Pwm2(void);
[; ;pwm.h: 65: extern void Set_Bost_Pwm2_Duty(unsigned int dduty);
[; ;task.h: 37: extern unsigned char buf[50];
[; ;task.h: 39: extern unsigned char system_status;
[; ;task.h: 41: extern unsigned char system_check_time;
[; ;task.h: 43: extern unsigned int system_time_count;
[; ;task.h: 45: extern unsigned char work_mode;
[; ;task.h: 47: extern unsigned char pv_voltage_status;
[; ;task.h: 49: extern unsigned char battery_voltage_status;
[; ;task.h: 51: extern unsigned char load1_voltage_status;
[; ;task.h: 52: extern unsigned char load2_voltage_status;
[; ;task.h: 54: extern unsigned char discharge1_index;
[; ;task.h: 55: extern unsigned char discharge2_index;
[; ;task.h: 57: extern unsigned char charge_index;
[; ;task.h: 59: extern unsigned char nop_index;
[; ;task.h: 61: extern unsigned int involid_time_count;
[; ;task.h: 62: extern unsigned int cv_level_time_count;
[; ;task.h: 64: extern unsigned int load_short_time_count;
[; ;task.h: 65: extern unsigned int load2_short_time_count;
[; ;task.h: 67: extern unsigned int load_open_time_count;
[; ;task.h: 68: extern unsigned int load2_open_time_count;
[; ;task.h: 70: extern unsigned int over_load1_time_count;
[; ;task.h: 71: extern unsigned int over_load2_time_count;
[; ;task.h: 73: extern unsigned int battery_low_time_count;
[; ;task.h: 78: extern unsigned long int night_time_count;
[; ;task.h: 80: extern unsigned long int day_time_count;
[; ;task.h: 82: extern unsigned long int pv_time_count;
[; ;task.h: 84: extern unsigned long int light_time_level;
[; ;task.h: 86: extern unsigned int pv_prev;
[; ;task.h: 88: extern unsigned int I_prev;
[; ;task.h: 91: extern float PWM;
[; ;task.h: 93: extern float PWM_I;
[; ;task.h: 95: extern float PWM2;
[; ;task.h: 97: extern float PWM_I2;
[; ;task.h: 99: extern float bt_prev;
[; ;task.h: 101: extern unsigned char mppt_status;
[; ;task.h: 103: extern unsigned int mppt_time_count;
[; ;task.h: 105: extern unsigned char temper_time_count;
[; ;task.h: 107: extern unsigned char over_temper_time_count;
[; ;task.h: 109: extern unsigned char sys_temper_flag;
[; ;task.h: 113: extern unsigned char charge_led_status;
[; ;task.h: 115: extern unsigned char bt_led_status;
[; ;task.h: 117: extern unsigned char discharge_led_status;
[; ;task.h: 119: extern unsigned char bt_time_count;
[; ;task.h: 121: extern unsigned char pv_index;
[; ;task.h: 123: extern unsigned char Adjust_Pout_Flag;
[; ;task.h: 125: extern unsigned char voltage_adjust_index;
[; ;task.h: 127: extern unsigned char limit_power_pid_flag;
[; ;task.h: 128: extern unsigned char limit_power_pid2_flag;
[; ;task.h: 131: extern unsigned char mcu_t00_time_count;
[; ;task.h: 132: extern unsigned char mcu_t01_time_count;
[; ;task.h: 133: extern unsigned char mcu_t02_time_count;
[; ;task.h: 134: extern unsigned char mcu_t03_time_count;
[; ;task.h: 135: extern unsigned char mcu_temp_index;
[; ;task.h: 137: extern unsigned char pid_index;
[; ;task.h: 138: extern unsigned int index_01_count;
[; ;task.h: 139: extern unsigned int index_02_count;
[; ;task.h: 140: extern unsigned int index_03_count;
[; ;task.h: 141: extern unsigned int index_04_count;
[; ;task.h: 142: extern unsigned int index_05_count;
[; ;task.h: 143: extern unsigned int index_06_count;
[; ;task.h: 147: extern void handle_ad_loop(void);
[; ;task.h: 149: extern void handle_task_process(void);
[; ;task.h: 151: extern unsigned int start_ad_convert(unsigned char ch);
[; ;task.h: 153: extern void Mppt_Charge(void);
[; ;task.h: 155: extern void CC_CV_Charge(void);
[; ;PID.h: 14: typedef struct PID_VAR{
[; ;PID.h: 16: float SetPoint;
[; ;PID.h: 17: float Proportion;
[; ;PID.h: 18: float Integral;
[; ;PID.h: 19: float Derivative;
[; ;PID.h: 20: float LastError;
[; ;PID.h: 21: float PrevError;
[; ;PID.h: 22: float SumError;
[; ;PID.h: 23: } PID;
[; ;PID.h: 28: extern PID PID_CC_charge;
[; ;PID.h: 30: extern PID PID_CV_charge;
[; ;PID.h: 32: extern PID PID_CC_discharge;
[; ;PID.h: 34: extern PID PID_CC2_discharge;
[; ;PID.h: 36: extern void pid_init (PID *pp);
[; ;PID.h: 38: extern float pid_calc( PID *pp, int NowPoint );
[; ;PID.h: 40: extern float pid_calc_2( PID *pp, int NowPoint );
[; ;Modbus.h: 21: extern unsigned int crc_data;
[; ;Modbus.h: 26: extern unsigned int crc16(volatile unsigned char *puchMsg, unsigned char usDataLen);
[; ;ird_remote.h: 6: extern float charge_r_value;
[; ;ird_remote.h: 8: extern float discharge_r_value;
[; ;ird_remote.h: 11: extern float p_v;
[; ;ird_remote.h: 13: extern float b_v;
[; ;ird_remote.h: 15: extern float load_v;
[; ;ird_remote.h: 17: extern float charge_I ;
[; ;ird_remote.h: 19: extern float load_I ;
[; ;ird_remote.h: 21: extern unsigned char sys_mode;
[; ;ird_remote.h: 23: extern unsigned char today_index;
[; ;ird_remote.h: 25: extern float bt_00_hv;
[; ;ird_remote.h: 26: extern float bt_00_lv;
[; ;ird_remote.h: 28: extern float bt_01_hv;
[; ;ird_remote.h: 29: extern float bt_01_lv;
[; ;ird_remote.h: 31: extern float bt_02_hv;
[; ;ird_remote.h: 32: extern float bt_02_lv;
[; ;ird_remote.h: 34: extern float bt_03_hv;
[; ;ird_remote.h: 35: extern float bt_03_lv;
[; ;ird_remote.h: 37: extern float bt_04_hv;
[; ;ird_remote.h: 38: extern float bt_04_lv;
[; ;ird_remote.h: 40: extern float bt_05_hv;
[; ;ird_remote.h: 41: extern float bt_05_lv;
[; ;ird_remote.h: 43: extern float bt_06_hv;
[; ;ird_remote.h: 44: extern float bt_06_lv;
[; ;ird_remote.h: 46: extern float bt_07_hv;
[; ;ird_remote.h: 47: extern float bt_07_lv;
[; ;ird_remote.h: 51: extern float light_pv;
[; ;ird_remote.h: 53: extern float load_cc_I;
[; ;ird_remote.h: 55: extern float load_percent;
[; ;ird_remote.h: 57: extern float step_01_load_percent;
[; ;ird_remote.h: 59: extern float step_02_load_percent;
[; ;ird_remote.h: 61: extern float step_03_load_percent;
[; ;ird_remote.h: 63: extern float step_04_load_percent;
[; ;ird_remote.h: 65: extern float step_05_load_percent;
[; ;ird_remote.h: 67: extern unsigned int step_01_time_limit;
[; ;ird_remote.h: 69: extern unsigned int step_02_time_limit;
[; ;ird_remote.h: 71: extern unsigned int step_03_time_limit;
[; ;ird_remote.h: 73: extern unsigned int step_04_time_limit;
[; ;ird_remote.h: 75: extern unsigned int step_05_time_limit;
[; ;ird_remote.h: 77: extern unsigned char volt_id;
[; ;ird_remote.h: 79: extern unsigned char bt_id;
[; ;ird_remote.h: 81: extern unsigned int light_time;
[; ;ird_remote.h: 83: extern float bt_volt_100 ;
[; ;ird_remote.h: 85: extern float bt_volt_80 ;
[; ;ird_remote.h: 87: extern float bt_volt_60 ;
[; ;ird_remote.h: 89: extern float bt_volt_40 ;
[; ;ird_remote.h: 91: extern float bt_volt_20 ;
[; ;ird_remote.h: 93: extern float bt_volt_00 ;
"96 D:\MCUProject\ZH-SL-S4080-1\include\ird_remote.h
[v _dianchi_guoya_baohu `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 96: float dianchi_guoya_baohu;
"98
[v _dianchi_guoya_huifu `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 98: float dianchi_guoya_huifu;
"100
[v _dianchi_qianya_baohu `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 100: float dianchi_qianya_baohu;
"102
[v _dianchi_qianya_huifu `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 102: float dianchi_qianya_huifu;
"104
[v _dianchi_cv_level `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 104: float dianchi_cv_level;
"106
[v _charge_i_limit `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 106: float charge_i_limit;
"108
[v _shuchu_shortout_voltage `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 108: float shuchu_shortout_voltage;
"110
[v _shuchu_open_voltage `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 110: float shuchu_open_voltage;
"112
[v _discharge_i_baohu `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 112: float discharge_i_baohu;
"114
[v _discharge_i_limit `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 114: float discharge_i_limit;
"116
[v _light_on_pv_level `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 116: float light_on_pv_level;
"118
[v _light_off_pv_level `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 118: float light_off_pv_level;
"121
[v _Load_Pmax `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 121: float Load_Pmax;
"122
[v _Load2_Pmax `f ~T0 @X0 1 e ]
[; ;ird_remote.h: 122: float Load2_Pmax;
[; ;ird_remote.h: 127: extern unsigned char ird_status;
[; ;ird_remote.h: 129: extern unsigned char receive_bit_count;
[; ;ird_remote.h: 131: extern unsigned char ird_receive_flag;
[; ;ird_remote.h: 133: extern unsigned char ird_receive_time_count;
[; ;ird_remote.h: 135: extern unsigned long ird_data;
[; ;ird_remote.h: 137: extern unsigned char light_mode;
[; ;ird_remote.h: 139: extern unsigned char light2_mode;
[; ;ird_remote.h: 141: extern unsigned char lr_cnt;
[; ;ird_remote.h: 143: extern unsigned char led_out_ctrl;
[; ;ird_remote.h: 166: extern void auto_system(void);
[; ;ird_remote.h: 168: extern void read_param_eeprom(void);
[; ;ird_remote.h: 170: extern void Init_Ird(void);
[; ;ird_remote.h: 172: extern void Key_Menu(unsigned long key_value);
[; ;key.h: 23: typedef enum KEY_CURRENT_STATE
[; ;key.h: 24: {
[; ;key.h: 25: KEY_UP =0x00,
[; ;key.h: 26: KEY_DOWN=0x01
[; ;key.h: 27: } KEY_STATE_NU ;
[; ;key.h: 29: typedef enum KEY_CURRENT_VALUE
[; ;key.h: 30: {
[; ;key.h: 31: KNOP =0x10,
[; ;key.h: 32: K1 =0x01,
[; ;key.h: 33: K2 =0x02,
[; ;key.h: 34: K3 =0x03,
[; ;key.h: 35: K4 =0x04,
[; ;key.h: 36: } KEY_VALUE_NU ;
[; ;key.h: 43: extern KEY_STATE_NU KEY_STATE;
[; ;key.h: 45: extern KEY_VALUE_NU KEY_VALUE;
[; ;key.h: 48: extern unsigned char scan_key_time_count;
[; ;key.h: 50: extern unsigned char handle_scan_key_flag;
[; ;key.h: 52: extern unsigned char have_person1_flag;
[; ;key.h: 54: extern unsigned char have_person1_time_count;
[; ;key.h: 56: extern unsigned char have_person2_flag;
[; ;key.h: 58: extern unsigned char have_person2_time_count;
[; ;key.h: 60: extern unsigned char device_status;
[; ;key.h: 62: extern unsigned char key1_time_count;
[; ;key.h: 64: extern unsigned char key1_index;
[; ;key.h: 72: extern void init_key(void);
[; ;key.h: 74: extern void scan_key_value(void);
"13 D:\MCUProject\ZH-SL-S4080-1\src\task.c
[v _buf `uc ~T0 @X0 -> 50 `i e ]
[; ;task.c: 13: unsigned char buf[50];
"15
[v _system_status `uc ~T0 @X0 1 e ]
[i _system_status
-> -> 0 `i `uc
]
[; ;task.c: 15: unsigned char system_status=0x00;
"17
[v _system_check_time `uc ~T0 @X0 1 e ]
[i _system_check_time
-> -> 0 `i `uc
]
[; ;task.c: 17: unsigned char system_check_time=0x00;
"19
[v _system_time_count `ui ~T0 @X0 1 e ]
[i _system_time_count
-> -> 0 `i `ui
]
[; ;task.c: 19: unsigned int system_time_count=0x00;
"21
[v _work_mode `uc ~T0 @X0 1 e ]
[i _work_mode
-> -> 0 `i `uc
]
[; ;task.c: 21: unsigned char work_mode=0x00;
"24
[v _pv_voltage_status `uc ~T0 @X0 1 e ]
[i _pv_voltage_status
-> -> 0 `i `uc
]
[; ;task.c: 24: unsigned char pv_voltage_status=0x00;
"26
[v _battery_voltage_status `uc ~T0 @X0 1 e ]
[i _battery_voltage_status
-> -> 0 `i `uc
]
[; ;task.c: 26: unsigned char battery_voltage_status=0x00;
"28
[v _load1_voltage_status `uc ~T0 @X0 1 e ]
[i _load1_voltage_status
-> -> 0 `i `uc
]
[; ;task.c: 28: unsigned char load1_voltage_status=0x00;
"29
[v _load2_voltage_status `uc ~T0 @X0 1 e ]
[i _load2_voltage_status
-> -> 0 `i `uc
]
[; ;task.c: 29: unsigned char load2_voltage_status=0x00;
"31
[v _discharge1_index `uc ~T0 @X0 1 e ]
[i _discharge1_index
-> -> 0 `i `uc
]
[; ;task.c: 31: unsigned char discharge1_index=0x00;
"32
[v _discharge2_index `uc ~T0 @X0 1 e ]
[i _discharge2_index
-> -> 0 `i `uc
]
[; ;task.c: 32: unsigned char discharge2_index=0x00;
"34
[v _charge_index `uc ~T0 @X0 1 e ]
[i _charge_index
-> -> 0 `i `uc
]
[; ;task.c: 34: unsigned char charge_index=0x00;
"36
[v _nop_index `uc ~T0 @X0 1 e ]
[i _nop_index
-> -> 0 `i `uc
]
[; ;task.c: 36: unsigned char nop_index=0x00;
"38
[v _involid_time_count `ui ~T0 @X0 1 e ]
[i _involid_time_count
-> -> 0 `i `ui
]
[; ;task.c: 38: unsigned int involid_time_count=0x00;
"39
[v _cv_level_time_count `ui ~T0 @X0 1 e ]
[i _cv_level_time_count
-> -> 0 `i `ui
]
[; ;task.c: 39: unsigned int cv_level_time_count=0x00;
"41
[v _load_short_time_count `ui ~T0 @X0 1 e ]
[i _load_short_time_count
-> -> 0 `i `ui
]
[; ;task.c: 41: unsigned int load_short_time_count=0x00;
"42
[v _load2_short_time_count `ui ~T0 @X0 1 e ]
[i _load2_short_time_count
-> -> 0 `i `ui
]
[; ;task.c: 42: unsigned int load2_short_time_count=0x00;
"44
[v _load_open_time_count `ui ~T0 @X0 1 e ]
[i _load_open_time_count
-> -> 0 `i `ui
]
[; ;task.c: 44: unsigned int load_open_time_count=0x00;
"45
[v _load2_open_time_count `ui ~T0 @X0 1 e ]
[i _load2_open_time_count
-> -> 0 `i `ui
]
[; ;task.c: 45: unsigned int load2_open_time_count=0x00;
"47
[v _over_load1_time_count `ui ~T0 @X0 1 e ]
[i _over_load1_time_count
-> -> 0 `i `ui
]
[; ;task.c: 47: unsigned int over_load1_time_count=0x00;
"48
[v _over_load2_time_count `ui ~T0 @X0 1 e ]
[i _over_load2_time_count
-> -> 0 `i `ui
]
[; ;task.c: 48: unsigned int over_load2_time_count=0x00;
"50
[v _battery_low_time_count `ui ~T0 @X0 1 e ]
[i _battery_low_time_count
-> -> 0 `i `ui
]
[; ;task.c: 50: unsigned int battery_low_time_count=0x00;
"53
[v _night_time_count `ul ~T0 @X0 1 e ]
[i _night_time_count
-> -> -> 0 `i `l `ul
]
[; ;task.c: 53: unsigned long int night_time_count=0x00;
"55
[v _day_time_count `ul ~T0 @X0 1 e ]
[i _day_time_count
-> -> -> 0 `i `l `ul
]
[; ;task.c: 55: unsigned long int day_time_count=0x00;
"57
[v _pv_time_count `ul ~T0 @X0 1 e ]
[i _pv_time_count
-> -> -> 0 `i `l `ul
]
[; ;task.c: 57: unsigned long int pv_time_count=0x00;
"59
[v _light_time_level `ul ~T0 @X0 1 e ]
[i _light_time_level
-> -> -> 0 `i `l `ul
]
[; ;task.c: 59: unsigned long int light_time_level=0x00;
"61
[v _pv_prev `ui ~T0 @X0 1 e ]
[i _pv_prev
-> -> 0 `i `ui
]
[; ;task.c: 61: unsigned int pv_prev=0x00;
"63
[v _I_prev `ui ~T0 @X0 1 e ]
[i _I_prev
-> -> 0 `i `ui
]
[; ;task.c: 63: unsigned int I_prev=0x00;
"66
[v _PWM `f ~T0 @X0 1 e ]
[i _PWM
-> -> 0 `i `f
]
[; ;task.c: 66: float PWM = 0;
"68
[v _PWM_I `f ~T0 @X0 1 e ]
[i _PWM_I
-> -> 0 `i `f
]
[; ;task.c: 68: float PWM_I= 0;
"70
[v _PWM2 `f ~T0 @X0 1 e ]
[i _PWM2
-> -> 0 `i `f
]
[; ;task.c: 70: float PWM2 = 0;
"72
[v _PWM_I2 `f ~T0 @X0 1 e ]
[i _PWM_I2
-> -> 0 `i `f
]
[; ;task.c: 72: float PWM_I2= 0;
"75
[v _mppt_status `uc ~T0 @X0 1 e ]
[i _mppt_status
-> -> 0 `i `uc
]
[; ;task.c: 75: unsigned char mppt_status=0x00;
"77
[v _mppt_time_count `ui ~T0 @X0 1 e ]
[i _mppt_time_count
-> -> 0 `i `ui
]
[; ;task.c: 77: unsigned int mppt_time_count=0x00;
"79
[v _temper_time_count `uc ~T0 @X0 1 e ]
[i _temper_time_count
-> -> 0 `i `uc
]
[; ;task.c: 79: unsigned char temper_time_count=0x00;
"81
[v _over_temper_time_count `uc ~T0 @X0 1 e ]
[i _over_temper_time_count
-> -> 0 `i `uc
]
[; ;task.c: 81: unsigned char over_temper_time_count=0x00;
"83
[v _sys_temper_flag `uc ~T0 @X0 1 e ]
[i _sys_temper_flag
-> -> 1 `i `uc
]
[; ;task.c: 83: unsigned char sys_temper_flag=0x01;
"85
[v _charge_led_status `uc ~T0 @X0 1 e ]
[i _charge_led_status
-> -> 0 `i `uc
]
[; ;task.c: 85: unsigned char charge_led_status=0x00;
"87
[v _bt_led_status `uc ~T0 @X0 1 e ]
[i _bt_led_status
-> -> 0 `i `uc
]
[; ;task.c: 87: unsigned char bt_led_status=0x00;
"89
[v _discharge_led_status `uc ~T0 @X0 1 e ]
[i _discharge_led_status
-> -> 0 `i `uc
]
[; ;task.c: 89: unsigned char discharge_led_status=0x00;
"91
[v _bt_time_count `uc ~T0 @X0 1 e ]
[i _bt_time_count
-> -> 0 `i `uc
]
[; ;task.c: 91: unsigned char bt_time_count=0x00;
"93
[v _pv_index `uc ~T0 @X0 1 e ]
[i _pv_index
-> -> 0 `i `uc
]
[; ;task.c: 93: unsigned char pv_index=0x00;
"95
[v _Adjust_Pout_Flag `uc ~T0 @X0 1 e ]
[i _Adjust_Pout_Flag
-> -> 0 `i `uc
]
[; ;task.c: 95: unsigned char Adjust_Pout_Flag=0x00;
"97
[v _voltage_adjust_index `uc ~T0 @X0 1 e ]
[i _voltage_adjust_index
-> -> 1 `i `uc
]
[; ;task.c: 97: unsigned char voltage_adjust_index=0x01;
"99
[v _limit_power_pid_flag `uc ~T0 @X0 1 e ]
[i _limit_power_pid_flag
-> -> 0 `i `uc
]
[; ;task.c: 99: unsigned char limit_power_pid_flag=0x00;
"100
[v _limit_power_pid2_flag `uc ~T0 @X0 1 e ]
[i _limit_power_pid2_flag
-> -> 0 `i `uc
]
[; ;task.c: 100: unsigned char limit_power_pid2_flag=0x00;
"102
[v _t1 `uc ~T0 @X0 1 e ]
[i _t1
-> -> 0 `i `uc
]
[; ;task.c: 102: unsigned char t1=0x00;
"103
[v _t2 `uc ~T0 @X0 1 e ]
[i _t2
-> -> 0 `i `uc
]
[; ;task.c: 103: unsigned char t2=0x00;
"104
[v _t3 `uc ~T0 @X0 1 e ]
[i _t3
-> -> 0 `i `uc
]
[; ;task.c: 104: unsigned char t3=0x00;
"105
[v _t4 `uc ~T0 @X0 1 e ]
[i _t4
-> -> 0 `i `uc
]
[; ;task.c: 105: unsigned char t4=0x00;
"106
[v _t5 `uc ~T0 @X0 1 e ]
[i _t5
-> -> 0 `i `uc
]
[; ;task.c: 106: unsigned char t5=0x00;
"108
[v _bt_prev `f ~T0 @X0 1 e ]
[i _bt_prev
-> .0.0 `f
]
[; ;task.c: 108: float bt_prev=0.0;
"110
[v _mcu_t00_time_count `uc ~T0 @X0 1 e ]
[i _mcu_t00_time_count
-> -> 0 `i `uc
]
[; ;task.c: 110: unsigned char mcu_t00_time_count=0x00;
"111
[v _mcu_t01_time_count `uc ~T0 @X0 1 e ]
[i _mcu_t01_time_count
-> -> 0 `i `uc
]
[; ;task.c: 111: unsigned char mcu_t01_time_count=0x00;
"112
[v _mcu_t02_time_count `uc ~T0 @X0 1 e ]
[i _mcu_t02_time_count
-> -> 0 `i `uc
]
[; ;task.c: 112: unsigned char mcu_t02_time_count=0x00;
"113
[v _mcu_t03_time_count `uc ~T0 @X0 1 e ]
[i _mcu_t03_time_count
-> -> 0 `i `uc
]
[; ;task.c: 113: unsigned char mcu_t03_time_count=0x00;
"114
[v _mcu_temp_index `uc ~T0 @X0 1 e ]
[i _mcu_temp_index
-> -> 0 `i `uc
]
[; ;task.c: 114: unsigned char mcu_temp_index=0x00;
"116
[v _pid_index `uc ~T0 @X0 1 e ]
[i _pid_index
-> -> 0 `i `uc
]
[; ;task.c: 116: unsigned char pid_index=0x00;
"118
[v _index_01_count `ui ~T0 @X0 1 e ]
[i _index_01_count
-> -> 0 `i `ui
]
[; ;task.c: 118: unsigned int index_01_count=0x00;
"119
[v _index_02_count `ui ~T0 @X0 1 e ]
[i _index_02_count
-> -> 0 `i `ui
]
[; ;task.c: 119: unsigned int index_02_count=0x00;
"120
[v _index_03_count `ui ~T0 @X0 1 e ]
[i _index_03_count
-> -> 0 `i `ui
]
[; ;task.c: 120: unsigned int index_03_count=0x00;
"121
[v _index_04_count `ui ~T0 @X0 1 e ]
[i _index_04_count
-> -> 0 `i `ui
]
[; ;task.c: 121: unsigned int index_04_count=0x00;
"122
[v _index_05_count `ui ~T0 @X0 1 e ]
[i _index_05_count
-> -> 0 `i `ui
]
[; ;task.c: 122: unsigned int index_05_count=0x00;
"123
[v _index_06_count `ui ~T0 @X0 1 e ]
[i _index_06_count
-> -> 0 `i `ui
]
[; ;task.c: 123: unsigned int index_06_count=0x00;
"132
[v _handle_ad_loop `(v ~T0 @X0 1 ef ]
"133
{
[; ;task.c: 132: void handle_ad_loop(void)
[; ;task.c: 133: {
[e :U _handle_ad_loop ]
[f ]
"135
[v _data_cc_var `f ~T0 @X0 1 a ]
[; ;task.c: 135: float data_cc_var;
[; ;task.c: 138: if(handle_an1_process_flag==0x01)
"138
[e $ ! == -> _handle_an1_process_flag `i -> 1 `i 384  ]
[; ;task.c: 139: {
"139
{
[; ;task.c: 141: temperature_value=start_ad_convert(0b00001);
"141
[e = _temperature_value ( _start_ad_convert (1 -> -> 1 `i `uc ]
[; ;task.c: 143: if((temperature_value>4)&&(temperature_value<605))
"143
[e $ ! && > _temperature_value -> -> 4 `i `ui < _temperature_value -> -> 605 `i `ui 385  ]
[; ;task.c: 144: {
"144
{
[; ;task.c: 145: temper_time_count++;
"145
[e ++ _temper_time_count -> -> 1 `i `uc ]
[; ;task.c: 147: over_temper_time_count=0x00;
"147
[e = _over_temper_time_count -> -> 0 `i `uc ]
[; ;task.c: 149: if(temper_time_count>=10)
"149
[e $ ! >= -> _temper_time_count `i -> 10 `i 386  ]
[; ;task.c: 150: {
"150
{
[; ;task.c: 151: temper_time_count=0x00;
"151
[e = _temper_time_count -> -> 0 `i `uc ]
[; ;task.c: 153: sys_temper_flag=0x01;
"153
[e = _sys_temper_flag -> -> 1 `i `uc ]
"154
}
[e :U 386 ]
"155
}
[; ;task.c: 154: }
[; ;task.c: 155: }
[e $U 387  ]
"156
[e :U 385 ]
[; ;task.c: 156: else
[; ;task.c: 157: {
"157
{
[; ;task.c: 158: over_temper_time_count++;
"158
[e ++ _over_temper_time_count -> -> 1 `i `uc ]
[; ;task.c: 160: temper_time_count=0x00;
"160
[e = _temper_time_count -> -> 0 `i `uc ]
[; ;task.c: 162: if(over_temper_time_count>=10)
"162
[e $ ! >= -> _over_temper_time_count `i -> 10 `i 388  ]
[; ;task.c: 163: {
"163
{
[; ;task.c: 164: over_temper_time_count=0x00;
"164
[e = _over_temper_time_count -> -> 0 `i `uc ]
[; ;task.c: 166: sys_temper_flag=0x00;
"166
[e = _sys_temper_flag -> -> 0 `i `uc ]
"167
}
[e :U 388 ]
"168
}
[e :U 387 ]
[; ;task.c: 167: }
[; ;task.c: 168: }
[; ;task.c: 171: ADCON1bits.ADPREF =0b00;
"171
[e = . . _ADCON1bits 1 0 -> -> 0 `i `uc ]
[; ;task.c: 173: mcu_value=start_ad_convert(0b11101);
"173
[e = _mcu_value ( _start_ad_convert (1 -> -> 29 `i `uc ]
[; ;task.c: 175: ADCON1bits.ADPREF =0b11;
"175
[e = . . _ADCON1bits 1 0 -> -> 3 `i `uc ]
[; ;task.c: 177: if(mcu_value<490)
"177
[e $ ! < _mcu_value -> -> 490 `i `ui 389  ]
[; ;task.c: 178: {
"178
{
[; ;task.c: 179: mcu_t00_time_count++;
"179
[e ++ _mcu_t00_time_count -> -> 1 `i `uc ]
[; ;task.c: 180: mcu_t01_time_count=0x00;
"180
[e = _mcu_t01_time_count -> -> 0 `i `uc ]
[; ;task.c: 181: mcu_t02_time_count=0x00;
"181
[e = _mcu_t02_time_count -> -> 0 `i `uc ]
[; ;task.c: 182: mcu_t03_time_count=0x00;
"182
[e = _mcu_t03_time_count -> -> 0 `i `uc ]
[; ;task.c: 184: if(mcu_t00_time_count>=120)
"184
[e $ ! >= -> _mcu_t00_time_count `i -> 120 `i 390  ]
[; ;task.c: 185: {
"185
{
[; ;task.c: 186: mcu_t00_time_count=0x00;
"186
[e = _mcu_t00_time_count -> -> 0 `i `uc ]
[; ;task.c: 188: mcu_temp_index=0x00;
"188
[e = _mcu_temp_index -> -> 0 `i `uc ]
"189
}
[e :U 390 ]
"190
}
[; ;task.c: 189: }
[; ;task.c: 190: }
[e $U 391  ]
"191
[e :U 389 ]
[; ;task.c: 191: else if(mcu_value>510 && mcu_value<530)
[e $ ! && > _mcu_value -> -> 510 `i `ui < _mcu_value -> -> 530 `i `ui 392  ]
[; ;task.c: 192: {
"192
{
[; ;task.c: 193: mcu_t01_time_count++;
"193
[e ++ _mcu_t01_time_count -> -> 1 `i `uc ]
[; ;task.c: 194: mcu_t00_time_count=0x00;
"194
[e = _mcu_t00_time_count -> -> 0 `i `uc ]
[; ;task.c: 195: mcu_t02_time_count=0x00;
"195
[e = _mcu_t02_time_count -> -> 0 `i `uc ]
[; ;task.c: 196: mcu_t03_time_count=0x00;
"196
[e = _mcu_t03_time_count -> -> 0 `i `uc ]
[; ;task.c: 198: if(mcu_t01_time_count>=60)
"198
[e $ ! >= -> _mcu_t01_time_count `i -> 60 `i 393  ]
[; ;task.c: 199: {
"199
{
[; ;task.c: 200: mcu_t01_time_count=0x00;
"200
[e = _mcu_t01_time_count -> -> 0 `i `uc ]
[; ;task.c: 202: mcu_temp_index=0x01;
"202
[e = _mcu_temp_index -> -> 1 `i `uc ]
"203
}
[e :U 393 ]
"204
}
[; ;task.c: 203: }
[; ;task.c: 204: }
[e $U 394  ]
"205
[e :U 392 ]
[; ;task.c: 205: else if(mcu_value>530 && mcu_value<550)
[e $ ! && > _mcu_value -> -> 530 `i `ui < _mcu_value -> -> 550 `i `ui 395  ]
[; ;task.c: 206: {
"206
{
[; ;task.c: 207: mcu_t02_time_count++;
"207
[e ++ _mcu_t02_time_count -> -> 1 `i `uc ]
[; ;task.c: 208: mcu_t00_time_count=0x00;
"208
[e = _mcu_t00_time_count -> -> 0 `i `uc ]
[; ;task.c: 209: mcu_t01_time_count=0x00;
"209
[e = _mcu_t01_time_count -> -> 0 `i `uc ]
[; ;task.c: 210: mcu_t03_time_count=0x00;
"210
[e = _mcu_t03_time_count -> -> 0 `i `uc ]
[; ;task.c: 212: if(mcu_t02_time_count>=30)
"212
[e $ ! >= -> _mcu_t02_time_count `i -> 30 `i 396  ]
[; ;task.c: 213: {
"213
{
[; ;task.c: 214: mcu_t02_time_count=0x00;
"214
[e = _mcu_t02_time_count -> -> 0 `i `uc ]
[; ;task.c: 216: mcu_temp_index=0x02;
"216
[e = _mcu_temp_index -> -> 2 `i `uc ]
"217
}
[e :U 396 ]
"218
}
[; ;task.c: 217: }
[; ;task.c: 218: }
[e $U 397  ]
"219
[e :U 395 ]
[; ;task.c: 219: else if(mcu_value>=550)
[e $ ! >= _mcu_value -> -> 550 `i `ui 398  ]
[; ;task.c: 220: {
"220
{
[; ;task.c: 221: mcu_t03_time_count++;
"221
[e ++ _mcu_t03_time_count -> -> 1 `i `uc ]
[; ;task.c: 222: mcu_t00_time_count=0x00;
"222
[e = _mcu_t00_time_count -> -> 0 `i `uc ]
[; ;task.c: 223: mcu_t01_time_count=0x00;
"223
[e = _mcu_t01_time_count -> -> 0 `i `uc ]
[; ;task.c: 224: mcu_t02_time_count=0x00;
"224
[e = _mcu_t02_time_count -> -> 0 `i `uc ]
[; ;task.c: 226: if(mcu_t03_time_count>=10)
"226
[e $ ! >= -> _mcu_t03_time_count `i -> 10 `i 399  ]
[; ;task.c: 227: {
"227
{
[; ;task.c: 228: mcu_t03_time_count=0x00;
"228
[e = _mcu_t03_time_count -> -> 0 `i `uc ]
[; ;task.c: 230: mcu_temp_index=0x03;
"230
[e = _mcu_temp_index -> -> 3 `i `uc ]
"231
}
[e :U 399 ]
"232
}
[; ;task.c: 231: }
[; ;task.c: 232: }
[e $U 400  ]
"233
[e :U 398 ]
[; ;task.c: 233: else
[; ;task.c: 234: {
"234
{
[; ;task.c: 235: mcu_t00_time_count=0x00;
"235
[e = _mcu_t00_time_count -> -> 0 `i `uc ]
[; ;task.c: 236: mcu_t01_time_count=0x00;
"236
[e = _mcu_t01_time_count -> -> 0 `i `uc ]
[; ;task.c: 237: mcu_t02_time_count=0x00;
"237
[e = _mcu_t02_time_count -> -> 0 `i `uc ]
[; ;task.c: 238: mcu_t03_time_count=0x00;
"238
[e = _mcu_t03_time_count -> -> 0 `i `uc ]
"239
}
[e :U 400 ]
[e :U 397 ]
[e :U 394 ]
[e :U 391 ]
[; ;task.c: 239: }
[; ;task.c: 241: handle_an1_process_flag=0x00;
"241
[e = _handle_an1_process_flag -> -> 0 `i `uc ]
"243
}
[e :U 384 ]
[; ;task.c: 243: }
[; ;task.c: 248: if(handle_an2_process_flag==0x01)
"248
[e $ ! == -> _handle_an2_process_flag `i -> 1 `i 401  ]
[; ;task.c: 249: {
"249
{
[; ;task.c: 251: pv_voltage_value=start_ad_convert(0b00010);
"251
[e = _pv_voltage_value ( _start_ad_convert (1 -> -> 2 `i `uc ]
[; ;task.c: 254: if(pv_index==0x00)
"254
[e $ ! == -> _pv_index `i -> 0 `i 402  ]
[; ;task.c: 255: {
"255
{
[; ;task.c: 256: if(pv_voltage_value<=light_on_pv_level)
"256
[e $ ! <= -> _pv_voltage_value `f _light_on_pv_level 403  ]
[; ;task.c: 257: {
"257
{
[; ;task.c: 258: night_time_count++;
"258
[e ++ _night_time_count -> -> -> 1 `i `l `ul ]
[; ;task.c: 260: day_time_count=0x00;
"260
[e = _day_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 262: if(night_time_count>light_time_level)
"262
[e $ ! > _night_time_count _light_time_level 404  ]
[; ;task.c: 263: {
"263
{
[; ;task.c: 264: night_time_count=0x00;
"264
[e = _night_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 266: pv_voltage_status=0x02;
"266
[e = _pv_voltage_status -> -> 2 `i `uc ]
"268
}
[e :U 404 ]
"270
}
[; ;task.c: 268: }
[; ;task.c: 270: }
[e $U 405  ]
"271
[e :U 403 ]
[; ;task.c: 271: else if((pv_voltage_value>light_off_pv_level))
[e $ ! > -> _pv_voltage_value `f _light_off_pv_level 406  ]
[; ;task.c: 272: {
"272
{
[; ;task.c: 273: day_time_count++;
"273
[e ++ _day_time_count -> -> -> 1 `i `l `ul ]
[; ;task.c: 275: night_time_count=0x00;
"275
[e = _night_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 277: if(day_time_count>light_time_level)
"277
[e $ ! > _day_time_count _light_time_level 407  ]
[; ;task.c: 278: {
"278
{
[; ;task.c: 279: day_time_count=0x00;
"279
[e = _day_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 281: pv_voltage_status=0x00;
"281
[e = _pv_voltage_status -> -> 0 `i `uc ]
"283
}
[e :U 407 ]
"284
}
[; ;task.c: 283: }
[; ;task.c: 284: }
[e $U 408  ]
"285
[e :U 406 ]
[; ;task.c: 285: else
[; ;task.c: 286: {
"286
{
[; ;task.c: 287: day_time_count=0x00;
"287
[e = _day_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 289: night_time_count=0x00;
"289
[e = _night_time_count -> -> -> 0 `i `l `ul ]
"290
}
[e :U 408 ]
[e :U 405 ]
"291
}
[e :U 402 ]
[; ;task.c: 290: }
[; ;task.c: 291: }
[; ;task.c: 293: if((pv_voltage_value>=light_off_pv_level)&&(pv_voltage_value<1000))
"293
[e $ ! && >= -> _pv_voltage_value `f _light_off_pv_level < _pv_voltage_value -> -> 1000 `i `ui 409  ]
[; ;task.c: 294: {
"294
{
[; ;task.c: 295: pv_time_count++;
"295
[e ++ _pv_time_count -> -> -> 1 `i `l `ul ]
[; ;task.c: 297: if(pv_time_count>(light_time_level/5))
"297
[e $ ! > _pv_time_count / _light_time_level -> -> -> 5 `i `l `ul 410  ]
[; ;task.c: 298: {
"298
{
[; ;task.c: 299: pv_time_count=0x00;
"299
[e = _pv_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 301: pv_voltage_status=0x01;
"301
[e = _pv_voltage_status -> -> 1 `i `uc ]
[; ;task.c: 303: day_time_count=0x00;
"303
[e = _day_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 305: night_time_count=0x00;
"305
[e = _night_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 307: pv_index=0x01;
"307
[e = _pv_index -> -> 1 `i `uc ]
"309
}
[e :U 410 ]
"311
}
[; ;task.c: 309: }
[; ;task.c: 311: }
[e $U 411  ]
"312
[e :U 409 ]
[; ;task.c: 312: else if(pv_voltage_value>=1000)
[e $ ! >= _pv_voltage_value -> -> 1000 `i `ui 412  ]
[; ;task.c: 313: {
"313
{
[; ;task.c: 314: pv_time_count=0x00;
"314
[e = _pv_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 316: pv_voltage_status=0x00;
"316
[e = _pv_voltage_status -> -> 0 `i `uc ]
"317
}
[; ;task.c: 317: }
[e $U 413  ]
"318
[e :U 412 ]
[; ;task.c: 318: else
[; ;task.c: 319: {
"319
{
[; ;task.c: 320: pv_time_count=0x00;
"320
[e = _pv_time_count -> -> -> 0 `i `l `ul ]
"322
}
[e :U 413 ]
[e :U 411 ]
[; ;task.c: 322: }
[; ;task.c: 324: if(pv_index==0x01)
"324
[e $ ! == -> _pv_index `i -> 1 `i 414  ]
[; ;task.c: 325: {
"325
{
[; ;task.c: 326: if(pv_voltage_value<=light_on_pv_level)
"326
[e $ ! <= -> _pv_voltage_value `f _light_on_pv_level 415  ]
[; ;task.c: 327: {
"327
{
[; ;task.c: 328: night_time_count++;
"328
[e ++ _night_time_count -> -> -> 1 `i `l `ul ]
[; ;task.c: 330: if(night_time_count>light_time_level)
"330
[e $ ! > _night_time_count _light_time_level 416  ]
[; ;task.c: 331: {
"331
{
[; ;task.c: 332: night_time_count=0x00;
"332
[e = _night_time_count -> -> -> 0 `i `l `ul ]
[; ;task.c: 334: pv_voltage_status=0x02;
"334
[e = _pv_voltage_status -> -> 2 `i `uc ]
[; ;task.c: 336: pv_index=0x00;
"336
[e = _pv_index -> -> 0 `i `uc ]
"337
}
[e :U 416 ]
"339
}
[; ;task.c: 337: }
[; ;task.c: 339: }
[e $U 417  ]
"340
[e :U 415 ]
[; ;task.c: 340: else
[; ;task.c: 341: {
"341
{
[; ;task.c: 342: night_time_count=0x00;
"342
[e = _night_time_count -> -> -> 0 `i `l `ul ]
"343
}
[e :U 417 ]
"345
}
[e :U 414 ]
[; ;task.c: 343: }
[; ;task.c: 345: }
[; ;task.c: 349: handle_an2_process_flag=0x00;
"349
[e = _handle_an2_process_flag -> -> 0 `i `uc ]
"351
}
[e :U 401 ]
[; ;task.c: 351: }
[; ;task.c: 354: if(handle_an9_process_flag==0x01)
"354
[e $ ! == -> _handle_an9_process_flag `i -> 1 `i 418  ]
[; ;task.c: 355: {
"355
{
[; ;task.c: 356: charge_current_value=0x00;
"356
[e = _charge_current_value -> -> 0 `i `ui ]
[; ;task.c: 358: if(system_status == 0x01)
"358
[e $ ! == -> _system_status `i -> 1 `i 419  ]
[; ;task.c: 359: {
"359
{
[; ;task.c: 360: charge_current_value=start_ad_convert(0b01001);
"360
[e = _charge_current_value ( _start_ad_convert (1 -> -> 9 `i `uc ]
[; ;task.c: 363: if((charge_current_value>=charge_i_limit)&&(charge_index>=0x03))
"363
[e $ ! && >= -> _charge_current_value `f _charge_i_limit >= -> _charge_index `i -> 3 `i 420  ]
[; ;task.c: 364: {
"364
{
[; ;task.c: 366: if(buck_pwm_value>50)
"366
[e $ ! > _buck_pwm_value -> -> 50 `i `ui 421  ]
[; ;task.c: 367: {
"367
{
[; ;task.c: 368: buck_pwm_value = buck_pwm_value - 1;
"368
[e = _buck_pwm_value - _buck_pwm_value -> -> 1 `i `ui ]
"369
}
[e :U 421 ]
[; ;task.c: 369: }
[; ;task.c: 370: Set_Buck_Pwm_Duty(buck_pwm_value);
"370
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"372
}
[e :U 420 ]
"374
}
[e :U 419 ]
[; ;task.c: 372: }
[; ;task.c: 374: }
[; ;task.c: 376: handle_an9_process_flag=0x00;
"376
[e = _handle_an9_process_flag -> -> 0 `i `uc ]
"378
}
[e :U 418 ]
[; ;task.c: 378: }
[; ;task.c: 383: if(handle_an3_process_flag==0x01)
"383
[e $ ! == -> _handle_an3_process_flag `i -> 1 `i 422  ]
[; ;task.c: 384: {
"384
{
[; ;task.c: 386: battery_voltage_value=start_ad_convert(0b00011);
"386
[e = _battery_voltage_value ( _start_ad_convert (1 -> -> 3 `i `uc ]
[; ;task.c: 389: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
"389
[e = _b_v -> * -> / -> _battery_voltage_value `f -> -> 10 `i `f `d .31.04 `f ]
[; ;task.c: 393: if((battery_voltage_value<(dianchi_guoya_baohu+volt_id*5))&&(charge_index==0x00))
"393
[e $ ! && < -> _battery_voltage_value `f + _dianchi_guoya_baohu -> * -> _volt_id `i -> 5 `i `f == -> _charge_index `i -> 0 `i 423  ]
[; ;task.c: 394: {
"394
{
[; ;task.c: 395: bt_time_count++;
"395
[e ++ _bt_time_count -> -> 1 `i `uc ]
[; ;task.c: 397: if(bt_time_count>=100)
"397
[e $ ! >= -> _bt_time_count `i -> 100 `i 424  ]
[; ;task.c: 398: {
"398
{
[; ;task.c: 399: bt_time_count=0x00;
"399
[e = _bt_time_count -> -> 0 `i `uc ]
[; ;task.c: 401: bt_led_status=0x01;
"401
[e = _bt_led_status -> -> 1 `i `uc ]
[; ;task.c: 403: charge_index=0x01;
"403
[e = _charge_index -> -> 1 `i `uc ]
[; ;task.c: 405: battery_voltage_status=0x01;
"405
[e = _battery_voltage_status -> -> 1 `i `uc ]
"406
}
[e :U 424 ]
"408
}
[; ;task.c: 406: }
[; ;task.c: 408: }
[e $U 425  ]
"409
[e :U 423 ]
[; ;task.c: 409: else if((battery_voltage_value>=(dianchi_guoya_baohu+volt_id*5))&&(charge_index<=0x01))
[e $ ! && >= -> _battery_voltage_value `f + _dianchi_guoya_baohu -> * -> _volt_id `i -> 5 `i `f <= -> _charge_index `i -> 1 `i 426  ]
[; ;task.c: 410: {
"410
{
[; ;task.c: 411: bt_led_status=0x00;
"411
[e = _bt_led_status -> -> 0 `i `uc ]
[; ;task.c: 413: bt_time_count=0x00;
"413
[e = _bt_time_count -> -> 0 `i `uc ]
[; ;task.c: 415: battery_voltage_status=0x00;
"415
[e = _battery_voltage_status -> -> 0 `i `uc ]
"416
}
[e :U 426 ]
"419
[e :U 425 ]
[; ;task.c: 416: }
[; ;task.c: 419: if( (battery_voltage_value<dianchi_guoya_huifu) && (charge_index==0x02) )
[e $ ! && < -> _battery_voltage_value `f _dianchi_guoya_huifu == -> _charge_index `i -> 2 `i 427  ]
[; ;task.c: 420: {
"420
{
[; ;task.c: 423: charge_index=0x03;
"423
[e = _charge_index -> -> 3 `i `uc ]
[; ;task.c: 425: charge_led_status=0x01;
"425
[e = _charge_led_status -> -> 1 `i `uc ]
[; ;task.c: 427: Enable_Buck_Pwm();
"427
[e ( _Enable_Buck_Pwm ..  ]
"429
}
[; ;task.c: 429: }
[e $U 428  ]
"430
[e :U 427 ]
[; ;task.c: 430: else if( (battery_voltage_value>=dianchi_guoya_huifu) && (charge_index==0x02) )
[e $ ! && >= -> _battery_voltage_value `f _dianchi_guoya_huifu == -> _charge_index `i -> 2 `i 429  ]
[; ;task.c: 431: {
"431
{
[; ;task.c: 432: bt_00_lv = b_v;
"432
[e = _bt_00_lv _b_v ]
[; ;task.c: 434: charge_led_status=0x00;
"434
[e = _charge_led_status -> -> 0 `i `uc ]
"436
}
[; ;task.c: 436: }
[e $U 430  ]
"437
[e :U 429 ]
[; ;task.c: 437: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index>=0x03) )
[e $ ! && < -> _battery_voltage_value `f _dianchi_guoya_baohu >= -> _charge_index `i -> 3 `i 431  ]
[; ;task.c: 438: {
"438
{
[; ;task.c: 440: if((charge_current_value<charge_i_limit)&&(charge_index>=0x03))
"440
[e $ ! && < -> _charge_current_value `f _charge_i_limit >= -> _charge_index `i -> 3 `i 432  ]
[; ;task.c: 441: {
"441
{
[; ;task.c: 442: mppt_time_count++;
"442
[e ++ _mppt_time_count -> -> 1 `i `ui ]
[; ;task.c: 444: if(mppt_time_count>5)
"444
[e $ ! > _mppt_time_count -> -> 5 `i `ui 433  ]
[; ;task.c: 445: {
"445
{
[; ;task.c: 446: mppt_time_count=0x00;
"446
[e = _mppt_time_count -> -> 0 `i `ui ]
[; ;task.c: 448: Mppt_Charge();
"448
[e ( _Mppt_Charge ..  ]
[; ;task.c: 450: I_prev=charge_current_value;
"450
[e = _I_prev _charge_current_value ]
"451
}
[e :U 433 ]
"453
}
[e :U 432 ]
[; ;task.c: 451: }
[; ;task.c: 453: }
[; ;task.c: 455: involid_time_count=0x00;
"455
[e = _involid_time_count -> -> 0 `i `ui ]
"457
}
[; ;task.c: 457: }
[e $U 434  ]
"458
[e :U 431 ]
[; ;task.c: 458: else if( (battery_voltage_value>=dianchi_guoya_baohu) && (charge_index>=0x03) )
[e $ ! && >= -> _battery_voltage_value `f _dianchi_guoya_baohu >= -> _charge_index `i -> 3 `i 435  ]
[; ;task.c: 459: {
"459
{
[; ;task.c: 461: involid_time_count++;
"461
[e ++ _involid_time_count -> -> 1 `i `ui ]
[; ;task.c: 463: if(involid_time_count>200)
"463
[e $ ! > _involid_time_count -> -> 200 `i `ui 436  ]
[; ;task.c: 464: {
"464
{
[; ;task.c: 465: involid_time_count=0x00;
"465
[e = _involid_time_count -> -> 0 `i `ui ]
[; ;task.c: 467: if(charge_index>=0x03)
"467
[e $ ! >= -> _charge_index `i -> 3 `i 437  ]
[; ;task.c: 468: {
"468
{
[; ;task.c: 469: charge_index=0x05;
"469
[e = _charge_index -> -> 5 `i `uc ]
[; ;task.c: 471: Disable_Buck_Pwm();
"471
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 473: Set_Buck_Pwm_Duty(0);
"473
[e ( _Set_Buck_Pwm_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 475: charge_led_status=0x00;
"475
[e = _charge_led_status -> -> 0 `i `uc ]
[; ;task.c: 477: while(1);
"477
[e :U 439 ]
[e :U 438 ]
[e $U 439  ]
[e :U 440 ]
"478
}
[e :U 437 ]
"479
}
[e :U 436 ]
"480
}
[e :U 435 ]
"484
[e :U 434 ]
[e :U 430 ]
[e :U 428 ]
[; ;task.c: 478: }
[; ;task.c: 479: }
[; ;task.c: 480: }
[; ;task.c: 484: P_prev=P_last;
[e = _P_prev _P_last ]
[; ;task.c: 486: pv_prev=pv_voltage_value;
"486
[e = _pv_prev _pv_voltage_value ]
[; ;task.c: 488: handle_an3_process_flag=0x00;
"488
[e = _handle_an3_process_flag -> -> 0 `i `uc ]
"490
}
[e :U 422 ]
[; ;task.c: 490: }
[; ;task.c: 497: if(handle_an4_process_flag==0x01)
"497
[e $ ! == -> _handle_an4_process_flag `i -> 1 `i 441  ]
[; ;task.c: 498: {
"498
{
[; ;task.c: 499: load_voltage_value=0x00;
"499
[e = _load_voltage_value -> -> 0 `i `ui ]
[; ;task.c: 501: if(system_status == 0x02)
"501
[e $ ! == -> _system_status `i -> 2 `i 442  ]
[; ;task.c: 502: {
"502
{
[; ;task.c: 503: load_voltage_value=start_ad_convert(0b00100);
"503
[e = _load_voltage_value ( _start_ad_convert (1 -> -> 4 `i `uc ]
[; ;task.c: 507: if((load_voltage_value<shuchu_shortout_voltage)&&(discharge1_index==0x02)&&(PID_CC_discharge.SetPoint>0))
"507
[e $ ! && && < -> _load_voltage_value `f _shuchu_shortout_voltage == -> _discharge1_index `i -> 2 `i > . _PID_CC_discharge 0 -> -> 0 `i `f 443  ]
[; ;task.c: 508: {
"508
{
[; ;task.c: 509: load_short_time_count++;
"509
[e ++ _load_short_time_count -> -> 1 `i `ui ]
[; ;task.c: 511: if(load_short_time_count>100)
"511
[e $ ! > _load_short_time_count -> -> 100 `i `ui 444  ]
[; ;task.c: 512: {
"512
{
[; ;task.c: 513: load_short_time_count=0x00;
"513
[e = _load_short_time_count -> -> 0 `i `ui ]
[; ;task.c: 515: bost_pwm1_value=2;
"515
[e = _bost_pwm1_value -> -> 2 `i `ui ]
[; ;task.c: 517: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"517
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 519: discharge_led_status=0x00;
"519
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 521: delay_ms(1);
"521
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 523: Disable_Bost_Pwm1();
"523
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 525: (LATCbits.LATC3 = 0x00);
"525
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 527: while(1);
"527
[e :U 446 ]
[e :U 445 ]
[e $U 446  ]
[e :U 447 ]
"528
}
[e :U 444 ]
"530
}
[; ;task.c: 528: }
[; ;task.c: 530: }
[e $U 448  ]
"531
[e :U 443 ]
[; ;task.c: 531: else if((load_voltage_value>=shuchu_shortout_voltage)&&(load_voltage_value<(shuchu_shortout_voltage*2))&&(discharge1_index==0x02)&&(PID_CC_discharge.SetPoint>0))
[e $ ! && && && >= -> _load_voltage_value `f _shuchu_shortout_voltage < -> _load_voltage_value `f * _shuchu_shortout_voltage -> -> 2 `i `f == -> _discharge1_index `i -> 2 `i > . _PID_CC_discharge 0 -> -> 0 `i `f 449  ]
[; ;task.c: 532: {
"532
{
[; ;task.c: 533: load_short_time_count++;
"533
[e ++ _load_short_time_count -> -> 1 `i `ui ]
[; ;task.c: 535: if(load_short_time_count>100)
"535
[e $ ! > _load_short_time_count -> -> 100 `i `ui 450  ]
[; ;task.c: 536: {
"536
{
[; ;task.c: 537: load_short_time_count=0x00;
"537
[e = _load_short_time_count -> -> 0 `i `ui ]
[; ;task.c: 539: discharge1_index=0x03;
"539
[e = _discharge1_index -> -> 3 `i `uc ]
[; ;task.c: 541: bost_pwm1_value=2;
"541
[e = _bost_pwm1_value -> -> 2 `i `ui ]
[; ;task.c: 543: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"543
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 545: discharge_led_status=0x00;
"545
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 547: delay_ms(1);
"547
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 549: Disable_Bost_Pwm1();
"549
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 551: (LATCbits.LATC3 = 0x00);
"551
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 553: while(1);
"553
[e :U 452 ]
[e :U 451 ]
[e $U 452  ]
[e :U 453 ]
"554
}
[e :U 450 ]
"556
}
[; ;task.c: 554: }
[; ;task.c: 556: }
[e $U 454  ]
"557
[e :U 449 ]
[; ;task.c: 557: else
[; ;task.c: 558: {
"558
{
[; ;task.c: 559: load_short_time_count=0x00;
"559
[e = _load_short_time_count -> -> 0 `i `ui ]
"560
}
[e :U 454 ]
[e :U 448 ]
[; ;task.c: 560: }
[; ;task.c: 563: if((load_voltage_value>shuchu_open_voltage)&&(discharge1_index==0x02))
"563
[e $ ! && > -> _load_voltage_value `f _shuchu_open_voltage == -> _discharge1_index `i -> 2 `i 455  ]
[; ;task.c: 564: {
"564
{
[; ;task.c: 565: load_open_time_count++;
"565
[e ++ _load_open_time_count -> -> 1 `i `ui ]
[; ;task.c: 567: if(load_open_time_count>20)
"567
[e $ ! > _load_open_time_count -> -> 20 `i `ui 456  ]
[; ;task.c: 568: {
"568
{
[; ;task.c: 569: discharge1_index=0x03;
"569
[e = _discharge1_index -> -> 3 `i `uc ]
[; ;task.c: 571: load_open_time_count=0x00;
"571
[e = _load_open_time_count -> -> 0 `i `ui ]
[; ;task.c: 573: bost_pwm1_value=5;
"573
[e = _bost_pwm1_value -> -> 5 `i `ui ]
[; ;task.c: 575: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"575
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 577: discharge_led_status=0x00;
"577
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 579: delay_ms(1);
"579
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 581: Disable_Bost_Pwm1();
"581
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 583: (LATCbits.LATC3 = 0x00);
"583
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 585: while(1);
"585
[e :U 458 ]
[e :U 457 ]
[e $U 458  ]
[e :U 459 ]
"586
}
[e :U 456 ]
"588
}
[; ;task.c: 586: }
[; ;task.c: 588: }
[e $U 460  ]
"589
[e :U 455 ]
[; ;task.c: 589: else
[; ;task.c: 590: {
"590
{
[; ;task.c: 591: load_open_time_count=0x00;
"591
[e = _load_open_time_count -> -> 0 `i `ui ]
"592
}
[e :U 460 ]
"595
}
[e :U 442 ]
[; ;task.c: 592: }
[; ;task.c: 595: }
[; ;task.c: 597: handle_an4_process_flag=0x00;
"597
[e = _handle_an4_process_flag -> -> 0 `i `uc ]
"599
}
[e :U 441 ]
[; ;task.c: 599: }
[; ;task.c: 603: if(handle_an0_process_flag==0x01)
"603
[e $ ! == -> _handle_an0_process_flag `i -> 1 `i 461  ]
[; ;task.c: 604: {
"604
{
[; ;task.c: 605: discharge_current_value=0x00;
"605
[e = _discharge_current_value -> -> 0 `i `ui ]
[; ;task.c: 607: if(system_status == 0x02)
"607
[e $ ! == -> _system_status `i -> 2 `i 462  ]
[; ;task.c: 608: {
"608
{
[; ;task.c: 609: discharge_current_value=start_ad_convert(0b00000);
"609
[e = _discharge_current_value ( _start_ad_convert (1 -> -> 0 `i `uc ]
[; ;task.c: 611: if((discharge_current_value>discharge_i_baohu)&&(discharge1_index==0x02))
"611
[e $ ! && > -> _discharge_current_value `f _discharge_i_baohu == -> _discharge1_index `i -> 2 `i 463  ]
[; ;task.c: 612: {
"612
{
[; ;task.c: 613: over_load1_time_count++;
"613
[e ++ _over_load1_time_count -> -> 1 `i `ui ]
[; ;task.c: 615: if(over_load1_time_count>20)
"615
[e $ ! > _over_load1_time_count -> -> 20 `i `ui 464  ]
[; ;task.c: 616: {
"616
{
[; ;task.c: 617: discharge1_index=0x03;
"617
[e = _discharge1_index -> -> 3 `i `uc ]
[; ;task.c: 619: bost_pwm1_value=2;
"619
[e = _bost_pwm1_value -> -> 2 `i `ui ]
[; ;task.c: 621: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"621
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 623: delay_ms(1);
"623
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 625: Disable_Bost_Pwm1();
"625
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 627: (LATCbits.LATC3 = 0x00);
"627
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 629: over_load1_time_count=0x00;
"629
[e = _over_load1_time_count -> -> 0 `i `ui ]
[; ;task.c: 631: discharge_led_status=0x00;
"631
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 633: while(1);
"633
[e :U 466 ]
[e :U 465 ]
[e $U 466  ]
[e :U 467 ]
"634
}
[e :U 464 ]
"636
}
[; ;task.c: 634: }
[; ;task.c: 636: }
[e $U 468  ]
"637
[e :U 463 ]
[; ;task.c: 637: else
[; ;task.c: 638: {
"638
{
[; ;task.c: 639: over_load1_time_count=0x00;
"639
[e = _over_load1_time_count -> -> 0 `i `ui ]
"640
}
[e :U 468 ]
[; ;task.c: 640: }
[; ;task.c: 642: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge1_index==0x01))
"642
[e $ ! && > -> _battery_voltage_value `f _dianchi_qianya_huifu == -> _discharge1_index `i -> 1 `i 469  ]
[; ;task.c: 643: {
"643
{
[; ;task.c: 644: discharge1_index=0x02;
"644
[e = _discharge1_index -> -> 2 `i `uc ]
[; ;task.c: 646: discharge_led_status=0x01;
"646
[e = _discharge_led_status -> -> 1 `i `uc ]
[; ;task.c: 648: open_discharge_time=0x01;
"648
[e = _open_discharge_time -> -> 1 `i `uc ]
[; ;task.c: 650: (LATCbits.LATC3 = 0x01);
"650
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
[; ;task.c: 652: Enable_Bost_Pwm1();
"652
[e ( _Enable_Bost_Pwm1 ..  ]
"654
}
[; ;task.c: 654: }
[e $U 470  ]
"655
[e :U 469 ]
[; ;task.c: 655: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge1_index==0x01))
[e $ ! && <= -> _battery_voltage_value `f _dianchi_qianya_huifu == -> _discharge1_index `i -> 1 `i 471  ]
[; ;task.c: 656: {
"656
{
[; ;task.c: 657: discharge_led_status=0x00;
"657
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 659: open_discharge_time=0x00;
"659
[e = _open_discharge_time -> -> 0 `i `uc ]
"660
}
[e :U 471 ]
"663
[e :U 470 ]
[; ;task.c: 660: }
[; ;task.c: 663: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge1_index==0x02))
[e $ ! && >= -> _battery_voltage_value `f _dianchi_qianya_baohu == -> _discharge1_index `i -> 2 `i 472  ]
[; ;task.c: 664: {
"664
{
[; ;task.c: 666: if((discharge_current_value<=discharge_i_limit)&&(discharge1_index==0x02))
"666
[e $ ! && <= -> _discharge_current_value `f _discharge_i_limit == -> _discharge1_index `i -> 2 `i 473  ]
[; ;task.c: 667: {
"667
{
[; ;task.c: 670: t1=step_01_time_limit;
"670
[e = _t1 -> _step_01_time_limit `uc ]
[; ;task.c: 671: t2=step_01_time_limit+step_02_time_limit;
"671
[e = _t2 -> + _step_01_time_limit _step_02_time_limit `uc ]
[; ;task.c: 672: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
"672
[e = _t3 -> + + _step_01_time_limit _step_02_time_limit _step_03_time_limit `uc ]
[; ;task.c: 673: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit;
"673
[e = _t4 -> + + + _step_01_time_limit _step_02_time_limit _step_03_time_limit _step_04_time_limit `uc ]
[; ;task.c: 674: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit+step_05_time_limit;
"674
[e = _t5 -> + + + + _step_01_time_limit _step_02_time_limit _step_03_time_limit _step_04_time_limit _step_05_time_limit `uc ]
[; ;task.c: 676: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
"676
[e $ ! && < _ho_cnt -> _t1 `ui <= -> _Adjust_Pout_Flag `i -> 1 `i 474  ]
[; ;task.c: 677: {
"677
{
[; ;task.c: 678: Adjust_Pout_Flag=0x01;
"678
[e = _Adjust_Pout_Flag -> -> 1 `i `uc ]
"679
}
[; ;task.c: 679: }
[e $U 475  ]
"680
[e :U 474 ]
[; ;task.c: 680: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
[e $ ! && && >= _ho_cnt -> _t1 `ui < _ho_cnt -> _t2 `ui <= -> _Adjust_Pout_Flag `i -> 2 `i 476  ]
[; ;task.c: 681: {
"681
{
[; ;task.c: 682: Adjust_Pout_Flag=0x02;
"682
[e = _Adjust_Pout_Flag -> -> 2 `i `uc ]
"683
}
[; ;task.c: 683: }
[e $U 477  ]
"684
[e :U 476 ]
[; ;task.c: 684: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
[e $ ! && && >= _ho_cnt -> _t2 `ui < _ho_cnt -> _t3 `ui <= -> _Adjust_Pout_Flag `i -> 3 `i 478  ]
[; ;task.c: 685: {
"685
{
[; ;task.c: 686: Adjust_Pout_Flag=0x03;
"686
[e = _Adjust_Pout_Flag -> -> 3 `i `uc ]
"687
}
[; ;task.c: 687: }
[e $U 479  ]
"688
[e :U 478 ]
[; ;task.c: 688: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
[e $ ! && && >= _ho_cnt -> _t3 `ui < _ho_cnt -> _t4 `ui <= -> _Adjust_Pout_Flag `i -> 4 `i 480  ]
[; ;task.c: 689: {
"689
{
[; ;task.c: 690: Adjust_Pout_Flag=0x04;
"690
[e = _Adjust_Pout_Flag -> -> 4 `i `uc ]
"691
}
[; ;task.c: 691: }
[e $U 481  ]
"692
[e :U 480 ]
[; ;task.c: 692: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
[e $ ! && && >= _ho_cnt -> _t4 `ui < _ho_cnt -> _t5 `ui <= -> _Adjust_Pout_Flag `i -> 5 `i 482  ]
[; ;task.c: 693: {
"693
{
[; ;task.c: 694: Adjust_Pout_Flag=0x05;
"694
[e = _Adjust_Pout_Flag -> -> 5 `i `uc ]
"695
}
[; ;task.c: 695: }
[e $U 483  ]
"696
[e :U 482 ]
[; ;task.c: 696: else
[; ;task.c: 697: {
"697
{
[; ;task.c: 698: Adjust_Pout_Flag=0x00;
"698
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
"699
}
[e :U 483 ]
[e :U 481 ]
[e :U 479 ]
[e :U 477 ]
[e :U 475 ]
[; ;task.c: 699: }
[; ;task.c: 701: if(battery_voltage_value>bt_volt_80 && voltage_adjust_index<=0x01)
"701
[e $ ! && > -> _battery_voltage_value `f _bt_volt_80 <= -> _voltage_adjust_index `i -> 1 `i 484  ]
[; ;task.c: 702: {
"702
{
[; ;task.c: 703: index_01_count++;
"703
[e ++ _index_01_count -> -> 1 `i `ui ]
[; ;task.c: 704: index_02_count=0x00;
"704
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 705: index_03_count=0x00;
"705
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 706: index_04_count=0x00;
"706
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 707: index_05_count=0x00;
"707
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 708: index_06_count=0x00;
"708
[e = _index_06_count -> -> 0 `i `ui ]
[; ;task.c: 709: if(index_01_count>1500)
"709
[e $ ! > _index_01_count -> -> 1500 `i `ui 485  ]
[; ;task.c: 710: {
"710
{
[; ;task.c: 711: voltage_adjust_index=0x01;
"711
[e = _voltage_adjust_index -> -> 1 `i `uc ]
[; ;task.c: 712: index_01_count=0x00;
"712
[e = _index_01_count -> -> 0 `i `ui ]
"713
}
[e :U 485 ]
"715
}
[; ;task.c: 713: }
[; ;task.c: 715: }
[e $U 486  ]
"716
[e :U 484 ]
[; ;task.c: 716: else if(battery_voltage_value>bt_volt_60 && battery_voltage_value<=bt_volt_80 && voltage_adjust_index<=0x02)
[e $ ! && && > -> _battery_voltage_value `f _bt_volt_60 <= -> _battery_voltage_value `f _bt_volt_80 <= -> _voltage_adjust_index `i -> 2 `i 487  ]
[; ;task.c: 717: {
"717
{
[; ;task.c: 718: index_02_count++;
"718
[e ++ _index_02_count -> -> 1 `i `ui ]
[; ;task.c: 719: index_01_count=0x00;
"719
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 720: index_03_count=0x00;
"720
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 721: index_04_count=0x00;
"721
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 722: index_05_count=0x00;
"722
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 723: index_06_count=0x00;
"723
[e = _index_06_count -> -> 0 `i `ui ]
[; ;task.c: 724: if(index_02_count>1500)
"724
[e $ ! > _index_02_count -> -> 1500 `i `ui 488  ]
[; ;task.c: 725: {
"725
{
[; ;task.c: 726: voltage_adjust_index=0x02;
"726
[e = _voltage_adjust_index -> -> 2 `i `uc ]
[; ;task.c: 727: index_02_count=0x00;
"727
[e = _index_02_count -> -> 0 `i `ui ]
"728
}
[e :U 488 ]
"729
}
[; ;task.c: 728: }
[; ;task.c: 729: }
[e $U 489  ]
"730
[e :U 487 ]
[; ;task.c: 730: else if(battery_voltage_value>bt_volt_40 && battery_voltage_value<=bt_volt_60 && voltage_adjust_index<=0x03)
[e $ ! && && > -> _battery_voltage_value `f _bt_volt_40 <= -> _battery_voltage_value `f _bt_volt_60 <= -> _voltage_adjust_index `i -> 3 `i 490  ]
[; ;task.c: 731: {
"731
{
[; ;task.c: 732: index_03_count++;
"732
[e ++ _index_03_count -> -> 1 `i `ui ]
[; ;task.c: 733: index_02_count=0x00;
"733
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 734: index_01_count=0x00;
"734
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 735: index_04_count=0x00;
"735
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 736: index_05_count=0x00;
"736
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 737: index_06_count=0x00;
"737
[e = _index_06_count -> -> 0 `i `ui ]
[; ;task.c: 738: if(index_03_count>1500)
"738
[e $ ! > _index_03_count -> -> 1500 `i `ui 491  ]
[; ;task.c: 739: {
"739
{
[; ;task.c: 740: voltage_adjust_index=0x03;
"740
[e = _voltage_adjust_index -> -> 3 `i `uc ]
[; ;task.c: 741: index_03_count=0x00;
"741
[e = _index_03_count -> -> 0 `i `ui ]
"742
}
[e :U 491 ]
"743
}
[; ;task.c: 742: }
[; ;task.c: 743: }
[e $U 492  ]
"744
[e :U 490 ]
[; ;task.c: 744: else if(battery_voltage_value>bt_volt_20 && battery_voltage_value<=bt_volt_40 && voltage_adjust_index<=0x04)
[e $ ! && && > -> _battery_voltage_value `f _bt_volt_20 <= -> _battery_voltage_value `f _bt_volt_40 <= -> _voltage_adjust_index `i -> 4 `i 493  ]
[; ;task.c: 745: {
"745
{
[; ;task.c: 746: index_04_count++;
"746
[e ++ _index_04_count -> -> 1 `i `ui ]
[; ;task.c: 747: index_02_count=0x00;
"747
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 748: index_03_count=0x00;
"748
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 749: index_01_count=0x00;
"749
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 750: index_05_count=0x00;
"750
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 751: index_06_count=0x00;
"751
[e = _index_06_count -> -> 0 `i `ui ]
[; ;task.c: 752: if(index_04_count>1500)
"752
[e $ ! > _index_04_count -> -> 1500 `i `ui 494  ]
[; ;task.c: 753: {
"753
{
[; ;task.c: 754: voltage_adjust_index=0x04;
"754
[e = _voltage_adjust_index -> -> 4 `i `uc ]
[; ;task.c: 755: index_04_count=0x00;
"755
[e = _index_04_count -> -> 0 `i `ui ]
"756
}
[e :U 494 ]
"757
}
[; ;task.c: 756: }
[; ;task.c: 757: }
[e $U 495  ]
"758
[e :U 493 ]
[; ;task.c: 758: else if(battery_voltage_value>bt_volt_00 && battery_voltage_value<=bt_volt_20 && voltage_adjust_index<=0x05)
[e $ ! && && > -> _battery_voltage_value `f _bt_volt_00 <= -> _battery_voltage_value `f _bt_volt_20 <= -> _voltage_adjust_index `i -> 5 `i 496  ]
[; ;task.c: 759: {
"759
{
[; ;task.c: 760: index_05_count++;
"760
[e ++ _index_05_count -> -> 1 `i `ui ]
[; ;task.c: 761: index_02_count=0x00;
"761
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 762: index_03_count=0x00;
"762
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 763: index_04_count=0x00;
"763
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 764: index_01_count=0x00;
"764
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 765: index_06_count=0x00;
"765
[e = _index_06_count -> -> 0 `i `ui ]
[; ;task.c: 766: if(index_05_count>1500)
"766
[e $ ! > _index_05_count -> -> 1500 `i `ui 497  ]
[; ;task.c: 767: {
"767
{
[; ;task.c: 768: voltage_adjust_index=0x05;
"768
[e = _voltage_adjust_index -> -> 5 `i `uc ]
[; ;task.c: 769: index_05_count=0x00;
"769
[e = _index_05_count -> -> 0 `i `ui ]
"770
}
[e :U 497 ]
"771
}
[; ;task.c: 770: }
[; ;task.c: 771: }
[e $U 498  ]
"772
[e :U 496 ]
[; ;task.c: 772: else if(battery_voltage_value<bt_volt_00 && voltage_adjust_index<=0x06)
[e $ ! && < -> _battery_voltage_value `f _bt_volt_00 <= -> _voltage_adjust_index `i -> 6 `i 499  ]
[; ;task.c: 773: {
"773
{
[; ;task.c: 774: index_06_count++;
"774
[e ++ _index_06_count -> -> 1 `i `ui ]
[; ;task.c: 775: index_02_count=0x00;
"775
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 776: index_03_count=0x00;
"776
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 777: index_04_count=0x00;
"777
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 778: index_05_count=0x00;
"778
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 779: index_01_count=0x00;
"779
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 780: if(index_06_count>1500)
"780
[e $ ! > _index_06_count -> -> 1500 `i `ui 500  ]
[; ;task.c: 781: {
"781
{
[; ;task.c: 782: voltage_adjust_index=0x06;
"782
[e = _voltage_adjust_index -> -> 6 `i `uc ]
[; ;task.c: 783: index_06_count=0x00;
"783
[e = _index_06_count -> -> 0 `i `ui ]
"784
}
[e :U 500 ]
"785
}
[; ;task.c: 784: }
[; ;task.c: 785: }
[e $U 501  ]
"786
[e :U 499 ]
[; ;task.c: 786: else
[; ;task.c: 787: {
"787
{
[; ;task.c: 788: index_01_count=0x00;
"788
[e = _index_01_count -> -> 0 `i `ui ]
[; ;task.c: 789: index_02_count=0x00;
"789
[e = _index_02_count -> -> 0 `i `ui ]
[; ;task.c: 790: index_03_count=0x00;
"790
[e = _index_03_count -> -> 0 `i `ui ]
[; ;task.c: 791: index_04_count=0x00;
"791
[e = _index_04_count -> -> 0 `i `ui ]
[; ;task.c: 792: index_05_count=0x00;
"792
[e = _index_05_count -> -> 0 `i `ui ]
[; ;task.c: 793: index_06_count=0x00;
"793
[e = _index_06_count -> -> 0 `i `ui ]
"794
}
[e :U 501 ]
[e :U 498 ]
[e :U 495 ]
[e :U 492 ]
[e :U 489 ]
[e :U 486 ]
[; ;task.c: 794: }
[; ;task.c: 796: if( ((load_cc_I/100)*30) > (Load_Pmax*30/(load_voltage_value*61/1000)) )
"796
[e $ ! > * / _load_cc_I -> -> 100 `i `f -> -> 30 `i `f / * _Load_Pmax -> -> 30 `i `f -> / * _load_voltage_value -> -> 61 `i `ui -> -> 1000 `i `ui `f 502  ]
[; ;task.c: 797: {
"797
{
[; ;task.c: 798: PID_CC_discharge.SetPoint=(Load_Pmax*30)/(load_voltage_value*61/1000);
"798
[e = . _PID_CC_discharge 0 / * _Load_Pmax -> -> 30 `i `f -> / * _load_voltage_value -> -> 61 `i `ui -> -> 1000 `i `ui `f ]
[; ;task.c: 800: limit_power_pid_flag=0x01;
"800
[e = _limit_power_pid_flag -> -> 1 `i `uc ]
[; ;task.c: 802: data_cc_var = PID_CC_discharge.SetPoint;
"802
[e = _data_cc_var . _PID_CC_discharge 0 ]
[; ;task.c: 804: if(Adjust_Pout_Flag==0x01)
"804
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 503  ]
[; ;task.c: 805: {
"805
{
[; ;task.c: 806: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
"806
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_01_load_percent -> -> 100 `i `f ]
"807
}
[; ;task.c: 807: }
[e $U 504  ]
"808
[e :U 503 ]
[; ;task.c: 808: else if(Adjust_Pout_Flag==0x02)
[e $ ! == -> _Adjust_Pout_Flag `i -> 2 `i 505  ]
[; ;task.c: 809: {
"809
{
[; ;task.c: 810: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
"810
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_02_load_percent -> -> 100 `i `f ]
"811
}
[; ;task.c: 811: }
[e $U 506  ]
"812
[e :U 505 ]
[; ;task.c: 812: else if(Adjust_Pout_Flag==0x03)
[e $ ! == -> _Adjust_Pout_Flag `i -> 3 `i 507  ]
[; ;task.c: 813: {
"813
{
[; ;task.c: 814: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
"814
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_03_load_percent -> -> 100 `i `f ]
"815
}
[; ;task.c: 815: }
[e $U 508  ]
"816
[e :U 507 ]
[; ;task.c: 816: else if(Adjust_Pout_Flag==0x04)
[e $ ! == -> _Adjust_Pout_Flag `i -> 4 `i 509  ]
[; ;task.c: 817: {
"817
{
[; ;task.c: 818: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
"818
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_04_load_percent -> -> 100 `i `f ]
"819
}
[; ;task.c: 819: }
[e $U 510  ]
"820
[e :U 509 ]
[; ;task.c: 820: else if(Adjust_Pout_Flag==0x05)
[e $ ! == -> _Adjust_Pout_Flag `i -> 5 `i 511  ]
[; ;task.c: 821: {
"821
{
[; ;task.c: 822: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
"822
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_05_load_percent -> -> 100 `i `f ]
"823
}
[; ;task.c: 823: }
[e $U 512  ]
"824
[e :U 511 ]
[; ;task.c: 824: else if(Adjust_Pout_Flag==0x00)
[e $ ! == -> _Adjust_Pout_Flag `i -> 0 `i 513  ]
[; ;task.c: 825: {
"825
{
[; ;task.c: 826: PID_CC_discharge.SetPoint =0;
"826
[e = . _PID_CC_discharge 0 -> -> 0 `i `f ]
"827
}
[e :U 513 ]
"830
[e :U 512 ]
[e :U 510 ]
[e :U 508 ]
[e :U 506 ]
[e :U 504 ]
}
[; ;task.c: 827: }
[; ;task.c: 830: }
[e $U 514  ]
"831
[e :U 502 ]
[; ;task.c: 831: else
[; ;task.c: 832: {
"832
{
[; ;task.c: 833: PID_CC_discharge.SetPoint=(load_cc_I/100)*30;
"833
[e = . _PID_CC_discharge 0 * / _load_cc_I -> -> 100 `i `f -> -> 30 `i `f ]
[; ;task.c: 835: data_cc_var = PID_CC_discharge.SetPoint;
"835
[e = _data_cc_var . _PID_CC_discharge 0 ]
[; ;task.c: 837: if(Adjust_Pout_Flag==0x01)
"837
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 515  ]
[; ;task.c: 838: {
"838
{
[; ;task.c: 839: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
"839
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_01_load_percent -> -> 100 `i `f ]
"840
}
[; ;task.c: 840: }
[e $U 516  ]
"841
[e :U 515 ]
[; ;task.c: 841: else if(Adjust_Pout_Flag==0x02)
[e $ ! == -> _Adjust_Pout_Flag `i -> 2 `i 517  ]
[; ;task.c: 842: {
"842
{
[; ;task.c: 843: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
"843
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_02_load_percent -> -> 100 `i `f ]
"844
}
[; ;task.c: 844: }
[e $U 518  ]
"845
[e :U 517 ]
[; ;task.c: 845: else if(Adjust_Pout_Flag==0x03)
[e $ ! == -> _Adjust_Pout_Flag `i -> 3 `i 519  ]
[; ;task.c: 846: {
"846
{
[; ;task.c: 847: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
"847
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_03_load_percent -> -> 100 `i `f ]
"848
}
[; ;task.c: 848: }
[e $U 520  ]
"849
[e :U 519 ]
[; ;task.c: 849: else if(Adjust_Pout_Flag==0x04)
[e $ ! == -> _Adjust_Pout_Flag `i -> 4 `i 521  ]
[; ;task.c: 850: {
"850
{
[; ;task.c: 851: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
"851
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_04_load_percent -> -> 100 `i `f ]
"852
}
[; ;task.c: 852: }
[e $U 522  ]
"853
[e :U 521 ]
[; ;task.c: 853: else if(Adjust_Pout_Flag==0x05)
[e $ ! == -> _Adjust_Pout_Flag `i -> 5 `i 523  ]
[; ;task.c: 854: {
"854
{
[; ;task.c: 855: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
"855
[e = . _PID_CC_discharge 0 / * _data_cc_var _step_05_load_percent -> -> 100 `i `f ]
"856
}
[; ;task.c: 856: }
[e $U 524  ]
"857
[e :U 523 ]
[; ;task.c: 857: else if(Adjust_Pout_Flag==0x00)
[e $ ! == -> _Adjust_Pout_Flag `i -> 0 `i 525  ]
[; ;task.c: 858: {
"858
{
[; ;task.c: 859: PID_CC_discharge.SetPoint =0;
"859
[e = . _PID_CC_discharge 0 -> -> 0 `i `f ]
"860
}
[e :U 525 ]
"862
[e :U 524 ]
[e :U 522 ]
[e :U 520 ]
[e :U 518 ]
[e :U 516 ]
}
[e :U 514 ]
[; ;task.c: 860: }
[; ;task.c: 862: }
[; ;task.c: 864: if(voltage_adjust_index==0x01)
"864
[e $ ! == -> _voltage_adjust_index `i -> 1 `i 526  ]
[; ;task.c: 865: {
"865
{
[; ;task.c: 866: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*1.0;
"866
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .1.0 `f ]
"867
}
[; ;task.c: 867: }
[e $U 527  ]
"868
[e :U 526 ]
[; ;task.c: 868: else if(voltage_adjust_index==0x02)
[e $ ! == -> _voltage_adjust_index `i -> 2 `i 528  ]
[; ;task.c: 869: {
"869
{
[; ;task.c: 870: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.70;
"870
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.70 `f ]
"871
}
[; ;task.c: 871: }
[e $U 529  ]
"872
[e :U 528 ]
[; ;task.c: 872: else if(voltage_adjust_index==0x03)
[e $ ! == -> _voltage_adjust_index `i -> 3 `i 530  ]
[; ;task.c: 873: {
"873
{
[; ;task.c: 874: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.45;
"874
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.45 `f ]
"875
}
[; ;task.c: 875: }
[e $U 531  ]
"876
[e :U 530 ]
[; ;task.c: 876: else if(voltage_adjust_index==0x04)
[e $ ! == -> _voltage_adjust_index `i -> 4 `i 532  ]
[; ;task.c: 877: {
"877
{
[; ;task.c: 878: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.25;
"878
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.25 `f ]
"879
}
[; ;task.c: 879: }
[e $U 533  ]
"880
[e :U 532 ]
[; ;task.c: 880: else if(voltage_adjust_index==0x05)
[e $ ! == -> _voltage_adjust_index `i -> 5 `i 534  ]
[; ;task.c: 881: {
"881
{
[; ;task.c: 882: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.15;
"882
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.15 `f ]
"883
}
[; ;task.c: 883: }
[e $U 535  ]
"884
[e :U 534 ]
[; ;task.c: 884: else if(voltage_adjust_index==0x06)
[e $ ! == -> _voltage_adjust_index `i -> 6 `i 536  ]
[; ;task.c: 885: {
"885
{
[; ;task.c: 886: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.05;
"886
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.05 `f ]
"887
}
[e :U 536 ]
"890
[e :U 535 ]
[e :U 533 ]
[e :U 531 ]
[e :U 529 ]
[e :U 527 ]
[; ;task.c: 887: }
[; ;task.c: 890: if(mcu_temp_index==0x01)
[e $ ! == -> _mcu_temp_index `i -> 1 `i 537  ]
[; ;task.c: 891: {
"891
{
[; ;task.c: 892: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
"892
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.5 `f ]
"893
}
[; ;task.c: 893: }
[e $U 538  ]
"894
[e :U 537 ]
[; ;task.c: 894: else if(mcu_temp_index==0x02)
[e $ ! == -> _mcu_temp_index `i -> 2 `i 539  ]
[; ;task.c: 895: {
"895
{
[; ;task.c: 896: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.2;
"896
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.2 `f ]
"897
}
[; ;task.c: 897: }
[e $U 540  ]
"898
[e :U 539 ]
[; ;task.c: 898: else if(mcu_temp_index==0x03)
[e $ ! == -> _mcu_temp_index `i -> 3 `i 541  ]
[; ;task.c: 899: {
"899
{
[; ;task.c: 900: PID_CC_discharge.SetPoint =0;
"900
[e = . _PID_CC_discharge 0 -> -> 0 `i `f ]
"901
}
[e :U 541 ]
"903
[e :U 540 ]
[e :U 538 ]
[; ;task.c: 901: }
[; ;task.c: 903: if(light_mode==0x00 && work_mode==0x00)
[e $ ! && == -> _light_mode `i -> 0 `i == -> _work_mode `i -> 0 `i 542  ]
[; ;task.c: 904: {
"904
{
[; ;task.c: 905: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
"905
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.5 `f ]
"906
}
[; ;task.c: 906: }
[e $U 543  ]
"907
[e :U 542 ]
[; ;task.c: 907: else if(light_mode==0x01 && work_mode==0x00)
[e $ ! && == -> _light_mode `i -> 1 `i == -> _work_mode `i -> 0 `i 544  ]
[; ;task.c: 908: {
"908
{
[; ;task.c: 909: if(have_person1_flag==0x01 || have_person2_flag==0x01)
"909
[e $ ! || == -> _have_person1_flag `i -> 1 `i == -> _have_person2_flag `i -> 1 `i 545  ]
[; ;task.c: 910: {
"910
{
[; ;task.c: 911: __nop();
"911
[e ( ___nop ..  ]
"912
}
[; ;task.c: 912: }
[e $U 546  ]
"913
[e :U 545 ]
[; ;task.c: 913: else
[; ;task.c: 914: {
"914
{
[; ;task.c: 915: PID_CC_discharge.SetPoint = data_cc_var*0.05;
"915
[e = . _PID_CC_discharge 0 -> * -> _data_cc_var `d .0.05 `f ]
"916
}
[e :U 546 ]
"917
}
[; ;task.c: 916: }
[; ;task.c: 917: }
[e $U 547  ]
"918
[e :U 544 ]
[; ;task.c: 918: else if(light_mode==0x02 && work_mode==0x00)
[e $ ! && == -> _light_mode `i -> 2 `i == -> _work_mode `i -> 0 `i 548  ]
[; ;task.c: 919: {
"919
{
[; ;task.c: 920: if(Adjust_Pout_Flag==0x01)
"920
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 549  ]
[; ;task.c: 921: {
"921
{
[; ;task.c: 922: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
"922
[e = . _PID_CC_discharge 0 -> * -> . _PID_CC_discharge 0 `d .0.5 `f ]
"923
}
[; ;task.c: 923: }
[e $U 550  ]
"924
[e :U 549 ]
[; ;task.c: 924: else if(Adjust_Pout_Flag>=0x02)
[e $ ! >= -> _Adjust_Pout_Flag `i -> 2 `i 551  ]
[; ;task.c: 925: {
"925
{
[; ;task.c: 926: if(have_person1_flag==0x01 || have_person2_flag==0x01)
"926
[e $ ! || == -> _have_person1_flag `i -> 1 `i == -> _have_person2_flag `i -> 1 `i 552  ]
[; ;task.c: 927: {
"927
{
[; ;task.c: 928: __nop();
"928
[e ( ___nop ..  ]
"929
}
[; ;task.c: 929: }
[e $U 553  ]
"930
[e :U 552 ]
[; ;task.c: 930: else
[; ;task.c: 931: {
"931
{
[; ;task.c: 932: PID_CC_discharge.SetPoint = data_cc_var*0.05;
"932
[e = . _PID_CC_discharge 0 -> * -> _data_cc_var `d .0.05 `f ]
"934
}
[e :U 553 ]
"935
}
[e :U 551 ]
"936
[e :U 550 ]
}
[e :U 548 ]
"938
[e :U 547 ]
[e :U 543 ]
[; ;task.c: 934: }
[; ;task.c: 935: }
[; ;task.c: 936: }
[; ;task.c: 938: if(led_out_ctrl==0x01 && work_mode==0x00)
[e $ ! && == -> _led_out_ctrl `i -> 1 `i == -> _work_mode `i -> 0 `i 554  ]
[; ;task.c: 939: {
"939
{
[; ;task.c: 940: PID_CC_discharge.SetPoint = 0;
"940
[e = . _PID_CC_discharge 0 -> -> 0 `i `f ]
"941
}
[e :U 554 ]
[; ;task.c: 941: }
[; ;task.c: 944: pid_index = 0x01;
"944
[e = _pid_index -> -> 1 `i `uc ]
[; ;task.c: 946: PWM_I=pid_calc(&PID_CC_discharge,discharge_current_value);
"946
[e = _PWM_I ( _pid_calc (2 , &U _PID_CC_discharge -> _discharge_current_value `i ]
[; ;task.c: 948: PWM = PWM+PWM_I;
"948
[e = _PWM + _PWM _PWM_I ]
[; ;task.c: 950: if( PWM>=488)
"950
[e $ ! >= _PWM -> -> 488 `i `f 555  ]
[; ;task.c: 951: {
"951
{
[; ;task.c: 952: PWM=488;
"952
[e = _PWM -> -> 488 `i `f ]
"953
}
[; ;task.c: 953: }
[e $U 556  ]
"954
[e :U 555 ]
[; ;task.c: 954: else if(PWM<=5)
[e $ ! <= _PWM -> -> 5 `i `f 557  ]
[; ;task.c: 955: {
"955
{
[; ;task.c: 956: PWM=5;
"956
[e = _PWM -> -> 5 `i `f ]
"957
}
[e :U 557 ]
"959
[e :U 556 ]
[; ;task.c: 957: }
[; ;task.c: 959: bost_pwm1_value = (unsigned int)PWM;
[e = _bost_pwm1_value -> _PWM `ui ]
[; ;task.c: 963: if(PID_CC_discharge.SetPoint==0)
"963
[e $ ! == . _PID_CC_discharge 0 -> -> 0 `i `f 558  ]
[; ;task.c: 964: {
"964
{
[; ;task.c: 965: bost_pwm1_value = 0;
"965
[e = _bost_pwm1_value -> -> 0 `i `ui ]
"966
}
[e :U 558 ]
[; ;task.c: 966: }
[; ;task.c: 968: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"968
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 970: limit_power_pid_flag=0x00;
"970
[e = _limit_power_pid_flag -> -> 0 `i `uc ]
"973
}
[; ;task.c: 973: }
[e $U 559  ]
"974
[e :U 473 ]
[; ;task.c: 974: else if((discharge_current_value>discharge_i_limit)&&(discharge1_index==0x02))
[e $ ! && > -> _discharge_current_value `f _discharge_i_limit == -> _discharge1_index `i -> 2 `i 560  ]
[; ;task.c: 975: {
"975
{
[; ;task.c: 976: if(bost_pwm1_value>10)
"976
[e $ ! > _bost_pwm1_value -> -> 10 `i `ui 561  ]
[; ;task.c: 977: {
"977
{
[; ;task.c: 978: bost_pwm1_value = bost_pwm1_value-1;
"978
[e = _bost_pwm1_value - _bost_pwm1_value -> -> 1 `i `ui ]
"979
}
[e :U 561 ]
[; ;task.c: 979: }
[; ;task.c: 981: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"981
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
"982
}
[e :U 560 ]
"984
[e :U 559 ]
[; ;task.c: 982: }
[; ;task.c: 984: battery_low_time_count=0;
[e = _battery_low_time_count -> -> 0 `i `ui ]
"986
}
[; ;task.c: 986: }
[e $U 562  ]
"987
[e :U 472 ]
[; ;task.c: 987: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge1_index==0x02))
[e $ ! && < -> _battery_voltage_value `f _dianchi_qianya_baohu == -> _discharge1_index `i -> 2 `i 563  ]
[; ;task.c: 988: {
"988
{
[; ;task.c: 990: battery_low_time_count++;
"990
[e ++ _battery_low_time_count -> -> 1 `i `ui ]
[; ;task.c: 992: if(battery_low_time_count>1000)
"992
[e $ ! > _battery_low_time_count -> -> 1000 `i `ui 564  ]
[; ;task.c: 993: {
"993
{
[; ;task.c: 994: discharge1_index=0x03;
"994
[e = _discharge1_index -> -> 3 `i `uc ]
[; ;task.c: 996: bost_pwm1_value=2;
"996
[e = _bost_pwm1_value -> -> 2 `i `ui ]
[; ;task.c: 998: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"998
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 1000: battery_low_time_count=0x00;
"1000
[e = _battery_low_time_count -> -> 0 `i `ui ]
[; ;task.c: 1002: discharge_led_status=0x00;
"1002
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1004: while(1);
"1004
[e :U 566 ]
[e :U 565 ]
[e $U 566  ]
[e :U 567 ]
"1005
}
[e :U 564 ]
"1007
}
[; ;task.c: 1005: }
[; ;task.c: 1007: }
[e $U 568  ]
"1008
[e :U 563 ]
[; ;task.c: 1008: else
[; ;task.c: 1009: {
"1009
{
[; ;task.c: 1010: battery_low_time_count=0;
"1010
[e = _battery_low_time_count -> -> 0 `i `ui ]
"1011
}
[e :U 568 ]
[e :U 562 ]
"1013
}
[e :U 462 ]
[; ;task.c: 1011: }
[; ;task.c: 1013: }
[; ;task.c: 1015: handle_an0_process_flag=0x00;
"1015
[e = _handle_an0_process_flag -> -> 0 `i `uc ]
"1017
}
[e :U 461 ]
[; ;task.c: 1017: }
[; ;task.c: 1019: if(handle_an11_process_flag==0x01)
"1019
[e $ ! == -> _handle_an11_process_flag `i -> 1 `i 569  ]
[; ;task.c: 1020: {
"1020
{
[; ;task.c: 1021: load_voltage2_value=0x00;
"1021
[e = _load_voltage2_value -> -> 0 `i `ui ]
[; ;task.c: 1023: if(system_status == 0x02)
"1023
[e $ ! == -> _system_status `i -> 2 `i 570  ]
[; ;task.c: 1024: {
"1024
{
[; ;task.c: 1025: load_voltage2_value=start_ad_convert(0b01011);
"1025
[e = _load_voltage2_value ( _start_ad_convert (1 -> -> 11 `i `uc ]
[; ;task.c: 1028: if((load_voltage2_value<shuchu_shortout_voltage)&&(discharge2_index==0x02)&&(PID_CC2_discharge.SetPoint>0))
"1028
[e $ ! && && < -> _load_voltage2_value `f _shuchu_shortout_voltage == -> _discharge2_index `i -> 2 `i > . _PID_CC2_discharge 0 -> -> 0 `i `f 571  ]
[; ;task.c: 1029: {
"1029
{
[; ;task.c: 1030: load2_short_time_count++;
"1030
[e ++ _load2_short_time_count -> -> 1 `i `ui ]
[; ;task.c: 1032: if(load2_short_time_count>50)
"1032
[e $ ! > _load2_short_time_count -> -> 50 `i `ui 572  ]
[; ;task.c: 1033: {
"1033
{
[; ;task.c: 1034: load2_short_time_count=0x00;
"1034
[e = _load2_short_time_count -> -> 0 `i `ui ]
[; ;task.c: 1036: bost_pwm2_value=2;
"1036
[e = _bost_pwm2_value -> -> 2 `i `ui ]
[; ;task.c: 1038: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1038
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1040: discharge_led_status=0x00;
"1040
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1042: delay_ms(1);
"1042
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 1044: Disable_Bost_Pwm2();
"1044
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1046: (LATCbits.LATC0 = 0x00);
"1046
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1048: while(1);
"1048
[e :U 574 ]
[e :U 573 ]
[e $U 574  ]
[e :U 575 ]
"1049
}
[e :U 572 ]
"1051
}
[; ;task.c: 1049: }
[; ;task.c: 1051: }
[e $U 576  ]
"1052
[e :U 571 ]
[; ;task.c: 1052: else if((load_voltage2_value>=shuchu_shortout_voltage)&&(load_voltage2_value<(shuchu_shortout_voltage*2))&&(discharge2_index==0x02)&&(PID_CC2_discharge.SetPoint>0))
[e $ ! && && && >= -> _load_voltage2_value `f _shuchu_shortout_voltage < -> _load_voltage2_value `f * _shuchu_shortout_voltage -> -> 2 `i `f == -> _discharge2_index `i -> 2 `i > . _PID_CC2_discharge 0 -> -> 0 `i `f 577  ]
[; ;task.c: 1053: {
"1053
{
[; ;task.c: 1054: load2_short_time_count++;
"1054
[e ++ _load2_short_time_count -> -> 1 `i `ui ]
[; ;task.c: 1056: if(load2_short_time_count>50)
"1056
[e $ ! > _load2_short_time_count -> -> 50 `i `ui 578  ]
[; ;task.c: 1057: {
"1057
{
[; ;task.c: 1058: load2_short_time_count=0x00;
"1058
[e = _load2_short_time_count -> -> 0 `i `ui ]
[; ;task.c: 1060: discharge2_index=0x03;
"1060
[e = _discharge2_index -> -> 3 `i `uc ]
[; ;task.c: 1062: bost_pwm2_value=2;
"1062
[e = _bost_pwm2_value -> -> 2 `i `ui ]
[; ;task.c: 1064: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1064
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1066: discharge_led_status=0x00;
"1066
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1068: delay_ms(1);
"1068
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 1070: Disable_Bost_Pwm2();
"1070
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1072: (LATCbits.LATC0 = 0x00);
"1072
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1074: while(1);
"1074
[e :U 580 ]
[e :U 579 ]
[e $U 580  ]
[e :U 581 ]
"1075
}
[e :U 578 ]
"1077
}
[; ;task.c: 1075: }
[; ;task.c: 1077: }
[e $U 582  ]
"1078
[e :U 577 ]
[; ;task.c: 1078: else
[; ;task.c: 1079: {
"1079
{
[; ;task.c: 1080: load2_short_time_count=0x00;
"1080
[e = _load2_short_time_count -> -> 0 `i `ui ]
"1081
}
[e :U 582 ]
[e :U 576 ]
[; ;task.c: 1081: }
[; ;task.c: 1084: if((load_voltage2_value>shuchu_open_voltage)&&(discharge2_index==0x02))
"1084
[e $ ! && > -> _load_voltage2_value `f _shuchu_open_voltage == -> _discharge2_index `i -> 2 `i 583  ]
[; ;task.c: 1085: {
"1085
{
[; ;task.c: 1086: load2_open_time_count++;
"1086
[e ++ _load2_open_time_count -> -> 1 `i `ui ]
[; ;task.c: 1088: if(load2_open_time_count>20)
"1088
[e $ ! > _load2_open_time_count -> -> 20 `i `ui 584  ]
[; ;task.c: 1089: {
"1089
{
[; ;task.c: 1090: discharge2_index=0x03;
"1090
[e = _discharge2_index -> -> 3 `i `uc ]
[; ;task.c: 1092: load2_open_time_count=0x00;
"1092
[e = _load2_open_time_count -> -> 0 `i `ui ]
[; ;task.c: 1094: bost_pwm2_value=5;
"1094
[e = _bost_pwm2_value -> -> 5 `i `ui ]
[; ;task.c: 1096: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1096
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1098: discharge_led_status=0x00;
"1098
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1100: delay_ms(1);
"1100
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 1102: Disable_Bost_Pwm2();
"1102
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1104: (LATCbits.LATC0 = 0x00);
"1104
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1106: while(1);
"1106
[e :U 586 ]
[e :U 585 ]
[e $U 586  ]
[e :U 587 ]
"1107
}
[e :U 584 ]
"1109
}
[; ;task.c: 1107: }
[; ;task.c: 1109: }
[e $U 588  ]
"1110
[e :U 583 ]
[; ;task.c: 1110: else
[; ;task.c: 1111: {
"1111
{
[; ;task.c: 1112: load2_open_time_count=0x00;
"1112
[e = _load2_open_time_count -> -> 0 `i `ui ]
"1113
}
[e :U 588 ]
"1116
}
[e :U 570 ]
[; ;task.c: 1113: }
[; ;task.c: 1116: }
[; ;task.c: 1118: handle_an11_process_flag=0x00;
"1118
[e = _handle_an11_process_flag -> -> 0 `i `uc ]
"1120
}
[e :U 569 ]
[; ;task.c: 1120: }
[; ;task.c: 1122: if(handle_an8_process_flag==0x01)
"1122
[e $ ! == -> _handle_an8_process_flag `i -> 1 `i 589  ]
[; ;task.c: 1123: {
"1123
{
[; ;task.c: 1124: discharge_current2_value=0x00;
"1124
[e = _discharge_current2_value -> -> 0 `i `ui ]
[; ;task.c: 1126: if(system_status == 0x02)
"1126
[e $ ! == -> _system_status `i -> 2 `i 590  ]
[; ;task.c: 1127: {
"1127
{
[; ;task.c: 1128: discharge_current2_value=start_ad_convert(0b01000);
"1128
[e = _discharge_current2_value ( _start_ad_convert (1 -> -> 8 `i `uc ]
[; ;task.c: 1130: if((discharge_current2_value>discharge_i_baohu)&&(discharge2_index==0x02))
"1130
[e $ ! && > -> _discharge_current2_value `f _discharge_i_baohu == -> _discharge2_index `i -> 2 `i 591  ]
[; ;task.c: 1131: {
"1131
{
[; ;task.c: 1132: over_load2_time_count++;
"1132
[e ++ _over_load2_time_count -> -> 1 `i `ui ]
[; ;task.c: 1134: if(over_load2_time_count>20)
"1134
[e $ ! > _over_load2_time_count -> -> 20 `i `ui 592  ]
[; ;task.c: 1135: {
"1135
{
[; ;task.c: 1136: discharge2_index=0x03;
"1136
[e = _discharge2_index -> -> 3 `i `uc ]
[; ;task.c: 1138: bost_pwm2_value=2;
"1138
[e = _bost_pwm2_value -> -> 2 `i `ui ]
[; ;task.c: 1140: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1140
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1142: delay_ms(1);
"1142
[e ( _delay_ms (1 -> -> 1 `i `us ]
[; ;task.c: 1144: Disable_Bost_Pwm2();
"1144
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1146: (LATCbits.LATC0 = 0x00);
"1146
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1148: over_load2_time_count=0x00;
"1148
[e = _over_load2_time_count -> -> 0 `i `ui ]
[; ;task.c: 1150: discharge_led_status=0x00;
"1150
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1152: while(1);
"1152
[e :U 594 ]
[e :U 593 ]
[e $U 594  ]
[e :U 595 ]
"1153
}
[e :U 592 ]
"1155
}
[; ;task.c: 1153: }
[; ;task.c: 1155: }
[e $U 596  ]
"1156
[e :U 591 ]
[; ;task.c: 1156: else
[; ;task.c: 1157: {
"1157
{
[; ;task.c: 1158: over_load2_time_count=0x00;
"1158
[e = _over_load2_time_count -> -> 0 `i `ui ]
"1159
}
[e :U 596 ]
[; ;task.c: 1159: }
[; ;task.c: 1161: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge2_index==0x01))
"1161
[e $ ! && > -> _battery_voltage_value `f _dianchi_qianya_huifu == -> _discharge2_index `i -> 1 `i 597  ]
[; ;task.c: 1162: {
"1162
{
[; ;task.c: 1163: discharge2_index=0x02;
"1163
[e = _discharge2_index -> -> 2 `i `uc ]
[; ;task.c: 1165: discharge_led_status=0x01;
"1165
[e = _discharge_led_status -> -> 1 `i `uc ]
[; ;task.c: 1167: open_discharge_time=0x01;
"1167
[e = _open_discharge_time -> -> 1 `i `uc ]
[; ;task.c: 1169: (LATCbits.LATC0 = 0x01);
"1169
[e = . . _LATCbits 0 0 -> -> 1 `i `uc ]
[; ;task.c: 1171: Enable_Bost_Pwm2();
"1171
[e ( _Enable_Bost_Pwm2 ..  ]
"1173
}
[; ;task.c: 1173: }
[e $U 598  ]
"1174
[e :U 597 ]
[; ;task.c: 1174: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge2_index==0x01))
[e $ ! && <= -> _battery_voltage_value `f _dianchi_qianya_huifu == -> _discharge2_index `i -> 1 `i 599  ]
[; ;task.c: 1175: {
"1175
{
[; ;task.c: 1176: discharge_led_status=0x00;
"1176
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1178: open_discharge_time=0x00;
"1178
[e = _open_discharge_time -> -> 0 `i `uc ]
"1179
}
[e :U 599 ]
"1182
[e :U 598 ]
[; ;task.c: 1179: }
[; ;task.c: 1182: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge2_index==0x02))
[e $ ! && >= -> _battery_voltage_value `f _dianchi_qianya_baohu == -> _discharge2_index `i -> 2 `i 600  ]
[; ;task.c: 1183: {
"1183
{
[; ;task.c: 1185: if((discharge_current2_value<=discharge_i_limit)&&(discharge2_index==0x02))
"1185
[e $ ! && <= -> _discharge_current2_value `f _discharge_i_limit == -> _discharge2_index `i -> 2 `i 601  ]
[; ;task.c: 1186: {
"1186
{
[; ;task.c: 1189: t1=step_01_time_limit;
"1189
[e = _t1 -> _step_01_time_limit `uc ]
[; ;task.c: 1190: t2=step_01_time_limit+step_02_time_limit;
"1190
[e = _t2 -> + _step_01_time_limit _step_02_time_limit `uc ]
[; ;task.c: 1191: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
"1191
[e = _t3 -> + + _step_01_time_limit _step_02_time_limit _step_03_time_limit `uc ]
[; ;task.c: 1192: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit;
"1192
[e = _t4 -> + + + _step_01_time_limit _step_02_time_limit _step_03_time_limit _step_04_time_limit `uc ]
[; ;task.c: 1193: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_limit+step_05_time_limit;
"1193
[e = _t5 -> + + + + _step_01_time_limit _step_02_time_limit _step_03_time_limit _step_04_time_limit _step_05_time_limit `uc ]
[; ;task.c: 1195: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
"1195
[e $ ! && < _ho_cnt -> _t1 `ui <= -> _Adjust_Pout_Flag `i -> 1 `i 602  ]
[; ;task.c: 1196: {
"1196
{
[; ;task.c: 1197: Adjust_Pout_Flag=0x01;
"1197
[e = _Adjust_Pout_Flag -> -> 1 `i `uc ]
"1198
}
[; ;task.c: 1198: }
[e $U 603  ]
"1199
[e :U 602 ]
[; ;task.c: 1199: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
[e $ ! && && >= _ho_cnt -> _t1 `ui < _ho_cnt -> _t2 `ui <= -> _Adjust_Pout_Flag `i -> 2 `i 604  ]
[; ;task.c: 1200: {
"1200
{
[; ;task.c: 1201: Adjust_Pout_Flag=0x02;
"1201
[e = _Adjust_Pout_Flag -> -> 2 `i `uc ]
"1202
}
[; ;task.c: 1202: }
[e $U 605  ]
"1203
[e :U 604 ]
[; ;task.c: 1203: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
[e $ ! && && >= _ho_cnt -> _t2 `ui < _ho_cnt -> _t3 `ui <= -> _Adjust_Pout_Flag `i -> 3 `i 606  ]
[; ;task.c: 1204: {
"1204
{
[; ;task.c: 1205: Adjust_Pout_Flag=0x03;
"1205
[e = _Adjust_Pout_Flag -> -> 3 `i `uc ]
"1206
}
[; ;task.c: 1206: }
[e $U 607  ]
"1207
[e :U 606 ]
[; ;task.c: 1207: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
[e $ ! && && >= _ho_cnt -> _t3 `ui < _ho_cnt -> _t4 `ui <= -> _Adjust_Pout_Flag `i -> 4 `i 608  ]
[; ;task.c: 1208: {
"1208
{
[; ;task.c: 1209: Adjust_Pout_Flag=0x04;
"1209
[e = _Adjust_Pout_Flag -> -> 4 `i `uc ]
"1210
}
[; ;task.c: 1210: }
[e $U 609  ]
"1211
[e :U 608 ]
[; ;task.c: 1211: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
[e $ ! && && >= _ho_cnt -> _t4 `ui < _ho_cnt -> _t5 `ui <= -> _Adjust_Pout_Flag `i -> 5 `i 610  ]
[; ;task.c: 1212: {
"1212
{
[; ;task.c: 1213: Adjust_Pout_Flag=0x05;
"1213
[e = _Adjust_Pout_Flag -> -> 5 `i `uc ]
"1214
}
[; ;task.c: 1214: }
[e $U 611  ]
"1215
[e :U 610 ]
[; ;task.c: 1215: else
[; ;task.c: 1216: {
"1216
{
[; ;task.c: 1217: Adjust_Pout_Flag=0x00;
"1217
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
"1218
}
[e :U 611 ]
[e :U 609 ]
[e :U 607 ]
[e :U 605 ]
[e :U 603 ]
[; ;task.c: 1218: }
[; ;task.c: 1221: if( ((load_cc_I/100)*0.30*step_05_load_percent) > (Load2_Pmax*30/(load_voltage2_value*61/1000)) )
"1221
[e $ ! > * * -> / _load_cc_I -> -> 100 `i `f `d .0.30 -> _step_05_load_percent `d -> / * _Load2_Pmax -> -> 30 `i `f -> / * _load_voltage2_value -> -> 61 `i `ui -> -> 1000 `i `ui `f `d 612  ]
[; ;task.c: 1222: {
"1222
{
[; ;task.c: 1223: PID_CC2_discharge.SetPoint=(Load2_Pmax*30)/(load_voltage2_value*61/1000);
"1223
[e = . _PID_CC2_discharge 0 / * _Load2_Pmax -> -> 30 `i `f -> / * _load_voltage2_value -> -> 61 `i `ui -> -> 1000 `i `ui `f ]
[; ;task.c: 1225: limit_power_pid2_flag=0x01;
"1225
[e = _limit_power_pid2_flag -> -> 1 `i `uc ]
[; ;task.c: 1227: data_cc_var = PID_CC2_discharge.SetPoint;
"1227
[e = _data_cc_var . _PID_CC2_discharge 0 ]
[; ;task.c: 1229: if(Adjust_Pout_Flag==0x01)
"1229
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 613  ]
[; ;task.c: 1230: {
"1230
{
[; ;task.c: 1231: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
"1231
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_01_load_percent -> -> 100 `i `f ]
"1232
}
[; ;task.c: 1232: }
[e $U 614  ]
"1233
[e :U 613 ]
[; ;task.c: 1233: else if(Adjust_Pout_Flag==0x02)
[e $ ! == -> _Adjust_Pout_Flag `i -> 2 `i 615  ]
[; ;task.c: 1234: {
"1234
{
[; ;task.c: 1235: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
"1235
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_02_load_percent -> -> 100 `i `f ]
"1236
}
[; ;task.c: 1236: }
[e $U 616  ]
"1237
[e :U 615 ]
[; ;task.c: 1237: else if(Adjust_Pout_Flag==0x03)
[e $ ! == -> _Adjust_Pout_Flag `i -> 3 `i 617  ]
[; ;task.c: 1238: {
"1238
{
[; ;task.c: 1239: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
"1239
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_03_load_percent -> -> 100 `i `f ]
"1240
}
[; ;task.c: 1240: }
[e $U 618  ]
"1241
[e :U 617 ]
[; ;task.c: 1241: else if(Adjust_Pout_Flag==0x04)
[e $ ! == -> _Adjust_Pout_Flag `i -> 4 `i 619  ]
[; ;task.c: 1242: {
"1242
{
[; ;task.c: 1243: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
"1243
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_04_load_percent -> -> 100 `i `f ]
"1244
}
[; ;task.c: 1244: }
[e $U 620  ]
"1245
[e :U 619 ]
[; ;task.c: 1245: else if(Adjust_Pout_Flag==0x05)
[e $ ! == -> _Adjust_Pout_Flag `i -> 5 `i 621  ]
[; ;task.c: 1246: {
"1246
{
[; ;task.c: 1247: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
"1247
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_05_load_percent -> -> 100 `i `f ]
"1248
}
[; ;task.c: 1248: }
[e $U 622  ]
"1249
[e :U 621 ]
[; ;task.c: 1249: else if(Adjust_Pout_Flag==0x00)
[e $ ! == -> _Adjust_Pout_Flag `i -> 0 `i 623  ]
[; ;task.c: 1250: {
"1250
{
[; ;task.c: 1251: PID_CC2_discharge.SetPoint =0;
"1251
[e = . _PID_CC2_discharge 0 -> -> 0 `i `f ]
"1252
}
[e :U 623 ]
"1254
[e :U 622 ]
[e :U 620 ]
[e :U 618 ]
[e :U 616 ]
[e :U 614 ]
}
[; ;task.c: 1252: }
[; ;task.c: 1254: }
[e $U 624  ]
"1255
[e :U 612 ]
[; ;task.c: 1255: else
[; ;task.c: 1256: {
"1256
{
[; ;task.c: 1257: PID_CC2_discharge.SetPoint=(load_cc_I/100)*0.30*step_05_load_percent;
"1257
[e = . _PID_CC2_discharge 0 -> * * -> / _load_cc_I -> -> 100 `i `f `d .0.30 -> _step_05_load_percent `d `f ]
[; ;task.c: 1259: data_cc_var = PID_CC2_discharge.SetPoint;
"1259
[e = _data_cc_var . _PID_CC2_discharge 0 ]
[; ;task.c: 1261: if(Adjust_Pout_Flag==0x01)
"1261
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 625  ]
[; ;task.c: 1262: {
"1262
{
[; ;task.c: 1263: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
"1263
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_01_load_percent -> -> 100 `i `f ]
"1264
}
[; ;task.c: 1264: }
[e $U 626  ]
"1265
[e :U 625 ]
[; ;task.c: 1265: else if(Adjust_Pout_Flag==0x02)
[e $ ! == -> _Adjust_Pout_Flag `i -> 2 `i 627  ]
[; ;task.c: 1266: {
"1266
{
[; ;task.c: 1267: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
"1267
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_02_load_percent -> -> 100 `i `f ]
"1268
}
[; ;task.c: 1268: }
[e $U 628  ]
"1269
[e :U 627 ]
[; ;task.c: 1269: else if(Adjust_Pout_Flag==0x03)
[e $ ! == -> _Adjust_Pout_Flag `i -> 3 `i 629  ]
[; ;task.c: 1270: {
"1270
{
[; ;task.c: 1271: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
"1271
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_03_load_percent -> -> 100 `i `f ]
"1272
}
[; ;task.c: 1272: }
[e $U 630  ]
"1273
[e :U 629 ]
[; ;task.c: 1273: else if(Adjust_Pout_Flag==0x04)
[e $ ! == -> _Adjust_Pout_Flag `i -> 4 `i 631  ]
[; ;task.c: 1274: {
"1274
{
[; ;task.c: 1275: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
"1275
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_04_load_percent -> -> 100 `i `f ]
"1276
}
[; ;task.c: 1276: }
[e $U 632  ]
"1277
[e :U 631 ]
[; ;task.c: 1277: else if(Adjust_Pout_Flag==0x05)
[e $ ! == -> _Adjust_Pout_Flag `i -> 5 `i 633  ]
[; ;task.c: 1278: {
"1278
{
[; ;task.c: 1279: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
"1279
[e = . _PID_CC2_discharge 0 / * _data_cc_var _step_05_load_percent -> -> 100 `i `f ]
"1280
}
[; ;task.c: 1280: }
[e $U 634  ]
"1281
[e :U 633 ]
[; ;task.c: 1281: else if(Adjust_Pout_Flag==0x00)
[e $ ! == -> _Adjust_Pout_Flag `i -> 0 `i 635  ]
[; ;task.c: 1282: {
"1282
{
[; ;task.c: 1283: PID_CC2_discharge.SetPoint =0;
"1283
[e = . _PID_CC2_discharge 0 -> -> 0 `i `f ]
"1284
}
[e :U 635 ]
"1286
[e :U 634 ]
[e :U 632 ]
[e :U 630 ]
[e :U 628 ]
[e :U 626 ]
}
[e :U 624 ]
[; ;task.c: 1284: }
[; ;task.c: 1286: }
[; ;task.c: 1288: if(voltage_adjust_index==0x01)
"1288
[e $ ! == -> _voltage_adjust_index `i -> 1 `i 636  ]
[; ;task.c: 1289: {
"1289
{
[; ;task.c: 1290: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*1.0;
"1290
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .1.0 `f ]
"1291
}
[; ;task.c: 1291: }
[e $U 637  ]
"1292
[e :U 636 ]
[; ;task.c: 1292: else if(voltage_adjust_index==0x02)
[e $ ! == -> _voltage_adjust_index `i -> 2 `i 638  ]
[; ;task.c: 1293: {
"1293
{
[; ;task.c: 1294: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.70;
"1294
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.70 `f ]
"1295
}
[; ;task.c: 1295: }
[e $U 639  ]
"1296
[e :U 638 ]
[; ;task.c: 1296: else if(voltage_adjust_index==0x03)
[e $ ! == -> _voltage_adjust_index `i -> 3 `i 640  ]
[; ;task.c: 1297: {
"1297
{
[; ;task.c: 1298: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.45;
"1298
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.45 `f ]
"1299
}
[; ;task.c: 1299: }
[e $U 641  ]
"1300
[e :U 640 ]
[; ;task.c: 1300: else if(voltage_adjust_index==0x04)
[e $ ! == -> _voltage_adjust_index `i -> 4 `i 642  ]
[; ;task.c: 1301: {
"1301
{
[; ;task.c: 1302: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.25;
"1302
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.25 `f ]
"1303
}
[; ;task.c: 1303: }
[e $U 643  ]
"1304
[e :U 642 ]
[; ;task.c: 1304: else if(voltage_adjust_index==0x05)
[e $ ! == -> _voltage_adjust_index `i -> 5 `i 644  ]
[; ;task.c: 1305: {
"1305
{
[; ;task.c: 1306: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.15;
"1306
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.15 `f ]
"1307
}
[; ;task.c: 1307: }
[e $U 645  ]
"1308
[e :U 644 ]
[; ;task.c: 1308: else if(voltage_adjust_index==0x06)
[e $ ! == -> _voltage_adjust_index `i -> 6 `i 646  ]
[; ;task.c: 1309: {
"1309
{
[; ;task.c: 1310: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.05;
"1310
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.05 `f ]
"1311
}
[e :U 646 ]
"1313
[e :U 645 ]
[e :U 643 ]
[e :U 641 ]
[e :U 639 ]
[e :U 637 ]
[; ;task.c: 1311: }
[; ;task.c: 1313: if(mcu_temp_index==0x01)
[e $ ! == -> _mcu_temp_index `i -> 1 `i 647  ]
[; ;task.c: 1314: {
"1314
{
[; ;task.c: 1315: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
"1315
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.5 `f ]
"1316
}
[; ;task.c: 1316: }
[e $U 648  ]
"1317
[e :U 647 ]
[; ;task.c: 1317: else if(mcu_temp_index==0x02)
[e $ ! == -> _mcu_temp_index `i -> 2 `i 649  ]
[; ;task.c: 1318: {
"1318
{
[; ;task.c: 1319: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.2;
"1319
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.2 `f ]
"1320
}
[; ;task.c: 1320: }
[e $U 650  ]
"1321
[e :U 649 ]
[; ;task.c: 1321: else if(mcu_temp_index==0x03)
[e $ ! == -> _mcu_temp_index `i -> 3 `i 651  ]
[; ;task.c: 1322: {
"1322
{
[; ;task.c: 1323: PID_CC2_discharge.SetPoint =0;
"1323
[e = . _PID_CC2_discharge 0 -> -> 0 `i `f ]
"1324
}
[e :U 651 ]
"1326
[e :U 650 ]
[e :U 648 ]
[; ;task.c: 1324: }
[; ;task.c: 1326: if(light2_mode==0x00 && work_mode==0x00)
[e $ ! && == -> _light2_mode `i -> 0 `i == -> _work_mode `i -> 0 `i 652  ]
[; ;task.c: 1327: {
"1327
{
[; ;task.c: 1328: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
"1328
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.5 `f ]
"1329
}
[; ;task.c: 1329: }
[e $U 653  ]
"1330
[e :U 652 ]
[; ;task.c: 1330: else if(light2_mode==0x01 && work_mode==0x00)
[e $ ! && == -> _light2_mode `i -> 1 `i == -> _work_mode `i -> 0 `i 654  ]
[; ;task.c: 1331: {
"1331
{
[; ;task.c: 1332: if(have_person1_flag==0x01 || have_person2_flag==0x01)
"1332
[e $ ! || == -> _have_person1_flag `i -> 1 `i == -> _have_person2_flag `i -> 1 `i 655  ]
[; ;task.c: 1333: {
"1333
{
[; ;task.c: 1334: __nop();
"1334
[e ( ___nop ..  ]
"1335
}
[; ;task.c: 1335: }
[e $U 656  ]
"1336
[e :U 655 ]
[; ;task.c: 1336: else
[; ;task.c: 1337: {
"1337
{
[; ;task.c: 1338: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
"1338
[e = . _PID_CC2_discharge 0 -> * -> _data_cc_var `d .0.05 `f ]
"1339
}
[e :U 656 ]
"1340
}
[; ;task.c: 1339: }
[; ;task.c: 1340: }
[e $U 657  ]
"1341
[e :U 654 ]
[; ;task.c: 1341: else if(light2_mode==0x02 && work_mode==0x00)
[e $ ! && == -> _light2_mode `i -> 2 `i == -> _work_mode `i -> 0 `i 658  ]
[; ;task.c: 1342: {
"1342
{
[; ;task.c: 1343: if(Adjust_Pout_Flag==0x01)
"1343
[e $ ! == -> _Adjust_Pout_Flag `i -> 1 `i 659  ]
[; ;task.c: 1344: {
"1344
{
[; ;task.c: 1345: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
"1345
[e = . _PID_CC2_discharge 0 -> * -> . _PID_CC2_discharge 0 `d .0.5 `f ]
"1346
}
[; ;task.c: 1346: }
[e $U 660  ]
"1347
[e :U 659 ]
[; ;task.c: 1347: else if(Adjust_Pout_Flag>=0x02)
[e $ ! >= -> _Adjust_Pout_Flag `i -> 2 `i 661  ]
[; ;task.c: 1348: {
"1348
{
[; ;task.c: 1349: if(have_person1_flag==0x01 || have_person2_flag==0x01)
"1349
[e $ ! || == -> _have_person1_flag `i -> 1 `i == -> _have_person2_flag `i -> 1 `i 662  ]
[; ;task.c: 1350: {
"1350
{
[; ;task.c: 1351: __nop();
"1351
[e ( ___nop ..  ]
"1352
}
[; ;task.c: 1352: }
[e $U 663  ]
"1353
[e :U 662 ]
[; ;task.c: 1353: else
[; ;task.c: 1354: {
"1354
{
[; ;task.c: 1355: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
"1355
[e = . _PID_CC2_discharge 0 -> * -> _data_cc_var `d .0.05 `f ]
"1356
}
[e :U 663 ]
"1357
}
[e :U 661 ]
"1358
[e :U 660 ]
}
[e :U 658 ]
"1360
[e :U 657 ]
[e :U 653 ]
[; ;task.c: 1356: }
[; ;task.c: 1357: }
[; ;task.c: 1358: }
[; ;task.c: 1360: if(led_out_ctrl==0x01 && work_mode==0x00)
[e $ ! && == -> _led_out_ctrl `i -> 1 `i == -> _work_mode `i -> 0 `i 664  ]
[; ;task.c: 1361: {
"1361
{
[; ;task.c: 1362: PID_CC2_discharge.SetPoint = 0;
"1362
[e = . _PID_CC2_discharge 0 -> -> 0 `i `f ]
"1363
}
[e :U 664 ]
[; ;task.c: 1363: }
[; ;task.c: 1365: pid_index = 0x01;
"1365
[e = _pid_index -> -> 1 `i `uc ]
[; ;task.c: 1367: PWM_I2=pid_calc_2(&PID_CC2_discharge,discharge_current2_value);
"1367
[e = _PWM_I2 ( _pid_calc_2 (2 , &U _PID_CC2_discharge -> _discharge_current2_value `i ]
[; ;task.c: 1369: PWM2 = PWM2+PWM_I2;
"1369
[e = _PWM2 + _PWM2 _PWM_I2 ]
[; ;task.c: 1371: if( PWM2>=488)
"1371
[e $ ! >= _PWM2 -> -> 488 `i `f 665  ]
[; ;task.c: 1372: {
"1372
{
[; ;task.c: 1373: PWM2=488;
"1373
[e = _PWM2 -> -> 488 `i `f ]
"1374
}
[; ;task.c: 1374: }
[e $U 666  ]
"1375
[e :U 665 ]
[; ;task.c: 1375: else if(PWM2<=5)
[e $ ! <= _PWM2 -> -> 5 `i `f 667  ]
[; ;task.c: 1376: {
"1376
{
[; ;task.c: 1377: PWM2=5;
"1377
[e = _PWM2 -> -> 5 `i `f ]
"1378
}
[e :U 667 ]
"1380
[e :U 666 ]
[; ;task.c: 1378: }
[; ;task.c: 1380: bost_pwm2_value = (unsigned int)PWM2;
[e = _bost_pwm2_value -> _PWM2 `ui ]
[; ;task.c: 1382: if(PID_CC2_discharge.SetPoint==0)
"1382
[e $ ! == . _PID_CC2_discharge 0 -> -> 0 `i `f 668  ]
[; ;task.c: 1383: {
"1383
{
[; ;task.c: 1384: bost_pwm2_value = 0;
"1384
[e = _bost_pwm2_value -> -> 0 `i `ui ]
"1385
}
[e :U 668 ]
[; ;task.c: 1385: }
[; ;task.c: 1387: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1387
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1389: limit_power_pid2_flag=0x00;
"1389
[e = _limit_power_pid2_flag -> -> 0 `i `uc ]
"1392
}
[; ;task.c: 1392: }
[e $U 669  ]
"1393
[e :U 601 ]
[; ;task.c: 1393: else if((discharge_current2_value>discharge_i_limit)&&(discharge2_index==0x02))
[e $ ! && > -> _discharge_current2_value `f _discharge_i_limit == -> _discharge2_index `i -> 2 `i 670  ]
[; ;task.c: 1394: {
"1394
{
[; ;task.c: 1395: if(bost_pwm2_value>10)
"1395
[e $ ! > _bost_pwm2_value -> -> 10 `i `ui 671  ]
[; ;task.c: 1396: {
"1396
{
[; ;task.c: 1397: bost_pwm2_value = bost_pwm2_value-1;
"1397
[e = _bost_pwm2_value - _bost_pwm2_value -> -> 1 `i `ui ]
"1398
}
[e :U 671 ]
[; ;task.c: 1398: }
[; ;task.c: 1400: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1400
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
"1401
}
[e :U 670 ]
"1403
[e :U 669 ]
[; ;task.c: 1401: }
[; ;task.c: 1403: battery_low_time_count=0;
[e = _battery_low_time_count -> -> 0 `i `ui ]
"1405
}
[; ;task.c: 1405: }
[e $U 672  ]
"1406
[e :U 600 ]
[; ;task.c: 1406: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge2_index==0x02))
[e $ ! && < -> _battery_voltage_value `f _dianchi_qianya_baohu == -> _discharge2_index `i -> 2 `i 673  ]
[; ;task.c: 1407: {
"1407
{
[; ;task.c: 1409: battery_low_time_count++;
"1409
[e ++ _battery_low_time_count -> -> 1 `i `ui ]
[; ;task.c: 1411: if(battery_low_time_count>1000)
"1411
[e $ ! > _battery_low_time_count -> -> 1000 `i `ui 674  ]
[; ;task.c: 1412: {
"1412
{
[; ;task.c: 1413: discharge2_index=0x03;
"1413
[e = _discharge2_index -> -> 3 `i `uc ]
[; ;task.c: 1415: bost_pwm2_value=2;
"1415
[e = _bost_pwm2_value -> -> 2 `i `ui ]
[; ;task.c: 1417: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"1417
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 1419: battery_low_time_count=0x00;
"1419
[e = _battery_low_time_count -> -> 0 `i `ui ]
[; ;task.c: 1421: discharge_led_status=0x00;
"1421
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1423: while(1);
"1423
[e :U 676 ]
[e :U 675 ]
[e $U 676  ]
[e :U 677 ]
"1424
}
[e :U 674 ]
"1426
}
[; ;task.c: 1424: }
[; ;task.c: 1426: }
[e $U 678  ]
"1427
[e :U 673 ]
[; ;task.c: 1427: else
[; ;task.c: 1428: {
"1428
{
[; ;task.c: 1429: battery_low_time_count=0;
"1429
[e = _battery_low_time_count -> -> 0 `i `ui ]
"1430
}
[e :U 678 ]
[e :U 672 ]
"1432
}
[e :U 590 ]
[; ;task.c: 1430: }
[; ;task.c: 1432: }
[; ;task.c: 1434: handle_an8_process_flag=0x00;
"1434
[e = _handle_an8_process_flag -> -> 0 `i `uc ]
"1436
}
[e :U 589 ]
[; ;task.c: 1436: }
[; ;task.c: 1440: }
"1440
[e :UE 383 ]
}
"1450
[v _start_ad_convert `(ui ~T0 @X0 1 ef1`uc ]
"1451
{
[; ;task.c: 1450: unsigned int start_ad_convert(unsigned char ch)
[; ;task.c: 1451: {
[e :U _start_ad_convert ]
"1450
[v _ch `uc ~T0 @X0 1 r1 ]
"1451
[f ]
"1453
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _k `uc ~T0 @X0 1 a ]
"1455
[v _ad_h `ui ~T0 @X0 1 a ]
[v _ad_l `ui ~T0 @X0 1 a ]
"1458
[v _temp `ui ~T0 @X0 1 a ]
"1460
[v _ad_ch `uc ~T0 @X0 1 a ]
[; ;task.c: 1453: unsigned char i,j,k;
[; ;task.c: 1455: unsigned int ad_h,ad_l;
[; ;task.c: 1458: unsigned int temp;
[; ;task.c: 1460: unsigned char ad_ch;
[; ;task.c: 1462: ad_ch=0x00;
"1462
[e = _ad_ch -> -> 0 `i `uc ]
[; ;task.c: 1464: ad_ch=ch;
"1464
[e = _ad_ch _ch ]
[; ;task.c: 1466: ADCON0bits.CHS =ch;
"1466
[e = . . _ADCON0bits 1 2 _ch ]
[; ;task.c: 1468: ADCON0bits.ADON =1;
"1468
[e = . . _ADCON0bits 0 0 -> -> 1 `i `uc ]
[; ;task.c: 1470: if((ad_ch==0b00000)||(ad_ch==0b01000)||(ad_ch==0b01001))
"1470
[e $ ! || || == -> _ad_ch `i -> 0 `i == -> _ad_ch `i -> 8 `i == -> _ad_ch `i -> 9 `i 680  ]
[; ;task.c: 1471: {
"1471
{
[; ;task.c: 1472: for(i=0;i<51;i++)
"1472
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 51 `i 681  ]
[e $U 682  ]
"1473
[e :U 681 ]
[; ;task.c: 1473: {
{
[; ;task.c: 1474: _delay((unsigned long)((5)*(32000000/4000000.0)));
"1474
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 32000000 `l `d .4000000.0 `ul ]
[; ;task.c: 1476: ADCON0bits.GO=1;
"1476
[e = . . _ADCON0bits 2 1 -> -> 1 `i `uc ]
[; ;task.c: 1478: while(ADCON0bits.nDONE);
"1478
[e $U 684  ]
[e :U 685 ]
[e :U 684 ]
[e $ != -> . . _ADCON0bits 3 1 `i -> -> -> 0 `i `Vuc `i 685  ]
[e :U 686 ]
[; ;task.c: 1480: ad_h=0b00000011&ADRESH;
"1480
[e = _ad_h -> & -> 3 `i -> _ADRESH `i `ui ]
[; ;task.c: 1482: ad_l=ADRESL;
"1482
[e = _ad_l -> _ADRESL `ui ]
[; ;task.c: 1484: adc_buffer[i]=(ad_h<<8)|ad_l;
"1484
[e = *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux | << _ad_h -> 8 `i _ad_l ]
"1485
}
"1472
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 51 `i 681  ]
[e :U 682 ]
"1485
}
[; ;task.c: 1485: }
[; ;task.c: 1486: for(j=0;j<50;j++)
"1486
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 50 `i 687  ]
[e $U 688  ]
"1487
[e :U 687 ]
[; ;task.c: 1487: {
{
[; ;task.c: 1488: for(i=0;i<50-j;i++)
"1488
{
[e = _i -> -> 0 `i `uc ]
[e $U 693  ]
"1489
[e :U 690 ]
[; ;task.c: 1489: {
{
[; ;task.c: 1490: if(adc_buffer[i]>adc_buffer[i+1])
"1490
[e $ ! > *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux 694  ]
[; ;task.c: 1491: {
"1491
{
[; ;task.c: 1492: temp=adc_buffer[i];
"1492
[e = _temp *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux ]
[; ;task.c: 1494: adc_buffer[i]=adc_buffer[i+1];
"1494
[e = *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux ]
[; ;task.c: 1496: adc_buffer[i+1]=temp;
"1496
[e = *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux _temp ]
"1497
}
[e :U 694 ]
"1499
}
"1488
[e ++ _i -> -> 1 `i `uc ]
[e :U 693 ]
[e $ < -> _i `i - -> 50 `i -> _j `i 690  ]
[e :U 691 ]
"1499
}
"1500
}
"1486
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 50 `i 687  ]
[e :U 688 ]
"1500
}
[; ;task.c: 1497: }
[; ;task.c: 1499: }
[; ;task.c: 1500: }
[; ;task.c: 1502: ADCON0bits.ADON =0;
"1502
[e = . . _ADCON0bits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1504: return((adc_buffer[24]+adc_buffer[26]+
[; ;task.c: 1505: adc_buffer[22]+adc_buffer[28]+
[; ;task.c: 1506: adc_buffer[20]+adc_buffer[30]+
[; ;task.c: 1507: adc_buffer[18]+adc_buffer[32]+
[; ;task.c: 1508: adc_buffer[16]+adc_buffer[34]+
[; ;task.c: 1509: adc_buffer[14]+adc_buffer[36]+
[; ;task.c: 1510: adc_buffer[12]+adc_buffer[38]+
[; ;task.c: 1511: adc_buffer[10]+adc_buffer[40]+
[; ;task.c: 1512: adc_buffer[8]+adc_buffer[42]+
[; ;task.c: 1513: adc_buffer[6]+adc_buffer[44]+
[; ;task.c: 1514: adc_buffer[4]+adc_buffer[46]+
[; ;task.c: 1515: adc_buffer[2]+adc_buffer[48]+
[; ;task.c: 1516: adc_buffer[0]+adc_buffer[50])/26);
"1516
[e ) / + + + + + + + + + + + + + + + + + + + + + + + + + *U + &U _adc_buffer * -> -> -> 24 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 26 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 22 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 28 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 20 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 30 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 18 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 32 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 16 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 34 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 14 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 36 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 12 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 38 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 10 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 40 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 8 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 42 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 6 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 44 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 46 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 48 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> -> 50 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux -> -> 26 `i `ui ]
[e $UE 679  ]
"1517
}
[e :U 680 ]
[; ;task.c: 1517: }
[; ;task.c: 1521: for(i=0;i<11;i++)
"1521
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 11 `i 695  ]
[e $U 696  ]
"1522
[e :U 695 ]
[; ;task.c: 1522: {
{
[; ;task.c: 1523: _delay((unsigned long)((10)*(32000000/4000000.0)));
"1523
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 32000000 `l `d .4000000.0 `ul ]
[; ;task.c: 1525: ADCON0bits.GO=1;
"1525
[e = . . _ADCON0bits 2 1 -> -> 1 `i `uc ]
[; ;task.c: 1527: while(ADCON0bits.nDONE);
"1527
[e $U 698  ]
[e :U 699 ]
[e :U 698 ]
[e $ != -> . . _ADCON0bits 3 1 `i -> -> -> 0 `i `Vuc `i 699  ]
[e :U 700 ]
[; ;task.c: 1529: ad_h=0b00000011&ADRESH;
"1529
[e = _ad_h -> & -> 3 `i -> _ADRESH `i `ui ]
[; ;task.c: 1531: ad_l=ADRESL;
"1531
[e = _ad_l -> _ADRESL `ui ]
[; ;task.c: 1533: adc_buffer[i]=(ad_h<<8)|ad_l;
"1533
[e = *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux | << _ad_h -> 8 `i _ad_l ]
"1534
}
"1521
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 11 `i 695  ]
[e :U 696 ]
"1534
}
[; ;task.c: 1534: }
[; ;task.c: 1536: for(j=0;j<11-1;j++)
"1536
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i - -> 11 `i -> 1 `i 701  ]
[e $U 702  ]
"1537
[e :U 701 ]
[; ;task.c: 1537: {
{
[; ;task.c: 1538: for(i=0;i<11-j;i++)
"1538
{
[e = _i -> -> 0 `i `uc ]
[e $U 707  ]
"1539
[e :U 704 ]
[; ;task.c: 1539: {
{
[; ;task.c: 1540: if(adc_buffer[i]>adc_buffer[i+1])
"1540
[e $ ! > *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux 708  ]
[; ;task.c: 1541: {
"1541
{
[; ;task.c: 1542: temp=adc_buffer[i];
"1542
[e = _temp *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux ]
[; ;task.c: 1544: adc_buffer[i]=adc_buffer[i+1];
"1544
[e = *U + &U _adc_buffer * -> _i `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux ]
[; ;task.c: 1546: adc_buffer[i+1]=temp;
"1546
[e = *U + &U _adc_buffer * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux _temp ]
"1547
}
[e :U 708 ]
"1549
}
"1538
[e ++ _i -> -> 1 `i `uc ]
[e :U 707 ]
[e $ < -> _i `i - -> 11 `i -> _j `i 704  ]
[e :U 705 ]
"1549
}
"1550
}
"1536
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i - -> 11 `i -> 1 `i 701  ]
[e :U 702 ]
"1550
}
[; ;task.c: 1547: }
[; ;task.c: 1549: }
[; ;task.c: 1550: }
[; ;task.c: 1552: ADCON0bits.ADON =0;
"1552
[e = . . _ADCON0bits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1554: return((adc_buffer[((11-1)/2)-1]+adc_buffer[((11-1)/2)+1])/2);
"1554
[e ) / + *U + &U _adc_buffer * -> -> - / - -> 11 `i -> 1 `i -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux *U + &U _adc_buffer * -> -> + / - -> 11 `i -> 1 `i -> 2 `i -> 1 `i `ui `ux -> -> # *U &U _adc_buffer `ui `ux -> -> 2 `i `ui ]
[e $UE 679  ]
[; ;task.c: 1557: }
"1557
[e :UE 679 ]
}
"1568
[v _handle_task_process `(v ~T0 @X0 1 ef ]
"1569
{
[; ;task.c: 1568: void handle_task_process(void)
[; ;task.c: 1569: {
[e :U _handle_task_process ]
[f ]
[; ;task.c: 1572: if(handle_short1_flag==0x01)
"1572
[e $ ! == -> _handle_short1_flag `i -> 1 `i 710  ]
[; ;task.c: 1573: {
"1573
{
[; ;task.c: 1574: over_load1_time_count=0x00;
"1574
[e = _over_load1_time_count -> -> 0 `i `ui ]
[; ;task.c: 1576: load1_voltage_status=0x01;
"1576
[e = _load1_voltage_status -> -> 1 `i `uc ]
[; ;task.c: 1578: handle_short1_flag=0x00;
"1578
[e = _handle_short1_flag -> -> 0 `i `uc ]
[; ;task.c: 1580: discharge_led_status=0x00;
"1580
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1582: while(1);
"1582
[e :U 712 ]
[e :U 711 ]
[e $U 712  ]
[e :U 713 ]
"1583
}
[e :U 710 ]
[; ;task.c: 1583: }
[; ;task.c: 1585: if(handle_short2_flag==0x01)
"1585
[e $ ! == -> _handle_short2_flag `i -> 1 `i 714  ]
[; ;task.c: 1586: {
"1586
{
[; ;task.c: 1587: over_load2_time_count=0x00;
"1587
[e = _over_load2_time_count -> -> 0 `i `ui ]
[; ;task.c: 1589: load2_voltage_status=0x01;
"1589
[e = _load2_voltage_status -> -> 1 `i `uc ]
[; ;task.c: 1591: handle_short2_flag=0x00;
"1591
[e = _handle_short2_flag -> -> 0 `i `uc ]
[; ;task.c: 1593: discharge_led_status=0x00;
"1593
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1595: while(1);
"1595
[e :U 716 ]
[e :U 715 ]
[e $U 716  ]
[e :U 717 ]
"1596
}
[e :U 714 ]
[; ;task.c: 1596: }
[; ;task.c: 1598: if(work_mode==0x00)
"1598
[e $ ! == -> _work_mode `i -> 0 `i 718  ]
[; ;task.c: 1599: {
"1599
{
[; ;task.c: 1600: if((pv_voltage_status==0x01)&&(battery_voltage_status==0x01)&&(sys_temper_flag==0x01)&&(mcu_temp_index<0x03))
"1600
[e $ ! && && && == -> _pv_voltage_status `i -> 1 `i == -> _battery_voltage_status `i -> 1 `i == -> _sys_temper_flag `i -> 1 `i < -> _mcu_temp_index `i -> 3 `i 719  ]
[; ;task.c: 1601: {
"1601
{
[; ;task.c: 1603: system_status = 0x01;
"1603
[e = _system_status -> -> 1 `i `uc ]
"1605
}
[; ;task.c: 1605: }
[e $U 720  ]
"1606
[e :U 719 ]
[; ;task.c: 1606: else if((pv_voltage_status==0x02)&&(battery_voltage_status==0x01)&&(sys_temper_flag==0x01)&&(mcu_temp_index<0x03))
[e $ ! && && && == -> _pv_voltage_status `i -> 2 `i == -> _battery_voltage_status `i -> 1 `i == -> _sys_temper_flag `i -> 1 `i < -> _mcu_temp_index `i -> 3 `i 721  ]
[; ;task.c: 1607: {
"1607
{
[; ;task.c: 1609: system_status = 0x02;
"1609
[e = _system_status -> -> 2 `i `uc ]
"1611
}
[; ;task.c: 1611: }
[e $U 722  ]
"1612
[e :U 721 ]
[; ;task.c: 1612: else
[; ;task.c: 1613: {
"1613
{
[; ;task.c: 1614: system_status = 0x00;
"1614
[e = _system_status -> -> 0 `i `uc ]
"1615
}
[e :U 722 ]
[e :U 720 ]
"1616
}
[; ;task.c: 1615: }
[; ;task.c: 1616: }
[e $U 723  ]
"1617
[e :U 718 ]
[; ;task.c: 1617: else if(work_mode==0x01)
[e $ ! == -> _work_mode `i -> 1 `i 724  ]
[; ;task.c: 1618: {
"1618
{
[; ;task.c: 1619: system_status = 0x01;
"1619
[e = _system_status -> -> 1 `i `uc ]
"1620
}
[; ;task.c: 1620: }
[e $U 725  ]
"1621
[e :U 724 ]
[; ;task.c: 1621: else if(work_mode==0x02)
[e $ ! == -> _work_mode `i -> 2 `i 726  ]
[; ;task.c: 1622: {
"1622
{
[; ;task.c: 1623: system_status = 0x02;
"1623
[e = _system_status -> -> 2 `i `uc ]
"1624
}
[; ;task.c: 1624: }
[e $U 727  ]
"1625
[e :U 726 ]
[; ;task.c: 1625: else
[; ;task.c: 1626: {
"1626
{
[; ;task.c: 1627: system_status = 0x00;
"1627
[e = _system_status -> -> 0 `i `uc ]
"1628
}
[e :U 727 ]
[e :U 725 ]
[e :U 723 ]
[; ;task.c: 1628: }
[; ;task.c: 1631: switch(system_status)
"1631
[e $U 729  ]
[; ;task.c: 1632: {
"1632
{
[; ;task.c: 1633: case 0x00:
"1633
[e :U 730 ]
[; ;task.c: 1634: if(nop_index==0x00)
"1634
[e $ ! == -> _nop_index `i -> 0 `i 731  ]
[; ;task.c: 1635: {
"1635
{
[; ;task.c: 1636: bt_led_status=0x00;
"1636
[e = _bt_led_status -> -> 0 `i `uc ]
[; ;task.c: 1638: charge_led_status=0x00;
"1638
[e = _charge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1640: discharge_led_status=0x00;
"1640
[e = _discharge_led_status -> -> 0 `i `uc ]
[; ;task.c: 1642: Disable_Buck_Pwm();
"1642
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 1644: Set_Buck_Pwm_Duty(0);
"1644
[e ( _Set_Buck_Pwm_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1646: Disable_Bost_Pwm1();
"1646
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 1647: Disable_Bost_Pwm2();
"1647
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1649: Set_Bost_Pwm1_Duty(0);
"1649
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1650: Set_Bost_Pwm2_Duty(0);
"1650
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1652: (LATCbits.LATC3 = 0x00);
"1652
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 1653: (LATCbits.LATC0 = 0x00);
"1653
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1655: P_last=0;
"1655
[e = _P_last -> -> 0 `i `l ]
[; ;task.c: 1657: P_prev=0;
"1657
[e = _P_prev -> -> 0 `i `l ]
[; ;task.c: 1659: pv_prev=0;
"1659
[e = _pv_prev -> -> 0 `i `ui ]
[; ;task.c: 1661: buck_pwm_value=0;
"1661
[e = _buck_pwm_value -> -> 0 `i `ui ]
[; ;task.c: 1663: bost_pwm1_value=0;
"1663
[e = _bost_pwm1_value -> -> 0 `i `ui ]
[; ;task.c: 1664: bost_pwm2_value=0;
"1664
[e = _bost_pwm2_value -> -> 0 `i `ui ]
[; ;task.c: 1666: PWM =50;
"1666
[e = _PWM -> -> 50 `i `f ]
[; ;task.c: 1667: PWM2 =50;
"1667
[e = _PWM2 -> -> 50 `i `f ]
[; ;task.c: 1669: pid_init ( &PID_CC_charge);
"1669
[e ( _pid_init (1 &U _PID_CC_charge ]
[; ;task.c: 1671: pid_init ( &PID_CV_charge);
"1671
[e ( _pid_init (1 &U _PID_CV_charge ]
[; ;task.c: 1673: pid_init ( &PID_CC_discharge);
"1673
[e ( _pid_init (1 &U _PID_CC_discharge ]
[; ;task.c: 1674: pid_init ( &PID_CC2_discharge);
"1674
[e ( _pid_init (1 &U _PID_CC2_discharge ]
[; ;task.c: 1678: PID_CC_charge.Proportion = 0.001;
"1678
[e = . _PID_CC_charge 1 -> .0.001 `f ]
[; ;task.c: 1680: PID_CC_charge.Integral = 0;
"1680
[e = . _PID_CC_charge 2 -> -> 0 `i `f ]
[; ;task.c: 1682: PID_CC_charge.Derivative = 0;
"1682
[e = . _PID_CC_charge 3 -> -> 0 `i `f ]
[; ;task.c: 1684: PID_CC_charge.SetPoint = 5.0*15.0;
"1684
[e = . _PID_CC_charge 0 -> * .5.0 .15.0 `f ]
[; ;task.c: 1689: PID_CV_charge.Proportion = 0.001;
"1689
[e = . _PID_CV_charge 1 -> .0.001 `f ]
[; ;task.c: 1691: PID_CV_charge.Integral = 0;
"1691
[e = . _PID_CV_charge 2 -> -> 0 `i `f ]
[; ;task.c: 1693: PID_CV_charge.Derivative = 0;
"1693
[e = . _PID_CV_charge 3 -> -> 0 `i `f ]
[; ;task.c: 1695: PID_CV_charge.SetPoint = dianchi_cv_level+1;
"1695
[e = . _PID_CV_charge 0 + _dianchi_cv_level -> -> 1 `i `f ]
[; ;task.c: 1699: PID_CC_discharge.Proportion = 0.001;
"1699
[e = . _PID_CC_discharge 1 -> .0.001 `f ]
[; ;task.c: 1701: PID_CC_discharge.Integral = 0;
"1701
[e = . _PID_CC_discharge 2 -> -> 0 `i `f ]
[; ;task.c: 1703: PID_CC_discharge.Derivative = 0;
"1703
[e = . _PID_CC_discharge 3 -> -> 0 `i `f ]
[; ;task.c: 1705: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
"1705
[e = . _PID_CC_discharge 0 * / _load_cc_I -> -> 100 `i `f -> -> 30 `i `f ]
[; ;task.c: 1707: PID_CC2_discharge.Proportion = 0.001;
"1707
[e = . _PID_CC2_discharge 1 -> .0.001 `f ]
[; ;task.c: 1709: PID_CC2_discharge.Integral = 0;
"1709
[e = . _PID_CC2_discharge 2 -> -> 0 `i `f ]
[; ;task.c: 1711: PID_CC2_discharge.Derivative = 0;
"1711
[e = . _PID_CC2_discharge 3 -> -> 0 `i `f ]
[; ;task.c: 1713: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
"1713
[e = . _PID_CC2_discharge 0 -> * * -> / _load_cc_I -> -> 100 `i `f `d .0.30 -> _step_05_load_percent `d `f ]
[; ;task.c: 1715: open_discharge_time=0x00;
"1715
[e = _open_discharge_time -> -> 0 `i `uc ]
[; ;task.c: 1717: ms_cnt=0x00;
"1717
[e = _ms_cnt -> -> 0 `i `ui ]
[; ;task.c: 1718: se_cnt=0x00;
"1718
[e = _se_cnt -> -> 0 `i `ui ]
[; ;task.c: 1719: mi_cnt=0x00;
"1719
[e = _mi_cnt -> -> 0 `i `ui ]
[; ;task.c: 1720: ho_cnt=0x00;
"1720
[e = _ho_cnt -> -> 0 `i `ui ]
[; ;task.c: 1721: limit_power_pid_flag=0x00;
"1721
[e = _limit_power_pid_flag -> -> 0 `i `uc ]
[; ;task.c: 1722: Adjust_Pout_Flag=0x00;
"1722
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
[; ;task.c: 1723: voltage_adjust_index=0x01;
"1723
[e = _voltage_adjust_index -> -> 1 `i `uc ]
[; ;task.c: 1725: nop_index=0x01;
"1725
[e = _nop_index -> -> 1 `i `uc ]
[; ;task.c: 1727: discharge1_index=0x00;
"1727
[e = _discharge1_index -> -> 0 `i `uc ]
[; ;task.c: 1728: discharge2_index=0x00;
"1728
[e = _discharge2_index -> -> 0 `i `uc ]
[; ;task.c: 1730: charge_index=0x00;
"1730
[e = _charge_index -> -> 0 `i `uc ]
"1731
}
[e :U 731 ]
[; ;task.c: 1731: }
[; ;task.c: 1733: if(device_status==0x00 && nop_index==0x01)
"1733
[e $ ! && == -> _device_status `i -> 0 `i == -> _nop_index `i -> 1 `i 732  ]
[; ;task.c: 1734: {
"1734
{
[; ;task.c: 1736: Disable_Buck_Pwm();
"1736
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 1737: Set_Buck_Pwm_Duty(0);
"1737
[e ( _Set_Buck_Pwm_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1738: Disable_Bost_Pwm1();
"1738
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 1739: (LATCbits.LATC3 = 0x00);
"1739
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 1740: Set_Bost_Pwm1_Duty(0);
"1740
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1741: Disable_Bost_Pwm2();
"1741
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1742: (LATCbits.LATC0 = 0x00);
"1742
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1743: Set_Bost_Pwm2_Duty(0);
"1743
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1745: (LATCbits.LATC3 = 0x01);
"1745
[e = . . _LATCbits 0 3 -> -> 1 `i `uc ]
[; ;task.c: 1746: Enable_Bost_Pwm1();
"1746
[e ( _Enable_Bost_Pwm1 ..  ]
[; ;task.c: 1747: (LATCbits.LATC0 = 0x01);
"1747
[e = . . _LATCbits 0 0 -> -> 1 `i `uc ]
[; ;task.c: 1748: Enable_Bost_Pwm2();
"1748
[e ( _Enable_Bost_Pwm2 ..  ]
[; ;task.c: 1750: Set_Bost_Pwm1_Duty(200);
"1750
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1751: Set_Bost_Pwm2_Duty(200);
"1751
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1753: delay_ms(200);
"1753
[e ( _delay_ms (1 -> -> 200 `i `us ]
[; ;task.c: 1755: Set_Bost_Pwm1_Duty(0);
"1755
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1756: Set_Bost_Pwm2_Duty(0);
"1756
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1758: delay_ms(200);
"1758
[e ( _delay_ms (1 -> -> 200 `i `us ]
[; ;task.c: 1760: Set_Bost_Pwm1_Duty(200);
"1760
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1761: Set_Bost_Pwm2_Duty(200);
"1761
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1763: delay_ms(200);
"1763
[e ( _delay_ms (1 -> -> 200 `i `us ]
[; ;task.c: 1765: Set_Bost_Pwm1_Duty(0);
"1765
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1766: Set_Bost_Pwm2_Duty(0);
"1766
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1768: delay_ms(200);
"1768
[e ( _delay_ms (1 -> -> 200 `i `us ]
[; ;task.c: 1770: Set_Bost_Pwm1_Duty(200);
"1770
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1771: Set_Bost_Pwm2_Duty(200);
"1771
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 200 `i `ui ]
[; ;task.c: 1773: delay_ms(200);
"1773
[e ( _delay_ms (1 -> -> 200 `i `us ]
[; ;task.c: 1775: Set_Bost_Pwm1_Duty(0);
"1775
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1776: Set_Bost_Pwm2_Duty(0);
"1776
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1778: Disable_Bost_Pwm1();
"1778
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 1779: (LATCbits.LATC3 = 0x00);
"1779
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 1780: Set_Bost_Pwm1_Duty(0);
"1780
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1781: Disable_Bost_Pwm2();
"1781
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1782: (LATCbits.LATC0 = 0x00);
"1782
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1783: Set_Bost_Pwm2_Duty(0);
"1783
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1785: nop_index=0x02;
"1785
[e = _nop_index -> -> 2 `i `uc ]
[; ;task.c: 1787: key1_index=0x00;
"1787
[e = _key1_index -> -> 0 `i `uc ]
[; ;task.c: 1789: (LATAbits.LATA6 = 0x00);
"1789
[e = . . _LATAbits 0 6 -> -> 0 `i `uc ]
[; ;task.c: 1791: open_sleep_time = 0x01;
"1791
[e = _open_sleep_time -> -> 1 `i `uc ]
[; ;task.c: 1793: asm("sleep");
"1793
[; <" sleep ;# ">
[; ;task.c: 1795: __nop();
"1795
[e ( ___nop ..  ]
[; ;task.c: 1796: __nop();
"1796
[e ( ___nop ..  ]
[; ;task.c: 1797: __nop();
"1797
[e ( ___nop ..  ]
"1798
}
[e :U 732 ]
[; ;task.c: 1798: }
[; ;task.c: 1802: break;
"1802
[e $U 728  ]
[; ;task.c: 1804: case 0x01:
"1804
[e :U 733 ]
[; ;task.c: 1805: if(charge_index==0x01)
"1805
[e $ ! == -> _charge_index `i -> 1 `i 734  ]
[; ;task.c: 1806: {
"1806
{
[; ;task.c: 1808: discharge_led_status=0x01;
"1808
[e = _discharge_led_status -> -> 1 `i `uc ]
[; ;task.c: 1811: Disable_Bost_Pwm1();
"1811
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 1812: Disable_Bost_Pwm2();
"1812
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 1814: Set_Bost_Pwm1_Duty(0);
"1814
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1815: Set_Bost_Pwm2_Duty(0);
"1815
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1817: (LATCbits.LATC3 = 0x00);
"1817
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 1818: (LATCbits.LATC0 = 0x00);
"1818
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1820: Disable_Buck_Pwm();
"1820
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 1822: PWM =50;
"1822
[e = _PWM -> -> 50 `i `f ]
[; ;task.c: 1824: buck_pwm_value=50;
"1824
[e = _buck_pwm_value -> -> 50 `i `ui ]
[; ;task.c: 1826: Set_Buck_Pwm_Duty(buck_pwm_value);
"1826
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
[; ;task.c: 1844: pid_init ( &PID_CC_charge);
"1844
[e ( _pid_init (1 &U _PID_CC_charge ]
[; ;task.c: 1846: pid_init ( &PID_CV_charge);
"1846
[e ( _pid_init (1 &U _PID_CV_charge ]
[; ;task.c: 1849: PID_CC_charge.Proportion = 0.001;
"1849
[e = . _PID_CC_charge 1 -> .0.001 `f ]
[; ;task.c: 1851: PID_CC_charge.Integral = 0;
"1851
[e = . _PID_CC_charge 2 -> -> 0 `i `f ]
[; ;task.c: 1853: PID_CC_charge.Derivative = 0;
"1853
[e = . _PID_CC_charge 3 -> -> 0 `i `f ]
[; ;task.c: 1855: PID_CC_charge.SetPoint = 5.0*15.0;
"1855
[e = . _PID_CC_charge 0 -> * .5.0 .15.0 `f ]
[; ;task.c: 1859: PID_CV_charge.Proportion = 0.001;
"1859
[e = . _PID_CV_charge 1 -> .0.001 `f ]
[; ;task.c: 1861: PID_CV_charge.Integral = 0;
"1861
[e = . _PID_CV_charge 2 -> -> 0 `i `f ]
[; ;task.c: 1863: PID_CV_charge.Derivative = 0;
"1863
[e = . _PID_CV_charge 3 -> -> 0 `i `f ]
[; ;task.c: 1865: PID_CV_charge.SetPoint = dianchi_cv_level+1;
"1865
[e = . _PID_CV_charge 0 + _dianchi_cv_level -> -> 1 `i `f ]
[; ;task.c: 1868: P_prev=0;
"1868
[e = _P_prev -> -> 0 `i `l ]
[; ;task.c: 1870: P_last=0;
"1870
[e = _P_last -> -> 0 `i `l ]
[; ;task.c: 1872: open_discharge_time=0x00;
"1872
[e = _open_discharge_time -> -> 0 `i `uc ]
[; ;task.c: 1874: ms_cnt=0x00;
"1874
[e = _ms_cnt -> -> 0 `i `ui ]
[; ;task.c: 1875: se_cnt=0x00;
"1875
[e = _se_cnt -> -> 0 `i `ui ]
[; ;task.c: 1876: mi_cnt=0x00;
"1876
[e = _mi_cnt -> -> 0 `i `ui ]
[; ;task.c: 1877: ho_cnt=0x00;
"1877
[e = _ho_cnt -> -> 0 `i `ui ]
[; ;task.c: 1878: limit_power_pid_flag=0x00;
"1878
[e = _limit_power_pid_flag -> -> 0 `i `uc ]
[; ;task.c: 1879: Adjust_Pout_Flag=0x00;
"1879
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
[; ;task.c: 1880: voltage_adjust_index=0x01;
"1880
[e = _voltage_adjust_index -> -> 1 `i `uc ]
[; ;task.c: 1881: nop_index=0x00;
"1881
[e = _nop_index -> -> 0 `i `uc ]
[; ;task.c: 1883: discharge1_index=0x00;
"1883
[e = _discharge1_index -> -> 0 `i `uc ]
[; ;task.c: 1884: discharge2_index=0x00;
"1884
[e = _discharge2_index -> -> 0 `i `uc ]
[; ;task.c: 1886: charge_index=0x02;
"1886
[e = _charge_index -> -> 2 `i `uc ]
[; ;task.c: 1889: today_index = today_index+1;
"1889
[e = _today_index -> + -> _today_index `i -> 1 `i `uc ]
[; ;task.c: 1891: today_index = today_index%8;
"1891
[e = _today_index -> % -> _today_index `i -> 8 `i `uc ]
[; ;task.c: 1893: eeprom_write(0x11,(unsigned char)today_index);
"1893
[e ( _eeprom_write (2 , -> -> 17 `i `uc _today_index ]
[; ;task.c: 1895: bt_00_lv = b_v;
"1895
[e = _bt_00_lv _b_v ]
"1897
}
[e :U 734 ]
[; ;task.c: 1897: }
[; ;task.c: 1898: break;
"1898
[e $U 728  ]
[; ;task.c: 1900: case 0x02:
"1900
[e :U 735 ]
[; ;task.c: 1902: if(discharge1_index==0)
"1902
[e $ ! == -> _discharge1_index `i -> 0 `i 736  ]
[; ;task.c: 1903: {
"1903
{
[; ;task.c: 1905: charge_led_status=0x01;
"1905
[e = _charge_led_status -> -> 1 `i `uc ]
[; ;task.c: 1907: Disable_Buck_Pwm();
"1907
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 1909: Set_Buck_Pwm_Duty(0);
"1909
[e ( _Set_Buck_Pwm_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1911: Set_Bost_Pwm1_Duty(0);
"1911
[e ( _Set_Bost_Pwm1_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1913: (LATCbits.LATC3 = 0x00);
"1913
[e = . . _LATCbits 0 3 -> -> 0 `i `uc ]
[; ;task.c: 1915: Disable_Bost_Pwm1();
"1915
[e ( _Disable_Bost_Pwm1 ..  ]
[; ;task.c: 1917: PWM =50;
"1917
[e = _PWM -> -> 50 `i `f ]
[; ;task.c: 1919: bost_pwm1_value=50;
"1919
[e = _bost_pwm1_value -> -> 50 `i `ui ]
[; ;task.c: 1921: Set_Bost_Pwm1_Duty(bost_pwm1_value);
"1921
[e ( _Set_Bost_Pwm1_Duty (1 _bost_pwm1_value ]
[; ;task.c: 1943: pid_init ( &PID_CC_discharge);
"1943
[e ( _pid_init (1 &U _PID_CC_discharge ]
[; ;task.c: 1946: PID_CC_discharge.Proportion = 0.001;
"1946
[e = . _PID_CC_discharge 1 -> .0.001 `f ]
[; ;task.c: 1948: PID_CC_discharge.Integral = 0;
"1948
[e = . _PID_CC_discharge 2 -> -> 0 `i `f ]
[; ;task.c: 1950: PID_CC_discharge.Derivative = 0;
"1950
[e = . _PID_CC_discharge 3 -> -> 0 `i `f ]
[; ;task.c: 1952: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
"1952
[e = . _PID_CC_discharge 0 * / _load_cc_I -> -> 100 `i `f -> -> 30 `i `f ]
[; ;task.c: 1954: open_discharge_time=0x00;
"1954
[e = _open_discharge_time -> -> 0 `i `uc ]
[; ;task.c: 1956: ms_cnt=0x00;
"1956
[e = _ms_cnt -> -> 0 `i `ui ]
[; ;task.c: 1957: se_cnt=0x00;
"1957
[e = _se_cnt -> -> 0 `i `ui ]
[; ;task.c: 1958: mi_cnt=0x00;
"1958
[e = _mi_cnt -> -> 0 `i `ui ]
[; ;task.c: 1959: ho_cnt=0x00;
"1959
[e = _ho_cnt -> -> 0 `i `ui ]
[; ;task.c: 1960: limit_power_pid_flag=0x00;
"1960
[e = _limit_power_pid_flag -> -> 0 `i `uc ]
[; ;task.c: 1961: Adjust_Pout_Flag=0x00;
"1961
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
[; ;task.c: 1962: voltage_adjust_index=0x01;
"1962
[e = _voltage_adjust_index -> -> 1 `i `uc ]
[; ;task.c: 1963: nop_index=0x00;
"1963
[e = _nop_index -> -> 0 `i `uc ]
[; ;task.c: 1965: discharge1_index=0x01;
"1965
[e = _discharge1_index -> -> 1 `i `uc ]
[; ;task.c: 1967: charge_index=0x00;
"1967
[e = _charge_index -> -> 0 `i `uc ]
[; ;task.c: 1970: bt_00_hv = b_v;
"1970
[e = _bt_00_hv _b_v ]
[; ;task.c: 1972: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/256));
"1972
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 0 `i `uc -> / _bt_00_hv -> -> 256 `i `f `uc ]
[; ;task.c: 1974: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
"1974
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 1 `i `uc -> _bt_00_hv `uc ]
[; ;task.c: 1976: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/256));
"1976
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 2 `i `uc -> / _bt_00_lv -> -> 256 `i `f `uc ]
[; ;task.c: 1978: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
"1978
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 3 `i `uc -> _bt_00_lv `uc ]
"1982
}
[e :U 736 ]
[; ;task.c: 1982: }
[; ;task.c: 1984: if(discharge2_index==0)
"1984
[e $ ! == -> _discharge2_index `i -> 0 `i 737  ]
[; ;task.c: 1985: {
"1985
{
[; ;task.c: 1987: charge_led_status=0x01;
"1987
[e = _charge_led_status -> -> 1 `i `uc ]
[; ;task.c: 1990: Disable_Buck_Pwm();
"1990
[e ( _Disable_Buck_Pwm ..  ]
[; ;task.c: 1992: Set_Buck_Pwm_Duty(0);
"1992
[e ( _Set_Buck_Pwm_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1994: Set_Bost_Pwm2_Duty(0);
"1994
[e ( _Set_Bost_Pwm2_Duty (1 -> -> 0 `i `ui ]
[; ;task.c: 1996: (LATCbits.LATC0 = 0x00);
"1996
[e = . . _LATCbits 0 0 -> -> 0 `i `uc ]
[; ;task.c: 1998: Disable_Bost_Pwm2();
"1998
[e ( _Disable_Bost_Pwm2 ..  ]
[; ;task.c: 2000: PWM2 =50;
"2000
[e = _PWM2 -> -> 50 `i `f ]
[; ;task.c: 2002: bost_pwm2_value=50;
"2002
[e = _bost_pwm2_value -> -> 50 `i `ui ]
[; ;task.c: 2004: Set_Bost_Pwm2_Duty(bost_pwm2_value);
"2004
[e ( _Set_Bost_Pwm2_Duty (1 _bost_pwm2_value ]
[; ;task.c: 2026: pid_init ( &PID_CC2_discharge);
"2026
[e ( _pid_init (1 &U _PID_CC2_discharge ]
[; ;task.c: 2029: PID_CC2_discharge.Proportion = 0.001;
"2029
[e = . _PID_CC2_discharge 1 -> .0.001 `f ]
[; ;task.c: 2031: PID_CC2_discharge.Integral = 0;
"2031
[e = . _PID_CC2_discharge 2 -> -> 0 `i `f ]
[; ;task.c: 2033: PID_CC2_discharge.Derivative = 0;
"2033
[e = . _PID_CC2_discharge 3 -> -> 0 `i `f ]
[; ;task.c: 2035: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
"2035
[e = . _PID_CC2_discharge 0 -> * * -> / _load_cc_I -> -> 100 `i `f `d .0.30 -> _step_05_load_percent `d `f ]
[; ;task.c: 2037: open_discharge_time=0x00;
"2037
[e = _open_discharge_time -> -> 0 `i `uc ]
[; ;task.c: 2039: ms_cnt=0x00;
"2039
[e = _ms_cnt -> -> 0 `i `ui ]
[; ;task.c: 2040: se_cnt=0x00;
"2040
[e = _se_cnt -> -> 0 `i `ui ]
[; ;task.c: 2041: mi_cnt=0x00;
"2041
[e = _mi_cnt -> -> 0 `i `ui ]
[; ;task.c: 2042: ho_cnt=0x00;
"2042
[e = _ho_cnt -> -> 0 `i `ui ]
[; ;task.c: 2043: limit_power_pid_flag=0x00;
"2043
[e = _limit_power_pid_flag -> -> 0 `i `uc ]
[; ;task.c: 2044: Adjust_Pout_Flag=0x00;
"2044
[e = _Adjust_Pout_Flag -> -> 0 `i `uc ]
[; ;task.c: 2045: voltage_adjust_index=0x01;
"2045
[e = _voltage_adjust_index -> -> 1 `i `uc ]
[; ;task.c: 2046: nop_index=0x00;
"2046
[e = _nop_index -> -> 0 `i `uc ]
[; ;task.c: 2048: discharge2_index=0x01;
"2048
[e = _discharge2_index -> -> 1 `i `uc ]
[; ;task.c: 2050: charge_index=0x00;
"2050
[e = _charge_index -> -> 0 `i `uc ]
[; ;task.c: 2053: bt_00_hv = b_v;
"2053
[e = _bt_00_hv _b_v ]
[; ;task.c: 2055: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/256));
"2055
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 0 `i `uc -> / _bt_00_hv -> -> 256 `i `f `uc ]
[; ;task.c: 2057: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
"2057
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 1 `i `uc -> _bt_00_hv `uc ]
[; ;task.c: 2059: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/256));
"2059
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 2 `i `uc -> / _bt_00_lv -> -> 256 `i `f `uc ]
[; ;task.c: 2061: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
"2061
[e ( _eeprom_write (2 , -> + + -> 18 `i * -> 4 `i % - + -> _today_index `i -> 8 `i -> 0 `i -> 8 `i -> 3 `i `uc -> _bt_00_lv `uc ]
"2065
}
[e :U 737 ]
[; ;task.c: 2065: }
[; ;task.c: 2067: break;
"2067
[e $U 728  ]
[; ;task.c: 2069: default:break;
"2069
[e :U 738 ]
[e $U 728  ]
"2071
}
[; ;task.c: 2071: }
[e $U 728  ]
"1631
[e :U 729 ]
[e [\ _system_status , $ -> -> 0 `i `uc 730
 , $ -> -> 1 `i `uc 733
 , $ -> -> 2 `i `uc 735
 738 ]
"2071
[e :U 728 ]
[; ;task.c: 2074: }
"2074
[e :UE 709 ]
}
"2077
[v _Mppt_Charge `(v ~T0 @X0 1 ef ]
"2078
{
[; ;task.c: 2077: void Mppt_Charge(void)
[; ;task.c: 2078: {
[e :U _Mppt_Charge ]
[f ]
[; ;task.c: 2080: if((battery_voltage_value<dianchi_guoya_huifu)&&(charge_index==0x03))
"2080
[e $ ! && < -> _battery_voltage_value `f _dianchi_guoya_huifu == -> _charge_index `i -> 3 `i 740  ]
[; ;task.c: 2081: {
"2081
{
[; ;task.c: 2083: if(mppt_status==0x00)
"2083
[e $ ! == -> _mppt_status `i -> 0 `i 741  ]
[; ;task.c: 2084: {
"2084
{
[; ;task.c: 2085: if (charge_current_value>=I_prev)
"2085
[e $ ! >= _charge_current_value _I_prev 742  ]
[; ;task.c: 2086: {
"2086
{
[; ;task.c: 2088: buck_pwm_value=buck_pwm_value + 200 * 0.025;
"2088
[e = _buck_pwm_value -> + -> _buck_pwm_value `d * -> -> 200 `i `d .0.025 `ui ]
[; ;task.c: 2090: if(buck_pwm_value>=900)
"2090
[e $ ! >= _buck_pwm_value -> -> 900 `i `ui 743  ]
[; ;task.c: 2091: {
"2091
{
[; ;task.c: 2092: buck_pwm_value=900;
"2092
[e = _buck_pwm_value -> -> 900 `i `ui ]
"2093
}
[e :U 743 ]
[; ;task.c: 2093: }
[; ;task.c: 2095: Set_Buck_Pwm_Duty(buck_pwm_value);
"2095
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2097
}
[; ;task.c: 2097: }
[e $U 744  ]
"2098
[e :U 742 ]
[; ;task.c: 2098: else
[; ;task.c: 2099: {
"2099
{
[; ;task.c: 2100: mppt_status=1;
"2100
[e = _mppt_status -> -> 1 `i `uc ]
[; ;task.c: 2102: buck_pwm_value=buck_pwm_value - 200 * 0.025;
"2102
[e = _buck_pwm_value -> - -> _buck_pwm_value `d * -> -> 200 `i `d .0.025 `ui ]
[; ;task.c: 2104: if(buck_pwm_value<=50)
"2104
[e $ ! <= _buck_pwm_value -> -> 50 `i `ui 745  ]
[; ;task.c: 2105: {
"2105
{
[; ;task.c: 2106: buck_pwm_value=50;
"2106
[e = _buck_pwm_value -> -> 50 `i `ui ]
[; ;task.c: 2108: mppt_status=0;
"2108
[e = _mppt_status -> -> 0 `i `uc ]
"2109
}
[e :U 745 ]
[; ;task.c: 2109: }
[; ;task.c: 2111: Set_Buck_Pwm_Duty(buck_pwm_value);
"2111
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2113
}
[e :U 744 ]
"2114
}
[; ;task.c: 2113: }
[; ;task.c: 2114: }
[e $U 746  ]
"2115
[e :U 741 ]
[; ;task.c: 2115: else
[; ;task.c: 2116: {
"2116
{
[; ;task.c: 2117: if (charge_current_value>=I_prev)
"2117
[e $ ! >= _charge_current_value _I_prev 747  ]
[; ;task.c: 2118: {
"2118
{
[; ;task.c: 2120: buck_pwm_value=buck_pwm_value-200 * 0.025;
"2120
[e = _buck_pwm_value -> - -> _buck_pwm_value `d * -> -> 200 `i `d .0.025 `ui ]
[; ;task.c: 2122: if(buck_pwm_value<=50)
"2122
[e $ ! <= _buck_pwm_value -> -> 50 `i `ui 748  ]
[; ;task.c: 2123: {
"2123
{
[; ;task.c: 2124: buck_pwm_value=50;
"2124
[e = _buck_pwm_value -> -> 50 `i `ui ]
[; ;task.c: 2126: mppt_status=0;
"2126
[e = _mppt_status -> -> 0 `i `uc ]
"2127
}
[e :U 748 ]
[; ;task.c: 2127: }
[; ;task.c: 2129: Set_Buck_Pwm_Duty(buck_pwm_value);
"2129
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2133
}
[; ;task.c: 2133: }
[e $U 749  ]
"2134
[e :U 747 ]
[; ;task.c: 2134: else
[; ;task.c: 2135: {
"2135
{
[; ;task.c: 2136: mppt_status=0;
"2136
[e = _mppt_status -> -> 0 `i `uc ]
[; ;task.c: 2138: buck_pwm_value=buck_pwm_value+ 200 * 0.025;
"2138
[e = _buck_pwm_value -> + -> _buck_pwm_value `d * -> -> 200 `i `d .0.025 `ui ]
[; ;task.c: 2140: if(buck_pwm_value>=900)
"2140
[e $ ! >= _buck_pwm_value -> -> 900 `i `ui 750  ]
[; ;task.c: 2141: {
"2141
{
[; ;task.c: 2142: buck_pwm_value=900;
"2142
[e = _buck_pwm_value -> -> 900 `i `ui ]
"2143
}
[e :U 750 ]
[; ;task.c: 2143: }
[; ;task.c: 2145: Set_Buck_Pwm_Duty(buck_pwm_value);
"2145
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2147
}
[e :U 749 ]
"2151
}
[e :U 746 ]
[; ;task.c: 2147: }
[; ;task.c: 2151: }
[; ;task.c: 2153: PWM = buck_pwm_value;
"2153
[e = _PWM -> _buck_pwm_value `f ]
[; ;task.c: 2155: cv_level_time_count=0x00;
"2155
[e = _cv_level_time_count -> -> 0 `i `ui ]
"2157
}
[; ;task.c: 2157: }
[e $U 751  ]
"2158
[e :U 740 ]
[; ;task.c: 2158: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value<dianchi_guoya_baohu)&&(charge_index==0x03))
[e $ ! && && >= -> _battery_voltage_value `f _dianchi_cv_level < -> _battery_voltage_value `f _dianchi_guoya_baohu == -> _charge_index `i -> 3 `i 752  ]
[; ;task.c: 2159: {
"2159
{
[; ;task.c: 2160: cv_level_time_count++;
"2160
[e ++ _cv_level_time_count -> -> 1 `i `ui ]
[; ;task.c: 2162: if(cv_level_time_count>=100)
"2162
[e $ ! >= _cv_level_time_count -> -> 100 `i `ui 753  ]
[; ;task.c: 2163: {
"2163
{
[; ;task.c: 2164: cv_level_time_count=0x00;
"2164
[e = _cv_level_time_count -> -> 0 `i `ui ]
[; ;task.c: 2166: charge_index=0x04;
"2166
[e = _charge_index -> -> 4 `i `uc ]
[; ;task.c: 2168: PWM = buck_pwm_value;
"2168
[e = _PWM -> _buck_pwm_value `f ]
"2169
}
[e :U 753 ]
"2171
}
[; ;task.c: 2169: }
[; ;task.c: 2171: }
[e $U 754  ]
"2172
[e :U 752 ]
[; ;task.c: 2172: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index==0x04) )
[e $ ! && < -> _battery_voltage_value `f _dianchi_guoya_baohu == -> _charge_index `i -> 4 `i 755  ]
[; ;task.c: 2173: {
"2173
{
[; ;task.c: 2174: pid_index = 0x02;
"2174
[e = _pid_index -> -> 2 `i `uc ]
[; ;task.c: 2176: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
"2176
[e = _PWM_I ( _pid_calc (2 , &U _PID_CV_charge -> _battery_voltage_value `i ]
[; ;task.c: 2178: PWM = PWM+PWM_I;
"2178
[e = _PWM + _PWM _PWM_I ]
[; ;task.c: 2180: if( PWM>=900)
"2180
[e $ ! >= _PWM -> -> 900 `i `f 756  ]
[; ;task.c: 2181: {
"2181
{
[; ;task.c: 2182: PWM=900;
"2182
[e = _PWM -> -> 900 `i `f ]
"2183
}
[; ;task.c: 2183: }
[e $U 757  ]
"2184
[e :U 756 ]
[; ;task.c: 2184: else if(PWM<=50)
[e $ ! <= _PWM -> -> 50 `i `f 758  ]
[; ;task.c: 2185: {
"2185
{
[; ;task.c: 2186: PWM=50;
"2186
[e = _PWM -> -> 50 `i `f ]
"2187
}
[e :U 758 ]
"2188
[e :U 757 ]
[; ;task.c: 2187: }
[; ;task.c: 2188: buck_pwm_value = (unsigned int)PWM;
[e = _buck_pwm_value -> _PWM `ui ]
[; ;task.c: 2190: Set_Buck_Pwm_Duty(buck_pwm_value);
"2190
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2191
}
[; ;task.c: 2191: }
[e $U 759  ]
"2192
[e :U 755 ]
[; ;task.c: 2192: else
[; ;task.c: 2193: {
"2193
{
[; ;task.c: 2194: cv_level_time_count=0x00;
"2194
[e = _cv_level_time_count -> -> 0 `i `ui ]
"2195
}
[e :U 759 ]
[e :U 754 ]
[e :U 751 ]
[; ;task.c: 2195: }
[; ;task.c: 2197: }
"2197
[e :UE 739 ]
}
"2201
[v _CC_CV_Charge `(v ~T0 @X0 1 ef ]
"2202
{
[; ;task.c: 2201: void CC_CV_Charge(void)
[; ;task.c: 2202: {
[e :U _CC_CV_Charge ]
[f ]
[; ;task.c: 2204: if((battery_voltage_value<=dianchi_guoya_huifu)&&(charge_index==0x03))
"2204
[e $ ! && <= -> _battery_voltage_value `f _dianchi_guoya_huifu == -> _charge_index `i -> 3 `i 761  ]
[; ;task.c: 2205: {
"2205
{
[; ;task.c: 2206: PWM_I=pid_calc(&PID_CC_charge,charge_current_value);
"2206
[e = _PWM_I ( _pid_calc (2 , &U _PID_CC_charge -> _charge_current_value `i ]
[; ;task.c: 2208: PWM = PWM+PWM_I;
"2208
[e = _PWM + _PWM _PWM_I ]
[; ;task.c: 2210: if( PWM>=900)
"2210
[e $ ! >= _PWM -> -> 900 `i `f 762  ]
[; ;task.c: 2211: {
"2211
{
[; ;task.c: 2212: PWM=900;
"2212
[e = _PWM -> -> 900 `i `f ]
"2213
}
[; ;task.c: 2213: }
[e $U 763  ]
"2214
[e :U 762 ]
[; ;task.c: 2214: else if(PWM<=50)
[e $ ! <= _PWM -> -> 50 `i `f 764  ]
[; ;task.c: 2215: {
"2215
{
[; ;task.c: 2216: PWM=50;
"2216
[e = _PWM -> -> 50 `i `f ]
"2217
}
[e :U 764 ]
"2227
[e :U 763 ]
[; ;task.c: 2217: }
[; ;task.c: 2227: buck_pwm_value = (unsigned int)PWM;
[e = _buck_pwm_value -> _PWM `ui ]
[; ;task.c: 2230: Set_Buck_Pwm_Duty(buck_pwm_value);
"2230
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2233
}
[; ;task.c: 2233: }
[e $U 765  ]
"2234
[e :U 761 ]
[; ;task.c: 2234: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value<dianchi_guoya_baohu)&&(charge_index==0x03))
[e $ ! && && >= -> _battery_voltage_value `f _dianchi_cv_level < -> _battery_voltage_value `f _dianchi_guoya_baohu == -> _charge_index `i -> 3 `i 766  ]
[; ;task.c: 2235: {
"2235
{
[; ;task.c: 2236: charge_index=0x04;
"2236
[e = _charge_index -> -> 4 `i `uc ]
[; ;task.c: 2238: PWM = buck_pwm_value;
"2238
[e = _PWM -> _buck_pwm_value `f ]
"2239
}
[; ;task.c: 2239: }
[e $U 767  ]
"2240
[e :U 766 ]
[; ;task.c: 2240: else if((battery_voltage_value>=dianchi_guoya_huifu)&&(battery_voltage_value<dianchi_guoya_baohu)&&(charge_index==0x04))
[e $ ! && && >= -> _battery_voltage_value `f _dianchi_guoya_huifu < -> _battery_voltage_value `f _dianchi_guoya_baohu == -> _charge_index `i -> 4 `i 768  ]
[; ;task.c: 2241: {
"2241
{
[; ;task.c: 2242: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
"2242
[e = _PWM_I ( _pid_calc (2 , &U _PID_CV_charge -> _battery_voltage_value `i ]
[; ;task.c: 2244: PWM = PWM+PWM_I;
"2244
[e = _PWM + _PWM _PWM_I ]
[; ;task.c: 2246: if( PWM>=900)
"2246
[e $ ! >= _PWM -> -> 900 `i `f 769  ]
[; ;task.c: 2247: {
"2247
{
[; ;task.c: 2248: PWM=900;
"2248
[e = _PWM -> -> 900 `i `f ]
"2249
}
[; ;task.c: 2249: }
[e $U 770  ]
"2250
[e :U 769 ]
[; ;task.c: 2250: else if(PWM<=50)
[e $ ! <= _PWM -> -> 50 `i `f 771  ]
[; ;task.c: 2251: {
"2251
{
[; ;task.c: 2252: PWM=50;
"2252
[e = _PWM -> -> 50 `i `f ]
"2253
}
[e :U 771 ]
"2254
[e :U 770 ]
[; ;task.c: 2253: }
[; ;task.c: 2254: buck_pwm_value = PWM;
[e = _buck_pwm_value -> _PWM `ui ]
[; ;task.c: 2256: Set_Buck_Pwm_Duty(buck_pwm_value);
"2256
[e ( _Set_Buck_Pwm_Duty (1 _buck_pwm_value ]
"2257
}
[; ;task.c: 2257: }
[e $U 772  ]
"2258
[e :U 768 ]
[; ;task.c: 2258: else __nop();
[e ( ___nop ..  ]
[e :U 772 ]
[e :U 767 ]
[e :U 765 ]
[; ;task.c: 2265: }
"2265
[e :UE 760 ]
}
