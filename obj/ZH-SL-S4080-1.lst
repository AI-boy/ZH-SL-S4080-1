

Microchip Technology PIC PRO Macro Assembler V1.30 build 55553 
                                                                                               Tue Nov 13 15:42:33 2018

Microchip Technology Omniscient Code Generator (PRO mode) build 55553
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK4,global,class=CODE,delta=2
     9                           	psect	idataBANK5,global,class=CODE,delta=2
    10                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	inittext,global,class=CODE,delta=2
    29                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text38,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text54,local,class=CODE,merge=1,delta=2
    46                           	psect	text56,local,class=CODE,merge=1,delta=2
    47                           	psect	text57,local,class=CODE,merge=1,delta=2
    48                           	psect	pa_nodes,global,class=CODE,delta=2
    49                           	psect	text11_split_1,local,class=CODE,merge=1,delta=2
    50                           	psect	text11_split_2,local,class=CODE,merge=1,delta=2
    51                           	psect	text11_split_3,local,class=CODE,merge=1,delta=2
    52                           	psect	text11_split_4,local,class=CODE,merge=1,delta=2
    53                           	psect	text11_split_5,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x2370,0,_adc_buffer
    57                           	dabs	1,0x7E,2
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0110                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020D                     	;# 
   145  0210                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0291                     	;# 
   155  0291                     	;# 
   156  0292                     	;# 
   157  0293                     	;# 
   158  0294                     	;# 
   159  0295                     	;# 
   160  0295                     	;# 
   161  0296                     	;# 
   162  0298                     	;# 
   163  0298                     	;# 
   164  0299                     	;# 
   165  029A                     	;# 
   166  029B                     	;# 
   167  029C                     	;# 
   168  029C                     	;# 
   169  029D                     	;# 
   170  029E                     	;# 
   171  029F                     	;# 
   172  0311                     	;# 
   173  0311                     	;# 
   174  0312                     	;# 
   175  0313                     	;# 
   176  0314                     	;# 
   177  0315                     	;# 
   178  0315                     	;# 
   179  0316                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  031C                     	;# 
   185  031C                     	;# 
   186  031D                     	;# 
   187  031E                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0791                     	;# 
   198  0792                     	;# 
   199  0793                     	;# 
   200  0794                     	;# 
   201  0795                     	;# 
   202  0798                     	;# 
   203  0799                     	;# 
   204  07A0                     	;# 
   205  07A1                     	;# 
   206  07A3                     	;# 
   207  07A4                     	;# 
   208  07A6                     	;# 
   209  07A7                     	;# 
   210  07A9                     	;# 
   211  07AA                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  0110                     	;# 
   275  0111                     	;# 
   276  0112                     	;# 
   277  0113                     	;# 
   278  0114                     	;# 
   279  0115                     	;# 
   280  0116                     	;# 
   281  0117                     	;# 
   282  0118                     	;# 
   283  0119                     	;# 
   284  011A                     	;# 
   285  011B                     	;# 
   286  011D                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0194                     	;# 
   296  0195                     	;# 
   297  0196                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019C                     	;# 
   305  019C                     	;# 
   306  019D                     	;# 
   307  019E                     	;# 
   308  019F                     	;# 
   309  020D                     	;# 
   310  0210                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0291                     	;# 
   320  0291                     	;# 
   321  0292                     	;# 
   322  0293                     	;# 
   323  0294                     	;# 
   324  0295                     	;# 
   325  0295                     	;# 
   326  0296                     	;# 
   327  0298                     	;# 
   328  0298                     	;# 
   329  0299                     	;# 
   330  029A                     	;# 
   331  029B                     	;# 
   332  029C                     	;# 
   333  029C                     	;# 
   334  029D                     	;# 
   335  029E                     	;# 
   336  029F                     	;# 
   337  0311                     	;# 
   338  0311                     	;# 
   339  0312                     	;# 
   340  0313                     	;# 
   341  0314                     	;# 
   342  0315                     	;# 
   343  0315                     	;# 
   344  0316                     	;# 
   345  0318                     	;# 
   346  0318                     	;# 
   347  0319                     	;# 
   348  031A                     	;# 
   349  031C                     	;# 
   350  031C                     	;# 
   351  031D                     	;# 
   352  031E                     	;# 
   353  0394                     	;# 
   354  0395                     	;# 
   355  0396                     	;# 
   356  0415                     	;# 
   357  0416                     	;# 
   358  0417                     	;# 
   359  041C                     	;# 
   360  041D                     	;# 
   361  041E                     	;# 
   362  0791                     	;# 
   363  0792                     	;# 
   364  0793                     	;# 
   365  0794                     	;# 
   366  0795                     	;# 
   367  0798                     	;# 
   368  0799                     	;# 
   369  07A0                     	;# 
   370  07A1                     	;# 
   371  07A3                     	;# 
   372  07A4                     	;# 
   373  07A6                     	;# 
   374  07A7                     	;# 
   375  07A9                     	;# 
   376  07AA                     	;# 
   377  0FE4                     	;# 
   378  0FE5                     	;# 
   379  0FE6                     	;# 
   380  0FE7                     	;# 
   381  0FE8                     	;# 
   382  0FE9                     	;# 
   383  0FEA                     	;# 
   384  0FEB                     	;# 
   385  0FED                     	;# 
   386  0FEE                     	;# 
   387  0FEF                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  0110                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011D                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020D                     	;# 
   475  0210                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0214                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0217                     	;# 
   484  0291                     	;# 
   485  0291                     	;# 
   486  0292                     	;# 
   487  0293                     	;# 
   488  0294                     	;# 
   489  0295                     	;# 
   490  0295                     	;# 
   491  0296                     	;# 
   492  0298                     	;# 
   493  0298                     	;# 
   494  0299                     	;# 
   495  029A                     	;# 
   496  029B                     	;# 
   497  029C                     	;# 
   498  029C                     	;# 
   499  029D                     	;# 
   500  029E                     	;# 
   501  029F                     	;# 
   502  0311                     	;# 
   503  0311                     	;# 
   504  0312                     	;# 
   505  0313                     	;# 
   506  0314                     	;# 
   507  0315                     	;# 
   508  0315                     	;# 
   509  0316                     	;# 
   510  0318                     	;# 
   511  0318                     	;# 
   512  0319                     	;# 
   513  031A                     	;# 
   514  031C                     	;# 
   515  031C                     	;# 
   516  031D                     	;# 
   517  031E                     	;# 
   518  0394                     	;# 
   519  0395                     	;# 
   520  0396                     	;# 
   521  0415                     	;# 
   522  0416                     	;# 
   523  0417                     	;# 
   524  041C                     	;# 
   525  041D                     	;# 
   526  041E                     	;# 
   527  0791                     	;# 
   528  0792                     	;# 
   529  0793                     	;# 
   530  0794                     	;# 
   531  0795                     	;# 
   532  0798                     	;# 
   533  0799                     	;# 
   534  07A0                     	;# 
   535  07A1                     	;# 
   536  07A3                     	;# 
   537  07A4                     	;# 
   538  07A6                     	;# 
   539  07A7                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  010E                     	;# 
   604  0110                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011A                     	;# 
   615  011B                     	;# 
   616  011D                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0194                     	;# 
   626  0195                     	;# 
   627  0196                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019C                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020D                     	;# 
   640  0210                     	;# 
   641  0211                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0214                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0291                     	;# 
   650  0291                     	;# 
   651  0292                     	;# 
   652  0293                     	;# 
   653  0294                     	;# 
   654  0295                     	;# 
   655  0295                     	;# 
   656  0296                     	;# 
   657  0298                     	;# 
   658  0298                     	;# 
   659  0299                     	;# 
   660  029A                     	;# 
   661  029B                     	;# 
   662  029C                     	;# 
   663  029C                     	;# 
   664  029D                     	;# 
   665  029E                     	;# 
   666  029F                     	;# 
   667  0311                     	;# 
   668  0311                     	;# 
   669  0312                     	;# 
   670  0313                     	;# 
   671  0314                     	;# 
   672  0315                     	;# 
   673  0315                     	;# 
   674  0316                     	;# 
   675  0318                     	;# 
   676  0318                     	;# 
   677  0319                     	;# 
   678  031A                     	;# 
   679  031C                     	;# 
   680  031C                     	;# 
   681  031D                     	;# 
   682  031E                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  0415                     	;# 
   687  0416                     	;# 
   688  0417                     	;# 
   689  041C                     	;# 
   690  041D                     	;# 
   691  041E                     	;# 
   692  0791                     	;# 
   693  0792                     	;# 
   694  0793                     	;# 
   695  0794                     	;# 
   696  0795                     	;# 
   697  0798                     	;# 
   698  0799                     	;# 
   699  07A0                     	;# 
   700  07A1                     	;# 
   701  07A3                     	;# 
   702  07A4                     	;# 
   703  07A6                     	;# 
   704  07A7                     	;# 
   705  07A9                     	;# 
   706  07AA                     	;# 
   707  0FE4                     	;# 
   708  0FE5                     	;# 
   709  0FE6                     	;# 
   710  0FE7                     	;# 
   711  0FE8                     	;# 
   712  0FE9                     	;# 
   713  0FEA                     	;# 
   714  0FEB                     	;# 
   715  0FED                     	;# 
   716  0FEE                     	;# 
   717  0FEF                     	;# 
   718                           
   719                           	psect	eeprom_data
   720  0000  0002 0058 0000     	db	2,88,0,33,100,100,100,100	;# 
      +       0021 0064 0064     
      +       0064 0064          
   721  0008  0032 0001 0001     	db	50,1,1,1,5,5,1,1	;# 
      +       0001 0005 0005     
      +       0001 0001          
   722  0010  0001 0000 0000     	db	1,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   723  0018  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   724  0020  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   725  0028  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   726  0030  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   727  0038  0000 0000 0000     	db	0,0,0,0,0,0,0,0	;# 
      +       0000 0000 0000     
      +       0000 0000          
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000D                     	;# 
   742  000E                     	;# 
   743  0010                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0013                     	;# 
   747  0015                     	;# 
   748  0016                     	;# 
   749  0016                     	;# 
   750  0017                     	;# 
   751  0018                     	;# 
   752  0019                     	;# 
   753  001A                     	;# 
   754  001B                     	;# 
   755  001C                     	;# 
   756  001E                     	;# 
   757  001F                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0095                     	;# 
   766  0096                     	;# 
   767  0097                     	;# 
   768  0098                     	;# 
   769  0099                     	;# 
   770  009A                     	;# 
   771  009B                     	;# 
   772  009B                     	;# 
   773  009C                     	;# 
   774  009D                     	;# 
   775  009E                     	;# 
   776  010C                     	;# 
   777  010D                     	;# 
   778  010E                     	;# 
   779  0110                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0113                     	;# 
   783  0114                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0118                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011B                     	;# 
   791  011D                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0191                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0199                     	;# 
   804  019A                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019E                     	;# 
   813  019F                     	;# 
   814  020D                     	;# 
   815  0210                     	;# 
   816  0211                     	;# 
   817  0212                     	;# 
   818  0213                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0291                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0293                     	;# 
   828  0294                     	;# 
   829  0295                     	;# 
   830  0295                     	;# 
   831  0296                     	;# 
   832  0298                     	;# 
   833  0298                     	;# 
   834  0299                     	;# 
   835  029A                     	;# 
   836  029B                     	;# 
   837  029C                     	;# 
   838  029C                     	;# 
   839  029D                     	;# 
   840  029E                     	;# 
   841  029F                     	;# 
   842  0311                     	;# 
   843  0311                     	;# 
   844  0312                     	;# 
   845  0313                     	;# 
   846  0314                     	;# 
   847  0315                     	;# 
   848  0315                     	;# 
   849  0316                     	;# 
   850  0318                     	;# 
   851  0318                     	;# 
   852  0319                     	;# 
   853  031A                     	;# 
   854  031C                     	;# 
   855  031C                     	;# 
   856  031D                     	;# 
   857  031E                     	;# 
   858  0394                     	;# 
   859  0395                     	;# 
   860  0396                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0791                     	;# 
   868  0792                     	;# 
   869  0793                     	;# 
   870  0794                     	;# 
   871  0795                     	;# 
   872  0798                     	;# 
   873  0799                     	;# 
   874  07A0                     	;# 
   875  07A1                     	;# 
   876  07A3                     	;# 
   877  07A4                     	;# 
   878  07A6                     	;# 
   879  07A7                     	;# 
   880  07A9                     	;# 
   881  07AA                     	;# 
   882  0FE4                     	;# 
   883  0FE5                     	;# 
   884  0FE6                     	;# 
   885  0FE7                     	;# 
   886  0FE8                     	;# 
   887  0FE9                     	;# 
   888  0FEA                     	;# 
   889  0FEB                     	;# 
   890  0FED                     	;# 
   891  0FEE                     	;# 
   892  0FEF                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0008                     	;# 
   902  0009                     	;# 
   903  000A                     	;# 
   904  000B                     	;# 
   905  000C                     	;# 
   906  000D                     	;# 
   907  000E                     	;# 
   908  0010                     	;# 
   909  0011                     	;# 
   910  0012                     	;# 
   911  0013                     	;# 
   912  0015                     	;# 
   913  0016                     	;# 
   914  0016                     	;# 
   915  0017                     	;# 
   916  0018                     	;# 
   917  0019                     	;# 
   918  001A                     	;# 
   919  001B                     	;# 
   920  001C                     	;# 
   921  001E                     	;# 
   922  001F                     	;# 
   923  008C                     	;# 
   924  008D                     	;# 
   925  008E                     	;# 
   926  0090                     	;# 
   927  0091                     	;# 
   928  0092                     	;# 
   929  0093                     	;# 
   930  0095                     	;# 
   931  0096                     	;# 
   932  0097                     	;# 
   933  0098                     	;# 
   934  0099                     	;# 
   935  009A                     	;# 
   936  009B                     	;# 
   937  009B                     	;# 
   938  009C                     	;# 
   939  009D                     	;# 
   940  009E                     	;# 
   941  010C                     	;# 
   942  010D                     	;# 
   943  010E                     	;# 
   944  0110                     	;# 
   945  0111                     	;# 
   946  0112                     	;# 
   947  0113                     	;# 
   948  0114                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011B                     	;# 
   956  011D                     	;# 
   957  018C                     	;# 
   958  018D                     	;# 
   959  0191                     	;# 
   960  0191                     	;# 
   961  0192                     	;# 
   962  0193                     	;# 
   963  0193                     	;# 
   964  0193                     	;# 
   965  0194                     	;# 
   966  0195                     	;# 
   967  0196                     	;# 
   968  0199                     	;# 
   969  019A                     	;# 
   970  019B                     	;# 
   971  019B                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019C                     	;# 
   975  019C                     	;# 
   976  019D                     	;# 
   977  019E                     	;# 
   978  019F                     	;# 
   979  020D                     	;# 
   980  0210                     	;# 
   981  0211                     	;# 
   982  0212                     	;# 
   983  0213                     	;# 
   984  0214                     	;# 
   985  0215                     	;# 
   986  0215                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0291                     	;# 
   990  0291                     	;# 
   991  0292                     	;# 
   992  0293                     	;# 
   993  0294                     	;# 
   994  0295                     	;# 
   995  0295                     	;# 
   996  0296                     	;# 
   997  0298                     	;# 
   998  0298                     	;# 
   999  0299                     	;# 
  1000  029A                     	;# 
  1001  029B                     	;# 
  1002  029C                     	;# 
  1003  029C                     	;# 
  1004  029D                     	;# 
  1005  029E                     	;# 
  1006  029F                     	;# 
  1007  0311                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0314                     	;# 
  1012  0315                     	;# 
  1013  0315                     	;# 
  1014  0316                     	;# 
  1015  0318                     	;# 
  1016  0318                     	;# 
  1017  0319                     	;# 
  1018  031A                     	;# 
  1019  031C                     	;# 
  1020  031C                     	;# 
  1021  031D                     	;# 
  1022  031E                     	;# 
  1023  0394                     	;# 
  1024  0395                     	;# 
  1025  0396                     	;# 
  1026  0415                     	;# 
  1027  0416                     	;# 
  1028  0417                     	;# 
  1029  041C                     	;# 
  1030  041D                     	;# 
  1031  041E                     	;# 
  1032  0791                     	;# 
  1033  0792                     	;# 
  1034  0793                     	;# 
  1035  0794                     	;# 
  1036  0795                     	;# 
  1037  0798                     	;# 
  1038  0799                     	;# 
  1039  07A0                     	;# 
  1040  07A1                     	;# 
  1041  07A3                     	;# 
  1042  07A4                     	;# 
  1043  07A6                     	;# 
  1044  07A7                     	;# 
  1045  07A9                     	;# 
  1046  07AA                     	;# 
  1047  0FE4                     	;# 
  1048  0FE5                     	;# 
  1049  0FE6                     	;# 
  1050  0FE7                     	;# 
  1051  0FE8                     	;# 
  1052  0FE9                     	;# 
  1053  0FEA                     	;# 
  1054  0FEB                     	;# 
  1055  0FED                     	;# 
  1056  0FEE                     	;# 
  1057  0FEF                     	;# 
  1058  0000                     	;# 
  1059  0001                     	;# 
  1060  0002                     	;# 
  1061  0003                     	;# 
  1062  0004                     	;# 
  1063  0005                     	;# 
  1064  0006                     	;# 
  1065  0007                     	;# 
  1066  0008                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  0010                     	;# 
  1074  0011                     	;# 
  1075  0012                     	;# 
  1076  0013                     	;# 
  1077  0015                     	;# 
  1078  0016                     	;# 
  1079  0016                     	;# 
  1080  0017                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  001B                     	;# 
  1085  001C                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  0090                     	;# 
  1092  0091                     	;# 
  1093  0092                     	;# 
  1094  0093                     	;# 
  1095  0095                     	;# 
  1096  0096                     	;# 
  1097  0097                     	;# 
  1098  0098                     	;# 
  1099  0099                     	;# 
  1100  009A                     	;# 
  1101  009B                     	;# 
  1102  009B                     	;# 
  1103  009C                     	;# 
  1104  009D                     	;# 
  1105  009E                     	;# 
  1106  010C                     	;# 
  1107  010D                     	;# 
  1108  010E                     	;# 
  1109  0110                     	;# 
  1110  0111                     	;# 
  1111  0112                     	;# 
  1112  0113                     	;# 
  1113  0114                     	;# 
  1114  0115                     	;# 
  1115  0116                     	;# 
  1116  0117                     	;# 
  1117  0118                     	;# 
  1118  0119                     	;# 
  1119  011A                     	;# 
  1120  011B                     	;# 
  1121  011D                     	;# 
  1122  018C                     	;# 
  1123  018D                     	;# 
  1124  0191                     	;# 
  1125  0191                     	;# 
  1126  0192                     	;# 
  1127  0193                     	;# 
  1128  0193                     	;# 
  1129  0193                     	;# 
  1130  0194                     	;# 
  1131  0195                     	;# 
  1132  0196                     	;# 
  1133  0199                     	;# 
  1134  019A                     	;# 
  1135  019B                     	;# 
  1136  019B                     	;# 
  1137  019B                     	;# 
  1138  019B                     	;# 
  1139  019C                     	;# 
  1140  019C                     	;# 
  1141  019D                     	;# 
  1142  019E                     	;# 
  1143  019F                     	;# 
  1144  020D                     	;# 
  1145  0210                     	;# 
  1146  0211                     	;# 
  1147  0212                     	;# 
  1148  0213                     	;# 
  1149  0214                     	;# 
  1150  0215                     	;# 
  1151  0215                     	;# 
  1152  0216                     	;# 
  1153  0217                     	;# 
  1154  0291                     	;# 
  1155  0291                     	;# 
  1156  0292                     	;# 
  1157  0293                     	;# 
  1158  0294                     	;# 
  1159  0295                     	;# 
  1160  0295                     	;# 
  1161  0296                     	;# 
  1162  0298                     	;# 
  1163  0298                     	;# 
  1164  0299                     	;# 
  1165  029A                     	;# 
  1166  029B                     	;# 
  1167  029C                     	;# 
  1168  029C                     	;# 
  1169  029D                     	;# 
  1170  029E                     	;# 
  1171  029F                     	;# 
  1172  0311                     	;# 
  1173  0311                     	;# 
  1174  0312                     	;# 
  1175  0313                     	;# 
  1176  0314                     	;# 
  1177  0315                     	;# 
  1178  0315                     	;# 
  1179  0316                     	;# 
  1180  0318                     	;# 
  1181  0318                     	;# 
  1182  0319                     	;# 
  1183  031A                     	;# 
  1184  031C                     	;# 
  1185  031C                     	;# 
  1186  031D                     	;# 
  1187  031E                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  0415                     	;# 
  1192  0416                     	;# 
  1193  0417                     	;# 
  1194  041C                     	;# 
  1195  041D                     	;# 
  1196  041E                     	;# 
  1197  0791                     	;# 
  1198  0792                     	;# 
  1199  0793                     	;# 
  1200  0794                     	;# 
  1201  0795                     	;# 
  1202  0798                     	;# 
  1203  0799                     	;# 
  1204  07A0                     	;# 
  1205  07A1                     	;# 
  1206  07A3                     	;# 
  1207  07A4                     	;# 
  1208  07A6                     	;# 
  1209  07A7                     	;# 
  1210  07A9                     	;# 
  1211  07AA                     	;# 
  1212  0FE4                     	;# 
  1213  0FE5                     	;# 
  1214  0FE6                     	;# 
  1215  0FE7                     	;# 
  1216  0FE8                     	;# 
  1217  0FE9                     	;# 
  1218  0FEA                     	;# 
  1219  0FEB                     	;# 
  1220  0FED                     	;# 
  1221  0FEE                     	;# 
  1222  0FEF                     	;# 
  1223  0000                     	;# 
  1224  0001                     	;# 
  1225  0002                     	;# 
  1226  0003                     	;# 
  1227  0004                     	;# 
  1228  0005                     	;# 
  1229  0006                     	;# 
  1230  0007                     	;# 
  1231  0008                     	;# 
  1232  0009                     	;# 
  1233  000A                     	;# 
  1234  000B                     	;# 
  1235  000C                     	;# 
  1236  000D                     	;# 
  1237  000E                     	;# 
  1238  0010                     	;# 
  1239  0011                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0015                     	;# 
  1243  0016                     	;# 
  1244  0016                     	;# 
  1245  0017                     	;# 
  1246  0018                     	;# 
  1247  0019                     	;# 
  1248  001A                     	;# 
  1249  001B                     	;# 
  1250  001C                     	;# 
  1251  001E                     	;# 
  1252  001F                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  0090                     	;# 
  1257  0091                     	;# 
  1258  0092                     	;# 
  1259  0093                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0097                     	;# 
  1263  0098                     	;# 
  1264  0099                     	;# 
  1265  009A                     	;# 
  1266  009B                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  010C                     	;# 
  1272  010D                     	;# 
  1273  010E                     	;# 
  1274  0110                     	;# 
  1275  0111                     	;# 
  1276  0112                     	;# 
  1277  0113                     	;# 
  1278  0114                     	;# 
  1279  0115                     	;# 
  1280  0116                     	;# 
  1281  0117                     	;# 
  1282  0118                     	;# 
  1283  0119                     	;# 
  1284  011A                     	;# 
  1285  011B                     	;# 
  1286  011D                     	;# 
  1287  018C                     	;# 
  1288  018D                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0193                     	;# 
  1295  0194                     	;# 
  1296  0195                     	;# 
  1297  0196                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019D                     	;# 
  1307  019E                     	;# 
  1308  019F                     	;# 
  1309  020D                     	;# 
  1310  0210                     	;# 
  1311  0211                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0291                     	;# 
  1320  0291                     	;# 
  1321  0292                     	;# 
  1322  0293                     	;# 
  1323  0294                     	;# 
  1324  0295                     	;# 
  1325  0295                     	;# 
  1326  0296                     	;# 
  1327  0298                     	;# 
  1328  0298                     	;# 
  1329  0299                     	;# 
  1330  029A                     	;# 
  1331  029B                     	;# 
  1332  029C                     	;# 
  1333  029C                     	;# 
  1334  029D                     	;# 
  1335  029E                     	;# 
  1336  029F                     	;# 
  1337  0311                     	;# 
  1338  0311                     	;# 
  1339  0312                     	;# 
  1340  0313                     	;# 
  1341  0314                     	;# 
  1342  0315                     	;# 
  1343  0315                     	;# 
  1344  0316                     	;# 
  1345  0318                     	;# 
  1346  0318                     	;# 
  1347  0319                     	;# 
  1348  031A                     	;# 
  1349  031C                     	;# 
  1350  031C                     	;# 
  1351  031D                     	;# 
  1352  031E                     	;# 
  1353  0394                     	;# 
  1354  0395                     	;# 
  1355  0396                     	;# 
  1356  0415                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  041C                     	;# 
  1360  041D                     	;# 
  1361  041E                     	;# 
  1362  0791                     	;# 
  1363  0792                     	;# 
  1364  0793                     	;# 
  1365  0794                     	;# 
  1366  0795                     	;# 
  1367  0798                     	;# 
  1368  0799                     	;# 
  1369  07A0                     	;# 
  1370  07A1                     	;# 
  1371  07A3                     	;# 
  1372  07A4                     	;# 
  1373  07A6                     	;# 
  1374  07A7                     	;# 
  1375  07A9                     	;# 
  1376  07AA                     	;# 
  1377  0FE4                     	;# 
  1378  0FE5                     	;# 
  1379  0FE6                     	;# 
  1380  0FE7                     	;# 
  1381  0FE8                     	;# 
  1382  0FE9                     	;# 
  1383  0FEA                     	;# 
  1384  0FEB                     	;# 
  1385  0FED                     	;# 
  1386  0FEE                     	;# 
  1387  0FEF                     	;# 
  1388  0000                     	;# 
  1389  0001                     	;# 
  1390  0002                     	;# 
  1391  0003                     	;# 
  1392  0004                     	;# 
  1393  0005                     	;# 
  1394  0006                     	;# 
  1395  0007                     	;# 
  1396  0008                     	;# 
  1397  0009                     	;# 
  1398  000A                     	;# 
  1399  000B                     	;# 
  1400  000C                     	;# 
  1401  000D                     	;# 
  1402  000E                     	;# 
  1403  0010                     	;# 
  1404  0011                     	;# 
  1405  0012                     	;# 
  1406  0013                     	;# 
  1407  0015                     	;# 
  1408  0016                     	;# 
  1409  0016                     	;# 
  1410  0017                     	;# 
  1411  0018                     	;# 
  1412  0019                     	;# 
  1413  001A                     	;# 
  1414  001B                     	;# 
  1415  001C                     	;# 
  1416  001E                     	;# 
  1417  001F                     	;# 
  1418  008C                     	;# 
  1419  008D                     	;# 
  1420  008E                     	;# 
  1421  0090                     	;# 
  1422  0091                     	;# 
  1423  0092                     	;# 
  1424  0093                     	;# 
  1425  0095                     	;# 
  1426  0096                     	;# 
  1427  0097                     	;# 
  1428  0098                     	;# 
  1429  0099                     	;# 
  1430  009A                     	;# 
  1431  009B                     	;# 
  1432  009B                     	;# 
  1433  009C                     	;# 
  1434  009D                     	;# 
  1435  009E                     	;# 
  1436  010C                     	;# 
  1437  010D                     	;# 
  1438  010E                     	;# 
  1439  0110                     	;# 
  1440  0111                     	;# 
  1441  0112                     	;# 
  1442  0113                     	;# 
  1443  0114                     	;# 
  1444  0115                     	;# 
  1445  0116                     	;# 
  1446  0117                     	;# 
  1447  0118                     	;# 
  1448  0119                     	;# 
  1449  011A                     	;# 
  1450  011B                     	;# 
  1451  011D                     	;# 
  1452  018C                     	;# 
  1453  018D                     	;# 
  1454  0191                     	;# 
  1455  0191                     	;# 
  1456  0192                     	;# 
  1457  0193                     	;# 
  1458  0193                     	;# 
  1459  0193                     	;# 
  1460  0194                     	;# 
  1461  0195                     	;# 
  1462  0196                     	;# 
  1463  0199                     	;# 
  1464  019A                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019B                     	;# 
  1468  019B                     	;# 
  1469  019C                     	;# 
  1470  019C                     	;# 
  1471  019D                     	;# 
  1472  019E                     	;# 
  1473  019F                     	;# 
  1474  020D                     	;# 
  1475  0210                     	;# 
  1476  0211                     	;# 
  1477  0212                     	;# 
  1478  0213                     	;# 
  1479  0214                     	;# 
  1480  0215                     	;# 
  1481  0215                     	;# 
  1482  0216                     	;# 
  1483  0217                     	;# 
  1484  0291                     	;# 
  1485  0291                     	;# 
  1486  0292                     	;# 
  1487  0293                     	;# 
  1488  0294                     	;# 
  1489  0295                     	;# 
  1490  0295                     	;# 
  1491  0296                     	;# 
  1492  0298                     	;# 
  1493  0298                     	;# 
  1494  0299                     	;# 
  1495  029A                     	;# 
  1496  029B                     	;# 
  1497  029C                     	;# 
  1498  029C                     	;# 
  1499  029D                     	;# 
  1500  029E                     	;# 
  1501  029F                     	;# 
  1502  0311                     	;# 
  1503  0311                     	;# 
  1504  0312                     	;# 
  1505  0313                     	;# 
  1506  0314                     	;# 
  1507  0315                     	;# 
  1508  0315                     	;# 
  1509  0316                     	;# 
  1510  0318                     	;# 
  1511  0318                     	;# 
  1512  0319                     	;# 
  1513  031A                     	;# 
  1514  031C                     	;# 
  1515  031C                     	;# 
  1516  031D                     	;# 
  1517  031E                     	;# 
  1518  0394                     	;# 
  1519  0395                     	;# 
  1520  0396                     	;# 
  1521  0415                     	;# 
  1522  0416                     	;# 
  1523  0417                     	;# 
  1524  041C                     	;# 
  1525  041D                     	;# 
  1526  041E                     	;# 
  1527  0791                     	;# 
  1528  0792                     	;# 
  1529  0793                     	;# 
  1530  0794                     	;# 
  1531  0795                     	;# 
  1532  0798                     	;# 
  1533  0799                     	;# 
  1534  07A0                     	;# 
  1535  07A1                     	;# 
  1536  07A3                     	;# 
  1537  07A4                     	;# 
  1538  07A6                     	;# 
  1539  07A7                     	;# 
  1540  07A9                     	;# 
  1541  07AA                     	;# 
  1542  0FE4                     	;# 
  1543  0FE5                     	;# 
  1544  0FE6                     	;# 
  1545  0FE7                     	;# 
  1546  0FE8                     	;# 
  1547  0FE9                     	;# 
  1548  0FEA                     	;# 
  1549  0FEB                     	;# 
  1550  0FED                     	;# 
  1551  0FEE                     	;# 
  1552  0FEF                     	;# 
  1553  0000                     	;# 
  1554  0001                     	;# 
  1555  0002                     	;# 
  1556  0003                     	;# 
  1557  0004                     	;# 
  1558  0005                     	;# 
  1559  0006                     	;# 
  1560  0007                     	;# 
  1561  0008                     	;# 
  1562  0009                     	;# 
  1563  000A                     	;# 
  1564  000B                     	;# 
  1565  000C                     	;# 
  1566  000D                     	;# 
  1567  000E                     	;# 
  1568  0010                     	;# 
  1569  0011                     	;# 
  1570  0012                     	;# 
  1571  0013                     	;# 
  1572  0015                     	;# 
  1573  0016                     	;# 
  1574  0016                     	;# 
  1575  0017                     	;# 
  1576  0018                     	;# 
  1577  0019                     	;# 
  1578  001A                     	;# 
  1579  001B                     	;# 
  1580  001C                     	;# 
  1581  001E                     	;# 
  1582  001F                     	;# 
  1583  008C                     	;# 
  1584  008D                     	;# 
  1585  008E                     	;# 
  1586  0090                     	;# 
  1587  0091                     	;# 
  1588  0092                     	;# 
  1589  0093                     	;# 
  1590  0095                     	;# 
  1591  0096                     	;# 
  1592  0097                     	;# 
  1593  0098                     	;# 
  1594  0099                     	;# 
  1595  009A                     	;# 
  1596  009B                     	;# 
  1597  009B                     	;# 
  1598  009C                     	;# 
  1599  009D                     	;# 
  1600  009E                     	;# 
  1601  010C                     	;# 
  1602  010D                     	;# 
  1603  010E                     	;# 
  1604  0110                     	;# 
  1605  0111                     	;# 
  1606  0112                     	;# 
  1607  0113                     	;# 
  1608  0114                     	;# 
  1609  0115                     	;# 
  1610  0116                     	;# 
  1611  0117                     	;# 
  1612  0118                     	;# 
  1613  0119                     	;# 
  1614  011A                     	;# 
  1615  011B                     	;# 
  1616  011D                     	;# 
  1617  018C                     	;# 
  1618  018D                     	;# 
  1619  0191                     	;# 
  1620  0191                     	;# 
  1621  0192                     	;# 
  1622  0193                     	;# 
  1623  0193                     	;# 
  1624  0193                     	;# 
  1625  0194                     	;# 
  1626  0195                     	;# 
  1627  0196                     	;# 
  1628  0199                     	;# 
  1629  019A                     	;# 
  1630  019B                     	;# 
  1631  019B                     	;# 
  1632  019B                     	;# 
  1633  019B                     	;# 
  1634  019C                     	;# 
  1635  019C                     	;# 
  1636  019D                     	;# 
  1637  019E                     	;# 
  1638  019F                     	;# 
  1639  020D                     	;# 
  1640  0210                     	;# 
  1641  0211                     	;# 
  1642  0212                     	;# 
  1643  0213                     	;# 
  1644  0214                     	;# 
  1645  0215                     	;# 
  1646  0215                     	;# 
  1647  0216                     	;# 
  1648  0217                     	;# 
  1649  0291                     	;# 
  1650  0291                     	;# 
  1651  0292                     	;# 
  1652  0293                     	;# 
  1653  0294                     	;# 
  1654  0295                     	;# 
  1655  0295                     	;# 
  1656  0296                     	;# 
  1657  0298                     	;# 
  1658  0298                     	;# 
  1659  0299                     	;# 
  1660  029A                     	;# 
  1661  029B                     	;# 
  1662  029C                     	;# 
  1663  029C                     	;# 
  1664  029D                     	;# 
  1665  029E                     	;# 
  1666  029F                     	;# 
  1667  0311                     	;# 
  1668  0311                     	;# 
  1669  0312                     	;# 
  1670  0313                     	;# 
  1671  0314                     	;# 
  1672  0315                     	;# 
  1673  0315                     	;# 
  1674  0316                     	;# 
  1675  0318                     	;# 
  1676  0318                     	;# 
  1677  0319                     	;# 
  1678  031A                     	;# 
  1679  031C                     	;# 
  1680  031C                     	;# 
  1681  031D                     	;# 
  1682  031E                     	;# 
  1683  0394                     	;# 
  1684  0395                     	;# 
  1685  0396                     	;# 
  1686  0415                     	;# 
  1687  0416                     	;# 
  1688  0417                     	;# 
  1689  041C                     	;# 
  1690  041D                     	;# 
  1691  041E                     	;# 
  1692  0791                     	;# 
  1693  0792                     	;# 
  1694  0793                     	;# 
  1695  0794                     	;# 
  1696  0795                     	;# 
  1697  0798                     	;# 
  1698  0799                     	;# 
  1699  07A0                     	;# 
  1700  07A1                     	;# 
  1701  07A3                     	;# 
  1702  07A4                     	;# 
  1703  07A6                     	;# 
  1704  07A7                     	;# 
  1705  07A9                     	;# 
  1706  07AA                     	;# 
  1707  0FE4                     	;# 
  1708  0FE5                     	;# 
  1709  0FE6                     	;# 
  1710  0FE7                     	;# 
  1711  0FE8                     	;# 
  1712  0FE9                     	;# 
  1713  0FEA                     	;# 
  1714  0FEB                     	;# 
  1715  0FED                     	;# 
  1716  0FEE                     	;# 
  1717  0FEF                     	;# 
  1718  0000                     	;# 
  1719  0001                     	;# 
  1720  0002                     	;# 
  1721  0003                     	;# 
  1722  0004                     	;# 
  1723  0005                     	;# 
  1724  0006                     	;# 
  1725  0007                     	;# 
  1726  0008                     	;# 
  1727  0009                     	;# 
  1728  000A                     	;# 
  1729  000B                     	;# 
  1730  000C                     	;# 
  1731  000D                     	;# 
  1732  000E                     	;# 
  1733  0010                     	;# 
  1734  0011                     	;# 
  1735  0012                     	;# 
  1736  0013                     	;# 
  1737  0015                     	;# 
  1738  0016                     	;# 
  1739  0016                     	;# 
  1740  0017                     	;# 
  1741  0018                     	;# 
  1742  0019                     	;# 
  1743  001A                     	;# 
  1744  001B                     	;# 
  1745  001C                     	;# 
  1746  001E                     	;# 
  1747  001F                     	;# 
  1748  008C                     	;# 
  1749  008D                     	;# 
  1750  008E                     	;# 
  1751  0090                     	;# 
  1752  0091                     	;# 
  1753  0092                     	;# 
  1754  0093                     	;# 
  1755  0095                     	;# 
  1756  0096                     	;# 
  1757  0097                     	;# 
  1758  0098                     	;# 
  1759  0099                     	;# 
  1760  009A                     	;# 
  1761  009B                     	;# 
  1762  009B                     	;# 
  1763  009C                     	;# 
  1764  009D                     	;# 
  1765  009E                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  0110                     	;# 
  1770  0111                     	;# 
  1771  0112                     	;# 
  1772  0113                     	;# 
  1773  0114                     	;# 
  1774  0115                     	;# 
  1775  0116                     	;# 
  1776  0117                     	;# 
  1777  0118                     	;# 
  1778  0119                     	;# 
  1779  011A                     	;# 
  1780  011B                     	;# 
  1781  011D                     	;# 
  1782  018C                     	;# 
  1783  018D                     	;# 
  1784  0191                     	;# 
  1785  0191                     	;# 
  1786  0192                     	;# 
  1787  0193                     	;# 
  1788  0193                     	;# 
  1789  0193                     	;# 
  1790  0194                     	;# 
  1791  0195                     	;# 
  1792  0196                     	;# 
  1793  0199                     	;# 
  1794  019A                     	;# 
  1795  019B                     	;# 
  1796  019B                     	;# 
  1797  019B                     	;# 
  1798  019B                     	;# 
  1799  019C                     	;# 
  1800  019C                     	;# 
  1801  019D                     	;# 
  1802  019E                     	;# 
  1803  019F                     	;# 
  1804  020D                     	;# 
  1805  0210                     	;# 
  1806  0211                     	;# 
  1807  0212                     	;# 
  1808  0213                     	;# 
  1809  0214                     	;# 
  1810  0215                     	;# 
  1811  0215                     	;# 
  1812  0216                     	;# 
  1813  0217                     	;# 
  1814  0291                     	;# 
  1815  0291                     	;# 
  1816  0292                     	;# 
  1817  0293                     	;# 
  1818  0294                     	;# 
  1819  0295                     	;# 
  1820  0295                     	;# 
  1821  0296                     	;# 
  1822  0298                     	;# 
  1823  0298                     	;# 
  1824  0299                     	;# 
  1825  029A                     	;# 
  1826  029B                     	;# 
  1827  029C                     	;# 
  1828  029C                     	;# 
  1829  029D                     	;# 
  1830  029E                     	;# 
  1831  029F                     	;# 
  1832  0311                     	;# 
  1833  0311                     	;# 
  1834  0312                     	;# 
  1835  0313                     	;# 
  1836  0314                     	;# 
  1837  0315                     	;# 
  1838  0315                     	;# 
  1839  0316                     	;# 
  1840  0318                     	;# 
  1841  0318                     	;# 
  1842  0319                     	;# 
  1843  031A                     	;# 
  1844  031C                     	;# 
  1845  031C                     	;# 
  1846  031D                     	;# 
  1847  031E                     	;# 
  1848  0394                     	;# 
  1849  0395                     	;# 
  1850  0396                     	;# 
  1851  0415                     	;# 
  1852  0416                     	;# 
  1853  0417                     	;# 
  1854  041C                     	;# 
  1855  041D                     	;# 
  1856  041E                     	;# 
  1857  0791                     	;# 
  1858  0792                     	;# 
  1859  0793                     	;# 
  1860  0794                     	;# 
  1861  0795                     	;# 
  1862  0798                     	;# 
  1863  0799                     	;# 
  1864  07A0                     	;# 
  1865  07A1                     	;# 
  1866  07A3                     	;# 
  1867  07A4                     	;# 
  1868  07A6                     	;# 
  1869  07A7                     	;# 
  1870  07A9                     	;# 
  1871  07AA                     	;# 
  1872  0FE4                     	;# 
  1873  0FE5                     	;# 
  1874  0FE6                     	;# 
  1875  0FE7                     	;# 
  1876  0FE8                     	;# 
  1877  0FE9                     	;# 
  1878  0FEA                     	;# 
  1879  0FEB                     	;# 
  1880  0FED                     	;# 
  1881  0FEE                     	;# 
  1882  0FEF                     	;# 
  1883  0000                     	;# 
  1884  0001                     	;# 
  1885  0002                     	;# 
  1886  0003                     	;# 
  1887  0004                     	;# 
  1888  0005                     	;# 
  1889  0006                     	;# 
  1890  0007                     	;# 
  1891  0008                     	;# 
  1892  0009                     	;# 
  1893  000A                     	;# 
  1894  000B                     	;# 
  1895  000C                     	;# 
  1896  000D                     	;# 
  1897  000E                     	;# 
  1898  0010                     	;# 
  1899  0011                     	;# 
  1900  0012                     	;# 
  1901  0013                     	;# 
  1902  0015                     	;# 
  1903  0016                     	;# 
  1904  0016                     	;# 
  1905  0017                     	;# 
  1906  0018                     	;# 
  1907  0019                     	;# 
  1908  001A                     	;# 
  1909  001B                     	;# 
  1910  001C                     	;# 
  1911  001E                     	;# 
  1912  001F                     	;# 
  1913  008C                     	;# 
  1914  008D                     	;# 
  1915  008E                     	;# 
  1916  0090                     	;# 
  1917  0091                     	;# 
  1918  0092                     	;# 
  1919  0093                     	;# 
  1920  0095                     	;# 
  1921  0096                     	;# 
  1922  0097                     	;# 
  1923  0098                     	;# 
  1924  0099                     	;# 
  1925  009A                     	;# 
  1926  009B                     	;# 
  1927  009B                     	;# 
  1928  009C                     	;# 
  1929  009D                     	;# 
  1930  009E                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0110                     	;# 
  1935  0111                     	;# 
  1936  0112                     	;# 
  1937  0113                     	;# 
  1938  0114                     	;# 
  1939  0115                     	;# 
  1940  0116                     	;# 
  1941  0117                     	;# 
  1942  0118                     	;# 
  1943  0119                     	;# 
  1944  011A                     	;# 
  1945  011B                     	;# 
  1946  011D                     	;# 
  1947  018C                     	;# 
  1948  018D                     	;# 
  1949  0191                     	;# 
  1950  0191                     	;# 
  1951  0192                     	;# 
  1952  0193                     	;# 
  1953  0193                     	;# 
  1954  0193                     	;# 
  1955  0194                     	;# 
  1956  0195                     	;# 
  1957  0196                     	;# 
  1958  0199                     	;# 
  1959  019A                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019C                     	;# 
  1965  019C                     	;# 
  1966  019D                     	;# 
  1967  019E                     	;# 
  1968  019F                     	;# 
  1969  020D                     	;# 
  1970  0210                     	;# 
  1971  0211                     	;# 
  1972  0212                     	;# 
  1973  0213                     	;# 
  1974  0214                     	;# 
  1975  0215                     	;# 
  1976  0215                     	;# 
  1977  0216                     	;# 
  1978  0217                     	;# 
  1979  0291                     	;# 
  1980  0291                     	;# 
  1981  0292                     	;# 
  1982  0293                     	;# 
  1983  0294                     	;# 
  1984  0295                     	;# 
  1985  0295                     	;# 
  1986  0296                     	;# 
  1987  0298                     	;# 
  1988  0298                     	;# 
  1989  0299                     	;# 
  1990  029A                     	;# 
  1991  029B                     	;# 
  1992  029C                     	;# 
  1993  029C                     	;# 
  1994  029D                     	;# 
  1995  029E                     	;# 
  1996  029F                     	;# 
  1997  0311                     	;# 
  1998  0311                     	;# 
  1999  0312                     	;# 
  2000  0313                     	;# 
  2001  0314                     	;# 
  2002  0315                     	;# 
  2003  0315                     	;# 
  2004  0316                     	;# 
  2005  0318                     	;# 
  2006  0318                     	;# 
  2007  0319                     	;# 
  2008  031A                     	;# 
  2009  031C                     	;# 
  2010  031C                     	;# 
  2011  031D                     	;# 
  2012  031E                     	;# 
  2013  0394                     	;# 
  2014  0395                     	;# 
  2015  0396                     	;# 
  2016  0415                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  041C                     	;# 
  2020  041D                     	;# 
  2021  041E                     	;# 
  2022  0791                     	;# 
  2023  0792                     	;# 
  2024  0793                     	;# 
  2025  0794                     	;# 
  2026  0795                     	;# 
  2027  0798                     	;# 
  2028  0799                     	;# 
  2029  07A0                     	;# 
  2030  07A1                     	;# 
  2031  07A3                     	;# 
  2032  07A4                     	;# 
  2033  07A6                     	;# 
  2034  07A7                     	;# 
  2035  07A9                     	;# 
  2036  07AA                     	;# 
  2037  0FE4                     	;# 
  2038  0FE5                     	;# 
  2039  0FE6                     	;# 
  2040  0FE7                     	;# 
  2041  0FE8                     	;# 
  2042  0FE9                     	;# 
  2043  0FEA                     	;# 
  2044  0FEB                     	;# 
  2045  0FED                     	;# 
  2046  0FEE                     	;# 
  2047  0FEF                     	;# 
  2048  0000                     	;# 
  2049  0001                     	;# 
  2050  0002                     	;# 
  2051  0003                     	;# 
  2052  0004                     	;# 
  2053  0005                     	;# 
  2054  0006                     	;# 
  2055  0007                     	;# 
  2056  0008                     	;# 
  2057  0009                     	;# 
  2058  000A                     	;# 
  2059  000B                     	;# 
  2060  000C                     	;# 
  2061  000D                     	;# 
  2062  000E                     	;# 
  2063  0010                     	;# 
  2064  0011                     	;# 
  2065  0012                     	;# 
  2066  0013                     	;# 
  2067  0015                     	;# 
  2068  0016                     	;# 
  2069  0016                     	;# 
  2070  0017                     	;# 
  2071  0018                     	;# 
  2072  0019                     	;# 
  2073  001A                     	;# 
  2074  001B                     	;# 
  2075  001C                     	;# 
  2076  001E                     	;# 
  2077  001F                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  0090                     	;# 
  2082  0091                     	;# 
  2083  0092                     	;# 
  2084  0093                     	;# 
  2085  0095                     	;# 
  2086  0096                     	;# 
  2087  0097                     	;# 
  2088  0098                     	;# 
  2089  0099                     	;# 
  2090  009A                     	;# 
  2091  009B                     	;# 
  2092  009B                     	;# 
  2093  009C                     	;# 
  2094  009D                     	;# 
  2095  009E                     	;# 
  2096  010C                     	;# 
  2097  010D                     	;# 
  2098  010E                     	;# 
  2099  0110                     	;# 
  2100  0111                     	;# 
  2101  0112                     	;# 
  2102  0113                     	;# 
  2103  0114                     	;# 
  2104  0115                     	;# 
  2105  0116                     	;# 
  2106  0117                     	;# 
  2107  0118                     	;# 
  2108  0119                     	;# 
  2109  011A                     	;# 
  2110  011B                     	;# 
  2111  011D                     	;# 
  2112  018C                     	;# 
  2113  018D                     	;# 
  2114  0191                     	;# 
  2115  0191                     	;# 
  2116  0192                     	;# 
  2117  0193                     	;# 
  2118  0193                     	;# 
  2119  0193                     	;# 
  2120  0194                     	;# 
  2121  0195                     	;# 
  2122  0196                     	;# 
  2123  0199                     	;# 
  2124  019A                     	;# 
  2125  019B                     	;# 
  2126  019B                     	;# 
  2127  019B                     	;# 
  2128  019B                     	;# 
  2129  019C                     	;# 
  2130  019C                     	;# 
  2131  019D                     	;# 
  2132  019E                     	;# 
  2133  019F                     	;# 
  2134  020D                     	;# 
  2135  0210                     	;# 
  2136  0211                     	;# 
  2137  0212                     	;# 
  2138  0213                     	;# 
  2139  0214                     	;# 
  2140  0215                     	;# 
  2141  0215                     	;# 
  2142  0216                     	;# 
  2143  0217                     	;# 
  2144  0291                     	;# 
  2145  0291                     	;# 
  2146  0292                     	;# 
  2147  0293                     	;# 
  2148  0294                     	;# 
  2149  0295                     	;# 
  2150  0295                     	;# 
  2151  0296                     	;# 
  2152  0298                     	;# 
  2153  0298                     	;# 
  2154  0299                     	;# 
  2155  029A                     	;# 
  2156  029B                     	;# 
  2157  029C                     	;# 
  2158  029C                     	;# 
  2159  029D                     	;# 
  2160  029E                     	;# 
  2161  029F                     	;# 
  2162  0311                     	;# 
  2163  0311                     	;# 
  2164  0312                     	;# 
  2165  0313                     	;# 
  2166  0314                     	;# 
  2167  0315                     	;# 
  2168  0315                     	;# 
  2169  0316                     	;# 
  2170  0318                     	;# 
  2171  0318                     	;# 
  2172  0319                     	;# 
  2173  031A                     	;# 
  2174  031C                     	;# 
  2175  031C                     	;# 
  2176  031D                     	;# 
  2177  031E                     	;# 
  2178  0394                     	;# 
  2179  0395                     	;# 
  2180  0396                     	;# 
  2181  0415                     	;# 
  2182  0416                     	;# 
  2183  0417                     	;# 
  2184  041C                     	;# 
  2185  041D                     	;# 
  2186  041E                     	;# 
  2187  0791                     	;# 
  2188  0792                     	;# 
  2189  0793                     	;# 
  2190  0794                     	;# 
  2191  0795                     	;# 
  2192  0798                     	;# 
  2193  0799                     	;# 
  2194  07A0                     	;# 
  2195  07A1                     	;# 
  2196  07A3                     	;# 
  2197  07A4                     	;# 
  2198  07A6                     	;# 
  2199  07A7                     	;# 
  2200  07A9                     	;# 
  2201  07AA                     	;# 
  2202  0FE4                     	;# 
  2203  0FE5                     	;# 
  2204  0FE6                     	;# 
  2205  0FE7                     	;# 
  2206  0FE8                     	;# 
  2207  0FE9                     	;# 
  2208  0FEA                     	;# 
  2209  0FEB                     	;# 
  2210  0FED                     	;# 
  2211  0FEE                     	;# 
  2212  0FEF                     	;_adc_buffer
  2213                           
  2214                           	psect	idataBANK1
  2215  0866                     __pidataBANK1:	
  2216                           
  2217                           ;initializer for _light_pv
  2218  0866  3400               	retlw	0
  2219  0867  3416               	retlw	22
  2220  0868  3444               	retlw	68
  2221                           
  2222                           ;initializer for _load_cc_I
  2223  0869  3400               	retlw	0
  2224  086A  345C               	retlw	92
  2225  086B  3443               	retlw	67
  2226                           
  2227                           ;initializer for _step_05_load_percent
  2228  086C  3400               	retlw	0
  2229  086D  3448               	retlw	72
  2230  086E  3442               	retlw	66
  2231                           
  2232                           ;initializer for _step_01_time_limit
  2233  086F  3405               	retlw	5
  2234  0870  3400               	retlw	0
  2235                           
  2236                           ;initializer for _step_02_time_limit
  2237  0871  3405               	retlw	5
  2238  0872  3400               	retlw	0
  2239                           
  2240                           ;initializer for _step_03_time_limit
  2241  0873  3401               	retlw	1
  2242  0874  3400               	retlw	0
  2243                           
  2244                           ;initializer for _step_04_time_limit
  2245  0875  3401               	retlw	1
  2246  0876  3400               	retlw	0
  2247                           
  2248                           ;initializer for _bt_id
  2249  0877  3401               	retlw	1
  2250                           
  2251                           ;initializer for _volt_id
  2252  0878  3401               	retlw	1
  2253                           
  2254                           ;initializer for _voltage_adjust_index
  2255  0879  3401               	retlw	1
  2256                           
  2257                           	psect	idataBANK2
  2258  08A4                     __pidataBANK2:	
  2259                           
  2260                           ;initializer for _dianchi_guoya_baohu
  2261  08A4  3433               	retlw	51
  2262  08A5  3483               	retlw	131
  2263  08A6  3441               	retlw	65
  2264                           
  2265                           ;initializer for _shuchu_shortout_voltage
  2266  08A7  3400               	retlw	0
  2267  08A8  3420               	retlw	32
  2268  08A9  3441               	retlw	65
  2269                           
  2270                           ;initializer for _step_01_load_percent
  2271  08AA  3400               	retlw	0
  2272  08AB  34C8               	retlw	200
  2273  08AC  3442               	retlw	66
  2274                           
  2275                           ;initializer for _step_02_load_percent
  2276  08AD  3400               	retlw	0
  2277  08AE  34C8               	retlw	200
  2278  08AF  3442               	retlw	66
  2279                           
  2280                           ;initializer for _step_03_load_percent
  2281  08B0  3400               	retlw	0
  2282  08B1  34C8               	retlw	200
  2283  08B2  3442               	retlw	66
  2284                           
  2285                           ;initializer for _step_04_load_percent
  2286  08B3  3400               	retlw	0
  2287  08B4  34C8               	retlw	200
  2288  08B5  3442               	retlw	66
  2289                           
  2290                           ;initializer for _step_05_time_limit
  2291  08B6  3401               	retlw	1
  2292  08B7  3400               	retlw	0
  2293                           
  2294                           ;initializer for _KEY_VALUE
  2295  08B8  3410               	retlw	16
  2296                           
  2297                           ;initializer for _sys_temper_flag
  2298  08B9  3401               	retlw	1
  2299                           
  2300                           	psect	idataBANK3
  2301  08BA                     __pidataBANK3:	
  2302                           
  2303                           ;initializer for _charge_i_limit
  2304  08BA  3400               	retlw	0
  2305  08BB  3440               	retlw	64
  2306  08BC  3441               	retlw	65
  2307                           
  2308                           ;initializer for _dianchi_cv_level
  2309  08BD  3466               	retlw	102
  2310  08BE  3482               	retlw	130
  2311  08BF  3441               	retlw	65
  2312                           
  2313                           ;initializer for _dianchi_guoya_huifu
  2314  08C0  349A               	retlw	154
  2315  08C1  3481               	retlw	129
  2316  08C2  3441               	retlw	65
  2317                           
  2318                           ;initializer for _dianchi_qianya_baohu
  2319  08C3  3400               	retlw	0
  2320  08C4  3440               	retlw	64
  2321  08C5  3441               	retlw	65
  2322                           
  2323                           ;initializer for _dianchi_qianya_huifu
  2324  08C6  348F               	retlw	143
  2325  08C7  344A               	retlw	74
  2326  08C8  3441               	retlw	65
  2327                           
  2328                           ;initializer for _discharge_i_baohu
  2329  08C9  3400               	retlw	0
  2330  08CA  3490               	retlw	144
  2331  08CB  3440               	retlw	64
  2332                           
  2333                           ;initializer for _discharge_i_limit
  2334  08CC  3400               	retlw	0
  2335  08CD  3480               	retlw	128
  2336  08CE  3440               	retlw	64
  2337                           
  2338                           ;initializer for _light_off_pv_level
  2339  08CF  3400               	retlw	0
  2340  08D0  3420               	retlw	32
  2341  08D1  3441               	retlw	65
  2342                           
  2343                           ;initializer for _light_on_pv_level
  2344  08D2  3400               	retlw	0
  2345  08D3  34C0               	retlw	192
  2346  08D4  3440               	retlw	64
  2347                           
  2348                           ;initializer for _shuchu_open_voltage
  2349  08D5  3400               	retlw	0
  2350  08D6  347C               	retlw	124
  2351  08D7  3442               	retlw	66
  2352                           
  2353                           	psect	idataBANK4
  2354  088F                     __pidataBANK4:	
  2355                           
  2356                           ;initializer for _Load2_Pmax
  2357  088F  3400               	retlw	0
  2358  0890  3424               	retlw	36
  2359  0891  3442               	retlw	66
  2360                           
  2361                           ;initializer for _Load_Pmax
  2362  0892  3400               	retlw	0
  2363  0893  34A4               	retlw	164
  2364  0894  3442               	retlw	66
  2365                           
  2366                           ;initializer for _bt_volt_00
  2367  0895  3400               	retlw	0
  2368  0896  3440               	retlw	64
  2369  0897  3441               	retlw	65
  2370                           
  2371                           ;initializer for _bt_volt_20
  2372  0898  3414               	retlw	20
  2373  0899  344E               	retlw	78
  2374  089A  3441               	retlw	65
  2375                           
  2376                           ;initializer for _bt_volt_40
  2377  089B  3429               	retlw	41
  2378  089C  345C               	retlw	92
  2379  089D  3441               	retlw	65
  2380                           
  2381                           ;initializer for _bt_volt_60
  2382  089E  343D               	retlw	61
  2383  089F  346A               	retlw	106
  2384  08A0  3441               	retlw	65
  2385                           
  2386                           ;initializer for _bt_volt_80
  2387  08A1  3452               	retlw	82
  2388  08A2  3478               	retlw	120
  2389  08A3  3441               	retlw	65
  2390                           
  2391                           	psect	idataBANK5
  2392  0000                     __pidataBANK5:	
  2393                           
  2394                           	psect	stringtext
  2395  3800                     __pstringtext:	
  2396  3800                     __stringtab:	
  2397  3800  3400               	retlw	0
  2398  3801                     __end_of__stringtab:	
  2399  3801                     _CRCHi:	
  2400  3801  3400               	retlw	0
  2401  3802  34C1               	retlw	193
  2402  3803  3481               	retlw	129
  2403  3804  3440               	retlw	64
  2404  3805  3401               	retlw	1
  2405  3806  34C0               	retlw	192
  2406  3807  3480               	retlw	128
  2407  3808  3441               	retlw	65
  2408  3809  3401               	retlw	1
  2409  380A  34C0               	retlw	192
  2410  380B  3480               	retlw	128
  2411  380C  3441               	retlw	65
  2412  380D  3400               	retlw	0
  2413  380E  34C1               	retlw	193
  2414  380F  3481               	retlw	129
  2415  3810  3440               	retlw	64
  2416  3811  3401               	retlw	1
  2417  3812  34C0               	retlw	192
  2418  3813  3480               	retlw	128
  2419  3814  3441               	retlw	65
  2420  3815  3400               	retlw	0
  2421  3816  34C1               	retlw	193
  2422  3817  3481               	retlw	129
  2423  3818  3440               	retlw	64
  2424  3819  3400               	retlw	0
  2425  381A  34C1               	retlw	193
  2426  381B  3481               	retlw	129
  2427  381C  3440               	retlw	64
  2428  381D  3401               	retlw	1
  2429  381E  34C0               	retlw	192
  2430  381F  3480               	retlw	128
  2431  3820  3441               	retlw	65
  2432  3821  3401               	retlw	1
  2433  3822  34C0               	retlw	192
  2434  3823  3480               	retlw	128
  2435  3824  3441               	retlw	65
  2436  3825  3400               	retlw	0
  2437  3826  34C1               	retlw	193
  2438  3827  3481               	retlw	129
  2439  3828  3440               	retlw	64
  2440  3829  3400               	retlw	0
  2441  382A  34C1               	retlw	193
  2442  382B  3481               	retlw	129
  2443  382C  3440               	retlw	64
  2444  382D  3401               	retlw	1
  2445  382E  34C0               	retlw	192
  2446  382F  3480               	retlw	128
  2447  3830  3441               	retlw	65
  2448  3831  3400               	retlw	0
  2449  3832  34C1               	retlw	193
  2450  3833  3481               	retlw	129
  2451  3834  3440               	retlw	64
  2452  3835  3401               	retlw	1
  2453  3836  34C0               	retlw	192
  2454  3837  3480               	retlw	128
  2455  3838  3441               	retlw	65
  2456  3839  3401               	retlw	1
  2457  383A  34C0               	retlw	192
  2458  383B  3480               	retlw	128
  2459  383C  3441               	retlw	65
  2460  383D  3400               	retlw	0
  2461  383E  34C1               	retlw	193
  2462  383F  3481               	retlw	129
  2463  3840  3440               	retlw	64
  2464  3841  3401               	retlw	1
  2465  3842  34C0               	retlw	192
  2466  3843  3480               	retlw	128
  2467  3844  3441               	retlw	65
  2468  3845  3400               	retlw	0
  2469  3846  34C1               	retlw	193
  2470  3847  3481               	retlw	129
  2471  3848  3440               	retlw	64
  2472  3849  3400               	retlw	0
  2473  384A  34C1               	retlw	193
  2474  384B  3481               	retlw	129
  2475  384C  3440               	retlw	64
  2476  384D  3401               	retlw	1
  2477  384E  34C0               	retlw	192
  2478  384F  3480               	retlw	128
  2479  3850  3441               	retlw	65
  2480  3851  3400               	retlw	0
  2481  3852  34C1               	retlw	193
  2482  3853  3481               	retlw	129
  2483  3854  3440               	retlw	64
  2484  3855  3401               	retlw	1
  2485  3856  34C0               	retlw	192
  2486  3857  3480               	retlw	128
  2487  3858  3441               	retlw	65
  2488  3859  3401               	retlw	1
  2489  385A  34C0               	retlw	192
  2490  385B  3480               	retlw	128
  2491  385C  3441               	retlw	65
  2492  385D  3400               	retlw	0
  2493  385E  34C1               	retlw	193
  2494  385F  3481               	retlw	129
  2495  3860  3440               	retlw	64
  2496  3861  3400               	retlw	0
  2497  3862  34C1               	retlw	193
  2498  3863  3481               	retlw	129
  2499  3864  3440               	retlw	64
  2500  3865  3401               	retlw	1
  2501  3866  34C0               	retlw	192
  2502  3867  3480               	retlw	128
  2503  3868  3441               	retlw	65
  2504  3869  3401               	retlw	1
  2505  386A  34C0               	retlw	192
  2506  386B  3480               	retlw	128
  2507  386C  3441               	retlw	65
  2508  386D  3400               	retlw	0
  2509  386E  34C1               	retlw	193
  2510  386F  3481               	retlw	129
  2511  3870  3440               	retlw	64
  2512  3871  3401               	retlw	1
  2513  3872  34C0               	retlw	192
  2514  3873  3480               	retlw	128
  2515  3874  3441               	retlw	65
  2516  3875  3400               	retlw	0
  2517  3876  34C1               	retlw	193
  2518  3877  3481               	retlw	129
  2519  3878  3440               	retlw	64
  2520  3879  3400               	retlw	0
  2521  387A  34C1               	retlw	193
  2522  387B  3481               	retlw	129
  2523  387C  3440               	retlw	64
  2524  387D  3401               	retlw	1
  2525  387E  34C0               	retlw	192
  2526  387F  3480               	retlw	128
  2527  3880  3441               	retlw	65
  2528  3881  3401               	retlw	1
  2529  3882  34C0               	retlw	192
  2530  3883  3480               	retlw	128
  2531  3884  3441               	retlw	65
  2532  3885  3400               	retlw	0
  2533  3886  34C1               	retlw	193
  2534  3887  3481               	retlw	129
  2535  3888  3440               	retlw	64
  2536  3889  3400               	retlw	0
  2537  388A  34C1               	retlw	193
  2538  388B  3481               	retlw	129
  2539  388C  3440               	retlw	64
  2540  388D  3401               	retlw	1
  2541  388E  34C0               	retlw	192
  2542  388F  3480               	retlw	128
  2543  3890  3441               	retlw	65
  2544  3891  3400               	retlw	0
  2545  3892  34C1               	retlw	193
  2546  3893  3481               	retlw	129
  2547  3894  3440               	retlw	64
  2548  3895  3401               	retlw	1
  2549  3896  34C0               	retlw	192
  2550  3897  3480               	retlw	128
  2551  3898  3441               	retlw	65
  2552  3899  3401               	retlw	1
  2553  389A  34C0               	retlw	192
  2554  389B  3480               	retlw	128
  2555  389C  3441               	retlw	65
  2556  389D  3400               	retlw	0
  2557  389E  34C1               	retlw	193
  2558  389F  3481               	retlw	129
  2559  38A0  3440               	retlw	64
  2560  38A1  3400               	retlw	0
  2561  38A2  34C1               	retlw	193
  2562  38A3  3481               	retlw	129
  2563  38A4  3440               	retlw	64
  2564  38A5  3401               	retlw	1
  2565  38A6  34C0               	retlw	192
  2566  38A7  3480               	retlw	128
  2567  38A8  3441               	retlw	65
  2568  38A9  3401               	retlw	1
  2569  38AA  34C0               	retlw	192
  2570  38AB  3480               	retlw	128
  2571  38AC  3441               	retlw	65
  2572  38AD  3400               	retlw	0
  2573  38AE  34C1               	retlw	193
  2574  38AF  3481               	retlw	129
  2575  38B0  3440               	retlw	64
  2576  38B1  3401               	retlw	1
  2577  38B2  34C0               	retlw	192
  2578  38B3  3480               	retlw	128
  2579  38B4  3441               	retlw	65
  2580  38B5  3400               	retlw	0
  2581  38B6  34C1               	retlw	193
  2582  38B7  3481               	retlw	129
  2583  38B8  3440               	retlw	64
  2584  38B9  3400               	retlw	0
  2585  38BA  34C1               	retlw	193
  2586  38BB  3481               	retlw	129
  2587  38BC  3440               	retlw	64
  2588  38BD  3401               	retlw	1
  2589  38BE  34C0               	retlw	192
  2590  38BF  3480               	retlw	128
  2591  38C0  3441               	retlw	65
  2592  38C1  3400               	retlw	0
  2593  38C2  34C1               	retlw	193
  2594  38C3  3481               	retlw	129
  2595  38C4  3440               	retlw	64
  2596  38C5  3401               	retlw	1
  2597  38C6  34C0               	retlw	192
  2598  38C7  3480               	retlw	128
  2599  38C8  3441               	retlw	65
  2600  38C9  3401               	retlw	1
  2601  38CA  34C0               	retlw	192
  2602  38CB  3480               	retlw	128
  2603  38CC  3441               	retlw	65
  2604  38CD  3400               	retlw	0
  2605  38CE  34C1               	retlw	193
  2606  38CF  3481               	retlw	129
  2607  38D0  3440               	retlw	64
  2608  38D1  3401               	retlw	1
  2609  38D2  34C0               	retlw	192
  2610  38D3  3480               	retlw	128
  2611  38D4  3441               	retlw	65
  2612  38D5  3400               	retlw	0
  2613  38D6  34C1               	retlw	193
  2614  38D7  3481               	retlw	129
  2615  38D8  3440               	retlw	64
  2616  38D9  3400               	retlw	0
  2617  38DA  34C1               	retlw	193
  2618  38DB  3481               	retlw	129
  2619  38DC  3440               	retlw	64
  2620  38DD  3401               	retlw	1
  2621  38DE  34C0               	retlw	192
  2622  38DF  3480               	retlw	128
  2623  38E0  3441               	retlw	65
  2624  38E1  3401               	retlw	1
  2625  38E2  34C0               	retlw	192
  2626  38E3  3480               	retlw	128
  2627  38E4  3441               	retlw	65
  2628  38E5  3400               	retlw	0
  2629  38E6  34C1               	retlw	193
  2630  38E7  3481               	retlw	129
  2631  38E8  3440               	retlw	64
  2632  38E9  3400               	retlw	0
  2633  38EA  34C1               	retlw	193
  2634  38EB  3481               	retlw	129
  2635  38EC  3440               	retlw	64
  2636  38ED  3401               	retlw	1
  2637  38EE  34C0               	retlw	192
  2638  38EF  3480               	retlw	128
  2639  38F0  3441               	retlw	65
  2640  38F1  3400               	retlw	0
  2641  38F2  34C1               	retlw	193
  2642  38F3  3481               	retlw	129
  2643  38F4  3440               	retlw	64
  2644  38F5  3401               	retlw	1
  2645  38F6  34C0               	retlw	192
  2646  38F7  3480               	retlw	128
  2647  38F8  3441               	retlw	65
  2648  38F9  3401               	retlw	1
  2649  38FA  34C0               	retlw	192
  2650  38FB  3480               	retlw	128
  2651  38FC  3441               	retlw	65
  2652  38FD  3400               	retlw	0
  2653  38FE  34C1               	retlw	193
  2654  38FF  3481               	retlw	129
  2655  3900  3440               	retlw	64
  2656  3901                     __end_of_CRCHi:	
  2657  3901                     _CRCLo:	
  2658  3901  3400               	retlw	0
  2659  3902  34C0               	retlw	192
  2660  3903  34C1               	retlw	193
  2661  3904  3401               	retlw	1
  2662  3905  34C3               	retlw	195
  2663  3906  3403               	retlw	3
  2664  3907  3402               	retlw	2
  2665  3908  34C2               	retlw	194
  2666  3909  34C6               	retlw	198
  2667  390A  3406               	retlw	6
  2668  390B  3407               	retlw	7
  2669  390C  34C7               	retlw	199
  2670  390D  3405               	retlw	5
  2671  390E  34C5               	retlw	197
  2672  390F  34C4               	retlw	196
  2673  3910  3404               	retlw	4
  2674  3911  34CC               	retlw	204
  2675  3912  340C               	retlw	12
  2676  3913  340D               	retlw	13
  2677  3914  34CD               	retlw	205
  2678  3915  340F               	retlw	15
  2679  3916  34CF               	retlw	207
  2680  3917  34CE               	retlw	206
  2681  3918  340E               	retlw	14
  2682  3919  340A               	retlw	10
  2683  391A  34CA               	retlw	202
  2684  391B  34CB               	retlw	203
  2685  391C  340B               	retlw	11
  2686  391D  34C9               	retlw	201
  2687  391E  3409               	retlw	9
  2688  391F  3408               	retlw	8
  2689  3920  34C8               	retlw	200
  2690  3921  34D8               	retlw	216
  2691  3922  3418               	retlw	24
  2692  3923  3419               	retlw	25
  2693  3924  34D9               	retlw	217
  2694  3925  341B               	retlw	27
  2695  3926  34DB               	retlw	219
  2696  3927  34DA               	retlw	218
  2697  3928  341A               	retlw	26
  2698  3929  341E               	retlw	30
  2699  392A  34DE               	retlw	222
  2700  392B  34DF               	retlw	223
  2701  392C  341F               	retlw	31
  2702  392D  34DD               	retlw	221
  2703  392E  341D               	retlw	29
  2704  392F  341C               	retlw	28
  2705  3930  34DC               	retlw	220
  2706  3931  3414               	retlw	20
  2707  3932  34D4               	retlw	212
  2708  3933  34D5               	retlw	213
  2709  3934  3415               	retlw	21
  2710  3935  34D7               	retlw	215
  2711  3936  3417               	retlw	23
  2712  3937  3416               	retlw	22
  2713  3938  34D6               	retlw	214
  2714  3939  34D2               	retlw	210
  2715  393A  3412               	retlw	18
  2716  393B  3413               	retlw	19
  2717  393C  34D3               	retlw	211
  2718  393D  3411               	retlw	17
  2719  393E  34D1               	retlw	209
  2720  393F  34D0               	retlw	208
  2721  3940  3410               	retlw	16
  2722  3941  34F0               	retlw	240
  2723  3942  3430               	retlw	48
  2724  3943  3431               	retlw	49
  2725  3944  34F1               	retlw	241
  2726  3945  3433               	retlw	51
  2727  3946  34F3               	retlw	243
  2728  3947  34F2               	retlw	242
  2729  3948  3432               	retlw	50
  2730  3949  3436               	retlw	54
  2731  394A  34F6               	retlw	246
  2732  394B  34F7               	retlw	247
  2733  394C  3437               	retlw	55
  2734  394D  34F5               	retlw	245
  2735  394E  3435               	retlw	53
  2736  394F  3434               	retlw	52
  2737  3950  34F4               	retlw	244
  2738  3951  343C               	retlw	60
  2739  3952  34FC               	retlw	252
  2740  3953  34FD               	retlw	253
  2741  3954  343D               	retlw	61
  2742  3955  34FF               	retlw	255
  2743  3956  343F               	retlw	63
  2744  3957  343E               	retlw	62
  2745  3958  34FE               	retlw	254
  2746  3959  34FA               	retlw	250
  2747  395A  343A               	retlw	58
  2748  395B  343B               	retlw	59
  2749  395C  34FB               	retlw	251
  2750  395D  3439               	retlw	57
  2751  395E  34F9               	retlw	249
  2752  395F  34F8               	retlw	248
  2753  3960  3438               	retlw	56
  2754  3961  3428               	retlw	40
  2755  3962  34E8               	retlw	232
  2756  3963  34E9               	retlw	233
  2757  3964  3429               	retlw	41
  2758  3965  34EB               	retlw	235
  2759  3966  342B               	retlw	43
  2760  3967  342A               	retlw	42
  2761  3968  34EA               	retlw	234
  2762  3969  34EE               	retlw	238
  2763  396A  342E               	retlw	46
  2764  396B  342F               	retlw	47
  2765  396C  34EF               	retlw	239
  2766  396D  342D               	retlw	45
  2767  396E  34ED               	retlw	237
  2768  396F  34EC               	retlw	236
  2769  3970  342C               	retlw	44
  2770  3971  34E4               	retlw	228
  2771  3972  3424               	retlw	36
  2772  3973  3425               	retlw	37
  2773  3974  34E5               	retlw	229
  2774  3975  3427               	retlw	39
  2775  3976  34E7               	retlw	231
  2776  3977  34E6               	retlw	230
  2777  3978  3426               	retlw	38
  2778  3979  3422               	retlw	34
  2779  397A  34E2               	retlw	226
  2780  397B  34E3               	retlw	227
  2781  397C  3423               	retlw	35
  2782  397D  34E1               	retlw	225
  2783  397E  3421               	retlw	33
  2784  397F  3420               	retlw	32
  2785  3980  34E0               	retlw	224
  2786  3981  34A0               	retlw	160
  2787  3982  3460               	retlw	96
  2788  3983  3461               	retlw	97
  2789  3984  34A1               	retlw	161
  2790  3985  3463               	retlw	99
  2791  3986  34A3               	retlw	163
  2792  3987  34A2               	retlw	162
  2793  3988  3462               	retlw	98
  2794  3989  3466               	retlw	102
  2795  398A  34A6               	retlw	166
  2796  398B  34A7               	retlw	167
  2797  398C  3467               	retlw	103
  2798  398D  34A5               	retlw	165
  2799  398E  3465               	retlw	101
  2800  398F  3464               	retlw	100
  2801  3990  34A4               	retlw	164
  2802  3991  346C               	retlw	108
  2803  3992  34AC               	retlw	172
  2804  3993  34AD               	retlw	173
  2805  3994  346D               	retlw	109
  2806  3995  34AF               	retlw	175
  2807  3996  346F               	retlw	111
  2808  3997  346E               	retlw	110
  2809  3998  34AE               	retlw	174
  2810  3999  34AA               	retlw	170
  2811  399A  346A               	retlw	106
  2812  399B  346B               	retlw	107
  2813  399C  34AB               	retlw	171
  2814  399D  3469               	retlw	105
  2815  399E  34A9               	retlw	169
  2816  399F  34A8               	retlw	168
  2817  39A0  3468               	retlw	104
  2818  39A1  3478               	retlw	120
  2819  39A2  34B8               	retlw	184
  2820  39A3  34B9               	retlw	185
  2821  39A4  3479               	retlw	121
  2822  39A5  34BB               	retlw	187
  2823  39A6  347B               	retlw	123
  2824  39A7  347A               	retlw	122
  2825  39A8  34BA               	retlw	186
  2826  39A9  34BE               	retlw	190
  2827  39AA  347E               	retlw	126
  2828  39AB  347F               	retlw	127
  2829  39AC  34BF               	retlw	191
  2830  39AD  347D               	retlw	125
  2831  39AE  34BD               	retlw	189
  2832  39AF  34BC               	retlw	188
  2833  39B0  347C               	retlw	124
  2834  39B1  34B4               	retlw	180
  2835  39B2  3474               	retlw	116
  2836  39B3  3475               	retlw	117
  2837  39B4  34B5               	retlw	181
  2838  39B5  3477               	retlw	119
  2839  39B6  34B7               	retlw	183
  2840  39B7  34B6               	retlw	182
  2841  39B8  3476               	retlw	118
  2842  39B9  3472               	retlw	114
  2843  39BA  34B2               	retlw	178
  2844  39BB  34B3               	retlw	179
  2845  39BC  3473               	retlw	115
  2846  39BD  34B1               	retlw	177
  2847  39BE  3471               	retlw	113
  2848  39BF  3470               	retlw	112
  2849  39C0  34B0               	retlw	176
  2850  39C1  3450               	retlw	80
  2851  39C2  3490               	retlw	144
  2852  39C3  3491               	retlw	145
  2853  39C4  3451               	retlw	81
  2854  39C5  3493               	retlw	147
  2855  39C6  3453               	retlw	83
  2856  39C7  3452               	retlw	82
  2857  39C8  3492               	retlw	146
  2858  39C9  3496               	retlw	150
  2859  39CA  3456               	retlw	86
  2860  39CB  3457               	retlw	87
  2861  39CC  3497               	retlw	151
  2862  39CD  3455               	retlw	85
  2863  39CE  3495               	retlw	149
  2864  39CF  3494               	retlw	148
  2865  39D0  3454               	retlw	84
  2866  39D1  349C               	retlw	156
  2867  39D2  345C               	retlw	92
  2868  39D3  345D               	retlw	93
  2869  39D4  349D               	retlw	157
  2870  39D5  345F               	retlw	95
  2871  39D6  349F               	retlw	159
  2872  39D7  349E               	retlw	158
  2873  39D8  345E               	retlw	94
  2874  39D9  345A               	retlw	90
  2875  39DA  349A               	retlw	154
  2876  39DB  349B               	retlw	155
  2877  39DC  345B               	retlw	91
  2878  39DD  3499               	retlw	153
  2879  39DE  3459               	retlw	89
  2880  39DF  3458               	retlw	88
  2881  39E0  3498               	retlw	152
  2882  39E1  3488               	retlw	136
  2883  39E2  3448               	retlw	72
  2884  39E3  3449               	retlw	73
  2885  39E4  3489               	retlw	137
  2886  39E5  344B               	retlw	75
  2887  39E6  348B               	retlw	139
  2888  39E7  348A               	retlw	138
  2889  39E8  344A               	retlw	74
  2890  39E9  344E               	retlw	78
  2891  39EA  348E               	retlw	142
  2892  39EB  348F               	retlw	143
  2893  39EC  344F               	retlw	79
  2894  39ED  348D               	retlw	141
  2895  39EE  344D               	retlw	77
  2896  39EF  344C               	retlw	76
  2897  39F0  348C               	retlw	140
  2898  39F1  3444               	retlw	68
  2899  39F2  3484               	retlw	132
  2900  39F3  3485               	retlw	133
  2901  39F4  3445               	retlw	69
  2902  39F5  3487               	retlw	135
  2903  39F6  3447               	retlw	71
  2904  39F7  3446               	retlw	70
  2905  39F8  3486               	retlw	134
  2906  39F9  3482               	retlw	130
  2907  39FA  3442               	retlw	66
  2908  39FB  3443               	retlw	67
  2909  39FC  3483               	retlw	131
  2910  39FD  3441               	retlw	65
  2911  39FE  3481               	retlw	129
  2912  39FF  3480               	retlw	128
  2913  3A00  3440               	retlw	64
  2914  3A01                     __end_of_CRCLo:	
  2915  0011                     _PIR1bits	set	17
  2916  000D                     _PORTBbits	set	13
  2917  000E                     _PORTCbits	set	14
  2918  001B                     _PR2	set	27
  2919  0018                     _T1CON	set	24
  2920  0019                     _T1GCONbits	set	25
  2921  001C                     _T2CONbits	set	28
  2922  0015                     _TMR0	set	21
  2923  0017                     _TMR1H	set	23
  2924  0016                     _TMR1L	set	22
  2925  0018                     _CARRY	set	24
  2926  005F                     _GIE	set	95
  2927  005B                     _IOCIE	set	91
  2928  0058                     _IOCIF	set	88
  2929  005E                     _PEIE	set	94
  2930  0067                     _RA7	set	103
  2931  0071                     _RC1	set	113
  2932  008D                     _RCIF	set	141
  2933  005D                     _TMR0IE	set	93
  2934  005A                     _TMR0IF	set	90
  2935  0088                     _TMR1IF	set	136
  2936  00C0                     _TMR1ON	set	192
  2937  0089                     _TMR2IF	set	137
  2938  00E2                     _TMR2ON	set	226
  2939  0099                     _TMR4IF	set	153
  2940  009B                     _TMR6IF	set	155
  2941  008C                     _TXIF	set	140
  2942  009D                     _ADCON0bits	set	157
  2943  009E                     _ADCON1bits	set	158
  2944  009B                     _ADRESL	set	155
  2945  0095                     _OPTION_REGbits	set	149
  2946  0099                     _OSCCON	set	153
  2947  0091                     _PIE1bits	set	145
  2948  008C                     _TRISAbits	set	140
  2949  008D                     _TRISBbits	set	141
  2950  008E                     _TRISCbits	set	142
  2951  0097                     _WDTCONbits	set	151
  2952  009C                     _ADRESH	set	156
  2953  04AB                     _PSA	set	1195
  2954  048D                     _RCIE	set	1165
  2955  04AD                     _TMR0CS	set	1197
  2956  0488                     _TMR1IE	set	1160
  2957  048C                     _TXIE	set	1164
  2958  011D                     _APFCONbits	set	285
  2959  0117                     _FVRCONbits	set	279
  2960  010C                     _LATAbits	set	268
  2961  010E                     _LATCbits	set	270
  2962  0191                     _EEADR	set	401
  2963  018C                     _ANSELA	set	396
  2964  018D                     _ANSELB	set	397
  2965  019F                     _BAUDCON	set	415
  2966  0195                     _EECON1	set	405
  2967  0196                     _EECON2	set	406
  2968  0193                     _EEDATA	set	403
  2969  0199                     _RCREG	set	409
  2970  019D                     _RCSTA	set	413
  2971  019D                     _RCSTAbits	set	413
  2972  019C                     _SP1BRGH	set	412
  2973  019B                     _SP1BRGL	set	411
  2974  019A                     _TXREG	set	410
  2975  019E                     _TXSTA	set	414
  2976  019E                     _TXSTAbits	set	414
  2977  0C60                     _ANSA0	set	3168
  2978  0C61                     _ANSA1	set	3169
  2979  0C62                     _ANSA2	set	3170
  2980  0C63                     _ANSA3	set	3171
  2981  0C65                     _ANSA5	set	3173
  2982  0C6A                     _ANSB2	set	3178
  2983  0C6B                     _ANSB3	set	3179
  2984  0C6C                     _ANSB4	set	3180
  2985  0CA8                     _RD	set	3240
  2986  0CA9                     _WR	set	3241
  2987  0CAA                     _WREN	set	3242
  2988  0293                     _CCP1CONbits	set	659
  2989  0291                     _CCPR1L	set	657
  2990  029E                     _CCPTMRS0bits	set	670
  2991  029F                     _CCPTMRS1bits	set	671
  2992  0313                     _CCP3CONbits	set	787
  2993  031E                     _CCP5CONbits	set	798
  2994  0311                     _CCPR3L	set	785
  2995  031C                     _CCPR5L	set	796
  2996  0396                     _IOCBFbits	set	918
  2997  0395                     _IOCBNbits	set	917
  2998  0394                     _IOCBPbits	set	916
  2999  1CB0                     _IOCBF0	set	7344
  3000  1CB1                     _IOCBF1	set	7345
  3001  1CB6                     _IOCBF6	set	7350
  3002  1CB7                     _IOCBF7	set	7351
  3003  0416                     _PR4	set	1046
  3004  041D                     _PR6	set	1053
  3005  0417                     _T4CONbits	set	1047
  3006  041E                     _T6CONbits	set	1054
  3007  20BA                     _TMR4ON	set	8378
  3008  20F2                     _TMR6ON	set	8434
  3009                           
  3010                           ; #config settings
  3011  0000                     
  3012                           	psect	cinit
  3013  0929                     start_initialization:	
  3014  0929                     __initialization:		;BIGRAM
  3015                           
  3016                           ; Clear objects allocated to BIGRAM
  3017  0929  3070               	movlw	112
  3018  092A  0084               	movwf	4
  3019  092B  3023               	movlw	35
  3020  092C  0085               	movwf	5
  3021  092D  3080               	movlw	128
  3022  092E  00FE               	movwf	126
  3023  092F  01FF               	clrf	127
  3024  0930  3188  205A  3189   	fcall	clear_ram0
  3025  0933  30A0               	movlw	low __pbssBANK1
  3026                           
  3027                           ; Clear objects allocated to COMMON
  3028  0934  01FC               	clrf	__pbssCOMMON& (0+127)
  3029  0935  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3030                           
  3031                           ; Clear objects allocated to BANK0
  3032  0936  01E8               	clrf	__pbssBANK0& (0+127)
  3033  0937  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  3034  0938  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  3035  0939  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  3036                           
  3037                           ; Clear objects allocated to BANK1
  3038  093A  0084               	movwf	4
  3039  093B  3000               	movlw	high __pbssBANK1
  3040  093C  0085               	movwf	5
  3041  093D  3029               	movlw	41
  3042  093E  00FE               	movwf	126
  3043  093F  3000               	movlw	0
  3044  0940  00FF               	movwf	127
  3045  0941  3188  205A  3189   	fcall	clear_ram0
  3046                           
  3047                           ; Clear objects allocated to BANK2
  3048  0944  3020               	movlw	low __pbssBANK2
  3049  0945  0084               	movwf	4
  3050  0946  3001               	movlw	high __pbssBANK2
  3051  0947  0085               	movwf	5
  3052  0948  303A               	movlw	58
  3053  0949  00FE               	movwf	126
  3054  094A  3000               	movlw	0
  3055  094B  00FF               	movwf	127
  3056  094C  3188  205A  3189   	fcall	clear_ram0
  3057                           
  3058                           ; Clear objects allocated to BANK3
  3059  094F  30A0               	movlw	low __pbssBANK3
  3060  0950  0084               	movwf	4
  3061  0951  3001               	movlw	high __pbssBANK3
  3062  0952  0085               	movwf	5
  3063  0953  3032               	movlw	50
  3064  0954  00FE               	movwf	126
  3065  0955  3000               	movlw	0
  3066  0956  00FF               	movwf	127
  3067  0957  3188  205A  3189   	fcall	clear_ram0
  3068                           
  3069                           ; Clear objects allocated to BANK4
  3070  095A  3020               	movlw	low __pbssBANK4
  3071  095B  0084               	movwf	4
  3072  095C  3002               	movlw	high __pbssBANK4
  3073  095D  0085               	movwf	5
  3074  095E  303A               	movlw	58
  3075  095F  00FE               	movwf	126
  3076  0960  3000               	movlw	0
  3077  0961  00FF               	movwf	127
  3078  0962  3188  205A  3189   	fcall	clear_ram0
  3079                           
  3080                           ; Clear objects allocated to BANK5
  3081  0965  30A0               	movlw	low __pbssBANK5
  3082  0966  0084               	movwf	4
  3083  0967  3002               	movlw	high __pbssBANK5
  3084  0968  0085               	movwf	5
  3085  0969  3040               	movlw	64
  3086  096A  00FE               	movwf	126
  3087  096B  3000               	movlw	0
  3088  096C  00FF               	movwf	127
  3089  096D  3188  205A  3189   	fcall	clear_ram0
  3090                           
  3091                           ; Clear objects allocated to BANK6
  3092  0970  3020               	movlw	low __pbssBANK6
  3093  0971  0084               	movwf	4
  3094  0972  3003               	movlw	high __pbssBANK6
  3095  0973  0085               	movwf	5
  3096  0974  3015               	movlw	21
  3097  0975  00FE               	movwf	126
  3098  0976  3000               	movlw	0
  3099  0977  00FF               	movwf	127
  3100  0978  3188  205A  3189   	fcall	clear_ram0
  3101                           
  3102                           ; Clear objects allocated to BANK7
  3103  097B  30A0               	movlw	low __pbssBANK7
  3104  097C  0084               	movwf	4
  3105  097D  3003               	movlw	high __pbssBANK7
  3106  097E  0085               	movwf	5
  3107  097F  3050               	movlw	80
  3108  0980  00FE               	movwf	126
  3109  0981  3000               	movlw	0
  3110  0982  00FF               	movwf	127
  3111  0983  3188  205A  3189   	fcall	clear_ram0
  3112                           
  3113                           ; Clear objects allocated to BANK8
  3114  0986  3020               	movlw	low __pbssBANK8
  3115  0987  0084               	movwf	4
  3116  0988  3004               	movlw	high __pbssBANK8
  3117  0989  0085               	movwf	5
  3118  098A  3050               	movlw	80
  3119  098B  00FE               	movwf	126
  3120  098C  3000               	movlw	0
  3121  098D  00FF               	movwf	127
  3122  098E  3188  205A  3189   	fcall	clear_ram0
  3123                           
  3124                           ; Initialize objects allocated to BANK1
  3125  0991  3066               	movlw	low __pidataBANK1
  3126  0992  0084               	movwf	4
  3127  0993  3088               	movlw	(high __pidataBANK1)| (0+128)
  3128  0994  0085               	movwf	5
  3129  0995  30C9               	movlw	low __pdataBANK1
  3130  0996  0086               	movwf	6
  3131  0997  3000               	movlw	high __pdataBANK1
  3132  0998  0087               	movwf	7
  3133  0999  3000               	movlw	0
  3134  099A  00FF               	movwf	127
  3135  099B  3014               	movlw	20
  3136  099C  3188  204E  3189   	fcall	init_ram
  3137                           
  3138                           ; Initialize objects allocated to BANK2
  3139  099F  30A4               	movlw	low __pidataBANK2
  3140  09A0  0084               	movwf	4
  3141  09A1  3088               	movlw	(high __pidataBANK2)| (0+128)
  3142  09A2  0085               	movwf	5
  3143  09A3  305A               	movlw	low __pdataBANK2
  3144  09A4  0086               	movwf	6
  3145  09A5  3001               	movlw	high __pdataBANK2
  3146  09A6  0087               	movwf	7
  3147  09A7  3000               	movlw	0
  3148  09A8  00FF               	movwf	127
  3149  09A9  3016               	movlw	22
  3150  09AA  3188  204E  3189   	fcall	init_ram
  3151                           
  3152                           ; Initialize objects allocated to BANK3
  3153  09AD  30BA               	movlw	low __pidataBANK3
  3154  09AE  0084               	movwf	4
  3155  09AF  3088               	movlw	(high __pidataBANK3)| (0+128)
  3156  09B0  0085               	movwf	5
  3157  09B1  30D2               	movlw	low __pdataBANK3
  3158  09B2  0086               	movwf	6
  3159  09B3  3001               	movlw	high __pdataBANK3
  3160  09B4  0087               	movwf	7
  3161  09B5  3000               	movlw	0
  3162  09B6  00FF               	movwf	127
  3163  09B7  301E               	movlw	30
  3164  09B8  3188  204E  3189   	fcall	init_ram
  3165                           
  3166                           ; Initialize objects allocated to BANK4
  3167  09BB  308F               	movlw	low __pidataBANK4
  3168  09BC  0084               	movwf	4
  3169  09BD  3088               	movlw	(high __pidataBANK4)| (0+128)
  3170  09BE  0085               	movwf	5
  3171  09BF  305A               	movlw	low __pdataBANK4
  3172  09C0  0086               	movwf	6
  3173  09C1  3002               	movlw	high __pdataBANK4
  3174  09C2  0087               	movwf	7
  3175  09C3  3000               	movlw	0
  3176  09C4  00FF               	movwf	127
  3177  09C5  3015               	movlw	21
  3178  09C6  3188  204E  3189   	fcall	init_ram
  3179                           
  3180                           ; Initialize objects allocated to BANK5
  3181  09C9  0025               	movlb	5	; select bank5
  3182                           
  3183                           ;initializer for _ird_data
  3184  09CA  30BF               	movlw	191
  3185  09CB  00E6               	movwf	__pdataBANK5& (0+127)
  3186  09CC  3040               	movlw	64
  3187  09CD  00E7               	movwf	(__pdataBANK5+1)& (0+127)
  3188  09CE  30ED               	movlw	237
  3189  09CF  00E8               	movwf	(__pdataBANK5+2)& (0+127)
  3190  09D0  3010               	movlw	16
  3191  09D1  00E9               	movwf	(__pdataBANK5+3)& (0+127)
  3192  09D2                     end_of_initialization:	
  3193                           ;End of C runtime variable initialization code
  3194                           
  3195  09D2                     __end_of__initialization:	
  3196  09D2  0020               	movlb	0
  3197  09D3  29D4               	ljmp	_main	;jump to C main() function
  3198  09D4                     __pmaintext:	
  3199                           ; 0 bytes @ 0x48
  3200 ;;
  3201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3202 ;;
  3203 ;; *************** function _main *****************
  3204 ;; Defined at:
  3205 ;;		line 370 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2  993[COMMON] int 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 17F/0
  3216 ;;		On exit  : 1F/2
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels required when called:    8
  3225 ;; This function calls:
  3226 ;;		_Key_Menu
  3227 ;;		_application_init
  3228 ;;		_driver_init
  3229 ;;		_handle_ad_loop
  3230 ;;		_handle_task_process
  3231 ;;		_handle_uart_rx_buf
  3232 ;;		_middle_init
  3233 ;;		_scan_key_value
  3234 ;; This function is called by:
  3235 ;;		Startup code after reset
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _main
  3241  09D4                     _main:	
  3242                           
  3243                           ;main.c: 372: driver_init();
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _main: [allreg]
  3247  09D4  23C4  3189         	fcall	_driver_init
  3248                           
  3249                           ;main.c: 373: middle_init();
  3250  09D6  244E  3189         	fcall	_middle_init
  3251                           
  3252                           ;main.c: 374: application_init();
  3253  09D8  2230  3189         	fcall	_application_init
  3254  09DA                     l994:	
  3255                           ;main.c: 377: while(1)
  3256                           
  3257  09DA  0064               	clrwdt	;# 
  3258                           
  3259                           ;main.c: 382: if(handle_scan_key_flag==0x01)
  3260  09DB  0022               	movlb	2	; select bank2
  3261  09DC  0B33               	decfsz	_handle_scan_key_flag^(0+256),w
  3262  09DD  29E3               	goto	l22696
  3263                           
  3264                           ;main.c: 383: {
  3265                           ;main.c: 384: scan_key_value();
  3266  09DE  31A8  2045  3189   	fcall	_scan_key_value
  3267                           
  3268                           ;main.c: 386: handle_scan_key_flag=0x00;
  3269  09E1  0022               	movlb	2	; select bank2
  3270  09E2  01B3               	clrf	_handle_scan_key_flag^(0+256)
  3271  09E3                     l22696:	
  3272                           
  3273                           ;main.c: 387: }
  3274                           ;main.c: 389: if(ird_receive_flag==0x01)
  3275  09E3  0B38               	decfsz	_ird_receive_flag^(0+256),w
  3276  09E4  2A05               	goto	l22712
  3277                           
  3278                           ;main.c: 390: {
  3279                           ;main.c: 391: Key_Menu(ird_data);
  3280  09E5  0025               	movlb	5	; select bank5
  3281  09E6  0869               	movf	(_ird_data+3)^(0+640),w
  3282  09E7  0020               	movlb	0	; select bank0
  3283  09E8  00E3               	movwf	Key_Menu@key_value+3
  3284  09E9  0025               	movlb	5	; select bank5
  3285  09EA  0868               	movf	(_ird_data+2)^(0+640),w
  3286  09EB  0020               	movlb	0	; select bank0
  3287  09EC  00E2               	movwf	Key_Menu@key_value+2
  3288  09ED  0025               	movlb	5	; select bank5
  3289  09EE  0867               	movf	(_ird_data+1)^(0+640),w
  3290  09EF  0020               	movlb	0	; select bank0
  3291  09F0  00E1               	movwf	Key_Menu@key_value+1
  3292  09F1  0025               	movlb	5	; select bank5
  3293  09F2  0866               	movf	_ird_data^(0+640),w
  3294  09F3  0020               	movlb	0	; select bank0
  3295  09F4  00E0               	movwf	Key_Menu@key_value
  3296  09F5  3199  21A6  3189   	fcall	_Key_Menu
  3297                           
  3298                           ;main.c: 393: receive_bit_count=0x00;
  3299  09F8  0022               	movlb	2	; select bank2
  3300  09F9  01CD               	clrf	_receive_bit_count^(0+256)
  3301                           
  3302                           ;main.c: 395: ird_status=0x00;
  3303  09FA  01BA               	clrf	_ird_status^(0+256)
  3304                           
  3305                           ;main.c: 397: ird_data=0x00;
  3306  09FB  0025               	movlb	5	; select bank5
  3307  09FC  01E6               	clrf	_ird_data^(0+640)
  3308  09FD  01E7               	clrf	(_ird_data+1)^(0+640)
  3309  09FE  01E8               	clrf	(_ird_data+2)^(0+640)
  3310  09FF  01E9               	clrf	(_ird_data+3)^(0+640)
  3311                           
  3312                           ;main.c: 399: TMR0=0;
  3313  0A00  0020               	movlb	0	; select bank0
  3314  0A01  0195               	clrf	21	;volatile
  3315                           
  3316                           ;main.c: 401: TMR0IF = 0;
  3317  0A02  110B               	bcf	11,2	;volatile
  3318                           
  3319                           ;main.c: 403: ird_receive_flag=0x00;
  3320  0A03  0022               	movlb	2	; select bank2
  3321  0A04  01B8               	clrf	_ird_receive_flag^(0+256)
  3322  0A05                     l22712:	
  3323                           
  3324                           ;main.c: 405: }
  3325                           ;main.c: 407: handle_ad_loop();
  3326  0A05  3182  22B3  3189   	fcall	_handle_ad_loop
  3327                           
  3328                           ;main.c: 409: handle_task_process();
  3329  0A08  319A  22B3  3189   	fcall	_handle_task_process
  3330                           
  3331                           ;main.c: 411: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3332  0A0B  0023               	movlb	3	; select bank3
  3333  0A0C  191D               	btfsc	29,2	;volatile
  3334  0A0D  2A10               	goto	l999
  3335  0A0E  1C9D               	btfss	29,1	;volatile
  3336  0A0F  2A18               	goto	l22720
  3337  0A10                     l999:	
  3338                           
  3339                           ;main.c: 412: {
  3340                           ;main.c: 413: RCSTAbits.CREN = 0x00;
  3341  0A10  121D               	bcf	29,4	;volatile
  3342                           
  3343                           ;main.c: 414: RCSTAbits.SPEN = 0x00;
  3344  0A11  139D               	bcf	29,7	;volatile
  3345                           
  3346                           ;main.c: 415: __nop();
  3347  0A12  0000               	nop
  3348                           
  3349                           ;main.c: 416: __nop();
  3350  0A13  0000               	nop
  3351                           
  3352                           ;main.c: 417: __nop();
  3353  0A14  0000               	nop
  3354                           
  3355                           ;main.c: 418: RCSTAbits.CREN = 0x01;
  3356  0A15  0023               	movlb	3	; select bank3
  3357  0A16  161D               	bsf	29,4	;volatile
  3358                           
  3359                           ;main.c: 419: RCSTAbits.SPEN = 0x01;
  3360  0A17  179D               	bsf	29,7	;volatile
  3361  0A18                     l22720:	
  3362                           
  3363                           ;main.c: 420: }
  3364                           ;main.c: 422: if(uart1_receive_flag==TRUE)
  3365  0A18  0022               	movlb	2	; select bank2
  3366  0A19  0B54               	decfsz	_uart1_receive_flag^(0+256),w
  3367  0A1A  29DA               	goto	l994
  3368                           
  3369                           ;main.c: 423: {
  3370                           ;main.c: 424: handle_uart_rx_buf();
  3371  0A1B  3190  2015  3189   	fcall	_handle_uart_rx_buf
  3372                           
  3373                           ;main.c: 426: if (RCSTAbits.FERR || RCSTAbits.OERR)
  3374  0A1E  0023               	movlb	3	; select bank3
  3375  0A1F  191D               	btfsc	29,2	;volatile
  3376  0A20  2A23               	goto	l1003
  3377  0A21  1C9D               	btfss	29,1	;volatile
  3378  0A22  2A2B               	goto	l22728
  3379  0A23                     l1003:	
  3380                           
  3381                           ;main.c: 427: {
  3382                           ;main.c: 428: RCSTAbits.CREN = 0x00;
  3383  0A23  121D               	bcf	29,4	;volatile
  3384                           
  3385                           ;main.c: 429: RCSTAbits.SPEN = 0x00;
  3386  0A24  139D               	bcf	29,7	;volatile
  3387                           
  3388                           ;main.c: 430: __nop();
  3389  0A25  0000               	nop
  3390                           
  3391                           ;main.c: 431: __nop();
  3392  0A26  0000               	nop
  3393                           
  3394                           ;main.c: 432: __nop();
  3395  0A27  0000               	nop
  3396                           
  3397                           ;main.c: 433: RCSTAbits.CREN = 0x01;
  3398  0A28  0023               	movlb	3	; select bank3
  3399  0A29  161D               	bsf	29,4	;volatile
  3400                           
  3401                           ;main.c: 434: RCSTAbits.SPEN = 0x01;
  3402  0A2A  179D               	bsf	29,7	;volatile
  3403  0A2B                     l22728:	
  3404                           
  3405                           ;main.c: 435: }
  3406                           ;main.c: 437: uart1_receive_byte_count=0x00;
  3407  0A2B  0021               	movlb	1	; select bank1
  3408  0A2C  01C5               	clrf	_uart1_receive_byte_count^(0+128)
  3409                           
  3410                           ;main.c: 439: uart1_receive_flag=FALSE;
  3411  0A2D  0022               	movlb	2	; select bank2
  3412  0A2E  01D4               	clrf	_uart1_receive_flag^(0+256)
  3413  0A2F  29DA               	goto	l994
  3414  0A30                     __end_of_main:	
  3415  0A30                     __ptext35:	
  3416 ;; *************** function _application_init *****************
  3417 ;; Defined at:
  3418 ;;		line 273 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/7
  3429 ;;		On exit  : 1F/4
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;Total ram usage:        3 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    4
  3439 ;; This function calls:
  3440 ;;		___ftadd
  3441 ;;		___ftdiv
  3442 ;;		___ftmul
  3443 ;;		_pid_init
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _application_init
  3451  0A30                     _application_init:	
  3452                           
  3453                           ;main.c: 276: TMR1ON =1;
  3454                           
  3455                           ;incstack = 0
  3456                           ; Regs used in _application_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3457  0A30  0020               	movlb	0	; select bank0
  3458  0A31  1418               	bsf	24,0	;volatile
  3459                           
  3460                           ;main.c: 278: system_check_time=0x01;
  3461  0A32  0022               	movlb	2	; select bank2
  3462  0A33  3020               	movlw	low _PID_CC_charge
  3463  0A34  01D1               	clrf	_system_check_time^(0+256)
  3464  0A35  0AD1               	incf	_system_check_time^(0+256),f
  3465                           
  3466                           ;main.c: 280: open_an0_time=0x01;
  3467  0A36  01C1               	clrf	_open_an0_time^(0+256)
  3468  0A37  0AC1               	incf	_open_an0_time^(0+256),f
  3469                           
  3470                           ;main.c: 282: open_an1_time=0x01;
  3471  0A38  01C3               	clrf	_open_an1_time^(0+256)
  3472  0A39  0AC3               	incf	_open_an1_time^(0+256),f
  3473                           
  3474                           ;main.c: 284: open_an2_time=0x01;
  3475  0A3A  01C4               	clrf	_open_an2_time^(0+256)
  3476  0A3B  0AC4               	incf	_open_an2_time^(0+256),f
  3477                           
  3478                           ;main.c: 286: open_an3_time=0x01;
  3479  0A3C  01C5               	clrf	_open_an3_time^(0+256)
  3480  0A3D  0AC5               	incf	_open_an3_time^(0+256),f
  3481                           
  3482                           ;main.c: 288: open_an4_time=0x01;
  3483  0A3E  01C6               	clrf	_open_an4_time^(0+256)
  3484  0A3F  0AC6               	incf	_open_an4_time^(0+256),f
  3485                           
  3486                           ;main.c: 290: open_an9_time=0x01;
  3487  0A40  01C8               	clrf	_open_an9_time^(0+256)
  3488  0A41  0AC8               	incf	_open_an9_time^(0+256),f
  3489                           
  3490                           ;main.c: 292: open_an8_time=0x01;
  3491  0A42  01C7               	clrf	_open_an8_time^(0+256)
  3492  0A43  0AC7               	incf	_open_an8_time^(0+256),f
  3493                           
  3494                           ;main.c: 294: open_an11_time=0x01;
  3495  0A44  01C2               	clrf	_open_an11_time^(0+256)
  3496  0A45  0AC2               	incf	_open_an11_time^(0+256),f
  3497                           
  3498                           ;main.c: 298: pid_init ( &PID_CC_charge);
  3499  0A46  0020               	movlb	0	; select bank0
  3500  0A47  00AB               	movwf	pid_init@pp
  3501  0A48  3003               	movlw	high _PID_CC_charge
  3502  0A49  00AC               	movwf	pid_init@pp+1
  3503  0A4A  319D  25F6  3189   	fcall	_pid_init
  3504                           
  3505                           ;main.c: 300: pid_init ( &PID_CV_charge);
  3506  0A4D  319F  27D4  3189   	fcall	PL366	;call to abstracted procedure
  3507  0A50  319D  25F6  3189   	fcall	_pid_init
  3508                           
  3509                           ;main.c: 302: pid_init ( &PID_CC_discharge);
  3510  0A53  30BD               	movlw	low _PID_CC_discharge
  3511  0A54  00AB               	movwf	pid_init@pp
  3512  0A55  3001               	movlw	high _PID_CC_discharge
  3513  0A56  00AC               	movwf	pid_init@pp+1
  3514  0A57  319D  25F6  3189   	fcall	_pid_init
  3515                           
  3516                           ;main.c: 304: pid_init ( &PID_CC2_discharge);
  3517  0A5A  3045               	movlw	low _PID_CC2_discharge
  3518  0A5B  00AB               	movwf	pid_init@pp
  3519  0A5C  3002               	movlw	high _PID_CC2_discharge
  3520  0A5D  00AC               	movwf	pid_init@pp+1
  3521  0A5E  319D  25F6  3189   	fcall	_pid_init
  3522                           
  3523                           ;main.c: 309: PID_CC_charge.Proportion = 0.001;
  3524                           
  3525                           ;main.c: 311: PID_CC_charge.Integral = 0;
  3526                           
  3527                           ;main.c: 313: PID_CC_charge.Derivative = 0;
  3528                           
  3529                           ;main.c: 315: PID_CC_charge.SetPoint = 5.0*15.0;
  3530                           
  3531                           ;main.c: 320: PID_CV_charge.Proportion = 0.001;
  3532                           
  3533                           ;main.c: 322: PID_CV_charge.Integral = 0;
  3534                           
  3535                           ;main.c: 324: PID_CV_charge.Derivative = 0;
  3536                           
  3537                           ;main.c: 326: PID_CV_charge.SetPoint = dianchi_cv_level+1;
  3538  0A61  319E  26D6  3189   	fcall	PL16	;call to abstracted procedure
  3539  0A64  230F               	fcall	___ftadd
  3540  0A65  319F  2764  3189   	fcall	PL124	;call to abstracted procedure
  3541                           
  3542                           ;main.c: 330: PID_CC_discharge.Proportion = 0.001;
  3543                           
  3544                           ;main.c: 332: PID_CC_discharge.Integral = 0;
  3545                           
  3546                           ;main.c: 334: PID_CC_discharge.Derivative = 0;
  3547                           
  3548                           ;main.c: 336: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
  3549  0A68  319F  2717  3189   	fcall	PL24	;call to abstracted procedure
  3550  0A6B  3198  2035  3189   	fcall	PL2	;call to abstracted procedure
  3551  0A6E  319D  258F  3189   	fcall	___ftdiv
  3552  0A71  3197  2707  3189   	fcall	PL48	;call to abstracted procedure
  3553  0A74  22AA               	fcall	___ftmul
  3554  0A75  3198  208C  3189   	fcall	PL38	;call to abstracted procedure
  3555                           
  3556                           ;main.c: 339: PID_CC2_discharge.Proportion = 0.001;
  3557                           
  3558                           ;main.c: 341: PID_CC2_discharge.Integral = 0;
  3559                           
  3560                           ;main.c: 343: PID_CC2_discharge.Derivative = 0;
  3561                           
  3562                           ;main.c: 345: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
  3563  0A78  319F  2708  3189   	fcall	PL18	;call to abstracted procedure
  3564  0A7B  3198  2057  3189   	fcall	PL6	;call to abstracted procedure
  3565  0A7E  3198  2035  3189   	fcall	PL2	;call to abstracted procedure
  3566  0A81  319D  258F  3189   	fcall	___ftdiv
  3567  0A84  3197  2707  3189   	fcall	PL48	;call to abstracted procedure
  3568  0A87  22AA  3189         	fcall	___ftmul
  3569  0A89  0833               	movf	?___ftmul,w
  3570  0A8A  00D1               	movwf	_application_init$3191
  3571  0A8B  0834               	movf	?___ftmul+1,w
  3572  0A8C  00D2               	movwf	_application_init$3191+1
  3573  0A8D  0835               	movf	?___ftmul+2,w
  3574  0A8E  00D3               	movwf	_application_init$3191+2
  3575                           
  3576                           ;main.c: 345: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
  3577  0A8F  309A               	movlw	154
  3578  0A90  00B3               	movwf	___ftmul@f1
  3579  0A91  3099               	movlw	153
  3580  0A92  00B4               	movwf	___ftmul@f1+1
  3581  0A93  303E               	movlw	62
  3582  0A94  00B5               	movwf	___ftmul@f1+2
  3583  0A95  0851               	movf	_application_init$3191,w
  3584  0A96  00B6               	movwf	___ftmul@f2
  3585  0A97  0852               	movf	_application_init$3191+1,w
  3586  0A98  00B7               	movwf	___ftmul@f2+1
  3587  0A99  0853               	movf	_application_init$3191+2,w
  3588  0A9A  00B8               	movwf	___ftmul@f2+2
  3589  0A9B  22AA               	fcall	___ftmul
  3590  0A9C  3198  2098         	fcall	PL40	;call to abstracted procedure
  3591                           
  3592                           ;main.c: 347: open_discharge_time=0x00;
  3593  0A9E  0022               	movlb	2	; select bank2
  3594  0A9F  01C9               	clrf	_open_discharge_time^(0+256)
  3595                           
  3596                           ;main.c: 349: ms_cnt=0x00;
  3597  0AA0  0024               	movlb	4	; select bank4
  3598  0AA1  01C1               	clrf	_ms_cnt^(0+512)
  3599  0AA2  01C2               	clrf	(_ms_cnt+1)^(0+512)
  3600                           
  3601                           ;main.c: 350: se_cnt=0x00;
  3602  0AA3  01C3               	clrf	_se_cnt^(0+512)
  3603  0AA4  01C4               	clrf	(_se_cnt+1)^(0+512)
  3604                           
  3605                           ;main.c: 351: mi_cnt=0x00;
  3606  0AA5  01BF               	clrf	_mi_cnt^(0+512)
  3607  0AA6  01C0               	clrf	(_mi_cnt+1)^(0+512)
  3608                           
  3609                           ;main.c: 352: ho_cnt=0x00;
  3610  0AA7  01FC               	clrf	_ho_cnt
  3611  0AA8  01FD               	clrf	_ho_cnt+1
  3612  0AA9  0008               	return
  3613  0AAA                     __end_of_application_init:	
  3614  0AAA                     __ptext49:	
  3615 ;; *************** function ___ftmul *****************
  3616 ;; Defined at:
  3617 ;;		line 51 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  f1              3   19[BANK0 ] float 
  3620 ;;  f2              3   22[BANK0 ] float 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  f3_as_produc    3   29[BANK0 ] unsigned um
  3623 ;;  sign            1   33[BANK0 ] unsigned char 
  3624 ;;  cntr            1   32[BANK0 ] unsigned char 
  3625 ;;  exp             1   28[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  3   19[BANK0 ] float 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 1F/0
  3632 ;;		On exit  : 1F/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;Total ram usage:       15 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    3
  3642 ;; This function calls:
  3643 ;;		___ftpack
  3644 ;; This function is called by:
  3645 ;;		_read_param_eeprom
  3646 ;;		_auto_system
  3647 ;;		_application_init
  3648 ;;		_pid_calc
  3649 ;;		_pid_calc_2
  3650 ;;		_handle_ad_loop
  3651 ;;		_handle_task_process
  3652 ;;		_handle_uart_rx_buf
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function ___ftmul
  3658  0AAA                     ___ftmul:	
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3662  0AAA  0833               	movf	___ftmul@f1,w
  3663  0AAB  00B9               	movwf	??___ftmul
  3664  0AAC  0834               	movf	___ftmul@f1+1,w
  3665  0AAD  00BA               	movwf	??___ftmul+1
  3666  0AAE  0835               	movf	___ftmul@f1+2,w
  3667  0AAF  00BB               	movwf	??___ftmul+2
  3668  0AB0  1003               	clrc
  3669  0AB1  0D3A               	rlf	??___ftmul+1,w
  3670  0AB2  0D3B               	rlf	??___ftmul+2,w
  3671  0AB3  00BC               	movwf	___ftmul@exp
  3672  0AB4  08BC               	movf	___ftmul@exp,f
  3673  0AB5  1D03               	skipz
  3674  0AB6  2ABB               	goto	l25174
  3675  0AB7  01B3               	clrf	?___ftmul
  3676  0AB8  01B4               	clrf	?___ftmul+1
  3677  0AB9  01B5               	clrf	?___ftmul+2
  3678  0ABA  0008               	return
  3679  0ABB                     l25174:	
  3680  0ABB  0836               	movf	___ftmul@f2,w
  3681  0ABC  00B9               	movwf	??___ftmul
  3682  0ABD  0837               	movf	___ftmul@f2+1,w
  3683  0ABE  00BA               	movwf	??___ftmul+1
  3684  0ABF  0838               	movf	___ftmul@f2+2,w
  3685  0AC0  00BB               	movwf	??___ftmul+2
  3686  0AC1  1003               	clrc
  3687  0AC2  0D3A               	rlf	??___ftmul+1,w
  3688  0AC3  0D3B               	rlf	??___ftmul+2,w
  3689  0AC4  00C1               	movwf	___ftmul@sign
  3690  0AC5  08C1               	movf	___ftmul@sign,f
  3691  0AC6  1D03               	skipz
  3692  0AC7  2ACC               	goto	l25178
  3693  0AC8  01B3               	clrf	?___ftmul
  3694  0AC9  01B4               	clrf	?___ftmul+1
  3695  0ACA  01B5               	clrf	?___ftmul+2
  3696  0ACB  0008               	return
  3697  0ACC                     l25178:	
  3698  0ACC  0841               	movf	___ftmul@sign,w
  3699  0ACD  3E7B               	addlw	123
  3700  0ACE  07BC               	addwf	___ftmul@exp,f
  3701  0ACF  0835               	movf	___ftmul@f1+2,w
  3702  0AD0  00C1               	movwf	___ftmul@sign
  3703  0AD1  0838               	movf	___ftmul@f2+2,w
  3704  0AD2  06C1               	xorwf	___ftmul@sign,f
  3705  0AD3  3080               	movlw	128
  3706  0AD4  05C1               	andwf	___ftmul@sign,f
  3707  0AD5  30FF               	movlw	255
  3708  0AD6  17B4               	bsf	___ftmul@f1+1,7
  3709  0AD7  17B7               	bsf	___ftmul@f2+1,7
  3710  0AD8  05B6               	andwf	___ftmul@f2,f
  3711  0AD9  05B7               	andwf	___ftmul@f2+1,f
  3712  0ADA  3007               	movlw	7
  3713  0ADB  01B8               	clrf	___ftmul@f2+2
  3714  0ADC  01BD               	clrf	___ftmul@f3_as_product
  3715  0ADD  01BE               	clrf	___ftmul@f3_as_product+1
  3716  0ADE  01BF               	clrf	___ftmul@f3_as_product+2
  3717  0ADF  00C0               	movwf	___ftmul@cntr
  3718  0AE0                     l25196:	
  3719  0AE0  1C33               	btfss	___ftmul@f1,0
  3720  0AE1  2AE5               	goto	l25200
  3721  0AE2  0836               	movf	___ftmul@f2,w
  3722  0AE3  27CF  3189         	fcall	PL342	;call to abstracted procedure
  3723  0AE5                     l25200:	
  3724  0AE5  36B5               	lsrf	___ftmul@f1+2,f
  3725  0AE6  0CB4               	rrf	___ftmul@f1+1,f
  3726  0AE7  0CB3               	rrf	___ftmul@f1,f
  3727  0AE8  35B6               	lslf	___ftmul@f2,f
  3728  0AE9  0DB7               	rlf	___ftmul@f2+1,f
  3729  0AEA  0DB8               	rlf	___ftmul@f2+2,f
  3730  0AEB  0BC0               	decfsz	___ftmul@cntr,f
  3731  0AEC  2AE0               	goto	l25196
  3732  0AED  3009               	movlw	9
  3733  0AEE  00C0               	movwf	___ftmul@cntr
  3734  0AEF                     l25208:	
  3735  0AEF  1C33               	btfss	___ftmul@f1,0
  3736  0AF0  2AF4               	goto	l25212
  3737  0AF1  0836               	movf	___ftmul@f2,w
  3738  0AF2  27CF  3189         	fcall	PL342	;call to abstracted procedure
  3739  0AF4                     l25212:	
  3740  0AF4  36B5               	lsrf	___ftmul@f1+2,f
  3741  0AF5  0CB4               	rrf	___ftmul@f1+1,f
  3742  0AF6  0CB3               	rrf	___ftmul@f1,f
  3743  0AF7  36BF               	lsrf	___ftmul@f3_as_product+2,f
  3744  0AF8  0CBE               	rrf	___ftmul@f3_as_product+1,f
  3745  0AF9  0CBD               	rrf	___ftmul@f3_as_product,f
  3746  0AFA  0BC0               	decfsz	___ftmul@cntr,f
  3747  0AFB  2AEF               	goto	l25208
  3748  0AFC  083D               	movf	___ftmul@f3_as_product,w
  3749  0AFD  00A3               	movwf	___ftpack@arg
  3750  0AFE  083E               	movf	___ftmul@f3_as_product+1,w
  3751  0AFF  00A4               	movwf	___ftpack@arg+1
  3752  0B00  083F               	movf	___ftmul@f3_as_product+2,w
  3753  0B01  00A5               	movwf	___ftpack@arg+2
  3754  0B02  083C               	movf	___ftmul@exp,w
  3755  0B03  00A6               	movwf	___ftpack@exp
  3756  0B04  0841               	movf	___ftmul@sign,w
  3757  0B05  00A7               	movwf	___ftpack@sign
  3758  0B06  319E  2685         	fcall	___ftpack
  3759  0B08  0823               	movf	?___ftpack,w
  3760  0B09  00B3               	movwf	?___ftmul
  3761  0B0A  0824               	movf	?___ftpack+1,w
  3762  0B0B  00B4               	movwf	?___ftmul+1
  3763  0B0C  0825               	movf	?___ftpack+2,w
  3764  0B0D  00B5               	movwf	?___ftmul+2
  3765  0B0E  0008               	return
  3766  0B0F                     __end_of___ftmul:	
  3767  0B0F                     __ptext51:	
  3768 ;; *************** function ___ftadd *****************
  3769 ;; Defined at:
  3770 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  f1              3   34[BANK0 ] float 
  3773 ;;  f2              3   37[BANK0 ] float 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  exp1            1   45[BANK0 ] unsigned char 
  3776 ;;  exp2            1   44[BANK0 ] unsigned char 
  3777 ;;  sign            1   43[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  3   34[BANK0 ] float 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, pclath, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 1F/0
  3784 ;;		On exit  : 1F/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3787 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;Total ram usage:       12 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    3
  3794 ;; This function calls:
  3795 ;;		___ftpack
  3796 ;; This function is called by:
  3797 ;;		_application_init
  3798 ;;		_pid_calc
  3799 ;;		_pid_calc_2
  3800 ;;		_handle_ad_loop
  3801 ;;		_handle_task_process
  3802 ;;		_Mppt_Charge
  3803 ;;		___ftsub
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function ___ftadd
  3809  0B0F                     ___ftadd:	
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3813  0B0F  0842               	movf	___ftadd@f1,w
  3814  0B10  00C8               	movwf	??___ftadd
  3815  0B11  0843               	movf	___ftadd@f1+1,w
  3816  0B12  00C9               	movwf	??___ftadd+1
  3817  0B13  0844               	movf	___ftadd@f1+2,w
  3818  0B14  00CA               	movwf	??___ftadd+2
  3819  0B15  1003               	clrc
  3820  0B16  0D49               	rlf	??___ftadd+1,w
  3821  0B17  0D4A               	rlf	??___ftadd+2,w
  3822  0B18  00CD               	movwf	___ftadd@exp1
  3823  0B19  0845               	movf	___ftadd@f2,w
  3824  0B1A  00C8               	movwf	??___ftadd
  3825  0B1B  0846               	movf	___ftadd@f2+1,w
  3826  0B1C  00C9               	movwf	??___ftadd+1
  3827  0B1D  0847               	movf	___ftadd@f2+2,w
  3828  0B1E  00CA               	movwf	??___ftadd+2
  3829  0B1F  1003               	clrc
  3830  0B20  0D49               	rlf	??___ftadd+1,w
  3831  0B21  0D4A               	rlf	??___ftadd+2,w
  3832  0B22  00CC               	movwf	___ftadd@exp2
  3833  0B23  084D               	movf	___ftadd@exp1,w
  3834  0B24  1903               	btfsc	3,2
  3835  0B25  2B32               	goto	l25040
  3836  0B26  084C               	movf	___ftadd@exp2,w
  3837  0B27  024D               	subwf	___ftadd@exp1,w
  3838  0B28  084C               	movf	___ftadd@exp2,w
  3839  0B29  1803               	skipnc
  3840  0B2A  2B3A               	goto	L110
  3841  0B2B  00C8               	movwf	??___ftadd
  3842  0B2C  084D               	movf	___ftadd@exp1,w
  3843  0B2D  02C8               	subwf	??___ftadd,f
  3844  0B2E  3019               	movlw	25
  3845  0B2F  0248               	subwf	??___ftadd,w
  3846  0B30  1C03               	skipc
  3847  0B31  2B39               	goto	l25044
  3848  0B32                     l25040:	
  3849  0B32  0845               	movf	___ftadd@f2,w
  3850  0B33  00C2               	movwf	?___ftadd
  3851  0B34  0846               	movf	___ftadd@f2+1,w
  3852  0B35  00C3               	movwf	?___ftadd+1
  3853  0B36  0847               	movf	___ftadd@f2+2,w
  3854  0B37  00C4               	movwf	?___ftadd+2
  3855  0B38  0008               	return
  3856  0B39                     l25044:	
  3857  0B39  084C               	movf	___ftadd@exp2,w
  3858  0B3A                     L110:	
  3859  0B3A  1903               	btfsc	3,2
  3860  0B3B  0008               	return
  3861  0B3C  084D               	movf	___ftadd@exp1,w
  3862  0B3D  024C               	subwf	___ftadd@exp2,w
  3863  0B3E  1803               	skipnc
  3864  0B3F  2B48               	goto	l25050
  3865  0B40  084D               	movf	___ftadd@exp1,w
  3866  0B41  00C8               	movwf	??___ftadd
  3867  0B42  084C               	movf	___ftadd@exp2,w
  3868  0B43  02C8               	subwf	??___ftadd,f
  3869  0B44  3019               	movlw	25
  3870  0B45  0248               	subwf	??___ftadd,w
  3871  0B46  1803               	btfsc	3,0
  3872  0B47  0008               	return
  3873  0B48                     l25050:	
  3874  0B48  3006               	movlw	6
  3875  0B49  00CB               	movwf	___ftadd@sign
  3876  0B4A  1BC4               	btfsc	___ftadd@f1+2,7
  3877  0B4B  17CB               	bsf	___ftadd@sign,7
  3878  0B4C  1BC7               	btfsc	___ftadd@f2+2,7
  3879  0B4D  174B               	bsf	___ftadd@sign,6
  3880  0B4E  17C3               	bsf	___ftadd@f1+1,7
  3881  0B4F  01C4               	clrf	___ftadd@f1+2
  3882  0B50  17C6               	bsf	___ftadd@f2+1,7
  3883  0B51  01C7               	clrf	___ftadd@f2+2
  3884  0B52  084C               	movf	___ftadd@exp2,w
  3885  0B53  024D               	subwf	___ftadd@exp1,w
  3886  0B54  1803               	skipnc
  3887  0B55  2B6D               	goto	l25072
  3888  0B56                     l25062:	
  3889  0B56  35C5               	lslf	___ftadd@f2,f
  3890  0B57  0DC6               	rlf	___ftadd@f2+1,f
  3891  0B58  0DC7               	rlf	___ftadd@f2+2,f
  3892  0B59  03CC               	decf	___ftadd@exp2,f
  3893  0B5A  084C               	movf	___ftadd@exp2,w
  3894  0B5B  064D               	xorwf	___ftadd@exp1,w
  3895  0B5C  1903               	skipnz
  3896  0B5D  2B68               	goto	l25070
  3897  0B5E  03CB               	decf	___ftadd@sign,f
  3898  0B5F  084B               	movf	___ftadd@sign,w
  3899  0B60  3907               	andlw	7
  3900  0B61  1903               	btfsc	3,2
  3901  0B62  2B68               	goto	l25070
  3902  0B63  2B56               	goto	l25062
  3903  0B64                     l25068:	
  3904  0B64  36C4               	lsrf	___ftadd@f1+2,f
  3905  0B65  0CC3               	rrf	___ftadd@f1+1,f
  3906  0B66  0CC2               	rrf	___ftadd@f1,f
  3907  0B67  0ACD               	incf	___ftadd@exp1,f
  3908  0B68                     l25070:	
  3909  0B68  084D               	movf	___ftadd@exp1,w
  3910  0B69  064C               	xorwf	___ftadd@exp2,w
  3911  0B6A  1903               	btfsc	3,2
  3912  0B6B  2B87               	goto	l2659
  3913  0B6C  2B64               	goto	l25068
  3914  0B6D                     l25072:	
  3915  0B6D  084D               	movf	___ftadd@exp1,w
  3916  0B6E  024C               	subwf	___ftadd@exp2,w
  3917  0B6F  1803               	skipnc
  3918  0B70  2B87               	goto	l2659
  3919  0B71                     l25074:	
  3920  0B71  35C2               	lslf	___ftadd@f1,f
  3921  0B72  0DC3               	rlf	___ftadd@f1+1,f
  3922  0B73  0DC4               	rlf	___ftadd@f1+2,f
  3923  0B74  03CD               	decf	___ftadd@exp1,f
  3924  0B75  084C               	movf	___ftadd@exp2,w
  3925  0B76  064D               	xorwf	___ftadd@exp1,w
  3926  0B77  1903               	skipnz
  3927  0B78  2B83               	goto	l25082
  3928  0B79  03CB               	decf	___ftadd@sign,f
  3929  0B7A  084B               	movf	___ftadd@sign,w
  3930  0B7B  3907               	andlw	7
  3931  0B7C  1903               	btfsc	3,2
  3932  0B7D  2B83               	goto	l25082
  3933  0B7E  2B71               	goto	l25074
  3934  0B7F                     l25080:	
  3935  0B7F  36C7               	lsrf	___ftadd@f2+2,f
  3936  0B80  0CC6               	rrf	___ftadd@f2+1,f
  3937  0B81  0CC5               	rrf	___ftadd@f2,f
  3938  0B82  0ACC               	incf	___ftadd@exp2,f
  3939  0B83                     l25082:	
  3940  0B83  084D               	movf	___ftadd@exp1,w
  3941  0B84  064C               	xorwf	___ftadd@exp2,w
  3942  0B85  1D03               	skipz
  3943  0B86  2B7F               	goto	l25080
  3944  0B87                     l2659:	
  3945  0B87  1FCB               	btfss	___ftadd@sign,7
  3946  0B88  2B92               	goto	l25088
  3947  0B89  30FF               	movlw	255
  3948  0B8A  06C2               	xorwf	___ftadd@f1,f
  3949  0B8B  06C3               	xorwf	___ftadd@f1+1,f
  3950  0B8C  06C4               	xorwf	___ftadd@f1+2,f
  3951  0B8D  0AC2               	incf	___ftadd@f1,f
  3952  0B8E  1903               	skipnz
  3953  0B8F  0AC3               	incf	___ftadd@f1+1,f
  3954  0B90  1903               	skipnz
  3955  0B91  0AC4               	incf	___ftadd@f1+2,f
  3956  0B92                     l25088:	
  3957  0B92  1F4B               	btfss	___ftadd@sign,6
  3958  0B93  2B9D               	goto	l25094
  3959  0B94  30FF               	movlw	255
  3960  0B95  06C5               	xorwf	___ftadd@f2,f
  3961  0B96  06C6               	xorwf	___ftadd@f2+1,f
  3962  0B97  06C7               	xorwf	___ftadd@f2+2,f
  3963  0B98  0AC5               	incf	___ftadd@f2,f
  3964  0B99  1903               	skipnz
  3965  0B9A  0AC6               	incf	___ftadd@f2+1,f
  3966  0B9B  1903               	skipnz
  3967  0B9C  0AC7               	incf	___ftadd@f2+2,f
  3968  0B9D                     l25094:	
  3969  0B9D  01CB               	clrf	___ftadd@sign
  3970  0B9E  0842               	movf	___ftadd@f1,w
  3971  0B9F  07C5               	addwf	___ftadd@f2,f
  3972  0BA0  0843               	movf	___ftadd@f1+1,w
  3973  0BA1  3DC6               	addwfc	___ftadd@f2+1,f
  3974  0BA2  0844               	movf	___ftadd@f1+2,w
  3975  0BA3  3DC7               	addwfc	___ftadd@f2+2,f
  3976  0BA4  1FC7               	btfss	___ftadd@f2+2,7
  3977  0BA5  2BB1               	goto	l25106
  3978  0BA6  30FF               	movlw	255
  3979  0BA7  06C5               	xorwf	___ftadd@f2,f
  3980  0BA8  06C6               	xorwf	___ftadd@f2+1,f
  3981  0BA9  06C7               	xorwf	___ftadd@f2+2,f
  3982  0BAA  0AC5               	incf	___ftadd@f2,f
  3983  0BAB  1903               	skipnz
  3984  0BAC  0AC6               	incf	___ftadd@f2+1,f
  3985  0BAD  1903               	skipnz
  3986  0BAE  0AC7               	incf	___ftadd@f2+2,f
  3987  0BAF  01CB               	clrf	___ftadd@sign
  3988  0BB0  0ACB               	incf	___ftadd@sign,f
  3989  0BB1                     l25106:	
  3990  0BB1  0845               	movf	___ftadd@f2,w
  3991  0BB2  00A3               	movwf	___ftpack@arg
  3992  0BB3  0846               	movf	___ftadd@f2+1,w
  3993  0BB4  00A4               	movwf	___ftpack@arg+1
  3994  0BB5  0847               	movf	___ftadd@f2+2,w
  3995  0BB6  00A5               	movwf	___ftpack@arg+2
  3996  0BB7  084D               	movf	___ftadd@exp1,w
  3997  0BB8  00A6               	movwf	___ftpack@exp
  3998  0BB9  084B               	movf	___ftadd@sign,w
  3999  0BBA  00A7               	movwf	___ftpack@sign
  4000  0BBB  319E  2685         	fcall	___ftpack
  4001  0BBD  0823               	movf	?___ftpack,w
  4002  0BBE  00C2               	movwf	?___ftadd
  4003  0BBF  0824               	movf	?___ftpack+1,w
  4004  0BC0  00C3               	movwf	?___ftadd+1
  4005  0BC1  0825               	movf	?___ftpack+2,w
  4006  0BC2  00C4               	movwf	?___ftadd+2
  4007  0BC3  0008               	return
  4008  0BC4                     __end_of___ftadd:	
  4009  0BC4                     __ptext25:	
  4010 ;; *************** function _driver_init *****************
  4011 ;; Defined at:
  4012 ;;		line 221 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 17F/0
  4023 ;;		On exit  : 17F/7
  4024 ;;		Unchanged: 160/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    3
  4033 ;; This function calls:
  4034 ;;		_Init_Ird
  4035 ;;		_init_adc
  4036 ;;		_init_interrupt
  4037 ;;		_init_key
  4038 ;;		_init_osc
  4039 ;;		_init_port
  4040 ;;		_init_pwm
  4041 ;;		_init_timer1
  4042 ;;		_init_uart1
  4043 ;; This function is called by:
  4044 ;;		_main
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           
  4049                           ;psect for function _driver_init
  4050  0BC4                     _driver_init:	
  4051                           
  4052                           ;main.c: 223: init_osc();
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _driver_init: [wreg+status,2+status,0+pclath+cstack]
  4056  0BC4  240F  3189         	fcall	_init_osc
  4057                           
  4058                           ;main.c: 225: init_port();
  4059  0BC6  2417  3189         	fcall	_init_port
  4060                           
  4061                           ;main.c: 227: init_key();
  4062  0BC8  2409  3189         	fcall	_init_key
  4063                           
  4064                           ;main.c: 229: init_timer1();
  4065  0BCA  2430  3189         	fcall	_init_timer1
  4066                           
  4067                           ;main.c: 231: init_uart1();
  4068  0BCC  243D  3189         	fcall	_init_uart1
  4069                           
  4070                           ;main.c: 233: Init_Ird();
  4071  0BCE  23D5  3189         	fcall	_Init_Ird
  4072                           
  4073                           ;main.c: 235: init_adc();
  4074  0BD0  23EA  3189         	fcall	_init_adc
  4075                           
  4076                           ;main.c: 237: init_pwm();
  4077  0BD2  2776  3189         	fcall	_init_pwm
  4078                           
  4079                           ;main.c: 239: init_interrupt();
  4080  0BD4  2C52               	ljmp	l16500
  4081  0BD5                     __end_of_driver_init:	
  4082  0BD5                     __ptext34:	
  4083 ;; *************** function _Init_Ird *****************
  4084 ;; Defined at:
  4085 ;;		line 528 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;		None               void
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0
  4094 ;; Tracked objects:
  4095 ;;		On entry : 17F/1
  4096 ;;		On exit  : 17F/0
  4097 ;;		Unchanged: 160/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    2
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_driver_init
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _Init_Ird
  4115  0BD5                     _Init_Ird:	
  4116                           
  4117                           ;ird_remote.c: 530: TRISBbits.TRISB7 = 1;
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _Init_Ird: [wreg+status,2+status,0]
  4121  0BD5  178D               	bsf	13,7	;volatile
  4122                           
  4123                           ;ird_remote.c: 532: IOCBNbits.IOCBN7 = 1;
  4124  0BD6  0027               	movlb	7	; select bank7
  4125  0BD7  1795               	bsf	21,7	;volatile
  4126                           
  4127                           ;ird_remote.c: 534: IOCBFbits.IOCBF7 = 0;
  4128  0BD8  1396               	bcf	22,7	;volatile
  4129                           
  4130                           ;ird_remote.c: 537: TRISBbits.TRISB6 = 1;
  4131  0BD9  0021               	movlb	1	; select bank1
  4132  0BDA  170D               	bsf	13,6	;volatile
  4133                           
  4134                           ;ird_remote.c: 539: IOCBNbits.IOCBN6 = 1;
  4135  0BDB  0027               	movlb	7	; select bank7
  4136  0BDC  1715               	bsf	21,6	;volatile
  4137                           
  4138                           ;ird_remote.c: 541: IOCBFbits.IOCBF6 = 0;
  4139  0BDD  1316               	bcf	22,6	;volatile
  4140                           
  4141                           ;ird_remote.c: 543: IOCIF = 0;
  4142  0BDE  100B               	bcf	11,0	;volatile
  4143                           
  4144                           ;ird_remote.c: 545: IOCIE = 1;
  4145  0BDF  158B               	bsf	11,3	;volatile
  4146                           
  4147                           ;ird_remote.c: 550: TMR0CS = 0;
  4148  0BE0  0021               	movlb	1	; select bank1
  4149  0BE1  1295               	bcf	21,5	;volatile
  4150                           
  4151                           ;ird_remote.c: 552: PSA = 0;
  4152  0BE2  1195               	bcf	21,3	;volatile
  4153                           
  4154                           ;ird_remote.c: 554: OPTION_REGbits.PS = 0b111;
  4155  0BE3  3007               	movlw	7
  4156  0BE4  0495               	iorwf	21,f	;volatile
  4157                           
  4158                           ;ird_remote.c: 556: TMR0IF = 0;
  4159  0BE5  110B               	bcf	11,2	;volatile
  4160                           
  4161                           ;ird_remote.c: 558: TMR0 = 0;
  4162  0BE6  0020               	movlb	0	; select bank0
  4163  0BE7  0195               	clrf	21	;volatile
  4164                           
  4165                           ;ird_remote.c: 560: TMR0IE = 0;
  4166  0BE8  128B               	bcf	11,5	;volatile
  4167  0BE9  0008               	return
  4168  0BEA                     __end_of_Init_Ird:	
  4169  0BEA                     __ptext33:	
  4170 ;; *************** function _init_adc *****************
  4171 ;; Defined at:
  4172 ;;		line 41 in file "D:\MCUProject\ZH-SL-S4080-1\src\adc.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 17F/0
  4183 ;;		On exit  : 17F/0
  4184 ;;		Unchanged: 160/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    2
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_driver_init
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _init_adc
  4202  0BEA                     _init_adc:	
  4203                           
  4204                           ;adc.c: 44: TRISAbits.TRISA0 = 1;
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  4208  0BEA  0021               	movlb	1	; select bank1
  4209                           
  4210                           ;adc.c: 46: TRISAbits.TRISA1 = 1;
  4211                           
  4212                           ;adc.c: 48: TRISAbits.TRISA2 = 1;
  4213                           
  4214                           ;adc.c: 50: TRISAbits.TRISA3 = 1;
  4215                           
  4216                           ;adc.c: 52: TRISAbits.TRISA5 = 1;
  4217  0BEB  27D5               	fcall	PL360	;call to abstracted procedure
  4218                           
  4219                           ;adc.c: 54: TRISBbits.TRISB3 = 1;
  4220  0BEC  158D               	bsf	13,3	;volatile
  4221                           
  4222                           ;adc.c: 56: TRISBbits.TRISB2 = 1;
  4223  0BED  150D               	bsf	13,2	;volatile
  4224                           
  4225                           ;adc.c: 58: TRISBbits.TRISB4 = 1;
  4226  0BEE  160D               	bsf	13,4	;volatile
  4227                           
  4228                           ;adc.c: 62: ADCON1bits.ADFM =0b1;
  4229  0BEF  179E               	bsf	30,7	;volatile
  4230                           
  4231                           ;adc.c: 64: ADCON1bits.ADCS =0b110;
  4232  0BF0  081E               	movf	30,w	;volatile
  4233  0BF1  398F               	andlw	-113
  4234  0BF2  3860               	iorlw	96
  4235  0BF3  009E               	movwf	30	;volatile
  4236                           
  4237                           ;adc.c: 66: ADCON1bits.ADNREF =0b0;
  4238  0BF4  111E               	bcf	30,2	;volatile
  4239                           
  4240                           ;adc.c: 68: ADCON1bits.ADPREF =0b11;
  4241  0BF5  3003               	movlw	3
  4242  0BF6  049E               	iorwf	30,f	;volatile
  4243                           
  4244                           ;adc.c: 70: FVRCONbits.ADFVR =0b01;
  4245  0BF7  0022               	movlb	2	; select bank2
  4246  0BF8  0817               	movf	23,w	;volatile
  4247  0BF9  39FC               	andlw	-4
  4248  0BFA  3801               	iorlw	1
  4249  0BFB  0097               	movwf	23	;volatile
  4250                           
  4251                           ;adc.c: 72: FVRCONbits.FVREN =0b1;
  4252  0BFC  1797               	bsf	23,7	;volatile
  4253                           
  4254                           ;adc.c: 74: FVRCONbits.TSEN =0b1;
  4255  0BFD  1697               	bsf	23,5	;volatile
  4256                           
  4257                           ;adc.c: 76: FVRCONbits.TSRNG=0b1;
  4258  0BFE  1617               	bsf	23,4	;volatile
  4259                           
  4260                           ;adc.c: 78: ADCON0bits.CHS =0b11101;
  4261  0BFF  0021               	movlb	1	; select bank1
  4262  0C00  081D               	movf	29,w	;volatile
  4263  0C01  3983               	andlw	-125
  4264  0C02  3874               	iorlw	116
  4265  0C03  009D               	movwf	29	;volatile
  4266                           
  4267                           ;adc.c: 80: ADCON0bits.ADON =0b0;
  4268  0C04  101D               	bcf	29,0	;volatile
  4269                           
  4270                           ;adc.c: 82: PIE1bits.ADIE=0;
  4271  0C05  1311               	bcf	17,6	;volatile
  4272                           
  4273                           ;adc.c: 84: PIR1bits.ADIF=0;
  4274  0C06  0020               	movlb	0	; select bank0
  4275  0C07  1311               	bcf	17,6	;volatile
  4276  0C08  0008               	return
  4277  0C09                     __end_of_init_adc:	
  4278  0C09                     __ptext31:	
  4279 ;; *************** function _init_key *****************
  4280 ;; Defined at:
  4281 ;;		line 45 in file "D:\MCUProject\ZH-SL-S4080-1\src\key.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;		None               void
  4288 ;; Registers used:
  4289 ;;		None
  4290 ;; Tracked objects:
  4291 ;;		On entry : 17F/2
  4292 ;;		On exit  : 17F/1
  4293 ;;		Unchanged: 160/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    2
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_driver_init
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _init_key
  4311  0C09                     _init_key:	
  4312                           
  4313                           ;key.c: 47: (TRISBbits.TRISB6) = 1;
  4314                           
  4315                           ;incstack = 0
  4316                           ; Regs used in _init_key: []
  4317  0C09  0021               	movlb	1	; select bank1
  4318  0C0A  170D               	bsf	13,6	;volatile
  4319                           
  4320                           ;key.c: 48: (TRISCbits.TRISC6) = 1;
  4321  0C0B  170E               	bsf	14,6	;volatile
  4322                           
  4323                           ;key.c: 49: (TRISCbits.TRISC5) = 1;
  4324  0C0C  168E               	bsf	14,5	;volatile
  4325                           
  4326                           ;key.c: 50: (TRISCbits.TRISC4) = 1;
  4327  0C0D  160E               	bsf	14,4	;volatile
  4328  0C0E  0008               	return
  4329  0C0F                     __end_of_init_key:	
  4330  0C0F                     __ptext30:	
  4331 ;; *************** function _init_osc *****************
  4332 ;; Defined at:
  4333 ;;		line 157 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 17F/0
  4344 ;;		On exit  : 17F/1
  4345 ;;		Unchanged: 160/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;Total ram usage:        0 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    2
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_driver_init
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function _init_osc
  4363  0C0F                     _init_osc:	
  4364                           
  4365                           ;main.c: 159: OSCCON = 0x70;
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _init_osc: [wreg+status,2+status,0]
  4369  0C0F  3070               	movlw	112
  4370  0C10  0021               	movlb	1	; select bank1
  4371  0C11  0099               	movwf	25	;volatile
  4372                           
  4373                           ;main.c: 160: WDTCONbits.WDTPS=0b01110;
  4374  0C12  0817               	movf	23,w	;volatile
  4375  0C13  39C1               	andlw	-63
  4376  0C14  381C               	iorlw	28
  4377  0C15  0097               	movwf	23	;volatile
  4378  0C16  0008               	return
  4379  0C17                     __end_of_init_osc:	
  4380  0C17                     __ptext29:	
  4381 ;; *************** function _init_port *****************
  4382 ;; Defined at:
  4383 ;;		line 174 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;		None               void
  4390 ;; Registers used:
  4391 ;;		status,2
  4392 ;; Tracked objects:
  4393 ;;		On entry : 17F/1
  4394 ;;		On exit  : 17F/2
  4395 ;;		Unchanged: 160/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    2
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_driver_init
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _init_port
  4413  0C17                     _init_port:	
  4414                           
  4415                           ;main.c: 176: ANSELA = 0x00;
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _init_port: [status,2]
  4419  0C17  0023               	movlb	3	; select bank3
  4420  0C18  018C               	clrf	12	;volatile
  4421                           
  4422                           ;main.c: 177: ANSELB = 0x00;
  4423  0C19  018D               	clrf	13	;volatile
  4424                           
  4425                           ;main.c: 179: ANSA0 = 1;
  4426                           
  4427                           ;main.c: 180: ANSA1 = 1;
  4428                           
  4429                           ;main.c: 181: ANSA2 = 1;
  4430                           
  4431                           ;main.c: 182: ANSA3 = 1;
  4432                           
  4433                           ;main.c: 183: ANSA5 = 1;
  4434  0C1A  27D5               	fcall	PL360	;call to abstracted procedure
  4435                           
  4436                           ;main.c: 185: ANSB4 = 1;
  4437  0C1B  160D               	bsf	13,4	;volatile
  4438                           
  4439                           ;main.c: 186: ANSB3 = 1;
  4440  0C1C  158D               	bsf	13,3	;volatile
  4441                           
  4442                           ;main.c: 187: ANSB2 = 1;
  4443  0C1D  150D               	bsf	13,2	;volatile
  4444                           
  4445                           ;main.c: 189: TRISAbits.TRISA7=1;
  4446  0C1E  0021               	movlb	1	; select bank1
  4447  0C1F  178C               	bsf	12,7	;volatile
  4448                           
  4449                           ;main.c: 190: TRISCbits.TRISC1=1;
  4450  0C20  148E               	bsf	14,1	;volatile
  4451                           
  4452                           ;main.c: 192: TRISCbits.TRISC3=0;
  4453  0C21  118E               	bcf	14,3	;volatile
  4454                           
  4455                           ;main.c: 193: TRISCbits.TRISC0=0;
  4456  0C22  100E               	bcf	14,0	;volatile
  4457                           
  4458                           ;main.c: 195: (LATCbits.LATC3 = 0x00);
  4459  0C23  0022               	movlb	2	; select bank2
  4460  0C24  118E               	bcf	14,3	;volatile
  4461                           
  4462                           ;main.c: 196: (LATCbits.LATC0 = 0x00);
  4463  0C25  100E               	bcf	14,0	;volatile
  4464                           
  4465                           ;main.c: 198: TRISCbits.TRISC2=1;
  4466  0C26  0021               	movlb	1	; select bank1
  4467  0C27  150E               	bsf	14,2	;volatile
  4468                           
  4469                           ;main.c: 200: TRISBbits.TRISB5 =1;
  4470  0C28  168D               	bsf	13,5	;volatile
  4471                           
  4472                           ;main.c: 202: TRISAbits.TRISA4 =1;
  4473  0C29  160C               	bsf	12,4	;volatile
  4474                           
  4475                           ;main.c: 204: TRISBbits.TRISB1 =1;
  4476  0C2A  148D               	bsf	13,1	;volatile
  4477                           
  4478                           ;main.c: 205: TRISBbits.TRISB0 =1;
  4479  0C2B  140D               	bsf	13,0	;volatile
  4480                           
  4481                           ;main.c: 207: TRISAbits.TRISA6 = 0;
  4482  0C2C  130C               	bcf	12,6	;volatile
  4483                           
  4484                           ;main.c: 208: (LATAbits.LATA6 = 0x01);
  4485  0C2D  0022               	movlb	2	; select bank2
  4486  0C2E  170C               	bsf	12,6	;volatile
  4487  0C2F  0008               	return
  4488  0C30                     __end_of_init_port:	
  4489  0C30                     __ptext27:	
  4490 ;; *************** function _init_timer1 *****************
  4491 ;; Defined at:
  4492 ;;		line 42 in file "D:\MCUProject\ZH-SL-S4080-1\src\timer.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;		None               void
  4499 ;; Registers used:
  4500 ;;		wreg
  4501 ;; Tracked objects:
  4502 ;;		On entry : 17F/1
  4503 ;;		On exit  : 17F/0
  4504 ;;		Unchanged: 160/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    2
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_driver_init
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _init_timer1
  4522  0C30                     _init_timer1:	
  4523                           
  4524                           ;timer.c: 44: TMR1H = 0xE0;
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in _init_timer1: [wreg]
  4528  0C30  30E0               	movlw	224
  4529  0C31  0020               	movlb	0	; select bank0
  4530  0C32  0097               	movwf	23	;volatile
  4531                           
  4532                           ;timer.c: 45: TMR1L = 0xC0;
  4533  0C33  30C0               	movlw	192
  4534  0C34  0096               	movwf	22	;volatile
  4535                           
  4536                           ;timer.c: 46: T1CON = 0x60;
  4537  0C35  3060               	movlw	96
  4538  0C36  0098               	movwf	24	;volatile
  4539                           
  4540                           ;timer.c: 50: T1GCONbits.TMR1GE=0;
  4541  0C37  1399               	bcf	25,7	;volatile
  4542                           
  4543                           ;timer.c: 52: TMR1IE = 0x01;
  4544  0C38  0021               	movlb	1	; select bank1
  4545  0C39  1411               	bsf	17,0	;volatile
  4546                           
  4547                           ;timer.c: 53: TMR1ON =0;
  4548  0C3A  0020               	movlb	0	; select bank0
  4549  0C3B  1018               	bcf	24,0	;volatile
  4550  0C3C  0008               	return
  4551  0C3D                     __end_of_init_timer1:	
  4552  0C3D                     __ptext26:	
  4553 ;; *************** function _init_uart1 *****************
  4554 ;; Defined at:
  4555 ;;		line 81 in file "D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, status,2
  4564 ;; Tracked objects:
  4565 ;;		On entry : 17F/0
  4566 ;;		On exit  : 17F/1
  4567 ;;		Unchanged: 160/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_driver_init
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _init_uart1
  4585  0C3D                     _init_uart1:	
  4586                           
  4587                           ;uart.c: 84: SP1BRGL = 0x40;
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _init_uart1: [wreg+status,2]
  4591  0C3D  3040               	movlw	64
  4592  0C3E  0023               	movlb	3	; select bank3
  4593  0C3F  009B               	movwf	27	;volatile
  4594                           
  4595                           ;uart.c: 85: SP1BRGH = 0x03;
  4596  0C40  3003               	movlw	3
  4597  0C41  009C               	movwf	28	;volatile
  4598                           
  4599                           ;uart.c: 86: BAUDCON = 0x08;
  4600  0C42  3008               	movlw	8
  4601  0C43  009F               	movwf	31	;volatile
  4602                           
  4603                           ;uart.c: 96: (TRISCbits.TRISC6) = 0x01;
  4604  0C44  0021               	movlb	1	; select bank1
  4605  0C45  170E               	bsf	14,6	;volatile
  4606                           
  4607                           ;uart.c: 97: (TRISCbits.TRISC7) = 0x01;
  4608  0C46  178E               	bsf	14,7	;volatile
  4609                           
  4610                           ;uart.c: 98: TXSTA = 0x00;
  4611  0C47  0023               	movlb	3	; select bank3
  4612  0C48  019E               	clrf	30	;volatile
  4613                           
  4614                           ;uart.c: 107: RCSTA = 0x90;
  4615  0C49  3090               	movlw	144
  4616  0C4A  009D               	movwf	29	;volatile
  4617                           
  4618                           ;uart.c: 108: RCIE = 0x01;
  4619  0C4B  0021               	movlb	1	; select bank1
  4620  0C4C  1691               	bsf	17,5	;volatile
  4621  0C4D  0008               	return
  4622  0C4E                     __end_of_init_uart1:	
  4623  0C4E                     __ptext2:	
  4624 ;; *************** function _middle_init *****************
  4625 ;; Defined at:
  4626 ;;		line 253 in file "D:\MCUProject\ZH-SL-S4080-1\src\main.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;		None               void
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 17F/7
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    5
  4647 ;; This function calls:
  4648 ;;		_auto_system
  4649 ;;		_read_param_eeprom
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _middle_init
  4657  0C4E                     _middle_init:	
  4658                           
  4659                           ;main.c: 256: auto_system();
  4660                           
  4661                           ;incstack = 0
  4662                           ; Regs used in _middle_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4663  0C4E  31B2  2296  3189   	fcall	_auto_system
  4664                           
  4665                           ;main.c: 258: read_param_eeprom();
  4666  0C51  2C5F               	ljmp	l21696
  4667  0C52                     __end_of_middle_init:	
  4668  0C52                     __ptext32:	
  4669 ;; *************** function _init_interrupt *****************
  4670 ;; Defined at:
  4671 ;;		line 565 in file "D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;		None               void
  4678 ;; Registers used:
  4679 ;;		None
  4680 ;; Tracked objects:
  4681 ;;		On entry : 17F/0
  4682 ;;		On exit  : 17F/7
  4683 ;;		Unchanged: 160/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    2
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_driver_init
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _init_interrupt
  4701  0C52                     _init_interrupt:	
  4702  0C52                     l16500:	
  4703                           ;incstack = 0
  4704                           ; Regs used in _init_interrupt: []
  4705                           
  4706                           
  4707                           ;interrupt.c: 568: TRISBbits.TRISB0 = 1;
  4708  0C52  0021               	movlb	1	; select bank1
  4709  0C53  140D               	bsf	13,0	;volatile
  4710                           
  4711                           ;interrupt.c: 570: TRISBbits.TRISB1 = 1;
  4712  0C54  148D               	bsf	13,1	;volatile
  4713                           
  4714                           ;interrupt.c: 572: IOCBPbits.IOCBP0 = 1;
  4715  0C55  0027               	movlb	7	; select bank7
  4716  0C56  1414               	bsf	20,0	;volatile
  4717                           
  4718                           ;interrupt.c: 574: IOCBFbits.IOCBF0 = 0;
  4719  0C57  1016               	bcf	22,0	;volatile
  4720                           
  4721                           ;interrupt.c: 576: IOCBPbits.IOCBP1 = 1;
  4722  0C58  1494               	bsf	20,1	;volatile
  4723                           
  4724                           ;interrupt.c: 578: IOCBFbits.IOCBF1 = 0;
  4725  0C59  1096               	bcf	22,1	;volatile
  4726                           
  4727                           ;interrupt.c: 580: IOCIF = 0;
  4728  0C5A  100B               	bcf	11,0	;volatile
  4729                           
  4730                           ;interrupt.c: 582: IOCIE = 1;
  4731  0C5B  158B               	bsf	11,3	;volatile
  4732                           
  4733                           ;interrupt.c: 584: PEIE = 0x01;
  4734  0C5C  170B               	bsf	11,6	;volatile
  4735                           
  4736                           ;interrupt.c: 585: GIE = 0x01;
  4737  0C5D  178B               	bsf	11,7	;volatile
  4738  0C5E  0008               	return
  4739  0C5F                     __end_of_init_interrupt:	
  4740  0C5F                     __ptext3:	
  4741 ;; *************** function _read_param_eeprom *****************
  4742 ;; Defined at:
  4743 ;;		line 179 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  byte_l          1   50[BANK0 ] unsigned char 
  4748 ;;  byte_h          1   49[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;		None               void
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, pclath, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/7
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4759 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;Total ram usage:        2 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    4
  4765 ;; This function calls:
  4766 ;;		___awtoft
  4767 ;;		___ftdiv
  4768 ;;		___ftmul
  4769 ;;		___lbtoft
  4770 ;;		___lmul
  4771 ;;		_eeprom_read
  4772 ;; This function is called by:
  4773 ;;		_middle_init
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _read_param_eeprom
  4779  0C5F                     _read_param_eeprom:	
  4780  0C5F                     l21696:	
  4781                           ;incstack = 0
  4782                           ; Regs used in _read_param_eeprom: [wreg+status,2+status,0+pclath+cstack]
  4783                           
  4784                           
  4785                           ;ird_remote.c: 181: unsigned char byte_h,byte_l;
  4786                           ;ird_remote.c: 184: byte_h=eeprom_read(0x00);
  4787  0C5F  3000               	movlw	0
  4788  0C60  2732  3189         	fcall	_eeprom_read
  4789  0C62  0020               	movlb	0	; select bank0
  4790  0C63  00D1               	movwf	read_param_eeprom@byte_h
  4791                           
  4792                           ;ird_remote.c: 186: byte_l=eeprom_read(0x01);
  4793  0C64  3001               	movlw	1
  4794  0C65  2732  3189         	fcall	_eeprom_read
  4795                           
  4796                           ;ird_remote.c: 188: light_pv=(byte_h<<8)|byte_l;
  4797  0C67  27C0  3189         	fcall	PL30	;call to abstracted procedure
  4798  0C69  2749  3189         	fcall	___awtoft
  4799  0C6B  082B               	movf	?___awtoft,w
  4800  0C6C  0021               	movlb	1	; select bank1
  4801  0C6D  00C9               	movwf	_light_pv^(0+128)
  4802  0C6E  0020               	movlb	0	; select bank0
  4803  0C6F  082C               	movf	?___awtoft+1,w
  4804  0C70  0021               	movlb	1	; select bank1
  4805  0C71  00CA               	movwf	(_light_pv+1)^(0+128)
  4806  0C72  0020               	movlb	0	; select bank0
  4807  0C73  082D               	movf	?___awtoft+2,w
  4808  0C74  0021               	movlb	1	; select bank1
  4809  0C75  00CB               	movwf	(_light_pv+2)^(0+128)
  4810                           
  4811                           ;ird_remote.c: 192: byte_h=eeprom_read(0x02);
  4812  0C76  3002               	movlw	2
  4813  0C77  2732  3189         	fcall	_eeprom_read
  4814  0C79  0020               	movlb	0	; select bank0
  4815  0C7A  00D1               	movwf	read_param_eeprom@byte_h
  4816                           
  4817                           ;ird_remote.c: 194: byte_l=eeprom_read(0x03);
  4818  0C7B  3003               	movlw	3
  4819  0C7C  2732  3189         	fcall	_eeprom_read
  4820                           
  4821                           ;ird_remote.c: 196: load_cc_I=(byte_h<<8)|byte_l;
  4822  0C7E  27C0  3189         	fcall	PL30	;call to abstracted procedure
  4823  0C80  2749  3189         	fcall	___awtoft
  4824  0C82  082B               	movf	?___awtoft,w
  4825  0C83  0021               	movlb	1	; select bank1
  4826  0C84  00CC               	movwf	_load_cc_I^(0+128)
  4827  0C85  0020               	movlb	0	; select bank0
  4828  0C86  082C               	movf	?___awtoft+1,w
  4829  0C87  0021               	movlb	1	; select bank1
  4830  0C88  00CD               	movwf	(_load_cc_I+1)^(0+128)
  4831  0C89  0020               	movlb	0	; select bank0
  4832  0C8A  082D               	movf	?___awtoft+2,w
  4833  0C8B  0021               	movlb	1	; select bank1
  4834  0C8C  00CE               	movwf	(_load_cc_I+2)^(0+128)
  4835                           
  4836                           ;ird_remote.c: 200: byte_l=eeprom_read(0x04);
  4837  0C8D  3004               	movlw	4
  4838  0C8E  2732  3189         	fcall	_eeprom_read
  4839  0C90  0020               	movlb	0	; select bank0
  4840  0C91  00D2               	movwf	read_param_eeprom@byte_l
  4841                           
  4842                           ;ird_remote.c: 202: step_01_load_percent=byte_l;
  4843  0C92  2765  3189         	fcall	___lbtoft
  4844  0C94  082B               	movf	?___lbtoft,w
  4845  0C95  0022               	movlb	2	; select bank2
  4846  0C96  00E0               	movwf	_step_01_load_percent^(0+256)
  4847  0C97  0020               	movlb	0	; select bank0
  4848  0C98  082C               	movf	?___lbtoft+1,w
  4849  0C99  0022               	movlb	2	; select bank2
  4850  0C9A  00E1               	movwf	(_step_01_load_percent+1)^(0+256)
  4851  0C9B  0020               	movlb	0	; select bank0
  4852  0C9C  082D               	movf	?___lbtoft+2,w
  4853  0C9D  0022               	movlb	2	; select bank2
  4854  0C9E  00E2               	movwf	(_step_01_load_percent+2)^(0+256)
  4855                           
  4856                           ;ird_remote.c: 205: byte_l=eeprom_read(0x05);
  4857  0C9F  3005               	movlw	5
  4858  0CA0  2732  3189         	fcall	_eeprom_read
  4859  0CA2  0020               	movlb	0	; select bank0
  4860  0CA3  00D2               	movwf	read_param_eeprom@byte_l
  4861                           
  4862                           ;ird_remote.c: 207: step_02_load_percent=byte_l;
  4863  0CA4  2765  3189         	fcall	___lbtoft
  4864  0CA6  082B               	movf	?___lbtoft,w
  4865  0CA7  0022               	movlb	2	; select bank2
  4866  0CA8  00E3               	movwf	_step_02_load_percent^(0+256)
  4867  0CA9  0020               	movlb	0	; select bank0
  4868  0CAA  082C               	movf	?___lbtoft+1,w
  4869  0CAB  0022               	movlb	2	; select bank2
  4870  0CAC  00E4               	movwf	(_step_02_load_percent+1)^(0+256)
  4871  0CAD  0020               	movlb	0	; select bank0
  4872  0CAE  082D               	movf	?___lbtoft+2,w
  4873  0CAF  0022               	movlb	2	; select bank2
  4874  0CB0  00E5               	movwf	(_step_02_load_percent+2)^(0+256)
  4875                           
  4876                           ;ird_remote.c: 210: byte_l=eeprom_read(0x06);
  4877  0CB1  3006               	movlw	6
  4878  0CB2  2732  3189         	fcall	_eeprom_read
  4879  0CB4  0020               	movlb	0	; select bank0
  4880  0CB5  00D2               	movwf	read_param_eeprom@byte_l
  4881                           
  4882                           ;ird_remote.c: 212: step_03_load_percent=byte_l;
  4883  0CB6  2765  3189         	fcall	___lbtoft
  4884  0CB8  082B               	movf	?___lbtoft,w
  4885  0CB9  0022               	movlb	2	; select bank2
  4886  0CBA  00E6               	movwf	_step_03_load_percent^(0+256)
  4887  0CBB  0020               	movlb	0	; select bank0
  4888  0CBC  082C               	movf	?___lbtoft+1,w
  4889  0CBD  0022               	movlb	2	; select bank2
  4890  0CBE  00E7               	movwf	(_step_03_load_percent+1)^(0+256)
  4891  0CBF  0020               	movlb	0	; select bank0
  4892  0CC0  082D               	movf	?___lbtoft+2,w
  4893  0CC1  0022               	movlb	2	; select bank2
  4894  0CC2  00E8               	movwf	(_step_03_load_percent+2)^(0+256)
  4895                           
  4896                           ;ird_remote.c: 215: byte_l=eeprom_read(0x07);
  4897  0CC3  3007               	movlw	7
  4898  0CC4  2732  3189         	fcall	_eeprom_read
  4899  0CC6  0020               	movlb	0	; select bank0
  4900  0CC7  00D2               	movwf	read_param_eeprom@byte_l
  4901                           
  4902                           ;ird_remote.c: 217: step_04_load_percent=byte_l;
  4903  0CC8  2765  3189         	fcall	___lbtoft
  4904  0CCA  082B               	movf	?___lbtoft,w
  4905  0CCB  0022               	movlb	2	; select bank2
  4906  0CCC  00E9               	movwf	_step_04_load_percent^(0+256)
  4907  0CCD  0020               	movlb	0	; select bank0
  4908  0CCE  082C               	movf	?___lbtoft+1,w
  4909  0CCF  0022               	movlb	2	; select bank2
  4910  0CD0  00EA               	movwf	(_step_04_load_percent+1)^(0+256)
  4911  0CD1  0020               	movlb	0	; select bank0
  4912  0CD2  082D               	movf	?___lbtoft+2,w
  4913  0CD3  0022               	movlb	2	; select bank2
  4914  0CD4  00EB               	movwf	(_step_04_load_percent+2)^(0+256)
  4915                           
  4916                           ;ird_remote.c: 220: byte_l=eeprom_read(0x08);
  4917  0CD5  3008               	movlw	8
  4918  0CD6  2732  3189         	fcall	_eeprom_read
  4919  0CD8  0020               	movlb	0	; select bank0
  4920  0CD9  00D2               	movwf	read_param_eeprom@byte_l
  4921                           
  4922                           ;ird_remote.c: 222: step_05_load_percent=byte_l;
  4923  0CDA  2765  3189         	fcall	___lbtoft
  4924  0CDC  082B               	movf	?___lbtoft,w
  4925  0CDD  0021               	movlb	1	; select bank1
  4926  0CDE  00CF               	movwf	_step_05_load_percent^(0+128)
  4927  0CDF  0020               	movlb	0	; select bank0
  4928  0CE0  082C               	movf	?___lbtoft+1,w
  4929  0CE1  0021               	movlb	1	; select bank1
  4930  0CE2  00D0               	movwf	(_step_05_load_percent+1)^(0+128)
  4931  0CE3  0020               	movlb	0	; select bank0
  4932  0CE4  082D               	movf	?___lbtoft+2,w
  4933  0CE5  0021               	movlb	1	; select bank1
  4934  0CE6  00D1               	movwf	(_step_05_load_percent+2)^(0+128)
  4935                           
  4936                           ;ird_remote.c: 225: byte_l=eeprom_read(0x09);
  4937  0CE7  3009               	movlw	9
  4938  0CE8  2732  3189         	fcall	_eeprom_read
  4939  0CEA  0020               	movlb	0	; select bank0
  4940  0CEB  00D2               	movwf	read_param_eeprom@byte_l
  4941                           
  4942                           ;ird_remote.c: 227: volt_id=byte_l;
  4943  0CEC  0852               	movf	read_param_eeprom@byte_l,w
  4944  0CED  0021               	movlb	1	; select bank1
  4945  0CEE  00DB               	movwf	_volt_id^(0+128)
  4946                           
  4947                           ;ird_remote.c: 230: byte_l=eeprom_read(0x0a);
  4948  0CEF  300A               	movlw	10
  4949  0CF0  2732  3189         	fcall	_eeprom_read
  4950  0CF2  0020               	movlb	0	; select bank0
  4951  0CF3  00D2               	movwf	read_param_eeprom@byte_l
  4952                           
  4953                           ;ird_remote.c: 232: bt_id=byte_l;
  4954  0CF4  0852               	movf	read_param_eeprom@byte_l,w
  4955  0CF5  0021               	movlb	1	; select bank1
  4956  0CF6  00DA               	movwf	_bt_id^(0+128)
  4957                           
  4958                           ;ird_remote.c: 234: byte_l=eeprom_read(0x0b);
  4959  0CF7  300B               	movlw	11
  4960  0CF8  2732  3189         	fcall	_eeprom_read
  4961  0CFA  0020               	movlb	0	; select bank0
  4962  0CFB  00D2               	movwf	read_param_eeprom@byte_l
  4963                           
  4964                           ;ird_remote.c: 236: light_time=byte_l;
  4965  0CFC  0021               	movlb	1	; select bank1
  4966  0CFD  00C7               	movwf	_light_time^(0+128)
  4967  0CFE  300C               	movlw	12
  4968  0CFF  01C8               	clrf	(_light_time+1)^(0+128)
  4969                           
  4970                           ;ird_remote.c: 238: byte_l=eeprom_read(0x0c);
  4971  0D00  2732  3189         	fcall	_eeprom_read
  4972  0D02  0020               	movlb	0	; select bank0
  4973  0D03  00D2               	movwf	read_param_eeprom@byte_l
  4974                           
  4975                           ;ird_remote.c: 240: step_01_time_limit=byte_l;
  4976  0D04  0021               	movlb	1	; select bank1
  4977  0D05  00D2               	movwf	_step_01_time_limit^(0+128)
  4978  0D06  300D               	movlw	13
  4979  0D07  01D3               	clrf	(_step_01_time_limit+1)^(0+128)
  4980                           
  4981                           ;ird_remote.c: 242: byte_l=eeprom_read(0x0d);
  4982  0D08  2732  3189         	fcall	_eeprom_read
  4983  0D0A  0020               	movlb	0	; select bank0
  4984  0D0B  00D2               	movwf	read_param_eeprom@byte_l
  4985                           
  4986                           ;ird_remote.c: 244: step_02_time_limit=byte_l;
  4987  0D0C  0021               	movlb	1	; select bank1
  4988  0D0D  00D4               	movwf	_step_02_time_limit^(0+128)
  4989  0D0E  300E               	movlw	14
  4990  0D0F  01D5               	clrf	(_step_02_time_limit+1)^(0+128)
  4991                           
  4992                           ;ird_remote.c: 246: byte_l=eeprom_read(0x0e);
  4993  0D10  2732  3189         	fcall	_eeprom_read
  4994  0D12  0020               	movlb	0	; select bank0
  4995  0D13  00D2               	movwf	read_param_eeprom@byte_l
  4996                           
  4997                           ;ird_remote.c: 248: step_03_time_limit=byte_l;
  4998  0D14  0021               	movlb	1	; select bank1
  4999  0D15  00D6               	movwf	_step_03_time_limit^(0+128)
  5000  0D16  300F               	movlw	15
  5001  0D17  01D7               	clrf	(_step_03_time_limit+1)^(0+128)
  5002                           
  5003                           ;ird_remote.c: 250: byte_l=eeprom_read(0x0f);
  5004  0D18  2732  3189         	fcall	_eeprom_read
  5005  0D1A  0020               	movlb	0	; select bank0
  5006  0D1B  00D2               	movwf	read_param_eeprom@byte_l
  5007                           
  5008                           ;ird_remote.c: 252: step_04_time_limit=byte_l;
  5009  0D1C  0021               	movlb	1	; select bank1
  5010  0D1D  00D8               	movwf	_step_04_time_limit^(0+128)
  5011  0D1E  3010               	movlw	16
  5012  0D1F  01D9               	clrf	(_step_04_time_limit+1)^(0+128)
  5013                           
  5014                           ;ird_remote.c: 254: byte_l=eeprom_read(0x10);
  5015  0D20  2732  3189         	fcall	_eeprom_read
  5016  0D22  0020               	movlb	0	; select bank0
  5017  0D23  00D2               	movwf	read_param_eeprom@byte_l
  5018                           
  5019                           ;ird_remote.c: 256: step_05_time_limit=byte_l;
  5020  0D24  0022               	movlb	2	; select bank2
  5021  0D25  00EC               	movwf	_step_05_time_limit^(0+256)
  5022  0D26  3011               	movlw	17
  5023  0D27  01ED               	clrf	(_step_05_time_limit+1)^(0+256)
  5024                           
  5025                           ;ird_remote.c: 258: byte_l=eeprom_read(0x11);
  5026  0D28  2732  3189         	fcall	_eeprom_read
  5027  0D2A  0020               	movlb	0	; select bank0
  5028  0D2B  00D2               	movwf	read_param_eeprom@byte_l
  5029                           
  5030                           ;ird_remote.c: 260: today_index=byte_l;
  5031  0D2C  00EB               	movwf	_today_index
  5032                           
  5033                           ;ird_remote.c: 262: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
  5034  0D2D  3E08               	addlw	8
  5035  0D2E  3907               	andlw	7
  5036  0D2F  0709               	addwf	9,w
  5037  0D30  0709               	addwf	9,w
  5038  0D31  3E12               	addlw	18
  5039  0D32  2732               	fcall	_eeprom_read
  5040  0D33  0020               	movlb	0	; select bank0
  5041  0D34  00D1               	movwf	read_param_eeprom@byte_h
  5042                           
  5043                           ;ird_remote.c: 264: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
  5044  0D35  3197  2715  3189   	fcall	PL90	;call to abstracted procedure
  5045  0D38  3E13               	addlw	19
  5046  0D39  2732  3189         	fcall	_eeprom_read
  5047                           
  5048                           ;ird_remote.c: 266: bt_00_hv=(byte_h<<8)|byte_l;
  5049  0D3B  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5050  0D3D  2749               	fcall	___awtoft
  5051  0D3E  082B               	movf	?___awtoft,w
  5052  0D3F  0023               	movlb	3	; select bank3
  5053  0D40  00A7               	movwf	_bt_00_hv^(0+384)
  5054  0D41  0020               	movlb	0	; select bank0
  5055  0D42  082C               	movf	?___awtoft+1,w
  5056  0D43  0023               	movlb	3	; select bank3
  5057  0D44  00A8               	movwf	(_bt_00_hv+1)^(0+384)
  5058  0D45  0020               	movlb	0	; select bank0
  5059  0D46  082D               	movf	?___awtoft+2,w
  5060  0D47  0023               	movlb	3	; select bank3
  5061  0D48  00A9               	movwf	(_bt_00_hv+2)^(0+384)
  5062                           
  5063                           ;ird_remote.c: 268: byte_h=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
  5064  0D49  0020               	movlb	0	; select bank0
  5065  0D4A  3197  2715  3189   	fcall	PL90	;call to abstracted procedure
  5066  0D4D  3E14               	addlw	20
  5067  0D4E  2732               	fcall	_eeprom_read
  5068  0D4F  0020               	movlb	0	; select bank0
  5069  0D50  00D1               	movwf	read_param_eeprom@byte_h
  5070                           
  5071                           ;ird_remote.c: 270: byte_l=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
  5072  0D51  3197  2715  3189   	fcall	PL90	;call to abstracted procedure
  5073  0D54  3E15               	addlw	21
  5074  0D55  2732  3189         	fcall	_eeprom_read
  5075                           
  5076                           ;ird_remote.c: 272: bt_00_lv=(byte_h<<8)|byte_l;
  5077  0D57  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5078  0D59  2749               	fcall	___awtoft
  5079  0D5A  082B               	movf	?___awtoft,w
  5080  0D5B  0023               	movlb	3	; select bank3
  5081  0D5C  00AA               	movwf	_bt_00_lv^(0+384)
  5082  0D5D  0020               	movlb	0	; select bank0
  5083  0D5E  082C               	movf	?___awtoft+1,w
  5084  0D5F  0023               	movlb	3	; select bank3
  5085  0D60  00AB               	movwf	(_bt_00_lv+1)^(0+384)
  5086  0D61  0020               	movlb	0	; select bank0
  5087  0D62  082D               	movf	?___awtoft+2,w
  5088  0D63  0023               	movlb	3	; select bank3
  5089  0D64  00AC               	movwf	(_bt_00_lv+2)^(0+384)
  5090                           
  5091                           ;ird_remote.c: 275: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
  5092  0D65  0020               	movlb	0	; select bank0
  5093  0D66  3197  2759  3189   	fcall	PL184	;call to abstracted procedure
  5094  0D69  3E12               	addlw	18
  5095  0D6A  2732               	fcall	_eeprom_read
  5096  0D6B  0020               	movlb	0	; select bank0
  5097  0D6C  00D1               	movwf	read_param_eeprom@byte_h
  5098                           
  5099                           ;ird_remote.c: 277: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
  5100  0D6D  3197  2759  3189   	fcall	PL184	;call to abstracted procedure
  5101  0D70  3E13               	addlw	19
  5102  0D71  2732  3189         	fcall	_eeprom_read
  5103                           
  5104                           ;ird_remote.c: 279: bt_01_hv=(byte_h<<8)|byte_l;
  5105  0D73  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5106  0D75  2749               	fcall	___awtoft
  5107                           
  5108                           ;ird_remote.c: 281: byte_h=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
  5109  0D76  3197  2759  3189   	fcall	PL184	;call to abstracted procedure
  5110  0D79  3E14               	addlw	20
  5111  0D7A  2732               	fcall	_eeprom_read
  5112  0D7B  0020               	movlb	0	; select bank0
  5113  0D7C  00D1               	movwf	read_param_eeprom@byte_h
  5114                           
  5115                           ;ird_remote.c: 283: byte_l=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
  5116  0D7D  3197  2759  3189   	fcall	PL184	;call to abstracted procedure
  5117  0D80  3E15               	addlw	21
  5118  0D81  2732  3189         	fcall	_eeprom_read
  5119                           
  5120                           ;ird_remote.c: 285: bt_01_lv=(byte_h<<8)|byte_l;
  5121  0D83  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5122  0D85  2749               	fcall	___awtoft
  5123                           
  5124                           ;ird_remote.c: 288: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
  5125  0D86  3197  275F  3189   	fcall	PL186	;call to abstracted procedure
  5126  0D89  3E12               	addlw	18
  5127  0D8A  2732               	fcall	_eeprom_read
  5128  0D8B  0020               	movlb	0	; select bank0
  5129  0D8C  00D1               	movwf	read_param_eeprom@byte_h
  5130                           
  5131                           ;ird_remote.c: 290: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
  5132  0D8D  3197  275F  3189   	fcall	PL186	;call to abstracted procedure
  5133  0D90  3E13               	addlw	19
  5134  0D91  2732  3189         	fcall	_eeprom_read
  5135                           
  5136                           ;ird_remote.c: 292: bt_02_hv=(byte_h<<8)|byte_l;
  5137  0D93  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5138  0D95  2749               	fcall	___awtoft
  5139                           
  5140                           ;ird_remote.c: 294: byte_h=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
  5141  0D96  3197  275F  3189   	fcall	PL186	;call to abstracted procedure
  5142  0D99  3E14               	addlw	20
  5143  0D9A  2732               	fcall	_eeprom_read
  5144  0D9B  0020               	movlb	0	; select bank0
  5145  0D9C  00D1               	movwf	read_param_eeprom@byte_h
  5146                           
  5147                           ;ird_remote.c: 296: byte_l=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
  5148  0D9D  3197  275F  3189   	fcall	PL186	;call to abstracted procedure
  5149  0DA0  3E15               	addlw	21
  5150  0DA1  2732  3189         	fcall	_eeprom_read
  5151                           
  5152                           ;ird_remote.c: 298: bt_02_lv=(byte_h<<8)|byte_l;
  5153  0DA3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5154  0DA5  2749               	fcall	___awtoft
  5155                           
  5156                           ;ird_remote.c: 301: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
  5157  0DA6  3197  2753  3189   	fcall	PL182	;call to abstracted procedure
  5158  0DA9  3E12               	addlw	18
  5159  0DAA  2732               	fcall	_eeprom_read
  5160  0DAB  0020               	movlb	0	; select bank0
  5161  0DAC  00D1               	movwf	read_param_eeprom@byte_h
  5162                           
  5163                           ;ird_remote.c: 303: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
  5164  0DAD  3197  2753  3189   	fcall	PL182	;call to abstracted procedure
  5165  0DB0  3E13               	addlw	19
  5166  0DB1  2732  3189         	fcall	_eeprom_read
  5167                           
  5168                           ;ird_remote.c: 305: bt_03_hv=(byte_h<<8)|byte_l;
  5169  0DB3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5170  0DB5  2749               	fcall	___awtoft
  5171                           
  5172                           ;ird_remote.c: 307: byte_h=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
  5173  0DB6  3197  2753  3189   	fcall	PL182	;call to abstracted procedure
  5174  0DB9  3E14               	addlw	20
  5175  0DBA  2732               	fcall	_eeprom_read
  5176  0DBB  0020               	movlb	0	; select bank0
  5177  0DBC  00D1               	movwf	read_param_eeprom@byte_h
  5178                           
  5179                           ;ird_remote.c: 309: byte_l=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
  5180  0DBD  3197  2753  3189   	fcall	PL182	;call to abstracted procedure
  5181  0DC0  3E15               	addlw	21
  5182  0DC1  2732  3189         	fcall	_eeprom_read
  5183                           
  5184                           ;ird_remote.c: 311: bt_03_lv=(byte_h<<8)|byte_l;
  5185  0DC3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5186  0DC5  2749               	fcall	___awtoft
  5187                           
  5188                           ;ird_remote.c: 314: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
  5189  0DC6  3197  274D  3189   	fcall	PL178	;call to abstracted procedure
  5190  0DC9  3E12               	addlw	18
  5191  0DCA  2732               	fcall	_eeprom_read
  5192  0DCB  0020               	movlb	0	; select bank0
  5193  0DCC  00D1               	movwf	read_param_eeprom@byte_h
  5194                           
  5195                           ;ird_remote.c: 316: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
  5196  0DCD  3197  274D  3189   	fcall	PL178	;call to abstracted procedure
  5197  0DD0  3E13               	addlw	19
  5198  0DD1  2732  3189         	fcall	_eeprom_read
  5199                           
  5200                           ;ird_remote.c: 318: bt_04_hv=(byte_h<<8)|byte_l;
  5201  0DD3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5202  0DD5  2749               	fcall	___awtoft
  5203                           
  5204                           ;ird_remote.c: 320: byte_h=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
  5205  0DD6  3197  274D  3189   	fcall	PL178	;call to abstracted procedure
  5206  0DD9  3E14               	addlw	20
  5207  0DDA  2732               	fcall	_eeprom_read
  5208  0DDB  0020               	movlb	0	; select bank0
  5209  0DDC  00D1               	movwf	read_param_eeprom@byte_h
  5210                           
  5211                           ;ird_remote.c: 322: byte_l=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
  5212  0DDD  3197  274D  3189   	fcall	PL178	;call to abstracted procedure
  5213  0DE0  3E15               	addlw	21
  5214  0DE1  2732  3189         	fcall	_eeprom_read
  5215                           
  5216                           ;ird_remote.c: 324: bt_04_lv=(byte_h<<8)|byte_l;
  5217  0DE3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5218  0DE5  2749               	fcall	___awtoft
  5219                           
  5220                           ;ird_remote.c: 327: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
  5221  0DE6  3197  273B  3189   	fcall	PL168	;call to abstracted procedure
  5222  0DE9  3E12               	addlw	18
  5223  0DEA  2732               	fcall	_eeprom_read
  5224  0DEB  0020               	movlb	0	; select bank0
  5225  0DEC  00D1               	movwf	read_param_eeprom@byte_h
  5226                           
  5227                           ;ird_remote.c: 329: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
  5228  0DED  3197  273B  3189   	fcall	PL168	;call to abstracted procedure
  5229  0DF0  3E13               	addlw	19
  5230  0DF1  2732  3189         	fcall	_eeprom_read
  5231                           
  5232                           ;ird_remote.c: 331: bt_05_hv=(byte_h<<8)|byte_l;
  5233  0DF3  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5234  0DF5  2749               	fcall	___awtoft
  5235                           
  5236                           ;ird_remote.c: 333: byte_h=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
  5237  0DF6  3197  273B  3189   	fcall	PL168	;call to abstracted procedure
  5238  0DF9  3E14               	addlw	20
  5239  0DFA  2732               	fcall	_eeprom_read
  5240  0DFB  0020               	movlb	0	; select bank0
  5241  0DFC  00D1               	movwf	read_param_eeprom@byte_h
  5242                           
  5243                           ;ird_remote.c: 335: byte_l=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
  5244  0DFD  3197  273B  3189   	fcall	PL168	;call to abstracted procedure
  5245  0E00  3E15               	addlw	21
  5246  0E01  2732  3189         	fcall	_eeprom_read
  5247                           
  5248                           ;ird_remote.c: 337: bt_05_lv=(byte_h<<8)|byte_l;
  5249  0E03  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5250  0E05  2749               	fcall	___awtoft
  5251                           
  5252                           ;ird_remote.c: 340: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
  5253  0E06  3197  2741  3189   	fcall	PL170	;call to abstracted procedure
  5254  0E09  3E12               	addlw	18
  5255  0E0A  2732               	fcall	_eeprom_read
  5256  0E0B  0020               	movlb	0	; select bank0
  5257  0E0C  00D1               	movwf	read_param_eeprom@byte_h
  5258                           
  5259                           ;ird_remote.c: 342: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
  5260  0E0D  3197  2741  3189   	fcall	PL170	;call to abstracted procedure
  5261  0E10  3E13               	addlw	19
  5262  0E11  2732  3189         	fcall	_eeprom_read
  5263                           
  5264                           ;ird_remote.c: 344: bt_06_hv=(byte_h<<8)|byte_l;
  5265  0E13  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5266  0E15  2749               	fcall	___awtoft
  5267                           
  5268                           ;ird_remote.c: 346: byte_h=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
  5269  0E16  3197  2741  3189   	fcall	PL170	;call to abstracted procedure
  5270  0E19  3E14               	addlw	20
  5271  0E1A  2732               	fcall	_eeprom_read
  5272  0E1B  0020               	movlb	0	; select bank0
  5273  0E1C  00D1               	movwf	read_param_eeprom@byte_h
  5274                           
  5275                           ;ird_remote.c: 348: byte_l=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
  5276  0E1D  3197  2741  3189   	fcall	PL170	;call to abstracted procedure
  5277  0E20  3E15               	addlw	21
  5278  0E21  2732  3189         	fcall	_eeprom_read
  5279                           
  5280                           ;ird_remote.c: 350: bt_06_lv=(byte_h<<8)|byte_l;
  5281  0E23  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5282  0E25  2749               	fcall	___awtoft
  5283                           
  5284                           ;ird_remote.c: 353: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
  5285  0E26  3197  2747  3189   	fcall	PL174	;call to abstracted procedure
  5286  0E29  3E12               	addlw	18
  5287  0E2A  2732               	fcall	_eeprom_read
  5288  0E2B  0020               	movlb	0	; select bank0
  5289  0E2C  00D1               	movwf	read_param_eeprom@byte_h
  5290                           
  5291                           ;ird_remote.c: 355: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
  5292  0E2D  3197  2747  3189   	fcall	PL174	;call to abstracted procedure
  5293  0E30  3E13               	addlw	19
  5294  0E31  2732  3189         	fcall	_eeprom_read
  5295                           
  5296                           ;ird_remote.c: 357: bt_07_hv=(byte_h<<8)|byte_l;
  5297  0E33  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5298  0E35  2749               	fcall	___awtoft
  5299                           
  5300                           ;ird_remote.c: 359: byte_h=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
  5301  0E36  3197  2747  3189   	fcall	PL174	;call to abstracted procedure
  5302  0E39  3E14               	addlw	20
  5303  0E3A  2732               	fcall	_eeprom_read
  5304  0E3B  0020               	movlb	0	; select bank0
  5305  0E3C  00D1               	movwf	read_param_eeprom@byte_h
  5306                           
  5307                           ;ird_remote.c: 361: byte_l=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
  5308  0E3D  3197  2747  3189   	fcall	PL174	;call to abstracted procedure
  5309  0E40  3E15               	addlw	21
  5310  0E41  2732  3189         	fcall	_eeprom_read
  5311                           
  5312                           ;ird_remote.c: 363: bt_07_lv=(byte_h<<8)|byte_l;
  5313  0E43  27C0  3189         	fcall	PL30	;call to abstracted procedure
  5314  0E45  2749  3189         	fcall	___awtoft
  5315                           
  5316                           ;ird_remote.c: 366: byte_l=eeprom_read(0x36);
  5317  0E47  3036               	movlw	54
  5318  0E48  2732  3189         	fcall	_eeprom_read
  5319  0E4A  0020               	movlb	0	; select bank0
  5320  0E4B  00D2               	movwf	read_param_eeprom@byte_l
  5321                           
  5322                           ;ird_remote.c: 368: light_mode=byte_l;
  5323  0E4C  0852               	movf	read_param_eeprom@byte_l,w
  5324  0E4D  0021               	movlb	1	; select bank1
  5325  0E4E  00BD               	movwf	_light_mode^(0+128)
  5326                           
  5327                           ;ird_remote.c: 370: byte_l=eeprom_read(0x37);
  5328  0E4F  3037               	movlw	55
  5329  0E50  2732  3189         	fcall	_eeprom_read
  5330  0E52  0020               	movlb	0	; select bank0
  5331  0E53  00D2               	movwf	read_param_eeprom@byte_l
  5332                           
  5333                           ;ird_remote.c: 372: light2_mode=byte_l;
  5334  0E54  0852               	movf	read_param_eeprom@byte_l,w
  5335  0E55  0021               	movlb	1	; select bank1
  5336  0E56  00BC               	movwf	_light2_mode^(0+128)
  5337                           
  5338                           ;ird_remote.c: 374: byte_l=eeprom_read(0x38);
  5339  0E57  3038               	movlw	56
  5340  0E58  2732  3189         	fcall	_eeprom_read
  5341  0E5A  0020               	movlb	0	; select bank0
  5342  0E5B  00D2               	movwf	read_param_eeprom@byte_l
  5343                           
  5344                           ;ird_remote.c: 376: device_status=byte_l;
  5345  0E5C  0021               	movlb	1	; select bank1
  5346  0E5D  00B6               	movwf	_device_status^(0+128)
  5347                           
  5348                           ;ird_remote.c: 378: if(device_status==0x00)
  5349  0E5E  08B6               	movf	_device_status^(0+128),f
  5350  0E5F  1D03               	skipz
  5351  0E60  2E64               	goto	l21734
  5352                           
  5353                           ;ird_remote.c: 379: {
  5354                           ;ird_remote.c: 380: work_mode =0x04;
  5355  0E61  3004               	movlw	4
  5356  0E62  00C6               	movwf	_work_mode^(0+128)
  5357                           
  5358                           ;ird_remote.c: 381: }
  5359  0E63  2E65               	goto	l21736
  5360  0E64                     l21734:	
  5361                           
  5362                           ;ird_remote.c: 382: else
  5363                           ;ird_remote.c: 383: {
  5364                           ;ird_remote.c: 384: work_mode =0x00;
  5365  0E64  01C6               	clrf	_work_mode^(0+128)
  5366  0E65                     l21736:	
  5367                           
  5368                           ;ird_remote.c: 385: }
  5369                           ;ird_remote.c: 387: byte_l=eeprom_read(0x39);
  5370  0E65  3039               	movlw	57
  5371  0E66  2732  3189         	fcall	_eeprom_read
  5372  0E68  0020               	movlb	0	; select bank0
  5373  0E69  00D2               	movwf	read_param_eeprom@byte_l
  5374                           
  5375                           ;ird_remote.c: 389: led_out_ctrl=byte_l;
  5376  0E6A  0021               	movlb	1	; select bank1
  5377  0E6B  00BB               	movwf	_led_out_ctrl^(0+128)
  5378                           
  5379                           ;ird_remote.c: 396: if(light_time==0x00)
  5380  0E6C  0848               	movf	(_light_time+1)^(0+128),w
  5381  0E6D  0447               	iorwf	_light_time^(0+128),w
  5382  0E6E  1D03               	skipz
  5383  0E6F  2E77               	goto	l21744
  5384                           
  5385                           ;ird_remote.c: 397: {
  5386                           ;ird_remote.c: 398: light_time_level = 500;
  5387  0E70  0023               	movlb	3	; select bank3
  5388  0E71  3001               	movlw	1
  5389  0E72  01A3               	clrf	(_light_time_level+3)^(0+384)
  5390  0E73  01A2               	clrf	(_light_time_level+2)^(0+384)
  5391  0E74  00A1               	movwf	(_light_time_level+1)^(0+384)
  5392  0E75  30F4               	movlw	244
  5393  0E76  2E96               	goto	L4
  5394  0E77                     l21744:	
  5395                           ;ird_remote.c: 399: }
  5396                           
  5397                           
  5398                           ;ird_remote.c: 400: else
  5399                           ;ird_remote.c: 401: {
  5400                           ;ird_remote.c: 402: light_time_level = (unsigned long int)((unsigned long int)light_time
      +                          *6*180);
  5401  0E77  0847               	movf	_light_time^(0+128),w
  5402  0E78  0020               	movlb	0	; select bank0
  5403  0E79  00A3               	movwf	___lmul@multiplier
  5404  0E7A  0021               	movlb	1	; select bank1
  5405  0E7B  0848               	movf	(_light_time+1)^(0+128),w
  5406  0E7C  0020               	movlb	0	; select bank0
  5407  0E7D  00A4               	movwf	___lmul@multiplier+1
  5408  0E7E  3004               	movlw	4
  5409  0E7F  01A5               	clrf	___lmul@multiplier+2
  5410  0E80  01A6               	clrf	___lmul@multiplier+3
  5411  0E81  01AA               	clrf	___lmul@multiplicand+3
  5412  0E82  01A9               	clrf	___lmul@multiplicand+2
  5413  0E83  00A8               	movwf	___lmul@multiplicand+1
  5414  0E84  3038               	movlw	56
  5415  0E85  00A7               	movwf	___lmul@multiplicand
  5416  0E86  27DB  3189         	fcall	___lmul
  5417  0E88  0826               	movf	?___lmul+3,w
  5418  0E89  0023               	movlb	3	; select bank3
  5419  0E8A  00A3               	movwf	(_light_time_level+3)^(0+384)
  5420  0E8B  0020               	movlb	0	; select bank0
  5421  0E8C  0825               	movf	?___lmul+2,w
  5422  0E8D  0023               	movlb	3	; select bank3
  5423  0E8E  00A2               	movwf	(_light_time_level+2)^(0+384)
  5424  0E8F  0020               	movlb	0	; select bank0
  5425  0E90  0824               	movf	?___lmul+1,w
  5426  0E91  0023               	movlb	3	; select bank3
  5427  0E92  00A1               	movwf	(_light_time_level+1)^(0+384)
  5428  0E93  0020               	movlb	0	; select bank0
  5429  0E94  0823               	movf	?___lmul,w
  5430  0E95  0023               	movlb	3	; select bank3
  5431  0E96                     L4:	
  5432  0E96  00A0               	movwf	_light_time_level^(0+384)
  5433                           
  5434                           ;ird_remote.c: 408: {
  5435                           ;ird_remote.c: 409: bt_volt_100 = (16.45/31.04)*1000;
  5436  0E97  0021               	movlb	1	; select bank1
  5437  0E98  035B               	decf	_volt_id^(0+128),w
  5438  0E99  1D03               	skipz
  5439  0E9A  2F30               	goto	l21760
  5440                           
  5441                           ;ird_remote.c: 411: bt_volt_80 = (15.80/31.04)*1000;
  5442  0E9B  3083               	movlw	131
  5443  0E9C  0024               	movlb	4	; select bank4
  5444  0E9D  00EC               	movwf	_bt_volt_80^(0+512)
  5445  0E9E  30FE               	movlw	254
  5446  0E9F  00ED               	movwf	(_bt_volt_80+1)^(0+512)
  5447  0EA0  3043               	movlw	67
  5448  0EA1  00EE               	movwf	(_bt_volt_80+2)^(0+512)
  5449                           
  5450                           ;ird_remote.c: 413: bt_volt_60 = (15.20/31.04)*1000;
  5451  0EA2  30D8               	movlw	216
  5452  0EA3  00E9               	movwf	_bt_volt_60^(0+512)
  5453  0EA4  30F4               	movlw	244
  5454  0EA5  00EA               	movwf	(_bt_volt_60+1)^(0+512)
  5455  0EA6  3043               	movlw	67
  5456  0EA7  00EB               	movwf	(_bt_volt_60+2)^(0+512)
  5457                           
  5458                           ;ird_remote.c: 415: bt_volt_40 = (14.60/31.04)*1000;
  5459  0EA8  302E               	movlw	46
  5460  0EA9  00E6               	movwf	_bt_volt_40^(0+512)
  5461  0EAA  30EB               	movlw	235
  5462  0EAB  00E7               	movwf	(_bt_volt_40+1)^(0+512)
  5463  0EAC  3043               	movlw	67
  5464  0EAD  00E8               	movwf	(_bt_volt_40+2)^(0+512)
  5465                           
  5466                           ;ird_remote.c: 417: bt_volt_20 = (14.00/31.04)*1000;
  5467  0EAE  3084               	movlw	132
  5468  0EAF  00E3               	movwf	_bt_volt_20^(0+512)
  5469  0EB0  30E1               	movlw	225
  5470  0EB1  00E4               	movwf	(_bt_volt_20+1)^(0+512)
  5471  0EB2  3043               	movlw	67
  5472  0EB3  00E5               	movwf	(_bt_volt_20+2)^(0+512)
  5473                           
  5474                           ;ird_remote.c: 419: bt_volt_00 = (12.00/31.04)*1000;
  5475  0EB4  304D               	movlw	77
  5476  0EB5  00E0               	movwf	_bt_volt_00^(0+512)
  5477  0EB6  30C1               	movlw	193
  5478  0EB7  00E1               	movwf	(_bt_volt_00+1)^(0+512)
  5479  0EB8  3043               	movlw	67
  5480  0EB9  00E2               	movwf	(_bt_volt_00+2)^(0+512)
  5481                           
  5482                           ;ird_remote.c: 422: dianchi_guoya_baohu = (16.45/31.04)*1000;
  5483  0EBA  307E               	movlw	126
  5484  0EBB  0022               	movlb	2	; select bank2
  5485  0EBC  00DA               	movwf	_dianchi_guoya_baohu^(0+256)
  5486  0EBD  3004               	movlw	4
  5487  0EBE  00DB               	movwf	(_dianchi_guoya_baohu+1)^(0+256)
  5488  0EBF  3044               	movlw	68
  5489  0EC0  00DC               	movwf	(_dianchi_guoya_baohu+2)^(0+256)
  5490                           
  5491                           ;ird_remote.c: 424: dianchi_guoya_huifu = (16.20/31.04)*1000;
  5492  0EC1  307A               	movlw	122
  5493  0EC2  0023               	movlb	3	; select bank3
  5494  0EC3  00D8               	movwf	_dianchi_guoya_huifu^(0+384)
  5495  0EC4  3002               	movlw	2
  5496  0EC5  00D9               	movwf	(_dianchi_guoya_huifu+1)^(0+384)
  5497  0EC6  3044               	movlw	68
  5498  0EC7  00DA               	movwf	(_dianchi_guoya_huifu+2)^(0+384)
  5499                           
  5500                           ;ird_remote.c: 426: dianchi_qianya_baohu = (12.0/31.04)*1000;
  5501  0EC8  304D               	movlw	77
  5502  0EC9  00DB               	movwf	_dianchi_qianya_baohu^(0+384)
  5503  0ECA  30C1               	movlw	193
  5504  0ECB  00DC               	movwf	(_dianchi_qianya_baohu+1)^(0+384)
  5505  0ECC  3043               	movlw	67
  5506  0ECD  00DD               	movwf	(_dianchi_qianya_baohu+2)^(0+384)
  5507                           
  5508                           ;ird_remote.c: 428: dianchi_qianya_huifu = (12.66/31.04)*1000;
  5509  0ECE  30EE               	movlw	238
  5510  0ECF  00DE               	movwf	_dianchi_qianya_huifu^(0+384)
  5511  0ED0  30CB               	movlw	203
  5512  0ED1  00DF               	movwf	(_dianchi_qianya_huifu+1)^(0+384)
  5513  0ED2  3043               	movlw	67
  5514  0ED3  00E0               	movwf	(_dianchi_qianya_huifu+2)^(0+384)
  5515                           
  5516                           ;ird_remote.c: 430: dianchi_cv_level = (16.30/31.04)*1000;
  5517  0ED4  3048               	movlw	72
  5518  0ED5  00D5               	movwf	_dianchi_cv_level^(0+384)
  5519  0ED6  3003               	movlw	3
  5520  0ED7  00D6               	movwf	(_dianchi_cv_level+1)^(0+384)
  5521  0ED8  3044               	movlw	68
  5522  0ED9  00D7               	movwf	(_dianchi_cv_level+2)^(0+384)
  5523                           
  5524                           ;ird_remote.c: 432: charge_i_limit = 12.00*15.0;
  5525  0EDA  3034               	movlw	52
  5526  0EDB  01D2               	clrf	_charge_i_limit^(0+384)
  5527  0EDC  00D3               	movwf	(_charge_i_limit+1)^(0+384)
  5528  0EDD  3043               	movlw	67
  5529  0EDE  00D4               	movwf	(_charge_i_limit+2)^(0+384)
  5530                           
  5531                           ;ird_remote.c: 434: shuchu_shortout_voltage = (10.00/61)*1000;
  5532  0EDF  30EF               	movlw	239
  5533  0EE0  0022               	movlb	2	; select bank2
  5534  0EE1  00DD               	movwf	_shuchu_shortout_voltage^(0+256)
  5535  0EE2  3023               	movlw	35
  5536  0EE3  00DE               	movwf	(_shuchu_shortout_voltage+1)^(0+256)
  5537  0EE4  3043               	movlw	67
  5538  0EE5  00DF               	movwf	(_shuchu_shortout_voltage+2)^(0+256)
  5539                           
  5540                           ;ird_remote.c: 436: shuchu_open_voltage = (61.00/61)*1000;
  5541  0EE6  0023               	movlb	3	; select bank3
  5542  0EE7  307A               	movlw	122
  5543  0EE8  01ED               	clrf	_shuchu_open_voltage^(0+384)
  5544  0EE9  00EE               	movwf	(_shuchu_open_voltage+1)^(0+384)
  5545  0EEA  3044               	movlw	68
  5546  0EEB  00EF               	movwf	(_shuchu_open_voltage+2)^(0+384)
  5547                           
  5548                           ;ird_remote.c: 438: discharge_i_baohu = 4.50*30.0;
  5549  0EEC  3007               	movlw	7
  5550  0EED  01E1               	clrf	_discharge_i_baohu^(0+384)
  5551  0EEE  00E2               	movwf	(_discharge_i_baohu+1)^(0+384)
  5552  0EEF  3043               	movlw	67
  5553  0EF0  00E3               	movwf	(_discharge_i_baohu+2)^(0+384)
  5554                           
  5555                           ;ird_remote.c: 440: discharge_i_limit = 4.00*30.0;
  5556  0EF1  30F0               	movlw	240
  5557  0EF2  01E4               	clrf	_discharge_i_limit^(0+384)
  5558  0EF3  00E5               	movwf	(_discharge_i_limit+1)^(0+384)
  5559  0EF4  3042               	movlw	66
  5560  0EF5  00E6               	movwf	(_discharge_i_limit+2)^(0+384)
  5561                           
  5562                           ;ird_remote.c: 442: light_on_pv_level = (light_pv*10)/61;
  5563  0EF6  0020               	movlb	0	; select bank0
  5564  0EF7  3074               	movlw	116
  5565  0EF8  01C2               	clrf	___ftdiv@f2
  5566  0EF9  00C3               	movwf	___ftdiv@f2+1
  5567  0EFA  3042               	movlw	66
  5568  0EFB  00C4               	movwf	___ftdiv@f2+2
  5569  0EFC  3020               	movlw	32
  5570  0EFD  01B3               	clrf	___ftmul@f1
  5571  0EFE  00B4               	movwf	___ftmul@f1+1
  5572  0EFF  3041               	movlw	65
  5573  0F00  00B5               	movwf	___ftmul@f1+2
  5574  0F01  0021               	movlb	1	; select bank1
  5575  0F02  0849               	movf	_light_pv^(0+128),w
  5576  0F03  0020               	movlb	0	; select bank0
  5577  0F04  00B6               	movwf	___ftmul@f2
  5578  0F05  0021               	movlb	1	; select bank1
  5579  0F06  084A               	movf	(_light_pv+1)^(0+128),w
  5580  0F07  0020               	movlb	0	; select bank0
  5581  0F08  00B7               	movwf	___ftmul@f2+1
  5582  0F09  0021               	movlb	1	; select bank1
  5583  0F0A  084B               	movf	(_light_pv+2)^(0+128),w
  5584  0F0B  0020               	movlb	0	; select bank0
  5585  0F0C  00B8               	movwf	___ftmul@f2+2
  5586  0F0D  22AA               	fcall	___ftmul
  5587  0F0E  3199  213F  3189   	fcall	PL104	;call to abstracted procedure
  5588  0F11  319D  258F         	fcall	___ftdiv
  5589  0F13  0842               	movf	?___ftdiv,w
  5590  0F14  0023               	movlb	3	; select bank3
  5591  0F15  00EA               	movwf	_light_on_pv_level^(0+384)
  5592  0F16  0020               	movlb	0	; select bank0
  5593  0F17  0843               	movf	?___ftdiv+1,w
  5594  0F18  0023               	movlb	3	; select bank3
  5595  0F19  00EB               	movwf	(_light_on_pv_level+1)^(0+384)
  5596  0F1A  0020               	movlb	0	; select bank0
  5597  0F1B  0844               	movf	?___ftdiv+2,w
  5598  0F1C  0023               	movlb	3	; select bank3
  5599  0F1D  00EC               	movwf	(_light_on_pv_level+2)^(0+384)
  5600                           
  5601                           ;ird_remote.c: 444: light_off_pv_level = (10.0/61)*1000;
  5602  0F1E  30EF               	movlw	239
  5603  0F1F  00E7               	movwf	_light_off_pv_level^(0+384)
  5604  0F20  3023               	movlw	35
  5605  0F21  00E8               	movwf	(_light_off_pv_level+1)^(0+384)
  5606  0F22  3043               	movlw	67
  5607  0F23  00E9               	movwf	(_light_off_pv_level+2)^(0+384)
  5608                           
  5609                           ;ird_remote.c: 446: Load_Pmax=86.00;
  5610  0F24  0024               	movlb	4	; select bank4
  5611  0F25  30AC               	movlw	172
  5612  0F26  01DD               	clrf	_Load_Pmax^(0+512)
  5613  0F27  00DE               	movwf	(_Load_Pmax+1)^(0+512)
  5614  0F28  3042               	movlw	66
  5615  0F29  00DF               	movwf	(_Load_Pmax+2)^(0+512)
  5616                           
  5617                           ;ird_remote.c: 447: Load2_Pmax=44.00;
  5618  0F2A  3030               	movlw	48
  5619  0F2B  01DA               	clrf	_Load2_Pmax^(0+512)
  5620  0F2C  00DB               	movwf	(_Load2_Pmax+1)^(0+512)
  5621  0F2D  3042               	movlw	66
  5622  0F2E  00DC               	movwf	(_Load2_Pmax+2)^(0+512)
  5623                           
  5624                           ;ird_remote.c: 448: }
  5625  0F2F  0008               	return
  5626  0F30                     l21760:	
  5627                           
  5628                           ;ird_remote.c: 450: {
  5629                           ;ird_remote.c: 451: __nop();
  5630  0F30  0000               	nop
  5631                           
  5632                           ;ird_remote.c: 452: }
  5633  0F31  0008               	return
  5634  0F32                     __end_of_read_param_eeprom:	
  5635  0F32                     __ptext6:	
  5636 ;; *************** function _eeprom_read *****************
  5637 ;; Defined at:
  5638 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eeread.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  addr            1    wreg     unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  addr            1    3[BANK0 ] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      unsigned char 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/7
  5649 ;;		On exit  : 1F/3
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;Total ram usage:        1 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    2
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_read_param_eeprom
  5663 ;;		_auto_system
  5664 ;;		_handle_uart_rx_buf
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function _eeprom_read
  5670  0F32                     _eeprom_read:	
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5674                           ;eeprom_read@addr stored from wreg
  5675  0F32  0020               	movlb	0	; select bank0
  5676  0F33  00A3               	movwf	eeprom_read@addr
  5677  0F34  2F36               	goto	l2375
  5678  0F35                     u5891:	
  5679  0F35  0020               	movlb	0	; select bank0
  5680  0F36                     l2375:	
  5681  0F36  0064               	clrwdt	;# 
  5682  0F37  0023               	movlb	3	; select bank3
  5683  0F38  1895               	btfsc	21,1	;volsfr
  5684  0F39  2F35               	goto	u5891
  5685  0F3A  0020               	movlb	0	; select bank0
  5686  0F3B  0823               	movf	eeprom_read@addr,w
  5687  0F3C  0023               	movlb	3	; select bank3
  5688  0F3D  0091               	movwf	17	;volatile
  5689  0F3E  0192               	clrf	18	;volatile
  5690  0F3F  303F               	movlw	63
  5691  0F40  0595               	andwf	21,f	;volsfr
  5692  0F41  1415               	bsf	21,0	;volsfr
  5693  0F42  1003               	clrc
  5694  0F43  1815               	btfsc	21,0	;volsfr
  5695  0F44  1403               	setc
  5696  0F45  3000               	movlw	0
  5697  0F46  3D09               	addwfc	9,w
  5698  0F47  0813               	movf	19,w	;volatile
  5699  0F48  0008               	return
  5700  0F49                     __end_of_eeprom_read:	
  5701  0F49                     __ptext21:	
  5702 ;; *************** function ___awtoft *****************
  5703 ;; Defined at:
  5704 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  c               2   11[BANK0 ] int 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  sign            1   14[BANK0 ] unsigned char 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  3   11[BANK0 ] float 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0, pclath, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 1F/0
  5715 ;;		On exit  : 1F/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5718 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;Total ram usage:        4 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    3
  5725 ;; This function calls:
  5726 ;;		___ftpack
  5727 ;; This function is called by:
  5728 ;;		_read_param_eeprom
  5729 ;;		_pid_calc
  5730 ;;		_pid_calc_2
  5731 ;;		_handle_ad_loop
  5732 ;;		_handle_uart_rx_buf
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function ___awtoft
  5738  0F49                     ___awtoft:	
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5742  0F49  01AE               	clrf	___awtoft@sign
  5743  0F4A  1FAC               	btfss	___awtoft@c+1,7
  5744  0F4B  2F53               	goto	l25028
  5745  0F4C  09AB               	comf	___awtoft@c,f
  5746  0F4D  09AC               	comf	___awtoft@c+1,f
  5747  0F4E  0AAB               	incf	___awtoft@c,f
  5748  0F4F  1903               	skipnz
  5749  0F50  0AAC               	incf	___awtoft@c+1,f
  5750  0F51  01AE               	clrf	___awtoft@sign
  5751  0F52  0AAE               	incf	___awtoft@sign,f
  5752  0F53                     l25028:	
  5753  0F53  082B               	movf	___awtoft@c,w
  5754  0F54  00A3               	movwf	___ftpack@arg
  5755  0F55  082C               	movf	___awtoft@c+1,w
  5756  0F56  00A4               	movwf	___ftpack@arg+1
  5757  0F57  308E               	movlw	142
  5758  0F58  01A5               	clrf	___ftpack@arg+2
  5759  0F59  00A6               	movwf	___ftpack@exp
  5760  0F5A  082E               	movf	___awtoft@sign,w
  5761  0F5B  00A7               	movwf	___ftpack@sign
  5762  0F5C  319E  2685         	fcall	___ftpack
  5763  0F5E  0823               	movf	?___ftpack,w
  5764  0F5F  00AB               	movwf	?___awtoft
  5765  0F60  0824               	movf	?___ftpack+1,w
  5766  0F61  00AC               	movwf	?___awtoft+1
  5767  0F62  0825               	movf	?___ftpack+2,w
  5768  0F63  00AD               	movwf	?___awtoft+2
  5769  0F64  0008               	return
  5770  0F65                     __end_of___awtoft:	
  5771  0F65                     __ptext9:	
  5772 ;; *************** function ___lbtoft *****************
  5773 ;; Defined at:
  5774 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lbtoft.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  c               1    wreg     unsigned char 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  c               1   15[BANK0 ] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  3   11[BANK0 ] float 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0, pclath, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 17/0
  5785 ;;		On exit  : 1F/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5788 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;Total ram usage:        5 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    3
  5795 ;; This function calls:
  5796 ;;		___ftpack
  5797 ;; This function is called by:
  5798 ;;		_read_param_eeprom
  5799 ;;		_handle_uart_rx_buf
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function ___lbtoft
  5805  0F65                     ___lbtoft:	
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5809                           ;___lbtoft@c stored from wreg
  5810  0F65  0020               	movlb	0	; select bank0
  5811  0F66  00AF               	movwf	___lbtoft@c
  5812  0F67  00A3               	movwf	___ftpack@arg
  5813  0F68  308E               	movlw	142
  5814  0F69  01A4               	clrf	___ftpack@arg+1
  5815  0F6A  01A5               	clrf	___ftpack@arg+2
  5816  0F6B  00A6               	movwf	___ftpack@exp
  5817  0F6C  01A7               	clrf	___ftpack@sign
  5818  0F6D  319E  2685         	fcall	___ftpack
  5819  0F6F  0823               	movf	?___ftpack,w
  5820  0F70  00AB               	movwf	?___lbtoft
  5821  0F71  0824               	movf	?___ftpack+1,w
  5822  0F72  00AC               	movwf	?___lbtoft+1
  5823  0F73  0825               	movf	?___ftpack+2,w
  5824  0F74  00AD               	movwf	?___lbtoft+2
  5825  0F75  0008               	return
  5826  0F76                     __end_of___lbtoft:	
  5827  0F76                     __ptext28:	
  5828 ;; *************** function _init_pwm *****************
  5829 ;; Defined at:
  5830 ;;		line 34 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;		None               void
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 17F/0
  5841 ;;		On exit  : 17F/0
  5842 ;;		Unchanged: 160/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;Total ram usage:        0 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    2
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_driver_init
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _init_pwm
  5860  0F76                     _init_pwm:	
  5861                           
  5862                           ;pwm.c: 37: TRISCbits.TRISC2=1;
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in _init_pwm: [wreg+status,2+status,0]
  5866  0F76  0021               	movlb	1	; select bank1
  5867  0F77  150E               	bsf	14,2	;volatile
  5868                           
  5869                           ;pwm.c: 39: TRISBbits.TRISB5 =1;
  5870  0F78  168D               	bsf	13,5	;volatile
  5871                           
  5872                           ;pwm.c: 41: TRISAbits.TRISA4 =1;
  5873  0F79  160C               	bsf	12,4	;volatile
  5874                           
  5875                           ;pwm.c: 43: APFCONbits.CCP3SEL=1;
  5876  0F7A  0022               	movlb	2	; select bank2
  5877  0F7B  171D               	bsf	29,6	;volatile
  5878                           
  5879                           ;pwm.c: 49: PR6=0xFF;
  5880  0F7C  30FF               	movlw	255
  5881  0F7D  0028               	movlb	8	; select bank8
  5882  0F7E  009D               	movwf	29	;volatile
  5883                           
  5884                           ;pwm.c: 51: CCP1CONbits.CCP1M=0b1100;
  5885  0F7F  0025               	movlb	5	; select bank5
  5886                           
  5887                           ;pwm.c: 53: CCP1CONbits.P1M=0b00;
  5888  0F80  27C8  3189         	fcall	PL330	;call to abstracted procedure
  5889                           
  5890                           ;pwm.c: 55: CCPTMRS0bits.C1TSEL=0b10;
  5891  0F82  081E               	movf	30,w	;volatile
  5892  0F83  39FC               	andlw	-4
  5893  0F84  3802               	iorlw	2
  5894  0F85  009E               	movwf	30	;volatile
  5895                           
  5896                           ;pwm.c: 57: CCPR1L=0x00;
  5897  0F86  0191               	clrf	17	;volatile
  5898                           
  5899                           ;pwm.c: 59: CCP1CONbits.DC1B=0b00;
  5900  0F87  30CF               	movlw	-49
  5901  0F88  0593               	andwf	19,f	;volatile
  5902                           
  5903                           ;pwm.c: 61: TMR6IF=0;
  5904  0F89  0020               	movlb	0	; select bank0
  5905  0F8A  1193               	bcf	19,3	;volatile
  5906                           
  5907                           ;pwm.c: 63: T6CONbits.T6OUTPS=0b0000;
  5908  0F8B  3087               	movlw	-121
  5909  0F8C  0028               	movlb	8	; select bank8
  5910  0F8D  059E               	andwf	30,f	;volatile
  5911                           
  5912                           ;pwm.c: 65: TMR6ON=0;
  5913  0F8E  111E               	bcf	30,2	;volatile
  5914                           
  5915                           ;pwm.c: 67: T6CONbits.T6CKPS=0b00;
  5916  0F8F  30FC               	movlw	-4
  5917  0F90  059E               	andwf	30,f	;volatile
  5918                           
  5919                           ;pwm.c: 73: PR4=0x9F;
  5920  0F91  309F               	movlw	159
  5921  0F92  0096               	movwf	22	;volatile
  5922                           
  5923                           ;pwm.c: 75: CCP3CONbits.CCP3M=0b1100;
  5924  0F93  0026               	movlb	6	; select bank6
  5925                           
  5926                           ;pwm.c: 77: CCP3CONbits.P3M=0b00;
  5927  0F94  27C8  3189         	fcall	PL330	;call to abstracted procedure
  5928                           
  5929                           ;pwm.c: 79: CCPTMRS0bits.C3TSEL=0b01;
  5930  0F96  0025               	movlb	5	; select bank5
  5931  0F97  081E               	movf	30,w	;volatile
  5932  0F98  39CF               	andlw	-49
  5933  0F99  3810               	iorlw	16
  5934  0F9A  009E               	movwf	30	;volatile
  5935                           
  5936                           ;pwm.c: 81: CCPR3L=0x00;
  5937  0F9B  0026               	movlb	6	; select bank6
  5938  0F9C  0191               	clrf	17	;volatile
  5939                           
  5940                           ;pwm.c: 83: CCP3CONbits.DC3B=0b00;
  5941  0F9D  30CF               	movlw	-49
  5942  0F9E  0593               	andwf	19,f	;volatile
  5943                           
  5944                           ;pwm.c: 85: TMR4IF=0;
  5945  0F9F  0020               	movlb	0	; select bank0
  5946  0FA0  1093               	bcf	19,1	;volatile
  5947                           
  5948                           ;pwm.c: 87: T4CONbits.T4OUTPS=0b0000;
  5949  0FA1  3087               	movlw	-121
  5950  0FA2  0028               	movlb	8	; select bank8
  5951  0FA3  0597               	andwf	23,f	;volatile
  5952                           
  5953                           ;pwm.c: 89: TMR4ON=0;
  5954  0FA4  1117               	bcf	23,2	;volatile
  5955                           
  5956                           ;pwm.c: 91: T4CONbits.T4CKPS=0b00;
  5957  0FA5  30FC               	movlw	-4
  5958  0FA6  0597               	andwf	23,f	;volatile
  5959                           
  5960                           ;pwm.c: 95: PR2=0x9F;
  5961  0FA7  309F               	movlw	159
  5962  0FA8  0020               	movlb	0	; select bank0
  5963  0FA9  009B               	movwf	27	;volatile
  5964                           
  5965                           ;pwm.c: 97: CCP5CONbits.CCP5M=0b1100;
  5966  0FAA  0026               	movlb	6	; select bank6
  5967  0FAB  081E               	movf	30,w	;volatile
  5968  0FAC  39F0               	andlw	-16
  5969  0FAD  380C               	iorlw	12
  5970  0FAE  009E               	movwf	30	;volatile
  5971                           
  5972                           ;pwm.c: 99: CCP5CONbits.P5M=0b00;
  5973  0FAF  303F               	movlw	-193
  5974  0FB0  059E               	andwf	30,f	;volatile
  5975                           
  5976                           ;pwm.c: 101: CCPTMRS1bits.C5TSEL=0b00;
  5977  0FB1  30FC               	movlw	-4
  5978  0FB2  0025               	movlb	5	; select bank5
  5979  0FB3  059F               	andwf	31,f	;volatile
  5980                           
  5981                           ;pwm.c: 103: CCPR5L=0x00;
  5982  0FB4  0026               	movlb	6	; select bank6
  5983  0FB5  019C               	clrf	28	;volatile
  5984                           
  5985                           ;pwm.c: 105: CCP5CONbits.DC5B=0b00;
  5986  0FB6  30CF               	movlw	-49
  5987  0FB7  059E               	andwf	30,f	;volatile
  5988                           
  5989                           ;pwm.c: 107: TMR2IF=0;
  5990  0FB8  0020               	movlb	0	; select bank0
  5991  0FB9  1091               	bcf	17,1	;volatile
  5992                           
  5993                           ;pwm.c: 109: T2CONbits.T2OUTPS=0b0000;
  5994  0FBA  3087               	movlw	-121
  5995  0FBB  059C               	andwf	28,f	;volatile
  5996                           
  5997                           ;pwm.c: 111: TMR2ON=0;
  5998  0FBC  111C               	bcf	28,2	;volatile
  5999                           
  6000                           ;pwm.c: 113: T2CONbits.T2CKPS=0b00;
  6001  0FBD  30FC               	movlw	-4
  6002  0FBE  059C               	andwf	28,f	;volatile
  6003  0FBF  0008               	return
  6004  0FC0                     __end_of_init_pwm:	
  6005  0FC0                     PL30:	
  6006  0FC0  0020               	movlb	0	; select bank0
  6007  0FC1  00D2               	movwf	read_param_eeprom@byte_l
  6008  0FC2  0851               	movf	read_param_eeprom@byte_h,w
  6009  0FC3  00AC               	movwf	___awtoft@c+1
  6010  0FC4  01AB               	clrf	___awtoft@c
  6011  0FC5  0852               	movf	read_param_eeprom@byte_l,w
  6012  0FC6  04AB               	iorwf	___awtoft@c,f
  6013  0FC7  0008               	return
  6014  0FC8                     __end_ofPL30:	
  6015  0FC8                     PL330:	
  6016  0FC8  0813               	movf	19,w	;volatile
  6017  0FC9  39F0               	andlw	-16
  6018  0FCA  380C               	iorlw	12
  6019  0FCB  0093               	movwf	19	;volatile
  6020  0FCC  303F               	movlw	-193
  6021  0FCD  0593               	andwf	19,f	;volatile
  6022  0FCE  0008               	return
  6023  0FCF                     __end_ofPL330:	
  6024  0FCF                     PL342:	
  6025  0FCF  07BD               	addwf	___ftmul@f3_as_product,f
  6026  0FD0  0837               	movf	___ftmul@f2+1,w
  6027  0FD1  3DBE               	addwfc	___ftmul@f3_as_product+1,f
  6028  0FD2  0838               	movf	___ftmul@f2+2,w
  6029  0FD3  3DBF               	addwfc	___ftmul@f3_as_product+2,f
  6030  0FD4  0008               	return
  6031  0FD5                     __end_ofPL342:	
  6032  0FD5                     PL360:	
  6033  0FD5  140C               	bsf	12,0	;volatile
  6034  0FD6  148C               	bsf	12,1	;volatile
  6035  0FD7  150C               	bsf	12,2	;volatile
  6036  0FD8  158C               	bsf	12,3	;volatile
  6037  0FD9  168C               	bsf	12,5	;volatile
  6038  0FDA  0008               	return
  6039  0FDB                     __end_ofPL360:	
  6040  0FDB                     __ptext8:	
  6041 ;; *************** function ___lmul *****************
  6042 ;; Defined at:
  6043 ;;		line 2 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  multiplier      4    3[BANK0 ] unsigned long 
  6046 ;;  multiplicand    4    7[BANK0 ] unsigned long 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  product         4   11[BANK0 ] unsigned long 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4    3[BANK0 ] unsigned long 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 1F/0
  6055 ;;		On exit  : 1F/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;Total ram usage:       12 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    2
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_read_param_eeprom
  6069 ;;		_handle_uart_rx_buf
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function ___lmul
  6075  0FDB                     ___lmul:	
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6079  0FDB  01AB               	clrf	___lmul@product
  6080  0FDC  01AC               	clrf	___lmul@product+1
  6081  0FDD  01AD               	clrf	___lmul@product+2
  6082  0FDE  01AE               	clrf	___lmul@product+3
  6083  0FDF                     l2773:	
  6084  0FDF  1C23               	btfss	___lmul@multiplier,0
  6085  0FE0  2FE9               	goto	l20300
  6086  0FE1  0827               	movf	___lmul@multiplicand,w
  6087  0FE2  07AB               	addwf	___lmul@product,f
  6088  0FE3  0828               	movf	___lmul@multiplicand+1,w
  6089  0FE4  3DAC               	addwfc	___lmul@product+1,f
  6090  0FE5  0829               	movf	___lmul@multiplicand+2,w
  6091  0FE6  3DAD               	addwfc	___lmul@product+2,f
  6092  0FE7  082A               	movf	___lmul@multiplicand+3,w
  6093  0FE8  3DAE               	addwfc	___lmul@product+3,f
  6094  0FE9                     l20300:	
  6095  0FE9  35A7               	lslf	___lmul@multiplicand,f
  6096  0FEA  0DA8               	rlf	___lmul@multiplicand+1,f
  6097  0FEB  0DA9               	rlf	___lmul@multiplicand+2,f
  6098  0FEC  0DAA               	rlf	___lmul@multiplicand+3,f
  6099  0FED  36A6               	lsrf	___lmul@multiplier+3,f
  6100  0FEE  0CA5               	rrf	___lmul@multiplier+2,f
  6101  0FEF  0CA4               	rrf	___lmul@multiplier+1,f
  6102  0FF0  0CA3               	rrf	___lmul@multiplier,f
  6103  0FF1  0826               	movf	___lmul@multiplier+3,w
  6104  0FF2  0425               	iorwf	___lmul@multiplier+2,w
  6105  0FF3  0424               	iorwf	___lmul@multiplier+1,w
  6106  0FF4  0423               	iorwf	___lmul@multiplier,w
  6107  0FF5  1D03               	skipz
  6108  0FF6  2FDF               	goto	l2773
  6109  0FF7  082E               	movf	___lmul@product+3,w
  6110  0FF8  00A6               	movwf	?___lmul+3
  6111  0FF9  082D               	movf	___lmul@product+2,w
  6112  0FFA  00A5               	movwf	?___lmul+2
  6113  0FFB  082C               	movf	___lmul@product+1,w
  6114  0FFC  00A4               	movwf	?___lmul+1
  6115  0FFD  082B               	movf	___lmul@product,w
  6116  0FFE  00A3               	movwf	?___lmul
  6117  0FFF  0008               	return
  6118  1000                     __end_of___lmul:	
  6119                           
  6120                           	psect	bssCOMMON
  6121  007C                     __pbssCOMMON:	
  6122  007C                     _ho_cnt:	
  6123  007C                     	ds	2
  6124                           
  6125                           	psect	bssBANK0
  6126  0068                     __pbssBANK0:	
  6127  0068                     _battery_voltage_value:	
  6128  0068                     	ds	2
  6129  006A                     _Adjust_Pout_Flag:	
  6130  006A                     	ds	1
  6131  006B                     _today_index:	
  6132  006B                     	ds	1
  6133                           
  6134                           	psect	bssBANK1
  6135  00A0                     __pbssBANK1:	
  6136  00A0                     _PWM:	
  6137  00A0                     	ds	3
  6138  00A3                     _bost_pwm1_value:	
  6139  00A3                     	ds	2
  6140  00A5                     _bost_pwm2_value:	
  6141  00A5                     	ds	2
  6142  00A7                     _buck_pwm_value:	
  6143  00A7                     	ds	2
  6144  00A9                     _charge_current_value:	
  6145  00A9                     	ds	2
  6146  00AB                     _crc_data:	
  6147  00AB                     	ds	2
  6148  00AD                     _discharge_current_value:	
  6149  00AD                     	ds	2
  6150  00AF                     _load_voltage_value:	
  6151  00AF                     	ds	2
  6152  00B1                     _mcu_value:	
  6153  00B1                     	ds	2
  6154  00B3                     _pv_voltage_value:	
  6155  00B3                     	ds	2
  6156  00B5                     _charge_index:	
  6157  00B5                     	ds	1
  6158  00B6                     _device_status:	
  6159  00B6                     	ds	1
  6160  00B7                     _discharge1_index:	
  6161  00B7                     	ds	1
  6162  00B8                     _discharge2_index:	
  6163  00B8                     	ds	1
  6164  00B9                     _have_person1_flag:	
  6165  00B9                     	ds	1
  6166  00BA                     _have_person2_flag:	
  6167  00BA                     	ds	1
  6168  00BB                     _led_out_ctrl:	
  6169  00BB                     	ds	1
  6170  00BC                     _light2_mode:	
  6171  00BC                     	ds	1
  6172  00BD                     _light_mode:	
  6173  00BD                     	ds	1
  6174  00BE                     _mcu_temp_index:	
  6175  00BE                     	ds	1
  6176  00BF                     _pid_index:	
  6177  00BF                     	ds	1
  6178  00C0                     _system_status:	
  6179  00C0                     	ds	1
  6180  00C1                     _t1:	
  6181  00C1                     	ds	1
  6182  00C2                     _t2:	
  6183  00C2                     	ds	1
  6184  00C3                     _t3:	
  6185  00C3                     	ds	1
  6186  00C4                     _t4:	
  6187  00C4                     	ds	1
  6188  00C5                     _uart1_receive_byte_count:	
  6189  00C5                     	ds	1
  6190  00C6                     _work_mode:	
  6191  00C6                     	ds	1
  6192  00C7                     _light_time:	
  6193  00C7                     	ds	2
  6194                           
  6195                           	psect	dataBANK1
  6196  00C9                     __pdataBANK1:	
  6197  00C9                     _light_pv:	
  6198  00C9                     	ds	3
  6199  00CC                     _load_cc_I:	
  6200  00CC                     	ds	3
  6201  00CF                     _step_05_load_percent:	
  6202  00CF                     	ds	3
  6203  00D2                     _step_01_time_limit:	
  6204  00D2                     	ds	2
  6205  00D4                     _step_02_time_limit:	
  6206  00D4                     	ds	2
  6207  00D6                     _step_03_time_limit:	
  6208  00D6                     	ds	2
  6209  00D8                     _step_04_time_limit:	
  6210  00D8                     	ds	2
  6211  00DA                     _bt_id:	
  6212  00DA                     	ds	1
  6213  00DB                     _volt_id:	
  6214  00DB                     	ds	1
  6215  00DC                     _voltage_adjust_index:	
  6216  00DC                     	ds	1
  6217                           
  6218                           	psect	bssBANK2
  6219  0120                     __pbssBANK2:	
  6220  0120                     _b_v:	
  6221  0120                     	ds	3
  6222  0123                     _discharge_current2_value:	
  6223  0123                     	ds	2
  6224  0125                     _load_voltage2_value:	
  6225  0125                     	ds	2
  6226  0127                     _temperature_value:	
  6227  0127                     	ds	2
  6228  0129                     _KEY_STATE:	
  6229  0129                     	ds	1
  6230  012A                     _battery_voltage_status:	
  6231  012A                     	ds	1
  6232  012B                     _handle_an0_process_flag:	
  6233  012B                     	ds	1
  6234  012C                     _handle_an11_process_flag:	
  6235  012C                     	ds	1
  6236  012D                     _handle_an1_process_flag:	
  6237  012D                     	ds	1
  6238  012E                     _handle_an2_process_flag:	
  6239  012E                     	ds	1
  6240  012F                     _handle_an3_process_flag:	
  6241  012F                     	ds	1
  6242  0130                     _handle_an4_process_flag:	
  6243  0130                     	ds	1
  6244  0131                     _handle_an8_process_flag:	
  6245  0131                     	ds	1
  6246  0132                     _handle_an9_process_flag:	
  6247  0132                     	ds	1
  6248  0133                     _handle_scan_key_flag:	
  6249  0133                     	ds	1
  6250  0134                     _handle_short1_flag:	
  6251  0134                     	ds	1
  6252  0135                     _handle_short2_flag:	
  6253  0135                     	ds	1
  6254  0136                     _have_person1_time_count:	
  6255  0136                     	ds	1
  6256  0137                     _have_person2_time_count:	
  6257  0137                     	ds	1
  6258  0138                     _ird_receive_flag:	
  6259  0138                     	ds	1
  6260  0139                     _ird_receive_time_count:	
  6261  0139                     	ds	1
  6262  013A                     _ird_status:	
  6263  013A                     	ds	1
  6264  013B                     _key1_index:	
  6265  013B                     	ds	1
  6266  013C                     _key1_time_count:	
  6267  013C                     	ds	1
  6268  013D                     _limit_power_pid2_flag:	
  6269  013D                     	ds	1
  6270  013E                     _limit_power_pid_flag:	
  6271  013E                     	ds	1
  6272  013F                     _mppt_status:	
  6273  013F                     	ds	1
  6274  0140                     _nop_index:	
  6275  0140                     	ds	1
  6276  0141                     _open_an0_time:	
  6277  0141                     	ds	1
  6278  0142                     _open_an11_time:	
  6279  0142                     	ds	1
  6280  0143                     _open_an1_time:	
  6281  0143                     	ds	1
  6282  0144                     _open_an2_time:	
  6283  0144                     	ds	1
  6284  0145                     _open_an3_time:	
  6285  0145                     	ds	1
  6286  0146                     _open_an4_time:	
  6287  0146                     	ds	1
  6288  0147                     _open_an8_time:	
  6289  0147                     	ds	1
  6290  0148                     _open_an9_time:	
  6291  0148                     	ds	1
  6292  0149                     _open_discharge_time:	
  6293  0149                     	ds	1
  6294  014A                     _open_sleep_time:	
  6295  014A                     	ds	1
  6296  014B                     _pv_index:	
  6297  014B                     	ds	1
  6298  014C                     _pv_voltage_status:	
  6299  014C                     	ds	1
  6300  014D                     _receive_bit_count:	
  6301  014D                     	ds	1
  6302  014E                     _rx_frame_kind:	
  6303  014E                     	ds	1
  6304  014F                     _scan_key_time_count:	
  6305  014F                     	ds	1
  6306  0150                     _sys_mode:	
  6307  0150                     	ds	1
  6308  0151                     _system_check_time:	
  6309  0151                     	ds	1
  6310  0152                     _t5:	
  6311  0152                     	ds	1
  6312  0153                     _temper_time_count:	
  6313  0153                     	ds	1
  6314  0154                     _uart1_receive_flag:	
  6315  0154                     	ds	1
  6316  0155                     _uart1_time_count:	
  6317  0155                     	ds	1
  6318  0156                     _uart_send_byte_count:	
  6319  0156                     	ds	1
  6320  0157                     _uart_send_delay_timer:	
  6321  0157                     	ds	1
  6322  0158                     _uart_send_end_flag:	
  6323  0158                     	ds	1
  6324  0159                     _uart_send_point:	
  6325  0159                     	ds	1
  6326                           
  6327                           	psect	dataBANK2
  6328  015A                     __pdataBANK2:	
  6329  015A                     _dianchi_guoya_baohu:	
  6330  015A                     	ds	3
  6331  015D                     _shuchu_shortout_voltage:	
  6332  015D                     	ds	3
  6333  0160                     _step_01_load_percent:	
  6334  0160                     	ds	3
  6335  0163                     _step_02_load_percent:	
  6336  0163                     	ds	3
  6337  0166                     _step_03_load_percent:	
  6338  0166                     	ds	3
  6339  0169                     _step_04_load_percent:	
  6340  0169                     	ds	3
  6341  016C                     _step_05_time_limit:	
  6342  016C                     	ds	2
  6343  016E                     _KEY_VALUE:	
  6344  016E                     	ds	1
  6345  016F                     _sys_temper_flag:	
  6346  016F                     	ds	1
  6347                           
  6348                           	psect	bssBANK3
  6349  01A0                     __pbssBANK3:	
  6350  01A0                     _light_time_level:	
  6351  01A0                     	ds	4
  6352  01A4                     _PWM2:	
  6353  01A4                     	ds	3
  6354  01A7                     _bt_00_hv:	
  6355  01A7                     	ds	3
  6356  01AA                     _bt_00_lv:	
  6357  01AA                     	ds	3
  6358  01AD                     _I_prev:	
  6359  01AD                     	ds	2
  6360  01AF                     _battery_low_time_count:	
  6361  01AF                     	ds	2
  6362  01B1                     _load2_short_time_count:	
  6363  01B1                     	ds	2
  6364  01B3                     _load_short_time_count:	
  6365  01B3                     	ds	2
  6366  01B5                     _system_time_count:	
  6367  01B5                     	ds	2
  6368  01B7                     _bt_time_count:	
  6369  01B7                     	ds	1
  6370  01B8                     _mcu_t00_time_count:	
  6371  01B8                     	ds	1
  6372  01B9                     _mcu_t01_time_count:	
  6373  01B9                     	ds	1
  6374  01BA                     _mcu_t02_time_count:	
  6375  01BA                     	ds	1
  6376  01BB                     _mcu_t03_time_count:	
  6377  01BB                     	ds	1
  6378  01BC                     _over_temper_time_count:	
  6379  01BC                     	ds	1
  6380  01BD                     _PID_CC_discharge:	
  6381  01BD                     	ds	21
  6382                           
  6383                           	psect	dataBANK3
  6384  01D2                     __pdataBANK3:	
  6385  01D2                     _charge_i_limit:	
  6386  01D2                     	ds	3
  6387  01D5                     _dianchi_cv_level:	
  6388  01D5                     	ds	3
  6389  01D8                     _dianchi_guoya_huifu:	
  6390  01D8                     	ds	3
  6391  01DB                     _dianchi_qianya_baohu:	
  6392  01DB                     	ds	3
  6393  01DE                     _dianchi_qianya_huifu:	
  6394  01DE                     	ds	3
  6395  01E1                     _discharge_i_baohu:	
  6396  01E1                     	ds	3
  6397  01E4                     _discharge_i_limit:	
  6398  01E4                     	ds	3
  6399  01E7                     _light_off_pv_level:	
  6400  01E7                     	ds	3
  6401  01EA                     _light_on_pv_level:	
  6402  01EA                     	ds	3
  6403  01ED                     _shuchu_open_voltage:	
  6404  01ED                     	ds	3
  6405                           
  6406                           	psect	bssBANK4
  6407  0220                     __pbssBANK4:	
  6408  0220                     _PWM_I:	
  6409  0220                     	ds	3
  6410  0223                     _charge_I:	
  6411  0223                     	ds	3
  6412  0226                     _load_I:	
  6413  0226                     	ds	3
  6414  0229                     _load_v:	
  6415  0229                     	ds	3
  6416  022C                     _p_v:	
  6417  022C                     	ds	3
  6418  022F                     _an0_time_count:	
  6419  022F                     	ds	2
  6420  0231                     _an11_time_count:	
  6421  0231                     	ds	2
  6422  0233                     _an1_time_count:	
  6423  0233                     	ds	2
  6424  0235                     _an2_time_count:	
  6425  0235                     	ds	2
  6426  0237                     _an3_time_count:	
  6427  0237                     	ds	2
  6428  0239                     _an4_time_count:	
  6429  0239                     	ds	2
  6430  023B                     _an8_time_count:	
  6431  023B                     	ds	2
  6432  023D                     _an9_time_count:	
  6433  023D                     	ds	2
  6434  023F                     _mi_cnt:	
  6435  023F                     	ds	2
  6436  0241                     _ms_cnt:	
  6437  0241                     	ds	2
  6438  0243                     _se_cnt:	
  6439  0243                     	ds	2
  6440  0245                     _PID_CC2_discharge:	
  6441  0245                     	ds	21
  6442                           
  6443                           	psect	dataBANK4
  6444  025A                     __pdataBANK4:	
  6445  025A                     _Load2_Pmax:	
  6446  025A                     	ds	3
  6447  025D                     _Load_Pmax:	
  6448  025D                     	ds	3
  6449  0260                     _bt_volt_00:	
  6450  0260                     	ds	3
  6451  0263                     _bt_volt_20:	
  6452  0263                     	ds	3
  6453  0266                     _bt_volt_40:	
  6454  0266                     	ds	3
  6455  0269                     _bt_volt_60:	
  6456  0269                     	ds	3
  6457  026C                     _bt_volt_80:	
  6458  026C                     	ds	3
  6459                           
  6460                           	psect	bssBANK5
  6461  02A0                     __pbssBANK5:	
  6462  02A0                     _day_time_count:	
  6463  02A0                     	ds	4
  6464  02A4                     _night_time_count:	
  6465  02A4                     	ds	4
  6466  02A8                     _pv_time_count:	
  6467  02A8                     	ds	4
  6468  02AC                     _PWM_I2:	
  6469  02AC                     	ds	3
  6470  02AF                     _cv_level_time_count:	
  6471  02AF                     	ds	2
  6472  02B1                     _index_01_count:	
  6473  02B1                     	ds	2
  6474  02B3                     _index_02_count:	
  6475  02B3                     	ds	2
  6476  02B5                     _index_03_count:	
  6477  02B5                     	ds	2
  6478  02B7                     _index_04_count:	
  6479  02B7                     	ds	2
  6480  02B9                     _index_05_count:	
  6481  02B9                     	ds	2
  6482  02BB                     _index_06_count:	
  6483  02BB                     	ds	2
  6484  02BD                     _involid_time_count:	
  6485  02BD                     	ds	2
  6486  02BF                     _load2_open_time_count:	
  6487  02BF                     	ds	2
  6488  02C1                     _load_open_time_count:	
  6489  02C1                     	ds	2
  6490  02C3                     _mppt_time_count:	
  6491  02C3                     	ds	2
  6492  02C5                     _over_load1_time_count:	
  6493  02C5                     	ds	2
  6494  02C7                     _over_load2_time_count:	
  6495  02C7                     	ds	2
  6496  02C9                     _sleep_time_count:	
  6497  02C9                     	ds	2
  6498  02CB                     _PID_CV_charge:	
  6499  02CB                     	ds	21
  6500                           
  6501                           	psect	dataBANK5
  6502  02E6                     __pdataBANK5:	
  6503  02E6                     _ird_data:	
  6504  02E6                     	ds	4
  6505                           
  6506                           	psect	bssBANK6
  6507  0320                     __pbssBANK6:	
  6508  0320                     _PID_CC_charge:	
  6509  0320                     	ds	21
  6510                           
  6511                           	psect	bssBANK7
  6512  03A0                     __pbssBANK7:	
  6513  03A0                     _uart1_tx_buf:	
  6514  03A0                     	ds	80
  6515                           
  6516                           	psect	bssBANK8
  6517  0420                     __pbssBANK8:	
  6518  0420                     _uart1_rx_buf:	
  6519  0420                     	ds	80
  6520                           
  6521                           	psect	clrtext
  6522  085A                     clear_ram0:	
  6523                           ;	Called with FSR0 containing the base address, and
  6524                           ;	btemp/btemp+1 has the size to clear
  6525                           
  6526  085A  0064               	clrwdt	;clear the watchdog before getting into this loop
  6527  085B                     clrloop0:	
  6528  085B  3001               	movlw	1
  6529  085C  0180               	clrf	0	;clear RAM location pointed to by FSR
  6530  085D  3101               	addfsr 0,1
  6531  085E  02FE               	subwf	126,f
  6532  085F  3000               	movlw	0
  6533  0860  3BFF               	subwfb	127,f
  6534  0861  087F               	movf	127,w
  6535  0862  047E               	iorwf	126,w
  6536  0863  1903               	btfsc	3,2
  6537  0864  3400               	retlw	0	;all done for this memory range, return
  6538  0865  285B               	goto	clrloop0	;have we reached the end yet?
  6539                           
  6540                           	psect	inittext
  6541  084E                     init_ram:	
  6542  084E  00FE               	movwf	126
  6543  084F                     initloop:	
  6544  084F  0012               	moviw fsr0++
  6545  0850  001E               	movwi fsr1++
  6546  0851  3001               	movlw	1
  6547  0852  02FE               	subwf	126,f
  6548  0853  3000               	movlw	0
  6549  0854  3BFF               	subwfb	127,f
  6550  0855  087F               	movf	127,w
  6551  0856  047E               	iorwf	126,w
  6552  0857  1903               	btfsc	3,2
  6553  0858  3400               	retlw	0
  6554  0859  284F               	goto	initloop
  6555                           
  6556                           	psect	cstackBANK5
  6557  02E0                     __pcstackBANK5:	
  6558  02E0                     _handle_ad_loop$3196:	
  6559                           
  6560                           ; 3 bytes @ 0x0
  6561  02E0                     	ds	3
  6562  02E3                     handle_ad_loop@data_cc_var:	
  6563                           
  6564                           ; 3 bytes @ 0x3
  6565  02E3                     	ds	3
  6566                           
  6567                           	psect	cstackBANK1
  6568  00DD                     __pcstackBANK1:	
  6569  00DD                     start_ad_convert@ch:	
  6570  00DD                     pid_calc@dError:	
  6571                           ; 1 bytes @ 0x0
  6572                           
  6573  00DD                     pid_calc_2@dError:	
  6574                           ; 3 bytes @ 0x0
  6575                           
  6576                           
  6577                           ; 3 bytes @ 0x0
  6578  00DD                     	ds	1
  6579  00DE                     start_ad_convert@ad_h:	
  6580                           
  6581                           ; 2 bytes @ 0x1
  6582  00DE                     	ds	2
  6583  00E0                     start_ad_convert@ad_l:	
  6584  00E0                     _pid_calc$3192:	
  6585                           ; 2 bytes @ 0x3
  6586                           
  6587  00E0                     _pid_calc_2$3194:	
  6588                           ; 3 bytes @ 0x3
  6589                           
  6590                           
  6591                           ; 3 bytes @ 0x3
  6592  00E0                     	ds	2
  6593  00E2                     start_ad_convert@temp:	
  6594                           
  6595                           ; 2 bytes @ 0x5
  6596  00E2                     	ds	1
  6597  00E3                     _pid_calc$3193:	
  6598  00E3                     _pid_calc_2$3195:	
  6599                           ; 3 bytes @ 0x6
  6600                           
  6601                           
  6602                           ; 3 bytes @ 0x6
  6603  00E3                     	ds	1
  6604  00E4                     start_ad_convert@ad_ch:	
  6605                           
  6606                           ; 1 bytes @ 0x7
  6607  00E4                     	ds	1
  6608  00E5                     start_ad_convert@j:	
  6609                           
  6610                           ; 1 bytes @ 0x8
  6611  00E5                     	ds	1
  6612  00E6                     start_ad_convert@i:	
  6613  00E6                     pid_calc@dk:	
  6614                           ; 1 bytes @ 0x9
  6615                           
  6616  00E6                     pid_calc_2@dk:	
  6617                           ; 3 bytes @ 0x9
  6618                           
  6619                           
  6620                           ; 3 bytes @ 0x9
  6621  00E6                     	ds	3
  6622  00E9                     pid_calc@PWM_var:	
  6623  00E9                     pid_calc_2@PWM_var:	
  6624                           ; 3 bytes @ 0xC
  6625                           
  6626                           
  6627                           ; 3 bytes @ 0xC
  6628  00E9                     	ds	3
  6629  00EC                     pid_calc_2@pp:	
  6630  00EC                     pid_calc@Error:	
  6631                           ; 1 bytes @ 0xF
  6632                           
  6633                           
  6634                           ; 3 bytes @ 0xF
  6635  00EC                     	ds	1
  6636  00ED                     pid_calc_2@Error:	
  6637                           
  6638                           ; 3 bytes @ 0x10
  6639  00ED                     	ds	3
  6640                           
  6641                           	psect	cstackCOMMON
  6642  0070                     __pcstackCOMMON:	
  6643  0070                     ?_Disable_Bost_Pwm1:	
  6644  0070                     ?_Disable_Bost_Pwm2:	
  6645                           ; 0 bytes @ 0x0
  6646                           
  6647  0070                     ?_Disable_Buck_Pwm:	
  6648                           ; 0 bytes @ 0x0
  6649                           
  6650  0070                     ?_Enable_Bost_Pwm1:	
  6651                           ; 0 bytes @ 0x0
  6652                           
  6653  0070                     ?_Enable_Bost_Pwm2:	
  6654                           ; 0 bytes @ 0x0
  6655                           
  6656  0070                     ?_init_timer1:	
  6657                           ; 0 bytes @ 0x0
  6658                           
  6659  0070                     ?_init_uart1:	
  6660                           ; 0 bytes @ 0x0
  6661                           
  6662  0070                     ?_init_pwm:	
  6663                           ; 0 bytes @ 0x0
  6664                           
  6665  0070                     ?_handle_ad_loop:	
  6666                           ; 0 bytes @ 0x0
  6667                           
  6668  0070                     ?_handle_task_process:	
  6669                           ; 0 bytes @ 0x0
  6670                           
  6671  0070                     ?_handle_uart_rx_buf:	
  6672                           ; 0 bytes @ 0x0
  6673                           
  6674  0070                     ?_Mppt_Charge:	
  6675                           ; 0 bytes @ 0x0
  6676                           
  6677  0070                     ?_init_adc:	
  6678                           ; 0 bytes @ 0x0
  6679                           
  6680  0070                     ?_isr:	
  6681                           ; 0 bytes @ 0x0
  6682                           
  6683  0070                     ?_init_interrupt:	
  6684                           ; 0 bytes @ 0x0
  6685                           
  6686  0070                     ?_read_param_eeprom:	
  6687                           ; 0 bytes @ 0x0
  6688                           
  6689  0070                     ?_auto_system:	
  6690                           ; 0 bytes @ 0x0
  6691                           
  6692  0070                     ?_Init_Ird:	
  6693                           ; 0 bytes @ 0x0
  6694                           
  6695  0070                     ?_init_key:	
  6696                           ; 0 bytes @ 0x0
  6697                           
  6698  0070                     ?_scan_key_value:	
  6699                           ; 0 bytes @ 0x0
  6700                           
  6701  0070                     ?_init_osc:	
  6702                           ; 0 bytes @ 0x0
  6703                           
  6704  0070                     ?_init_port:	
  6705                           ; 0 bytes @ 0x0
  6706                           
  6707  0070                     ?_driver_init:	
  6708                           ; 0 bytes @ 0x0
  6709                           
  6710  0070                     ?_middle_init:	
  6711                           ; 0 bytes @ 0x0
  6712                           
  6713  0070                     ?_application_init:	
  6714                           ; 0 bytes @ 0x0
  6715                           
  6716  0070                     ?_Enable_Buck_Pwm:	
  6717                           ; 0 bytes @ 0x0
  6718                           
  6719  0070                     ?i1_Disable_Bost_Pwm1:	
  6720                           ; 0 bytes @ 0x0
  6721                           
  6722  0070                     ??i1_Disable_Bost_Pwm1:	
  6723                           ; 0 bytes @ 0x0
  6724                           
  6725  0070                     ?i1_Disable_Bost_Pwm2:	
  6726                           ; 0 bytes @ 0x0
  6727                           
  6728  0070                     ??i1_Disable_Bost_Pwm2:	
  6729                           ; 0 bytes @ 0x0
  6730                           
  6731  0070                     ?i1_Set_Bost_Pwm1_Duty:	
  6732                           ; 0 bytes @ 0x0
  6733                           
  6734  0070                     ?i1_Set_Bost_Pwm2_Duty:	
  6735                           ; 0 bytes @ 0x0
  6736                           
  6737  0070                     ?_eeprom_read:	
  6738                           ; 0 bytes @ 0x0
  6739                           
  6740  0070                     ?_main:	
  6741                           ; 1 bytes @ 0x0
  6742                           
  6743  0070                     i1Set_Bost_Pwm1_Duty@dduty:	
  6744                           ; 2 bytes @ 0x0
  6745                           
  6746  0070                     i1Set_Bost_Pwm2_Duty@dduty:	
  6747                           ; 2 bytes @ 0x0
  6748                           
  6749                           
  6750                           ; 2 bytes @ 0x0
  6751  0070                     	ds	2
  6752  0072                     ??i1_Set_Bost_Pwm1_Duty:	
  6753  0072                     ??i1_Set_Bost_Pwm2_Duty:	
  6754                           ; 0 bytes @ 0x2
  6755                           
  6756                           
  6757                           ; 0 bytes @ 0x2
  6758  0072                     	ds	2
  6759  0074                     ??_isr:	
  6760                           
  6761                           ; 0 bytes @ 0x4
  6762  0074                     	ds	8
  6763                           
  6764                           	psect	cstackBANK0
  6765  0020                     __pcstackBANK0:	
  6766  0020                     isr@r1_data:	
  6767                           
  6768                           ; 1 bytes @ 0x0
  6769  0020                     	ds	1
  6770  0021                     isr@time_cnt:	
  6771                           
  6772                           ; 2 bytes @ 0x1
  6773  0021                     	ds	2
  6774  0023                     ?_Set_Bost_Pwm1_Duty:	
  6775  0023                     ??_Disable_Bost_Pwm1:	
  6776                           ; 0 bytes @ 0x3
  6777                           
  6778  0023                     ?_Set_Bost_Pwm2_Duty:	
  6779                           ; 0 bytes @ 0x3
  6780                           
  6781  0023                     ??_Disable_Bost_Pwm2:	
  6782                           ; 0 bytes @ 0x3
  6783                           
  6784  0023                     ??_eeprom_read:	
  6785                           ; 0 bytes @ 0x3
  6786                           
  6787  0023                     ??_Disable_Buck_Pwm:	
  6788                           ; 0 bytes @ 0x3
  6789                           
  6790  0023                     ?_Set_Buck_Pwm_Duty:	
  6791                           ; 0 bytes @ 0x3
  6792                           
  6793  0023                     ??_Enable_Bost_Pwm1:	
  6794                           ; 0 bytes @ 0x3
  6795                           
  6796  0023                     ??_Enable_Bost_Pwm2:	
  6797                           ; 0 bytes @ 0x3
  6798                           
  6799  0023                     ??_init_timer1:	
  6800                           ; 0 bytes @ 0x3
  6801                           
  6802  0023                     ??_init_uart1:	
  6803                           ; 0 bytes @ 0x3
  6804                           
  6805  0023                     ??_init_pwm:	
  6806                           ; 0 bytes @ 0x3
  6807                           
  6808  0023                     ??_init_adc:	
  6809                           ; 0 bytes @ 0x3
  6810                           
  6811  0023                     ?_delay_ms:	
  6812                           ; 0 bytes @ 0x3
  6813                           
  6814  0023                     ??_init_interrupt:	
  6815                           ; 0 bytes @ 0x3
  6816                           
  6817  0023                     ??_Init_Ird:	
  6818                           ; 0 bytes @ 0x3
  6819                           
  6820  0023                     ??_init_key:	
  6821                           ; 0 bytes @ 0x3
  6822                           
  6823  0023                     ??_init_osc:	
  6824                           ; 0 bytes @ 0x3
  6825                           
  6826  0023                     ??_init_port:	
  6827                           ; 0 bytes @ 0x3
  6828                           
  6829  0023                     ??_driver_init:	
  6830                           ; 0 bytes @ 0x3
  6831                           
  6832  0023                     ??_Enable_Buck_Pwm:	
  6833                           ; 0 bytes @ 0x3
  6834                           
  6835  0023                     ?_memset:	
  6836                           ; 0 bytes @ 0x3
  6837                           
  6838  0023                     ?_crc16:	
  6839                           ; 2 bytes @ 0x3
  6840                           
  6841  0023                     ?___wmul:	
  6842                           ; 2 bytes @ 0x3
  6843                           
  6844  0023                     ?___ftpack:	
  6845                           ; 2 bytes @ 0x3
  6846                           
  6847  0023                     ?___lldiv:	
  6848                           ; 3 bytes @ 0x3
  6849                           
  6850  0023                     ?___lmul:	
  6851                           ; 4 bytes @ 0x3
  6852                           
  6853  0023                     eeprom_read@addr:	
  6854                           ; 4 bytes @ 0x3
  6855                           
  6856  0023                     delay_ms@count:	
  6857                           ; 1 bytes @ 0x3
  6858                           
  6859  0023                     crc16@puchMsg:	
  6860                           ; 2 bytes @ 0x3
  6861                           
  6862  0023                     Set_Buck_Pwm_Duty@duty:	
  6863                           ; 2 bytes @ 0x3
  6864                           
  6865  0023                     Set_Bost_Pwm1_Duty@dduty:	
  6866                           ; 2 bytes @ 0x3
  6867                           
  6868  0023                     Set_Bost_Pwm2_Duty@dduty:	
  6869                           ; 2 bytes @ 0x3
  6870                           
  6871  0023                     memset@p1:	
  6872                           ; 2 bytes @ 0x3
  6873                           
  6874  0023                     ___wmul@multiplier:	
  6875                           ; 2 bytes @ 0x3
  6876                           
  6877  0023                     ___ftpack@arg:	
  6878                           ; 2 bytes @ 0x3
  6879                           
  6880  0023                     ___lldiv@divisor:	
  6881                           ; 3 bytes @ 0x3
  6882                           
  6883  0023                     ___lmul@multiplier:	
  6884                           ; 4 bytes @ 0x3
  6885                           
  6886                           
  6887                           ; 4 bytes @ 0x3
  6888  0023                     	ds	2
  6889  0025                     ??_Set_Bost_Pwm1_Duty:	
  6890  0025                     ??_Set_Bost_Pwm2_Duty:	
  6891                           ; 0 bytes @ 0x5
  6892                           
  6893  0025                     ??_Set_Buck_Pwm_Duty:	
  6894                           ; 0 bytes @ 0x5
  6895                           
  6896  0025                     ??_delay_ms:	
  6897                           ; 0 bytes @ 0x5
  6898                           
  6899  0025                     crc16@usDataLen:	
  6900                           ; 0 bytes @ 0x5
  6901                           
  6902  0025                     delay_ms@i:	
  6903                           ; 1 bytes @ 0x5
  6904                           
  6905  0025                     memset@c:	
  6906                           ; 2 bytes @ 0x5
  6907                           
  6908  0025                     ___wmul@multiplicand:	
  6909                           ; 2 bytes @ 0x5
  6910                           
  6911                           
  6912                           ; 2 bytes @ 0x5
  6913  0025                     	ds	1
  6914  0026                     ??_crc16:	
  6915  0026                     ___ftpack@exp:	
  6916                           ; 0 bytes @ 0x6
  6917                           
  6918  0026                     crc16@uIndex:	
  6919                           ; 1 bytes @ 0x6
  6920                           
  6921                           
  6922                           ; 4 bytes @ 0x6
  6923  0026                     	ds	1
  6924  0027                     ??___wmul:	
  6925  0027                     ___ftpack@sign:	
  6926                           ; 0 bytes @ 0x7
  6927                           
  6928  0027                     delay_ms@j:	
  6929                           ; 1 bytes @ 0x7
  6930                           
  6931  0027                     memset@n:	
  6932                           ; 2 bytes @ 0x7
  6933                           
  6934  0027                     ___wmul@product:	
  6935                           ; 2 bytes @ 0x7
  6936                           
  6937  0027                     ___lldiv@dividend:	
  6938                           ; 2 bytes @ 0x7
  6939                           
  6940  0027                     ___lmul@multiplicand:	
  6941                           ; 4 bytes @ 0x7
  6942                           
  6943                           
  6944                           ; 4 bytes @ 0x7
  6945  0027                     	ds	1
  6946  0028                     ??___ftpack:	
  6947                           
  6948                           ; 0 bytes @ 0x8
  6949  0028                     	ds	1
  6950  0029                     ??_memset:	
  6951  0029                     ?___lwdiv:	
  6952                           ; 0 bytes @ 0x9
  6953                           
  6954  0029                     ___lwdiv@divisor:	
  6955                           ; 2 bytes @ 0x9
  6956                           
  6957  0029                     memset@p:	
  6958                           ; 2 bytes @ 0x9
  6959                           
  6960                           
  6961                           ; 2 bytes @ 0x9
  6962  0029                     	ds	1
  6963  002A                     crc16@uchCRCHi:	
  6964                           
  6965                           ; 1 bytes @ 0xA
  6966  002A                     	ds	1
  6967  002B                     ?_pid_init:	
  6968  002B                     ??___lldiv:	
  6969                           ; 0 bytes @ 0xB
  6970                           
  6971  002B                     ??___lmul:	
  6972                           ; 0 bytes @ 0xB
  6973                           
  6974  002B                     ?___awtoft:	
  6975                           ; 0 bytes @ 0xB
  6976                           
  6977  002B                     ?___lbtoft:	
  6978                           ; 3 bytes @ 0xB
  6979                           
  6980  002B                     crc16@uchCRCLo:	
  6981                           ; 3 bytes @ 0xB
  6982                           
  6983  002B                     pid_init@pp:	
  6984                           ; 1 bytes @ 0xB
  6985                           
  6986  002B                     ___awtoft@c:	
  6987                           ; 2 bytes @ 0xB
  6988                           
  6989  002B                     ___lwdiv@dividend:	
  6990                           ; 2 bytes @ 0xB
  6991                           
  6992  002B                     ___lldiv@quotient:	
  6993                           ; 2 bytes @ 0xB
  6994                           
  6995  002B                     ___lmul@product:	
  6996                           ; 4 bytes @ 0xB
  6997                           
  6998                           
  6999                           ; 4 bytes @ 0xB
  7000  002B                     	ds	2
  7001  002D                     ??_pid_init:	
  7002  002D                     ??___lwdiv:	
  7003                           ; 0 bytes @ 0xD
  7004                           
  7005  002D                     ___lwdiv@counter:	
  7006                           ; 0 bytes @ 0xD
  7007                           
  7008                           
  7009                           ; 1 bytes @ 0xD
  7010  002D                     	ds	1
  7011  002E                     ??___awtoft:	
  7012  002E                     ___awtoft@sign:	
  7013                           ; 0 bytes @ 0xE
  7014                           
  7015  002E                     ___lwdiv@quotient:	
  7016                           ; 1 bytes @ 0xE
  7017                           
  7018                           
  7019                           ; 2 bytes @ 0xE
  7020  002E                     	ds	1
  7021  002F                     ??___lbtoft:	
  7022  002F                     ___lbtoft@c:	
  7023                           ; 0 bytes @ 0xF
  7024                           
  7025  002F                     ___lldiv@counter:	
  7026                           ; 1 bytes @ 0xF
  7027                           
  7028                           
  7029                           ; 1 bytes @ 0xF
  7030  002F                     	ds	1
  7031  0030                     ?_start_ad_convert:	
  7032  0030                     ?___lwtoft:	
  7033                           ; 2 bytes @ 0x10
  7034                           
  7035  0030                     ___lwtoft@c:	
  7036                           ; 3 bytes @ 0x10
  7037                           
  7038                           
  7039                           ; 2 bytes @ 0x10
  7040  0030                     	ds	2
  7041  0032                     ??_start_ad_convert:	
  7042                           
  7043                           ; 0 bytes @ 0x12
  7044  0032                     	ds	1
  7045  0033                     ??___lwtoft:	
  7046  0033                     ?___ftmul:	
  7047                           ; 0 bytes @ 0x13
  7048                           
  7049  0033                     ___ftmul@f1:	
  7050                           ; 3 bytes @ 0x13
  7051                           
  7052                           
  7053                           ; 3 bytes @ 0x13
  7054  0033                     	ds	3
  7055  0036                     ___ftmul@f2:	
  7056                           
  7057                           ; 3 bytes @ 0x16
  7058  0036                     	ds	3
  7059  0039                     ??___ftmul:	
  7060                           
  7061                           ; 0 bytes @ 0x19
  7062  0039                     	ds	3
  7063  003C                     ___ftmul@exp:	
  7064                           
  7065                           ; 1 bytes @ 0x1C
  7066  003C                     	ds	1
  7067  003D                     ___ftmul@f3_as_product:	
  7068                           
  7069                           ; 3 bytes @ 0x1D
  7070  003D                     	ds	3
  7071  0040                     ___ftmul@cntr:	
  7072                           
  7073                           ; 1 bytes @ 0x20
  7074  0040                     	ds	1
  7075  0041                     ___ftmul@sign:	
  7076                           
  7077                           ; 1 bytes @ 0x21
  7078  0041                     	ds	1
  7079  0042                     ?___ftadd:	
  7080  0042                     ?___ftdiv:	
  7081                           ; 3 bytes @ 0x22
  7082                           
  7083  0042                     ___ftadd@f1:	
  7084                           ; 3 bytes @ 0x22
  7085                           
  7086  0042                     ___ftdiv@f2:	
  7087                           ; 3 bytes @ 0x22
  7088                           
  7089                           
  7090                           ; 3 bytes @ 0x22
  7091  0042                     	ds	3
  7092  0045                     ___ftadd@f2:	
  7093  0045                     ___ftdiv@f1:	
  7094                           ; 3 bytes @ 0x25
  7095                           
  7096                           
  7097                           ; 3 bytes @ 0x25
  7098  0045                     	ds	3
  7099  0048                     ??___ftadd:	
  7100  0048                     ??___ftdiv:	
  7101                           ; 0 bytes @ 0x28
  7102                           
  7103                           
  7104                           ; 0 bytes @ 0x28
  7105  0048                     	ds	3
  7106  004B                     ___ftadd@sign:	
  7107  004B                     ___ftdiv@cntr:	
  7108                           ; 1 bytes @ 0x2B
  7109                           
  7110                           
  7111                           ; 1 bytes @ 0x2B
  7112  004B                     	ds	1
  7113  004C                     ___ftadd@exp2:	
  7114  004C                     ___ftdiv@f3:	
  7115                           ; 1 bytes @ 0x2C
  7116                           
  7117                           
  7118                           ; 3 bytes @ 0x2C
  7119  004C                     	ds	1
  7120  004D                     ___ftadd@exp1:	
  7121                           
  7122                           ; 1 bytes @ 0x2D
  7123  004D                     	ds	1
  7124  004E                     ?___ftsub:	
  7125  004E                     ___ftsub@f2:	
  7126                           ; 3 bytes @ 0x2E
  7127                           
  7128                           
  7129                           ; 3 bytes @ 0x2E
  7130  004E                     	ds	1
  7131  004F                     ___ftdiv@exp:	
  7132                           
  7133                           ; 1 bytes @ 0x2F
  7134  004F                     	ds	1
  7135  0050                     ___ftdiv@sign:	
  7136                           
  7137                           ; 1 bytes @ 0x30
  7138  0050                     	ds	1
  7139  0051                     ??_read_param_eeprom:	
  7140  0051                     ??_application_init:	
  7141                           ; 0 bytes @ 0x31
  7142                           
  7143  0051                     ?___ftge:	
  7144                           ; 0 bytes @ 0x31
  7145                           
  7146  0051                     ?___fttol:	
  7147                           ; 1 bit 
  7148                           
  7149  0051                     read_param_eeprom@byte_h:	
  7150                           ; 4 bytes @ 0x31
  7151                           
  7152  0051                     ___ftge@ff1:	
  7153                           ; 1 bytes @ 0x31
  7154                           
  7155  0051                     ___ftsub@f1:	
  7156                           ; 3 bytes @ 0x31
  7157                           
  7158  0051                     ___fttol@f1:	
  7159                           ; 3 bytes @ 0x31
  7160                           
  7161  0051                     _application_init$3191:	
  7162                           ; 3 bytes @ 0x31
  7163                           
  7164                           
  7165                           ; 3 bytes @ 0x31
  7166  0051                     	ds	1
  7167  0052                     read_param_eeprom@byte_l:	
  7168                           
  7169                           ; 1 bytes @ 0x32
  7170  0052                     	ds	2
  7171  0054                     ??___ftsub:	
  7172  0054                     ___ftge@ff2:	
  7173                           ; 0 bytes @ 0x34
  7174                           
  7175                           
  7176                           ; 3 bytes @ 0x34
  7177  0054                     	ds	1
  7178  0055                     ??___fttol:	
  7179                           
  7180                           ; 0 bytes @ 0x35
  7181  0055                     	ds	2
  7182  0057                     ??___ftge:	
  7183  0057                     ?_pid_calc:	
  7184                           ; 0 bytes @ 0x37
  7185                           
  7186  0057                     ?_pid_calc_2:	
  7187                           ; 3 bytes @ 0x37
  7188                           
  7189  0057                     pid_calc@pp:	
  7190                           ; 3 bytes @ 0x37
  7191                           
  7192  0057                     pid_calc_2@NowPoint:	
  7193                           ; 2 bytes @ 0x37
  7194                           
  7195                           
  7196                           ; 2 bytes @ 0x37
  7197  0057                     	ds	1
  7198  0058                     ___fttol@sign1:	
  7199                           
  7200                           ; 1 bytes @ 0x38
  7201  0058                     	ds	1
  7202  0059                     pid_calc@NowPoint:	
  7203  0059                     ___fttol@lval:	
  7204                           ; 2 bytes @ 0x39
  7205                           
  7206                           
  7207                           ; 4 bytes @ 0x39
  7208  0059                     	ds	1
  7209  005A                     ??_pid_calc_2:	
  7210                           
  7211                           ; 0 bytes @ 0x3A
  7212  005A                     	ds	1
  7213  005B                     ??_pid_calc:	
  7214                           
  7215                           ; 0 bytes @ 0x3B
  7216  005B                     	ds	2
  7217  005D                     ___fttol@exp1:	
  7218                           
  7219                           ; 1 bytes @ 0x3D
  7220  005D                     	ds	1
  7221  005E                     ?_eeprom_write:	
  7222  005E                     ??_Mppt_Charge:	
  7223                           ; 0 bytes @ 0x3E
  7224                           
  7225  005E                     eeprom_write@value:	
  7226                           ; 0 bytes @ 0x3E
  7227                           
  7228                           
  7229                           ; 1 bytes @ 0x3E
  7230  005E                     	ds	1
  7231  005F                     ??_eeprom_write:	
  7232  005F                     eeprom_write@addr:	
  7233                           ; 0 bytes @ 0x3F
  7234                           
  7235                           
  7236                           ; 1 bytes @ 0x3F
  7237  005F                     	ds	1
  7238  0060                     ??_handle_task_process:	
  7239  0060                     ??_handle_uart_rx_buf:	
  7240                           ; 0 bytes @ 0x40
  7241                           
  7242  0060                     ?_Key_Menu:	
  7243                           ; 0 bytes @ 0x40
  7244                           
  7245  0060                     ??_scan_key_value:	
  7246                           ; 0 bytes @ 0x40
  7247                           
  7248  0060                     _handle_task_process$3197:	
  7249                           ; 0 bytes @ 0x40
  7250                           
  7251  0060                     _handle_uart_rx_buf$3198:	
  7252                           ; 3 bytes @ 0x40
  7253                           
  7254  0060                     Key_Menu@key_value:	
  7255                           ; 3 bytes @ 0x40
  7256                           
  7257                           
  7258                           ; 4 bytes @ 0x40
  7259  0060                     	ds	3
  7260  0063                     handle_uart_rx_buf@crc_in:	
  7261                           
  7262                           ; 2 bytes @ 0x43
  7263  0063                     	ds	1
  7264  0064                     ??_handle_ad_loop:	
  7265  0064                     ??_auto_system:	
  7266                           ; 0 bytes @ 0x44
  7267                           
  7268  0064                     ??_Key_Menu:	
  7269                           ; 0 bytes @ 0x44
  7270                           
  7271  0064                     Key_Menu@code:	
  7272                           ; 0 bytes @ 0x44
  7273                           
  7274  0064                     auto_system@sys_bt_voltage:	
  7275                           ; 1 bytes @ 0x44
  7276                           
  7277                           
  7278                           ; 3 bytes @ 0x44
  7279  0064                     	ds	2
  7280  0066                     scan_key_value@key_temp:	
  7281                           
  7282                           ; 2 bytes @ 0x46
  7283  0066                     	ds	1
  7284  0067                     ??_middle_init:	
  7285                           
  7286                           ; 0 bytes @ 0x47
  7287  0067                     	ds	1
  7288  0068                     ??_main:	
  7289                           
  7290                           	psect	text1
  7291  2845                     __ptext1:	
  7292 ;; *************** function _scan_key_value *****************
  7293 ;; Defined at:
  7294 ;;		line 61 in file "D:\MCUProject\ZH-SL-S4080-1\src\key.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  key_temp        2   70[BANK0 ] unsigned int 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;		None               void
  7301 ;; Registers used:
  7302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 1F/2
  7305 ;;		On exit  : 1D/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;Total ram usage:        8 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    3
  7315 ;; This function calls:
  7316 ;;		_Disable_Bost_Pwm1
  7317 ;;		_Disable_Bost_Pwm2
  7318 ;;		_Disable_Buck_Pwm
  7319 ;;		_Enable_Bost_Pwm1
  7320 ;;		_Enable_Bost_Pwm2
  7321 ;;		_Set_Bost_Pwm1_Duty
  7322 ;;		_Set_Bost_Pwm2_Duty
  7323 ;;		_Set_Buck_Pwm_Duty
  7324 ;;		_delay_ms
  7325 ;;		_eeprom_write
  7326 ;; This function is called by:
  7327 ;;		_main
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           
  7332                           ;psect for function _scan_key_value
  7333  2845                     _scan_key_value:	
  7334                           
  7335                           ;key.c: 63: unsigned int key_temp;
  7336                           ;key.c: 65: key_temp=0x00;
  7337                           
  7338                           ;incstack = 0
  7339                           ; Regs used in _scan_key_value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7340  2845  0020               	movlb	0	; select bank0
  7341  2846  01E6               	clrf	scan_key_value@key_temp
  7342  2847  01E7               	clrf	scan_key_value@key_temp+1
  7343                           
  7344                           ;key.c: 67: key_temp=(key_temp<<1)|(PORTBbits.RB6);
  7345  2848  0E0D               	swapf	13,w	;volatile
  7346  2849  0C89               	rrf	9,f
  7347  284A  0C89               	rrf	9,f
  7348  284B  21E6  31A8         	fcall	PL42	;call to abstracted procedure
  7349                           
  7350                           ;key.c: 69: key_temp=(key_temp<<1)|(PORTCbits.RC6);
  7351  284D  0E0E               	swapf	14,w	;volatile
  7352  284E  0C89               	rrf	9,f
  7353  284F  0C89               	rrf	9,f
  7354  2850  21E6  31A8         	fcall	PL42	;call to abstracted procedure
  7355                           
  7356                           ;key.c: 71: key_temp=(key_temp<<1)|(PORTCbits.RC5);
  7357  2852  0E0E               	swapf	14,w	;volatile
  7358  2853  0C89               	rrf	9,f
  7359  2854  21E6  31A8         	fcall	PL42	;call to abstracted procedure
  7360                           
  7361                           ;key.c: 73: key_temp=(key_temp<<1)|(PORTCbits.RC4);
  7362  2856  0E0E               	swapf	14,w	;volatile
  7363  2857  21E6  31A8         	fcall	PL42	;call to abstracted procedure
  7364                           
  7365                           ;key.c: 77: switch(key_temp)
  7366  2859  286C               	goto	l22308
  7367  285A                     l22292:	
  7368  285A  0022               	movlb	2	; select bank2
  7369  285B  01A9               	clrf	_KEY_STATE^(0+256)
  7370  285C  2882               	goto	l22310
  7371  285D                     l764:	
  7372                           ;key.c: 81: case 0b0111: KEY_VALUE =K1;KEY_STATE =KEY_DOWN;break;
  7373                           
  7374  285D  0022               	movlb	2	; select bank2
  7375  285E  01EE               	clrf	_KEY_VALUE^(0+256)
  7376  285F  0AEE               	incf	_KEY_VALUE^(0+256),f
  7377  2860  2865               	goto	L1
  7378  2861                     l22294:	
  7379  2861  3002               	movlw	2
  7380  2862                     L2:	
  7381  2862  0022               	movlb	2	; select bank2
  7382  2863  00EE               	movwf	_KEY_VALUE^(0+256)
  7383  2864                     l22296:	
  7384  2864  0022               	movlb	2	; select bank2
  7385  2865                     L1:	
  7386  2865  01A9               	clrf	_KEY_STATE^(0+256)
  7387  2866  0AA9               	incf	_KEY_STATE^(0+256),f
  7388  2867  2882               	goto	l22310
  7389  2868                     l22298:	
  7390  2868  3003               	movlw	3
  7391  2869  2862               	goto	L2
  7392  286A                     l22302:	
  7393  286A  3004               	movlw	4
  7394  286B  2862               	goto	L2
  7395  286C                     l22308:	
  7396                           
  7397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7398                           ; Switch size 1, requested type "space"
  7399                           ; Number of cases is 1, Range of values is 0 to 0
  7400                           ; switch strategies available:
  7401                           ; Name         Instructions Cycles
  7402                           ; simple_byte            4     3 (average)
  7403                           ; direct_byte            8     6 (fixed)
  7404                           ; jumptable            260     6 (fixed)
  7405                           ;	Chosen strategy is simple_byte
  7406  286C  0867               	movf	scan_key_value@key_temp+1,w
  7407  286D  3A00               	xorlw	0	; case 0
  7408  286E  1903               	skipnz
  7409  286F  2871               	goto	l25362
  7410  2870  2864               	goto	l22296
  7411  2871                     l25362:	
  7412                           
  7413                           ; Switch size 1, requested type "space"
  7414                           ; Number of cases is 5, Range of values is 7 to 15
  7415                           ; switch strategies available:
  7416                           ; Name         Instructions Cycles
  7417                           ; simple_byte           16     9 (average)
  7418                           ; direct_byte           27     9 (fixed)
  7419                           ; jumptable            263     9 (fixed)
  7420                           ;	Chosen strategy is simple_byte
  7421  2871  0866               	movf	scan_key_value@key_temp,w
  7422  2872  3A07               	xorlw	7	; case 7
  7423  2873  1903               	skipnz
  7424  2874  285D               	goto	l764
  7425  2875  3A0C               	xorlw	12	; case 11
  7426  2876  1903               	skipnz
  7427  2877  2861               	goto	l22294
  7428  2878  3A06               	xorlw	6	; case 13
  7429  2879  1903               	skipnz
  7430  287A  2868               	goto	l22298
  7431  287B  3A03               	xorlw	3	; case 14
  7432  287C  1903               	skipnz
  7433  287D  286A               	goto	l22302
  7434  287E  3A01               	xorlw	1	; case 15
  7435  287F  1903               	skipnz
  7436  2880  285A               	goto	l22292
  7437  2881  2864               	goto	l22296
  7438  2882                     l22310:	
  7439                           
  7440                           ;key.c: 94: if(KEY_STATE==KEY_UP)
  7441  2882  08A9               	movf	_KEY_STATE^(0+256),f
  7442  2883  1D03               	skipz
  7443  2884  2927               	goto	l769
  7444                           
  7445                           ;key.c: 95: {
  7446                           ;key.c: 96: if(KEY_VALUE!=KNOP)
  7447  2885  086E               	movf	_KEY_VALUE^(0+256),w
  7448  2886  3A10               	xorlw	16
  7449  2887  1D03               	btfss	3,2
  7450  2888  2916               	goto	l22518
  7451  2889  2927               	goto	l769
  7452  288A                     l772:	
  7453                           ;key.c: 99: {
  7454                           ;key.c: 100: case K1:
  7455                           
  7456                           
  7457                           ;key.c: 101: __nop();
  7458  288A  0000               	nop
  7459                           
  7460                           ;key.c: 102: key1_index=0x00;
  7461  288B  0022               	movlb	2	; select bank2
  7462  288C  01BB               	clrf	_key1_index^(0+256)
  7463                           
  7464                           ;key.c: 103: break;
  7465  288D  2924               	goto	l22520
  7466  288E                     l22318:	
  7467                           
  7468                           ;key.c: 105: if(device_status==0x01)
  7469  288E  0021               	movlb	1	; select bank1
  7470  288F  0B36               	decfsz	_device_status^(0+128),w
  7471  2890  2924               	goto	l22520
  7472                           
  7473                           ;key.c: 106: {
  7474                           ;key.c: 107: light_mode =0x00;
  7475  2891  01BD               	clrf	_light_mode^(0+128)
  7476                           
  7477                           ;key.c: 108: eeprom_write(0x36,(unsigned char)(light_mode));
  7478  2892  319F  27CA  31A8   	fcall	PL324	;call to abstracted procedure
  7479  2895  21BA  31A8         	fcall	_eeprom_write
  7480                           
  7481                           ;key.c: 110: light2_mode =0x00;
  7482  2897  0021               	movlb	1	; select bank1
  7483  2898  01BC               	clrf	_light2_mode^(0+128)
  7484  2899                     L3:	
  7485                           
  7486                           ;key.c: 111: eeprom_write(0x37,(unsigned char)(light2_mode));
  7487  2899  083C               	movf	_light2_mode^(0+128),w
  7488  289A  0020               	movlb	0	; select bank0
  7489  289B  00DE               	movwf	eeprom_write@value
  7490  289C  3037               	movlw	55
  7491  289D  21BA  31A8         	fcall	_eeprom_write
  7492                           
  7493                           ;key.c: 113: led_out_ctrl=0x00;
  7494  289F  0021               	movlb	1	; select bank1
  7495                           
  7496                           ;key.c: 114: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  7497  28A0  220A  31A8         	fcall	PL236	;call to abstracted procedure
  7498  28A2  21BA  31A8         	fcall	_eeprom_write
  7499                           
  7500                           ;key.c: 118: lr_cnt = 0x00;
  7501  28A4  0021               	movlb	1	; select bank1
  7502  28A5  01C6               	clrf	_work_mode^(0+128)
  7503                           
  7504                           ;key.c: 120: nop_index=0x00;
  7505                           
  7506                           ;key.c: 121: discharge1_index=0x00;
  7507                           
  7508                           ;key.c: 122: discharge2_index=0x00;
  7509                           
  7510                           ;key.c: 123: charge_index=0x00;
  7511  28A6  2203               	fcall	PL114	;call to abstracted procedure
  7512                           
  7513                           ;key.c: 125: Disable_Buck_Pwm();
  7514  28A7  319E  2655  31A8   	fcall	_Disable_Buck_Pwm
  7515                           
  7516                           ;key.c: 126: Set_Buck_Pwm_Duty(0);
  7517  28AA  0020               	movlb	0	; select bank0
  7518  28AB  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  7519  28AC  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  7520  28AD  319E  265A  31A8   	fcall	_Set_Buck_Pwm_Duty
  7521                           
  7522                           ;key.c: 128: Disable_Bost_Pwm1();
  7523  28B0  21D7               	fcall	_Disable_Bost_Pwm1
  7524                           
  7525                           ;key.c: 129: (LATCbits.LATC3 = 0x00);
  7526                           
  7527                           ;key.c: 130: Set_Bost_Pwm1_Duty(0);
  7528  28B1  319F  275E  31A8   	fcall	PL122	;call to abstracted procedure
  7529  28B4  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7530                           
  7531                           ;key.c: 131: Disable_Bost_Pwm2();
  7532  28B7  319D  25F1  31A8   	fcall	_Disable_Bost_Pwm2
  7533                           
  7534                           ;key.c: 132: (LATCbits.LATC0 = 0x00);
  7535                           
  7536                           ;key.c: 133: Set_Bost_Pwm2_Duty(0);
  7537  28BA  319F  2770  31A8   	fcall	PL128	;call to abstracted procedure
  7538  28BD  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7539                           
  7540                           ;key.c: 135: (LATCbits.LATC3 = 0x01);
  7541  28C0  0022               	movlb	2	; select bank2
  7542  28C1  158E               	bsf	14,3	;volatile
  7543                           
  7544                           ;key.c: 136: Enable_Bost_Pwm1();
  7545  28C2  21DC  31A8         	fcall	_Enable_Bost_Pwm1
  7546                           
  7547                           ;key.c: 137: (LATCbits.LATC0 = 0x01);
  7548  28C4  0022               	movlb	2	; select bank2
  7549  28C5  140E               	bsf	14,0	;volatile
  7550                           
  7551                           ;key.c: 138: Enable_Bost_Pwm2();
  7552  28C6  21E1               	fcall	_Enable_Bost_Pwm2
  7553                           
  7554                           ;key.c: 140: Set_Bost_Pwm1_Duty(200);
  7555  28C7  30C8               	movlw	200
  7556  28C8  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
  7557  28C9  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
  7558  28CA  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7559                           
  7560                           ;key.c: 141: Set_Bost_Pwm2_Duty(200);
  7561  28CD  319F  27B0  31A8   	fcall	PL288	;call to abstracted procedure
  7562  28D0  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7563                           
  7564                           ;key.c: 143: delay_ms(1000);
  7565  28D3  220F               	fcall	PL272	;call to abstracted procedure
  7566  28D4  319D  256C  31A8   	fcall	_delay_ms
  7567                           
  7568                           ;key.c: 145: Set_Bost_Pwm1_Duty(0);
  7569  28D7  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
  7570  28D8  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
  7571  28D9  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7572                           
  7573                           ;key.c: 146: Set_Bost_Pwm2_Duty(0);
  7574  28DC  0020               	movlb	0	; select bank0
  7575  28DD  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
  7576  28DE  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
  7577  28DF  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7578                           
  7579                           ;key.c: 148: Disable_Bost_Pwm1();
  7580  28E2  21D7               	fcall	_Disable_Bost_Pwm1
  7581                           
  7582                           ;key.c: 149: (LATCbits.LATC3 = 0x00);
  7583                           
  7584                           ;key.c: 150: Set_Bost_Pwm1_Duty(0);
  7585  28E3  319F  275E  31A8   	fcall	PL122	;call to abstracted procedure
  7586  28E6  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7587                           
  7588                           ;key.c: 151: Disable_Bost_Pwm2();
  7589  28E9  319D  25F1  31A8   	fcall	_Disable_Bost_Pwm2
  7590                           
  7591                           ;key.c: 152: (LATCbits.LATC0 = 0x00);
  7592                           
  7593                           ;key.c: 153: Set_Bost_Pwm2_Duty(0);
  7594  28EC  319F  2770  31A8   	fcall	PL128	;call to abstracted procedure
  7595  28EF  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7596                           
  7597                           ;key.c: 156: pv_voltage_status=0x00;
  7598  28F2  0022               	movlb	2	; select bank2
  7599  28F3  01CC               	clrf	_pv_voltage_status^(0+256)
  7600                           
  7601                           ;key.c: 158: day_time_count=0x00;
  7602  28F4  0025               	movlb	5	; select bank5
  7603                           
  7604                           ;key.c: 160: night_time_count=0x00;
  7605  28F5  21FA  31A8         	fcall	PL66	;call to abstracted procedure
  7606                           
  7607                           ;key.c: 162: pv_time_count=0x00;
  7608  28F7  2215  31A8         	fcall	PL368	;call to abstracted procedure
  7609  28F9  2924               	goto	l22520
  7610  28FA                     l22384:	
  7611                           
  7612                           ;key.c: 166: if(device_status==0x01)
  7613  28FA  0021               	movlb	1	; select bank1
  7614  28FB  0B36               	decfsz	_device_status^(0+128),w
  7615  28FC  2924               	goto	l22520
  7616                           
  7617                           ;key.c: 167: {
  7618                           ;key.c: 168: light_mode =0x01;
  7619  28FD  01BD               	clrf	_light_mode^(0+128)
  7620  28FE  0ABD               	incf	_light_mode^(0+128),f
  7621                           
  7622                           ;key.c: 169: eeprom_write(0x36,(unsigned char)(light_mode));
  7623  28FF  319F  27CA  31A8   	fcall	PL324	;call to abstracted procedure
  7624  2902  21BA  31A8         	fcall	_eeprom_write
  7625                           
  7626                           ;key.c: 171: light2_mode =0x01;
  7627  2904  0021               	movlb	1	; select bank1
  7628  2905  01BC               	clrf	_light2_mode^(0+128)
  7629  2906  0ABC               	incf	_light2_mode^(0+128),f
  7630  2907  2899               	goto	L3
  7631  2908                     l22450:	
  7632                           ;key.c: 184: charge_index=0x00;
  7633                           
  7634                           ;key.c: 183: discharge2_index=0x00;
  7635                           
  7636                           ;key.c: 182: discharge1_index=0x00;
  7637                           
  7638                           ;key.c: 181: nop_index=0x00;
  7639                           
  7640                           ;key.c: 179: lr_cnt = 0x00;
  7641                           
  7642                           ;key.c: 175: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  7643                           
  7644                           ;key.c: 174: led_out_ctrl=0x00;
  7645                           
  7646                           ;key.c: 172: eeprom_write(0x37,(unsigned char)(light2_mode));
  7647                           
  7648                           
  7649                           ;key.c: 227: if(device_status==0x01)
  7650  2908  0021               	movlb	1	; select bank1
  7651  2909  0B36               	decfsz	_device_status^(0+128),w
  7652  290A  2924               	goto	l22520
  7653                           
  7654                           ;key.c: 228: {
  7655                           ;key.c: 229: light_mode =0x02;
  7656  290B  3002               	movlw	2
  7657  290C  00BD               	movwf	_light_mode^(0+128)
  7658                           
  7659                           ;key.c: 230: eeprom_write(0x36,(unsigned char)(light_mode));
  7660  290D  319F  27CA  31A8   	fcall	PL324	;call to abstracted procedure
  7661  2910  21BA  31A8         	fcall	_eeprom_write
  7662                           
  7663                           ;key.c: 232: light2_mode =0x02;
  7664  2912  3002               	movlw	2
  7665  2913  0021               	movlb	1	; select bank1
  7666  2914  00BC               	movwf	_light2_mode^(0+128)
  7667  2915  2899               	goto	L3
  7668  2916                     l22518:	
  7669                           ;key.c: 245: charge_index=0x00;
  7670                           
  7671                           ;key.c: 244: discharge2_index=0x00;
  7672                           
  7673                           ;key.c: 243: discharge1_index=0x00;
  7674                           
  7675                           ;key.c: 242: nop_index=0x00;
  7676                           
  7677                           ;key.c: 240: lr_cnt = 0x00;
  7678                           
  7679                           ;key.c: 236: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  7680                           
  7681                           ;key.c: 235: led_out_ctrl=0x00;
  7682                           
  7683                           ;key.c: 233: eeprom_write(0x37,(unsigned char)(light2_mode));
  7684                           
  7685  2916  086E               	movf	_KEY_VALUE^(0+256),w
  7686                           
  7687                           ; Switch size 1, requested type "space"
  7688                           ; Number of cases is 4, Range of values is 1 to 4
  7689                           ; switch strategies available:
  7690                           ; Name         Instructions Cycles
  7691                           ; simple_byte           13     7 (average)
  7692                           ; direct_byte           17     9 (fixed)
  7693                           ; jumptable            263     9 (fixed)
  7694                           ;	Chosen strategy is simple_byte
  7695  2917  3A01               	xorlw	1	; case 1
  7696  2918  1903               	skipnz
  7697  2919  288A               	goto	l772
  7698  291A  3A03               	xorlw	3	; case 2
  7699  291B  1903               	skipnz
  7700  291C  288E               	goto	l22318
  7701  291D  3A01               	xorlw	1	; case 3
  7702  291E  1903               	skipnz
  7703  291F  28FA               	goto	l22384
  7704  2920  3A07               	xorlw	7	; case 4
  7705  2921  1903               	skipnz
  7706  2922  2908               	goto	l22450
  7707  2923  2924               	goto	l22520
  7708  2924                     l22520:	
  7709                           
  7710                           ;key.c: 290: KEY_VALUE=KNOP;
  7711  2924  3010               	movlw	16
  7712  2925  0022               	movlb	2	; select bank2
  7713  2926  00EE               	movwf	_KEY_VALUE^(0+256)
  7714  2927                     l769:	
  7715                           
  7716                           ;key.c: 292: }
  7717                           ;key.c: 294: }
  7718                           ;key.c: 296: if((KEY_VALUE ==K1)&&(KEY_STATE == KEY_DOWN)&&(key1_index==0x00))
  7719  2927  0B6E               	decfsz	_KEY_VALUE^(0+256),w
  7720  2928  29AB               	goto	l22614
  7721  2929  0B29               	decfsz	_KEY_STATE^(0+256),w
  7722  292A  29AB               	goto	l22614
  7723  292B  08BB               	movf	_key1_index^(0+256),f
  7724  292C  1D03               	skipz
  7725  292D  29AB               	goto	l22614
  7726                           
  7727                           ;key.c: 297: {
  7728                           ;key.c: 298: if(key1_time_count<80)
  7729  292E  3050               	movlw	80
  7730  292F  023C               	subwf	_key1_time_count^(0+256),w
  7731  2930  1803               	skipnc
  7732  2931  2934               	goto	l22530
  7733                           
  7734                           ;key.c: 299: {
  7735                           ;key.c: 300: key1_time_count++;
  7736  2932  0ABC               	incf	_key1_time_count^(0+256),f
  7737                           
  7738                           ;key.c: 302: }
  7739  2933  29AC               	goto	l22616
  7740  2934                     l22530:	
  7741  2934  3001               	movlw	1
  7742                           
  7743                           ;key.c: 303: else
  7744                           ;key.c: 304: {
  7745                           ;key.c: 305: key1_time_count=0x00;
  7746  2935  01BC               	clrf	_key1_time_count^(0+256)
  7747                           
  7748                           ;key.c: 307: device_status^=0x01;
  7749  2936  0021               	movlb	1	; select bank1
  7750  2937  06B6               	xorwf	_device_status^(0+128),f
  7751                           
  7752                           ;key.c: 309: eeprom_write(0x38,(unsigned char)(device_status));
  7753  2938  221A  31A8         	fcall	PL370	;call to abstracted procedure
  7754  293A  21BA  31A8         	fcall	_eeprom_write
  7755                           
  7756                           ;key.c: 311: key1_index=0x01;
  7757  293C  0022               	movlb	2	; select bank2
  7758  293D  01BB               	clrf	_key1_index^(0+256)
  7759  293E  0ABB               	incf	_key1_index^(0+256),f
  7760                           
  7761                           ;key.c: 313: if(device_status==0x00)
  7762  293F  0021               	movlb	1	; select bank1
  7763  2940  08B6               	movf	_device_status^(0+128),f
  7764  2941  1D03               	skipz
  7765  2942  294C               	goto	l22554
  7766                           
  7767                           ;key.c: 317: lr_cnt = 0x00;
  7768  2943  3004               	movlw	4
  7769  2944  00C6               	movwf	_work_mode^(0+128)
  7770                           
  7771                           ;key.c: 319: led_out_ctrl=0x00;
  7772                           
  7773                           ;key.c: 320: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  7774  2945  220A  31A8         	fcall	PL236	;call to abstracted procedure
  7775  2947  21BA  31A8         	fcall	_eeprom_write
  7776                           
  7777                           ;key.c: 322: nop_index=0x00;
  7778                           
  7779                           ;key.c: 323: discharge1_index=0x00;
  7780                           
  7781                           ;key.c: 324: discharge2_index=0x00;
  7782                           
  7783                           ;key.c: 325: charge_index=0x00;
  7784  2949  2203  31A8         	fcall	PL114	;call to abstracted procedure
  7785                           
  7786                           ;key.c: 326: }
  7787  294B  29AC               	goto	l22616
  7788  294C                     l22554:	
  7789                           
  7790                           ;key.c: 327: else
  7791                           ;key.c: 328: {
  7792                           ;key.c: 329: work_mode =0x00;
  7793  294C  01C6               	clrf	_work_mode^(0+128)
  7794                           
  7795                           ;key.c: 331: (LATAbits.LATA6 = 0x01);
  7796  294D  0022               	movlb	2	; select bank2
  7797  294E  170C               	bsf	12,6	;volatile
  7798                           
  7799                           ;key.c: 333: open_sleep_time=0x00;
  7800  294F  01CA               	clrf	_open_sleep_time^(0+256)
  7801                           
  7802                           ;key.c: 335: lr_cnt = 0x00;
  7803  2950  0025               	movlb	5	; select bank5
  7804  2951  01C9               	clrf	_sleep_time_count^(0+640)
  7805  2952  01CA               	clrf	(_sleep_time_count+1)^(0+640)
  7806                           
  7807                           ;key.c: 337: nop_index=0x00;
  7808                           
  7809                           ;key.c: 338: discharge1_index=0x00;
  7810                           
  7811                           ;key.c: 339: discharge2_index=0x00;
  7812                           
  7813                           ;key.c: 340: charge_index=0x00;
  7814  2953  2203  31A8         	fcall	PL114	;call to abstracted procedure
  7815                           
  7816                           ;key.c: 342: led_out_ctrl=0x00;
  7817                           
  7818                           ;key.c: 343: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
  7819  2955  220A  31A8         	fcall	PL236	;call to abstracted procedure
  7820  2957  21BA               	fcall	_eeprom_write
  7821                           
  7822                           ;key.c: 345: Disable_Buck_Pwm();
  7823  2958  319E  2655  31A8   	fcall	_Disable_Buck_Pwm
  7824                           
  7825                           ;key.c: 346: Set_Buck_Pwm_Duty(0);
  7826  295B  0020               	movlb	0	; select bank0
  7827  295C  01A3               	clrf	Set_Buck_Pwm_Duty@duty
  7828  295D  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
  7829  295E  319E  265A  31A8   	fcall	_Set_Buck_Pwm_Duty
  7830                           
  7831                           ;key.c: 347: Disable_Bost_Pwm1();
  7832  2961  21D7               	fcall	_Disable_Bost_Pwm1
  7833                           
  7834                           ;key.c: 348: (LATCbits.LATC3 = 0x00);
  7835                           
  7836                           ;key.c: 349: Set_Bost_Pwm1_Duty(0);
  7837  2962  319F  275E  31A8   	fcall	PL122	;call to abstracted procedure
  7838  2965  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7839                           
  7840                           ;key.c: 350: Disable_Bost_Pwm2();
  7841  2968  319D  25F1  31A8   	fcall	_Disable_Bost_Pwm2
  7842                           
  7843                           ;key.c: 351: (LATCbits.LATC0 = 0x00);
  7844                           
  7845                           ;key.c: 352: Set_Bost_Pwm2_Duty(0);
  7846  296B  319F  2770  31A8   	fcall	PL128	;call to abstracted procedure
  7847  296E  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7848                           
  7849                           ;key.c: 354: (LATCbits.LATC3 = 0x01);
  7850  2971  0022               	movlb	2	; select bank2
  7851  2972  158E               	bsf	14,3	;volatile
  7852                           
  7853                           ;key.c: 356: Enable_Bost_Pwm1();
  7854  2973  21DC  31A8         	fcall	_Enable_Bost_Pwm1
  7855                           
  7856                           ;key.c: 358: (LATCbits.LATC0 = 0x01);
  7857  2975  0022               	movlb	2	; select bank2
  7858  2976  140E               	bsf	14,0	;volatile
  7859                           
  7860                           ;key.c: 360: Enable_Bost_Pwm2();
  7861  2977  21E1               	fcall	_Enable_Bost_Pwm2
  7862                           
  7863                           ;key.c: 362: Set_Bost_Pwm1_Duty(200);
  7864  2978  30C8               	movlw	200
  7865  2979  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
  7866  297A  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
  7867  297B  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7868                           
  7869                           ;key.c: 363: Set_Bost_Pwm2_Duty(200);
  7870  297E  319F  27B0  31A8   	fcall	PL288	;call to abstracted procedure
  7871  2981  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7872                           
  7873                           ;key.c: 365: delay_ms(1000);
  7874  2984  220F               	fcall	PL272	;call to abstracted procedure
  7875  2985  319D  256C  31A8   	fcall	_delay_ms
  7876                           
  7877                           ;key.c: 367: Set_Bost_Pwm1_Duty(0);
  7878  2988  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
  7879  2989  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
  7880  298A  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7881                           
  7882                           ;key.c: 368: Set_Bost_Pwm2_Duty(0);
  7883  298D  0020               	movlb	0	; select bank0
  7884  298E  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
  7885  298F  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
  7886  2990  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7887                           
  7888                           ;key.c: 370: Disable_Bost_Pwm1();
  7889  2993  21D7               	fcall	_Disable_Bost_Pwm1
  7890                           
  7891                           ;key.c: 371: (LATCbits.LATC3 = 0x00);
  7892                           
  7893                           ;key.c: 372: Set_Bost_Pwm1_Duty(0);
  7894  2994  319F  275E  31A8   	fcall	PL122	;call to abstracted procedure
  7895  2997  319D  2513  31A8   	fcall	_Set_Bost_Pwm1_Duty
  7896                           
  7897                           ;key.c: 373: Disable_Bost_Pwm2();
  7898  299A  319D  25F1  31A8   	fcall	_Disable_Bost_Pwm2
  7899                           
  7900                           ;key.c: 374: (LATCbits.LATC0 = 0x00);
  7901                           
  7902                           ;key.c: 375: Set_Bost_Pwm2_Duty(0);
  7903  299D  319F  2770  31A8   	fcall	PL128	;call to abstracted procedure
  7904  29A0  319D  253E  31A8   	fcall	_Set_Bost_Pwm2_Duty
  7905                           
  7906                           ;key.c: 378: pv_voltage_status=0x00;
  7907  29A3  0022               	movlb	2	; select bank2
  7908  29A4  01CC               	clrf	_pv_voltage_status^(0+256)
  7909                           
  7910                           ;key.c: 380: day_time_count=0x00;
  7911  29A5  0025               	movlb	5	; select bank5
  7912                           
  7913                           ;key.c: 382: night_time_count=0x00;
  7914  29A6  21FA  31A8         	fcall	PL66	;call to abstracted procedure
  7915                           
  7916                           ;key.c: 384: pv_time_count=0x00;
  7917  29A8  2215  31A8         	fcall	PL368	;call to abstracted procedure
  7918  29AA  29AC               	goto	l22616
  7919  29AB                     l22614:	
  7920                           
  7921                           ;key.c: 389: else
  7922                           ;key.c: 390: {
  7923                           ;key.c: 391: key1_time_count=0x00;
  7924  29AB  01BC               	clrf	_key1_time_count^(0+256)
  7925  29AC                     l22616:	
  7926                           
  7927                           ;key.c: 392: }
  7928                           ;key.c: 395: if(RA7)
  7929  29AC  0020               	movlb	0	; select bank0
  7930  29AD  1F8C               	btfss	12,7	;volatile
  7931  29AE  29B4               	goto	l22622
  7932                           
  7933                           ;key.c: 396: {
  7934                           ;key.c: 398: have_person1_time_count=0x00;
  7935  29AF  0022               	movlb	2	; select bank2
  7936  29B0  01B6               	clrf	_have_person1_time_count^(0+256)
  7937                           
  7938                           ;key.c: 400: have_person1_flag=0x01;
  7939  29B1  0021               	movlb	1	; select bank1
  7940  29B2  01B9               	clrf	_have_person1_flag^(0+128)
  7941  29B3  0AB9               	incf	_have_person1_flag^(0+128),f
  7942  29B4                     l22622:	
  7943                           
  7944                           ;key.c: 401: }
  7945                           ;key.c: 403: if(RC1)
  7946  29B4  0020               	movlb	0	; select bank0
  7947  29B5  1C8E               	btfss	14,1	;volatile
  7948  29B6  0008               	return
  7949                           
  7950                           ;key.c: 404: {
  7951                           ;key.c: 405: have_person2_time_count=0x00;
  7952  29B7  0022               	movlb	2	; select bank2
  7953  29B8  01B7               	clrf	_have_person2_time_count^(0+256)
  7954  29B9  0008               	return
  7955  29BA                     __end_of_scan_key_value:	
  7956  29BA                     __ptext39:	
  7957 ;; *************** function _eeprom_write *****************
  7958 ;; Defined at:
  7959 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\eewrite.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  addr            1    wreg     unsigned char 
  7962 ;;  value           1   62[BANK0 ] unsigned char 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  addr            1   63[BANK0 ] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;		None               void
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0
  7969 ;; Tracked objects:
  7970 ;;		On entry : 1F/0
  7971 ;;		On exit  : 1F/3
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7974 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;Total ram usage:        2 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    2
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_auto_system
  7985 ;;		_Key_Menu
  7986 ;;		_scan_key_value
  7987 ;;		_handle_task_process
  7988 ;;		_handle_uart_rx_buf
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _eeprom_write
  7994  29BA                     _eeprom_write:	
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7998                           ;eeprom_write@addr stored from wreg
  7999  29BA  00DF               	movwf	eeprom_write@addr
  8000  29BB                     l2397:	
  8001  29BB  0023               	movlb	3	; select bank3
  8002  29BC  1895               	btfsc	21,1	;volsfr
  8003  29BD  29BB               	goto	l2397
  8004  29BE  0020               	movlb	0	; select bank0
  8005  29BF  085F               	movf	eeprom_write@addr,w
  8006  29C0  0023               	movlb	3	; select bank3
  8007  29C1  0091               	movwf	17	;volatile
  8008  29C2  0192               	clrf	18	;volatile
  8009  29C3  0020               	movlb	0	; select bank0
  8010  29C4  085E               	movf	eeprom_write@value,w
  8011  29C5  0023               	movlb	3	; select bank3
  8012  29C6  0093               	movwf	19	;volatile
  8013  29C7  303F               	movlw	63
  8014  29C8  0595               	andwf	21,f	;volsfr
  8015  29C9  1003               	bcf	3,0	;volatile
  8016  29CA  1B8B               	btfsc	11,7	;volatile
  8017  29CB  1403               	bsf	3,0	;volatile
  8018  29CC  138B               	bcf	11,7	;volatile
  8019  29CD  1515               	bsf	21,2	;volsfr
  8020  29CE  3055               	movlw	85
  8021  29CF  0096               	movwf	22	;volsfr
  8022  29D0  30AA               	movlw	170
  8023  29D1  0096               	movwf	22	;volsfr
  8024  29D2  1495               	bsf	21,1	;volsfr
  8025  29D3  1115               	bcf	21,2	;volsfr
  8026  29D4  1803               	btfsc	3,0	;volatile
  8027  29D5  178B               	bsf	11,7	;volatile
  8028  29D6  0008               	return
  8029  29D7                     __end_of_eeprom_write:	
  8030  29D7                     __ptext48:	
  8031 ;; *************** function _Disable_Bost_Pwm1 *****************
  8032 ;; Defined at:
  8033 ;;		line 214 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;		None               void
  8040 ;; Registers used:
  8041 ;;		None
  8042 ;; Tracked objects:
  8043 ;;		On entry : 18/5
  8044 ;;		On exit  : 1F/8
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    2
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_Key_Menu
  8058 ;;		_scan_key_value
  8059 ;;		_handle_ad_loop
  8060 ;;		_handle_task_process
  8061 ;;		_handle_uart_rx_buf
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function _Disable_Bost_Pwm1
  8067  29D7                     _Disable_Bost_Pwm1:	
  8068                           
  8069                           ;pwm.c: 216: TRISBbits.TRISB5 =1;
  8070                           
  8071                           ;incstack = 0
  8072                           ; Regs used in _Disable_Bost_Pwm1: []
  8073  29D7  0021               	movlb	1	; select bank1
  8074  29D8  168D               	bsf	13,5	;volatile
  8075                           
  8076                           ;pwm.c: 218: TMR4ON=0;
  8077  29D9  0028               	movlb	8	; select bank8
  8078  29DA  1117               	bcf	23,2	;volatile
  8079  29DB  0008               	return
  8080  29DC                     __end_of_Disable_Bost_Pwm1:	
  8081  29DC                     __ptext45:	
  8082 ;; *************** function _Enable_Bost_Pwm1 *****************
  8083 ;; Defined at:
  8084 ;;		line 186 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;		None               void
  8091 ;; Registers used:
  8092 ;;		None
  8093 ;; Tracked objects:
  8094 ;;		On entry : 1F/2
  8095 ;;		On exit  : 1F/8
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;Total ram usage:        0 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    2
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_Key_Menu
  8109 ;;		_scan_key_value
  8110 ;;		_handle_ad_loop
  8111 ;;		_handle_task_process
  8112 ;;		_handle_uart_rx_buf
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function _Enable_Bost_Pwm1
  8118  29DC                     _Enable_Bost_Pwm1:	
  8119                           
  8120                           ;pwm.c: 188: TRISBbits.TRISB5 =0;
  8121                           
  8122                           ;incstack = 0
  8123                           ; Regs used in _Enable_Bost_Pwm1: []
  8124  29DC  0021               	movlb	1	; select bank1
  8125  29DD  128D               	bcf	13,5	;volatile
  8126                           
  8127                           ;pwm.c: 190: TMR4ON=1;
  8128  29DE  0028               	movlb	8	; select bank8
  8129  29DF  1517               	bsf	23,2	;volatile
  8130  29E0  0008               	return
  8131  29E1                     __end_of_Enable_Bost_Pwm1:	
  8132  29E1                     __ptext44:	
  8133 ;; *************** function _Enable_Bost_Pwm2 *****************
  8134 ;; Defined at:
  8135 ;;		line 199 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;		None               void
  8142 ;; Registers used:
  8143 ;;		None
  8144 ;; Tracked objects:
  8145 ;;		On entry : 1F/2
  8146 ;;		On exit  : 1F/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    2
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_Key_Menu
  8160 ;;		_scan_key_value
  8161 ;;		_handle_ad_loop
  8162 ;;		_handle_task_process
  8163 ;;		_handle_uart_rx_buf
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _Enable_Bost_Pwm2
  8169  29E1                     _Enable_Bost_Pwm2:	
  8170                           
  8171                           ;pwm.c: 201: TRISAbits.TRISA4 =0;
  8172                           
  8173                           ;incstack = 0
  8174                           ; Regs used in _Enable_Bost_Pwm2: []
  8175  29E1  0021               	movlb	1	; select bank1
  8176  29E2  120C               	bcf	12,4	;volatile
  8177                           
  8178                           ;pwm.c: 203: TMR2ON=1;
  8179  29E3  0020               	movlb	0	; select bank0
  8180  29E4  151C               	bsf	28,2	;volatile
  8181  29E5  0008               	return
  8182  29E6                     __end_of_Enable_Bost_Pwm2:	
  8183  29E6                     PL42:	
  8184  29E6  3901               	andlw	1
  8185  29E7  00E0               	movwf	??_scan_key_value
  8186  29E8  01E1               	clrf	??_scan_key_value+1
  8187  29E9  0867               	movf	scan_key_value@key_temp+1,w
  8188  29EA  00E3               	movwf	??_scan_key_value+3
  8189  29EB  0866               	movf	scan_key_value@key_temp,w
  8190  29EC  00E2               	movwf	??_scan_key_value+2
  8191  29ED  35E2               	lslf	??_scan_key_value+2,f
  8192  29EE  0DE3               	rlf	??_scan_key_value+3,f
  8193  29EF  0860               	movf	??_scan_key_value,w
  8194  29F0  0462               	iorwf	??_scan_key_value+2,w
  8195  29F1  00E4               	movwf	??_scan_key_value+4
  8196  29F2  0861               	movf	??_scan_key_value+1,w
  8197  29F3  0463               	iorwf	??_scan_key_value+3,w
  8198  29F4  00E5               	movwf	??_scan_key_value+5
  8199  29F5  0864               	movf	??_scan_key_value+4,w
  8200  29F6  00E6               	movwf	scan_key_value@key_temp
  8201  29F7  0865               	movf	??_scan_key_value+5,w
  8202  29F8  00E7               	movwf	scan_key_value@key_temp+1
  8203  29F9  0008               	return
  8204  29FA                     __end_ofPL42:	
  8205  29FA                     PL66:	
  8206  29FA  01A0               	clrf	_day_time_count^(0+640)
  8207  29FB  01A1               	clrf	(_day_time_count+1)^(0+640)
  8208  29FC  01A2               	clrf	(_day_time_count+2)^(0+640)
  8209  29FD  01A3               	clrf	(_day_time_count+3)^(0+640)
  8210  29FE  01A4               	clrf	_night_time_count^(0+640)
  8211  29FF  01A5               	clrf	(_night_time_count+1)^(0+640)
  8212  2A00  01A6               	clrf	(_night_time_count+2)^(0+640)
  8213  2A01  01A7               	clrf	(_night_time_count+3)^(0+640)
  8214  2A02  0008               	return
  8215  2A03                     __end_ofPL66:	
  8216  2A03                     PL114:	
  8217  2A03  0022               	movlb	2	; select bank2
  8218  2A04  01C0               	clrf	_nop_index^(0+256)
  8219  2A05  0021               	movlb	1	; select bank1
  8220  2A06  01B7               	clrf	_discharge1_index^(0+128)
  8221  2A07  01B8               	clrf	_discharge2_index^(0+128)
  8222  2A08  01B5               	clrf	_charge_index^(0+128)
  8223  2A09  0008               	return
  8224  2A0A                     __end_ofPL114:	
  8225  2A0A                     PL236:	
  8226  2A0A  01BB               	clrf	_led_out_ctrl^(0+128)
  8227  2A0B  083B               	movf	_led_out_ctrl^(0+128),w
  8228  2A0C  0020               	movlb	0	; select bank0
  8229  2A0D  00DE               	movwf	eeprom_write@value
  8230  2A0E  3439               	retlw	57
  8231  2A0F                     __end_ofPL236:	
  8232  2A0F                     PL272:	
  8233  2A0F  30E8               	movlw	232
  8234  2A10  0020               	movlb	0	; select bank0
  8235  2A11  00A3               	movwf	delay_ms@count
  8236  2A12  3003               	movlw	3
  8237  2A13  00A4               	movwf	delay_ms@count+1
  8238  2A14  0008               	return
  8239  2A15                     __end_ofPL272:	
  8240  2A15                     PL368:	
  8241  2A15  01A8               	clrf	_pv_time_count^(0+640)
  8242  2A16  01A9               	clrf	(_pv_time_count+1)^(0+640)
  8243  2A17  01AA               	clrf	(_pv_time_count+2)^(0+640)
  8244  2A18  01AB               	clrf	(_pv_time_count+3)^(0+640)
  8245  2A19  0008               	return
  8246  2A1A                     __end_ofPL368:	
  8247  2A1A                     PL370:	
  8248  2A1A  0836               	movf	_device_status^(0+128),w
  8249  2A1B  0020               	movlb	0	; select bank0
  8250  2A1C  00DE               	movwf	eeprom_write@value
  8251  2A1D  3438               	retlw	56
  8252  2A1E                     __end_ofPL370:	
  8253                           
  8254                           	psect	text4
  8255  3296                     __ptext4:	
  8256 ;; *************** function _auto_system *****************
  8257 ;; Defined at:
  8258 ;;		line 467 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;		None
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  sys_bt_volta    3   68[BANK0 ] float 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;		None               void
  8265 ;; Registers used:
  8266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8267 ;; Tracked objects:
  8268 ;;		On entry : 17F/7
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;Total ram usage:        3 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    4
  8279 ;; This function calls:
  8280 ;;		___ftdiv
  8281 ;;		___ftge
  8282 ;;		___ftmul
  8283 ;;		___lwtoft
  8284 ;;		_delay_ms
  8285 ;;		_eeprom_read
  8286 ;;		_eeprom_write
  8287 ;;		_start_ad_convert
  8288 ;; This function is called by:
  8289 ;;		_middle_init
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _auto_system
  8295  3296                     _auto_system:	
  8296                           
  8297                           ;ird_remote.c: 469: float sys_bt_voltage;
  8298                           ;ird_remote.c: 471: delay_ms(100);
  8299                           
  8300                           ;incstack = 0
  8301                           ; Regs used in _auto_system: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8302  3296  3064               	movlw	100
  8303  3297  0020               	movlb	0	; select bank0
  8304  3298  00A3               	movwf	delay_ms@count
  8305  3299  01A4               	clrf	delay_ms@count+1
  8306  329A  319D  256C  31B2   	fcall	_delay_ms
  8307                           
  8308                           ;ird_remote.c: 474: bt_id=eeprom_read(0x0a);
  8309  329D  300A               	movlw	10
  8310  329E  318F  2732  31B2   	fcall	_eeprom_read
  8311  32A1  0021               	movlb	1	; select bank1
  8312  32A2  00DA               	movwf	_bt_id^(0+128)
  8313                           
  8314                           ;ird_remote.c: 479: battery_voltage_value=start_ad_convert(0b00011);
  8315  32A3  3003               	movlw	3
  8316  32A4  31B0  2038  31B2   	fcall	_start_ad_convert
  8317  32A7  0831               	movf	?_start_ad_convert+1,w
  8318  32A8  00E9               	movwf	_battery_voltage_value+1
  8319  32A9  0830               	movf	?_start_ad_convert,w
  8320  32AA  00E8               	movwf	_battery_voltage_value
  8321                           
  8322                           ;ird_remote.c: 481: sys_bt_voltage=(((float)battery_voltage_value)/1000)*31.04;
  8323  32AB  3052               	movlw	82
  8324  32AC  00B3               	movwf	___ftmul@f1
  8325  32AD  30F8               	movlw	248
  8326  32AE  00B4               	movwf	___ftmul@f1+1
  8327  32AF  3041               	movlw	65
  8328  32B0  00B5               	movwf	___ftmul@f1+2
  8329  32B1  307A               	movlw	122
  8330  32B2  01C2               	clrf	___ftdiv@f2
  8331  32B3  00C3               	movwf	___ftdiv@f2+1
  8332  32B4  3044               	movlw	68
  8333  32B5  00C4               	movwf	___ftdiv@f2+2
  8334  32B6  0869               	movf	_battery_voltage_value+1,w
  8335  32B7  00B1               	movwf	___lwtoft@c+1
  8336  32B8  0868               	movf	_battery_voltage_value,w
  8337  32B9  00B0               	movwf	___lwtoft@c
  8338  32BA  2461               	fcall	___lwtoft
  8339  32BB  3197  2725  31B2   	fcall	PL120	;call to abstracted procedure
  8340  32BE  319D  258F  31B2   	fcall	___ftdiv
  8341  32C1  3197  2707  31B2   	fcall	PL48	;call to abstracted procedure
  8342  32C4  318A  22AA  31B2   	fcall	___ftmul
  8343  32C7  0833               	movf	?___ftmul,w
  8344  32C8  00E4               	movwf	auto_system@sys_bt_voltage
  8345  32C9  0834               	movf	?___ftmul+1,w
  8346  32CA  00E5               	movwf	auto_system@sys_bt_voltage+1
  8347  32CB  0835               	movf	?___ftmul+2,w
  8348  32CC  00E6               	movwf	auto_system@sys_bt_voltage+2
  8349                           
  8350                           ;ird_remote.c: 483: if(bt_id==0x01)
  8351  32CD  0021               	movlb	1	; select bank1
  8352  32CE  0B5A               	decfsz	_bt_id^(0+128),w
  8353  32CF  2AE4               	goto	l21780
  8354                           
  8355                           ;ird_remote.c: 484: {
  8356                           ;ird_remote.c: 485: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
  8357  32D0  0020               	movlb	0	; select bank0
  8358  32D1  24B8  31B2         	fcall	PL118	;call to abstracted procedure
  8359  32D3  2472  31B2         	fcall	___ftge
  8360  32D5  1C03               	btfss	3,0
  8361  32D6  2AE2               	goto	l607
  8362  32D7  3066               	movlw	102
  8363  32D8  24C4  31B2         	fcall	PL126	;call to abstracted procedure
  8364  32DA  2472  31B2         	fcall	___ftge
  8365  32DC  1C03               	btfss	3,0
  8366  32DD  2AE2               	goto	l607
  8367                           
  8368                           ;ird_remote.c: 486: {
  8369                           ;ird_remote.c: 487: volt_id=0x01;
  8370  32DE  0021               	movlb	1	; select bank1
  8371                           
  8372                           ;ird_remote.c: 489: eeprom_write(0x09,volt_id);
  8373  32DF  24FE               	fcall	PL264	;call to abstracted procedure
  8374  32E0  31A9  29BA         	ljmp	_eeprom_write
  8375  32E2                     l607:	
  8376                           ;ird_remote.c: 490: }
  8377                           
  8378                           
  8379                           ;ird_remote.c: 491: else
  8380                           ;ird_remote.c: 492: {
  8381                           ;ird_remote.c: 493: __nop();
  8382  32E2  0000               	nop
  8383  32E3  0008               	return
  8384  32E4                     l21780:	
  8385                           
  8386                           ;ird_remote.c: 496: else if(bt_id==0x02)
  8387  32E4  085A               	movf	_bt_id^(0+128),w
  8388  32E5  3A02               	xorlw	2
  8389  32E6  1D03               	skipz
  8390  32E7  2AFA               	goto	l21790
  8391                           
  8392                           ;ird_remote.c: 497: {
  8393                           ;ird_remote.c: 498: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
  8394  32E8  0020               	movlb	0	; select bank0
  8395  32E9  24B8  31B2         	fcall	PL118	;call to abstracted procedure
  8396  32EB  2472  31B2         	fcall	___ftge
  8397  32ED  1C03               	btfss	3,0
  8398  32EE  2AE2               	goto	l607
  8399  32EF  3066               	movlw	102
  8400  32F0  24C4  31B2         	fcall	PL126	;call to abstracted procedure
  8401  32F2  2472  31B2         	fcall	___ftge
  8402  32F4  1C03               	btfss	3,0
  8403  32F5  2AE2               	goto	l607
  8404                           
  8405                           ;ird_remote.c: 499: {
  8406                           ;ird_remote.c: 500: volt_id=0x01;
  8407  32F6  0021               	movlb	1	; select bank1
  8408                           
  8409                           ;ird_remote.c: 502: eeprom_write(0x09,volt_id);
  8410  32F7  24FE               	fcall	PL264	;call to abstracted procedure
  8411  32F8  31A9  29BA         	ljmp	_eeprom_write
  8412  32FA                     l21790:	
  8413                           ;ird_remote.c: 503: }
  8414                           
  8415                           
  8416                           ;ird_remote.c: 509: else
  8417                           ;ird_remote.c: 510: {
  8418                           ;ird_remote.c: 511: if((sys_bt_voltage>=10.0)&&(sys_bt_voltage<=16.8))
  8419  32FA  0020               	movlb	0	; select bank0
  8420  32FB  24B8  31B2         	fcall	PL118	;call to abstracted procedure
  8421  32FD  2472  31B2         	fcall	___ftge
  8422  32FF  1C03               	btfss	3,0
  8423  3300  2AE2               	goto	l607
  8424  3301  3066               	movlw	102
  8425  3302  24C4  31B2         	fcall	PL126	;call to abstracted procedure
  8426  3304  2472  31B2         	fcall	___ftge
  8427  3306  1C03               	btfss	3,0
  8428  3307  2AE2               	goto	l607
  8429                           
  8430                           ;ird_remote.c: 512: {
  8431                           ;ird_remote.c: 513: volt_id=0x01;
  8432  3308  0021               	movlb	1	; select bank1
  8433                           
  8434                           ;ird_remote.c: 515: eeprom_write(0x09,volt_id);
  8435  3309  24FE               	fcall	PL264	;call to abstracted procedure
  8436  330A  31A9  29BA         	ljmp	_eeprom_write
  8437  330C                     __end_of_auto_system:	
  8438                           ;ird_remote.c: 516: }
  8439                           
  8440  330C                     __ptext17:	
  8441 ;; *************** function _Mppt_Charge *****************
  8442 ;; Defined at:
  8443 ;;		line 2077 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;		None               void
  8450 ;; Registers used:
  8451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 1F/5
  8454 ;;		On exit  : 1B/1
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; Hardware stack levels required when called:    6
  8464 ;; This function calls:
  8465 ;;		_Set_Buck_Pwm_Duty
  8466 ;;		___ftadd
  8467 ;;		___ftge
  8468 ;;		___fttol
  8469 ;;		___lwtoft
  8470 ;;		_pid_calc
  8471 ;; This function is called by:
  8472 ;;		_handle_ad_loop
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _Mppt_Charge
  8478  330C                     _Mppt_Charge:	
  8479                           
  8480                           ;task.c: 2080: if((battery_voltage_value<dianchi_guoya_huifu)&&(charge_index==0x03))
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in _Mppt_Charge: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8484  330C  3199  2130  31B2   	fcall	PL94	;call to abstracted procedure
  8485  330F  2461               	fcall	___lwtoft
  8486  3310  3198  207E  31B2   	fcall	PL34	;call to abstracted procedure
  8487  3313  24AB  31B2         	fcall	PL106	;call to abstracted procedure
  8488  3315  2472  31B2         	fcall	___ftge
  8489  3317  1803               	btfsc	3,0
  8490  3318  2B88               	goto	l24956
  8491  3319  0021               	movlb	1	; select bank1
  8492  331A  0835               	movf	_charge_index^(0+128),w
  8493  331B  3A03               	xorlw	3
  8494  331C  1D03               	skipz
  8495  331D  2B88               	goto	l24956
  8496                           
  8497                           ;task.c: 2081: {
  8498                           ;task.c: 2083: if(mppt_status==0x00)
  8499  331E  0022               	movlb	2	; select bank2
  8500  331F  08BF               	movf	_mppt_status^(0+256),f
  8501  3320  1D03               	skipz
  8502  3321  2B4F               	goto	l24930
  8503                           
  8504                           ;task.c: 2084: {
  8505                           ;task.c: 2085: if (charge_current_value>=I_prev)
  8506  3322  0023               	movlb	3	; select bank3
  8507  3323  082E               	movf	(_I_prev+1)^(0+384),w
  8508  3324  0021               	movlb	1	; select bank1
  8509  3325  022A               	subwf	(_charge_current_value+1)^(0+128),w
  8510  3326  1D03               	skipz
  8511  3327  2B2C               	goto	u15725
  8512  3328  0023               	movlb	3	; select bank3
  8513  3329  082D               	movf	_I_prev^(0+384),w
  8514  332A  0021               	movlb	1	; select bank1
  8515  332B  0229               	subwf	_charge_current_value^(0+128),w
  8516  332C                     u15725:	
  8517  332C  1803               	btfsc	3,0
  8518  332D  2B5E               	goto	L98
  8519                           
  8520                           ;task.c: 2098: else
  8521                           ;task.c: 2099: {
  8522                           ;task.c: 2100: mppt_status=1;
  8523                           
  8524                           ;task.c: 2097: }
  8525                           
  8526                           ;task.c: 2090: if(buck_pwm_value>=900)
  8527                           
  8528                           ;task.c: 2086: {
  8529                           ;task.c: 2088: buck_pwm_value=buck_pwm_value + 200 * 0.025;
  8530  332E  0022               	movlb	2	; select bank2
  8531  332F  01BF               	clrf	_mppt_status^(0+256)
  8532  3330  0ABF               	incf	_mppt_status^(0+256),f
  8533                           
  8534                           ;task.c: 2102: buck_pwm_value=buck_pwm_value - 200 * 0.025;
  8535  3331  0021               	movlb	1	; select bank1
  8536  3332                     L96:	
  8537  3332  24D0  31B2         	fcall	PL166	;call to abstracted procedure
  8538  3334  2461  31B2         	fcall	___lwtoft
  8539  3336  24F4               	fcall	PL262	;call to abstracted procedure
  8540  3337  30C0               	movlw	192
  8541  3338  00C4               	movwf	___ftadd@f1+2
  8542  3339  318B  230F  31B2   	fcall	___ftadd
  8543  333C  2504               	fcall	PL326	;call to abstracted procedure
  8544  333D  319E  2600  31B2   	fcall	___fttol
  8545  3340  24EC  31B2         	fcall	PL250	;call to abstracted procedure
  8546                           
  8547                           ;task.c: 2104: if(buck_pwm_value<=50)
  8548  3342  3000               	movlw	0
  8549  3343  0228               	subwf	(_buck_pwm_value+1)^(0+128),w
  8550  3344  3033               	movlw	51
  8551  3345  1903               	skipnz
  8552  3346  0227               	subwf	_buck_pwm_value^(0+128),w
  8553  3347  1803               	skipnc
  8554  3348  2B79               	goto	l24918
  8555                           
  8556                           ;task.c: 2105: {
  8557                           ;task.c: 2106: buck_pwm_value=50;
  8558  3349  3032               	movlw	50
  8559  334A  00A7               	movwf	_buck_pwm_value^(0+128)
  8560  334B  01A8               	clrf	(_buck_pwm_value+1)^(0+128)
  8561                           
  8562                           ;task.c: 2108: mppt_status=0;
  8563  334C  0022               	movlb	2	; select bank2
  8564  334D  01BF               	clrf	_mppt_status^(0+256)
  8565  334E  2B79               	goto	l24918
  8566  334F                     l24930:	
  8567                           
  8568                           ;task.c: 2115: else
  8569                           ;task.c: 2116: {
  8570                           ;task.c: 2117: if (charge_current_value>=I_prev)
  8571  334F  0023               	movlb	3	; select bank3
  8572  3350  082E               	movf	(_I_prev+1)^(0+384),w
  8573  3351  0021               	movlb	1	; select bank1
  8574  3352  022A               	subwf	(_charge_current_value+1)^(0+128),w
  8575  3353  1D03               	skipz
  8576  3354  2B59               	goto	u15755
  8577  3355  0023               	movlb	3	; select bank3
  8578  3356  082D               	movf	_I_prev^(0+384),w
  8579  3357  0021               	movlb	1	; select bank1
  8580  3358  0229               	subwf	_charge_current_value^(0+128),w
  8581  3359                     u15755:	
  8582  3359  1803               	btfsc	3,0
  8583  335A  2B32               	goto	L96
  8584                           
  8585                           ;task.c: 2134: else
  8586                           ;task.c: 2135: {
  8587                           ;task.c: 2136: mppt_status=0;
  8588                           
  8589                           ;task.c: 2122: if(buck_pwm_value<=50)
  8590                           
  8591                           ;task.c: 2118: {
  8592                           ;task.c: 2120: buck_pwm_value=buck_pwm_value-200 * 0.025;
  8593  335B  0022               	movlb	2	; select bank2
  8594  335C  01BF               	clrf	_mppt_status^(0+256)
  8595                           
  8596                           ;task.c: 2138: buck_pwm_value=buck_pwm_value+ 200 * 0.025;
  8597  335D  0021               	movlb	1	; select bank1
  8598  335E                     L98:	
  8599  335E  24D0  31B2         	fcall	PL166	;call to abstracted procedure
  8600  3360  2461  31B2         	fcall	___lwtoft
  8601  3362  24F4               	fcall	PL262	;call to abstracted procedure
  8602  3363  3040               	movlw	64
  8603  3364  00C4               	movwf	___ftadd@f1+2
  8604  3365  318B  230F  31B2   	fcall	___ftadd
  8605  3368  2504               	fcall	PL326	;call to abstracted procedure
  8606  3369  319E  2600  31B2   	fcall	___fttol
  8607  336C  24EC  31B2         	fcall	PL250	;call to abstracted procedure
  8608                           
  8609                           ;task.c: 2140: if(buck_pwm_value>=900)
  8610  336E  3003               	movlw	3
  8611  336F  0228               	subwf	(_buck_pwm_value+1)^(0+128),w
  8612  3370  3084               	movlw	132
  8613  3371  1903               	skipnz
  8614  3372  0227               	subwf	_buck_pwm_value^(0+128),w
  8615  3373  1C03               	skipc
  8616  3374  2B79               	goto	l24918
  8617                           
  8618                           ;task.c: 2091: {
  8619                           ;task.c: 2092: buck_pwm_value=900;
  8620  3375  3084               	movlw	132
  8621  3376  00A7               	movwf	_buck_pwm_value^(0+128)
  8622  3377  3003               	movlw	3
  8623  3378  00A8               	movwf	(_buck_pwm_value^(0+128)+1)
  8624  3379                     l24918:	
  8625                           
  8626                           ;task.c: 2093: }
  8627                           ;task.c: 2095: Set_Buck_Pwm_Duty(buck_pwm_value);
  8628  3379  0021               	movlb	1	; select bank1
  8629  337A  24D8               	fcall	PL172	;call to abstracted procedure
  8630  337B  319E  265A  31B2   	fcall	_Set_Buck_Pwm_Duty
  8631                           
  8632                           ;task.c: 2147: }
  8633                           ;task.c: 2151: }
  8634                           ;task.c: 2153: PWM = buck_pwm_value;
  8635  337E  0021               	movlb	1	; select bank1
  8636  337F  24D0  31B2         	fcall	PL166	;call to abstracted procedure
  8637  3381  2461  31B2         	fcall	___lwtoft
  8638  3383  24E0               	fcall	PL226	;call to abstracted procedure
  8639  3384                     l24954:	
  8640                           
  8641                           ;task.c: 2155: cv_level_time_count=0x00;
  8642  3384  0025               	movlb	5	; select bank5
  8643  3385  01AF               	clrf	_cv_level_time_count^(0+640)
  8644  3386  01B0               	clrf	(_cv_level_time_count+1)^(0+640)
  8645                           
  8646                           ;task.c: 2157: }
  8647  3387  0008               	return
  8648  3388                     l24956:	
  8649                           
  8650                           ;task.c: 2158: else if((battery_voltage_value>=dianchi_cv_level)&&(battery_voltage_value
      +                          <dianchi_guoya_baohu)&&(charge_index==0x03))
  8651  3388  3199  2130  31B2   	fcall	PL94	;call to abstracted procedure
  8652  338B  2461               	fcall	___lwtoft
  8653  338C  3198  207E  31B2   	fcall	PL34	;call to abstracted procedure
  8654  338F  0023               	movlb	3	; select bank3
  8655  3390  0855               	movf	_dianchi_cv_level^(0+384),w
  8656  3391  0020               	movlb	0	; select bank0
  8657  3392  00D4               	movwf	___ftge@ff2
  8658  3393  0023               	movlb	3	; select bank3
  8659  3394  0856               	movf	(_dianchi_cv_level+1)^(0+384),w
  8660  3395  0020               	movlb	0	; select bank0
  8661  3396  00D5               	movwf	___ftge@ff2+1
  8662  3397  0023               	movlb	3	; select bank3
  8663  3398  0857               	movf	(_dianchi_cv_level+2)^(0+384),w
  8664  3399  0020               	movlb	0	; select bank0
  8665  339A  00D6               	movwf	___ftge@ff2+2
  8666  339B  2472  31B2         	fcall	___ftge
  8667  339D  1C03               	btfss	3,0
  8668  339E  2BC8               	goto	l24972
  8669  339F  0869               	movf	_battery_voltage_value+1,w
  8670  33A0  00B1               	movwf	___lwtoft@c+1
  8671  33A1  0868               	movf	_battery_voltage_value,w
  8672  33A2  00B0               	movwf	___lwtoft@c
  8673  33A3  2461               	fcall	___lwtoft
  8674  33A4  3198  207E  31B2   	fcall	PL34	;call to abstracted procedure
  8675  33A7  249E  31B2         	fcall	PL68	;call to abstracted procedure
  8676  33A9  2472  31B2         	fcall	___ftge
  8677  33AB  1803               	btfsc	3,0
  8678  33AC  2BC8               	goto	l24972
  8679  33AD  0021               	movlb	1	; select bank1
  8680  33AE  0835               	movf	_charge_index^(0+128),w
  8681  33AF  3A03               	xorlw	3
  8682  33B0  1D03               	skipz
  8683  33B1  2BC8               	goto	l24972
  8684                           
  8685                           ;task.c: 2159: {
  8686                           ;task.c: 2160: cv_level_time_count++;
  8687  33B2  0025               	movlb	5	; select bank5
  8688  33B3  0AAF               	incf	_cv_level_time_count^(0+640),f
  8689  33B4  1903               	skipnz
  8690  33B5  0AB0               	incf	(_cv_level_time_count+1)^(0+640),f
  8691                           
  8692                           ;task.c: 2162: if(cv_level_time_count>=100)
  8693  33B6  3000               	movlw	0
  8694  33B7  0230               	subwf	(_cv_level_time_count+1)^(0+640),w
  8695  33B8  3064               	movlw	100
  8696  33B9  1903               	skipnz
  8697  33BA  022F               	subwf	_cv_level_time_count^(0+640),w
  8698  33BB  1C03               	skipc
  8699  33BC  0008               	return
  8700  33BD  3004               	movlw	4
  8701                           
  8702                           ;task.c: 2163: {
  8703                           ;task.c: 2164: cv_level_time_count=0x00;
  8704  33BE  01AF               	clrf	_cv_level_time_count^(0+640)
  8705  33BF  01B0               	clrf	(_cv_level_time_count+1)^(0+640)
  8706                           
  8707                           ;task.c: 2166: charge_index=0x04;
  8708  33C0  0021               	movlb	1	; select bank1
  8709  33C1  00B5               	movwf	_charge_index^(0+128)
  8710                           
  8711                           ;task.c: 2168: PWM = buck_pwm_value;
  8712  33C2  24D0  31B2         	fcall	PL166	;call to abstracted procedure
  8713  33C4  2461  31B2         	fcall	___lwtoft
  8714  33C6  24E0               	fcall	PL226	;call to abstracted procedure
  8715  33C7  0008               	return
  8716  33C8                     l24972:	
  8717                           
  8718                           ;task.c: 2172: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index==0x
      +                          04) )
  8719  33C8  3199  2130  31B2   	fcall	PL94	;call to abstracted procedure
  8720  33CB  2461               	fcall	___lwtoft
  8721  33CC  3198  207E  31B2   	fcall	PL34	;call to abstracted procedure
  8722  33CF  249E  31B2         	fcall	PL68	;call to abstracted procedure
  8723  33D1  2472  31B2         	fcall	___ftge
  8724  33D3  1803               	btfsc	3,0
  8725  33D4  2B84               	goto	l24954
  8726  33D5  0021               	movlb	1	; select bank1
  8727  33D6  0835               	movf	_charge_index^(0+128),w
  8728  33D7  3A04               	xorlw	4
  8729  33D8  1D03               	skipz
  8730  33D9  2B84               	goto	l24954
  8731                           
  8732                           ;task.c: 2173: {
  8733                           ;task.c: 2174: pid_index = 0x02;
  8734  33DA  3002               	movlw	2
  8735  33DB  00BF               	movwf	_pid_index^(0+128)
  8736                           
  8737                           ;task.c: 2176: PWM_I=pid_calc(&PID_CV_charge,battery_voltage_value);
  8738  33DC  30CB               	movlw	low _PID_CV_charge
  8739  33DD  0020               	movlb	0	; select bank0
  8740  33DE  00D7               	movwf	pid_calc@pp
  8741  33DF  3002               	movlw	high _PID_CV_charge
  8742  33E0  00D8               	movwf	pid_calc@pp+1
  8743  33E1  0869               	movf	_battery_voltage_value+1,w
  8744  33E2  00DA               	movwf	pid_calc@NowPoint+1
  8745  33E3  0868               	movf	_battery_voltage_value,w
  8746  33E4  00D9               	movwf	pid_calc@NowPoint
  8747  33E5  31AC  2481  31B2   	fcall	_pid_calc
  8748  33E8  0857               	movf	?_pid_calc,w
  8749  33E9  0024               	movlb	4	; select bank4
  8750  33EA  00A0               	movwf	_PWM_I^(0+512)
  8751  33EB  0020               	movlb	0	; select bank0
  8752  33EC  0858               	movf	?_pid_calc+1,w
  8753  33ED  0024               	movlb	4	; select bank4
  8754  33EE  00A1               	movwf	(_PWM_I+1)^(0+512)
  8755  33EF  0020               	movlb	0	; select bank0
  8756  33F0  0859               	movf	?_pid_calc+2,w
  8757  33F1  0024               	movlb	4	; select bank4
  8758  33F2  00A2               	movwf	(_PWM_I+2)^(0+512)
  8759                           
  8760                           ;task.c: 2178: PWM = PWM+PWM_I;
  8761  33F3  0820               	movf	_PWM_I^(0+512),w
  8762  33F4  0020               	movlb	0	; select bank0
  8763  33F5  00C2               	movwf	___ftadd@f1
  8764  33F6  0024               	movlb	4	; select bank4
  8765  33F7  0821               	movf	(_PWM_I+1)^(0+512),w
  8766  33F8  0020               	movlb	0	; select bank0
  8767  33F9  00C3               	movwf	___ftadd@f1+1
  8768  33FA  0024               	movlb	4	; select bank4
  8769  33FB  0822               	movf	(_PWM_I+2)^(0+512),w
  8770  33FC  0020               	movlb	0	; select bank0
  8771  33FD  00C4               	movwf	___ftadd@f1+2
  8772  33FE  0021               	movlb	1	; select bank1
  8773  33FF  0820               	movf	_PWM^(0+128),w
  8774  3400  0020               	movlb	0	; select bank0
  8775  3401  00C5               	movwf	___ftadd@f2
  8776  3402  0021               	movlb	1	; select bank1
  8777  3403  0821               	movf	(_PWM+1)^(0+128),w
  8778  3404  0020               	movlb	0	; select bank0
  8779  3405  00C6               	movwf	___ftadd@f2+1
  8780  3406  0021               	movlb	1	; select bank1
  8781  3407  0822               	movf	(_PWM+2)^(0+128),w
  8782  3408  0020               	movlb	0	; select bank0
  8783  3409  00C7               	movwf	___ftadd@f2+2
  8784  340A  318B  230F  31B2   	fcall	___ftadd
  8785  340D  0842               	movf	?___ftadd,w
  8786  340E  0021               	movlb	1	; select bank1
  8787  340F  00A0               	movwf	_PWM^(0+128)
  8788  3410  0020               	movlb	0	; select bank0
  8789  3411  0843               	movf	?___ftadd+1,w
  8790  3412  0021               	movlb	1	; select bank1
  8791  3413  00A1               	movwf	(_PWM+1)^(0+128)
  8792  3414  0020               	movlb	0	; select bank0
  8793  3415  0844               	movf	?___ftadd+2,w
  8794  3416  0021               	movlb	1	; select bank1
  8795  3417  00A2               	movwf	(_PWM+2)^(0+128)
  8796                           
  8797                           ;task.c: 2180: if( PWM>=900)
  8798  3418  0820               	movf	_PWM^(0+128),w
  8799  3419  0020               	movlb	0	; select bank0
  8800  341A  00D1               	movwf	___ftge@ff1
  8801  341B  0021               	movlb	1	; select bank1
  8802  341C  0821               	movf	(_PWM+1)^(0+128),w
  8803  341D  0020               	movlb	0	; select bank0
  8804  341E  00D2               	movwf	___ftge@ff1+1
  8805  341F  0021               	movlb	1	; select bank1
  8806  3420  0822               	movf	(_PWM+2)^(0+128),w
  8807  3421  0020               	movlb	0	; select bank0
  8808  3422  00D3               	movwf	___ftge@ff1+2
  8809  3423  3061               	movlw	97
  8810  3424  01D4               	clrf	___ftge@ff2
  8811  3425  00D5               	movwf	___ftge@ff2+1
  8812  3426  3044               	movlw	68
  8813  3427  00D6               	movwf	___ftge@ff2+2
  8814  3428  2472  31B2         	fcall	___ftge
  8815  342A  1C03               	btfss	3,0
  8816  342B  2C32               	goto	l24986
  8817                           
  8818                           ;task.c: 2181: {
  8819                           ;task.c: 2182: PWM=900;
  8820  342C  0021               	movlb	1	; select bank1
  8821  342D  3061               	movlw	97
  8822  342E  01A0               	clrf	_PWM^(0+128)
  8823  342F  00A1               	movwf	(_PWM+1)^(0+128)
  8824  3430  3044               	movlw	68
  8825  3431  2C4C               	goto	L93
  8826  3432                     l24986:	
  8827                           ;task.c: 2183: }
  8828                           
  8829                           
  8830                           ;task.c: 2184: else if(PWM<=50)
  8831  3432  3048               	movlw	72
  8832  3433  01D1               	clrf	___ftge@ff1
  8833  3434  00D2               	movwf	___ftge@ff1+1
  8834  3435  3042               	movlw	66
  8835  3436  00D3               	movwf	___ftge@ff1+2
  8836  3437  0021               	movlb	1	; select bank1
  8837  3438  0820               	movf	_PWM^(0+128),w
  8838  3439  0020               	movlb	0	; select bank0
  8839  343A  00D4               	movwf	___ftge@ff2
  8840  343B  0021               	movlb	1	; select bank1
  8841  343C  0821               	movf	(_PWM+1)^(0+128),w
  8842  343D  0020               	movlb	0	; select bank0
  8843  343E  00D5               	movwf	___ftge@ff2+1
  8844  343F  0021               	movlb	1	; select bank1
  8845  3440  0822               	movf	(_PWM+2)^(0+128),w
  8846  3441  0020               	movlb	0	; select bank0
  8847  3442  00D6               	movwf	___ftge@ff2+2
  8848  3443  2472  31B2         	fcall	___ftge
  8849  3445  1C03               	btfss	3,0
  8850  3446  2C4D               	goto	l24990
  8851                           
  8852                           ;task.c: 2185: {
  8853                           ;task.c: 2186: PWM=50;
  8854  3447  0021               	movlb	1	; select bank1
  8855  3448  3048               	movlw	72
  8856  3449  01A0               	clrf	_PWM^(0+128)
  8857  344A  00A1               	movwf	(_PWM+1)^(0+128)
  8858  344B  3042               	movlw	66
  8859  344C                     L93:	
  8860  344C  00A2               	movwf	(_PWM+2)^(0+128)
  8861  344D                     l24990:	
  8862                           
  8863                           ;task.c: 2187: }
  8864                           ;task.c: 2188: buck_pwm_value = (unsigned int)PWM;
  8865  344D  0021               	movlb	1	; select bank1
  8866  344E  0820               	movf	_PWM^(0+128),w
  8867  344F  0020               	movlb	0	; select bank0
  8868  3450  00D1               	movwf	___fttol@f1
  8869  3451  0021               	movlb	1	; select bank1
  8870  3452  0821               	movf	(_PWM+1)^(0+128),w
  8871  3453  0020               	movlb	0	; select bank0
  8872  3454  00D2               	movwf	___fttol@f1+1
  8873  3455  0021               	movlb	1	; select bank1
  8874  3456  0822               	movf	(_PWM+2)^(0+128),w
  8875  3457  0020               	movlb	0	; select bank0
  8876  3458  00D3               	movwf	___fttol@f1+2
  8877  3459  319E  2600  31B2   	fcall	___fttol
  8878  345C  24EC  31B2         	fcall	PL250	;call to abstracted procedure
  8879                           
  8880                           ;task.c: 2190: Set_Buck_Pwm_Duty(buck_pwm_value);
  8881  345E  24D8               	fcall	PL172	;call to abstracted procedure
  8882  345F  319E  2E5A         	ljmp	l22268
  8883  3461                     __end_of_Mppt_Charge:	
  8884                           ;task.c: 2191: }
  8885                           
  8886  3461                     __ptext22:	
  8887 ;; *************** function ___lwtoft *****************
  8888 ;; Defined at:
  8889 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwtoft.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  c               2   16[BANK0 ] unsigned int 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  3   16[BANK0 ] float 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0, pclath, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 1F/0
  8900 ;;		On exit  : 1F/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8903 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;Total ram usage:        3 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    3
  8910 ;; This function calls:
  8911 ;;		___ftpack
  8912 ;; This function is called by:
  8913 ;;		_auto_system
  8914 ;;		_handle_ad_loop
  8915 ;;		_Mppt_Charge
  8916 ;;		_handle_uart_rx_buf
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           
  8921                           ;psect for function ___lwtoft
  8922  3461                     ___lwtoft:	
  8923                           
  8924                           ;incstack = 0
  8925                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  8926  3461  0830               	movf	___lwtoft@c,w
  8927  3462  00A3               	movwf	___ftpack@arg
  8928  3463  0831               	movf	___lwtoft@c+1,w
  8929  3464  00A4               	movwf	___ftpack@arg+1
  8930  3465  308E               	movlw	142
  8931  3466  01A5               	clrf	___ftpack@arg+2
  8932  3467  00A6               	movwf	___ftpack@exp
  8933  3468  01A7               	clrf	___ftpack@sign
  8934  3469  319E  2685         	fcall	___ftpack
  8935  346B  0823               	movf	?___ftpack,w
  8936  346C  00B0               	movwf	?___lwtoft
  8937  346D  0824               	movf	?___ftpack+1,w
  8938  346E  00B1               	movwf	?___lwtoft+1
  8939  346F  0825               	movf	?___ftpack+2,w
  8940  3470  00B2               	movwf	?___lwtoft+2
  8941  3471  0008               	return
  8942  3472                     __end_of___lwtoft:	
  8943  3472                     __ptext20:	
  8944 ;; *************** function ___ftge *****************
  8945 ;; Defined at:
  8946 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  ff1             3   49[BANK0 ] float 
  8949 ;;  ff2             3   52[BANK0 ] float 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;		None               void
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0
  8956 ;; Tracked objects:
  8957 ;;		On entry : 1F/0
  8958 ;;		On exit  : 1F/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8961 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;Total ram usage:        6 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:    2
  8968 ;; This function calls:
  8969 ;;		Nothing
  8970 ;; This function is called by:
  8971 ;;		_auto_system
  8972 ;;		_pid_calc
  8973 ;;		_pid_calc_2
  8974 ;;		_handle_ad_loop
  8975 ;;		_Mppt_Charge
  8976 ;;		_handle_uart_rx_buf
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function ___ftge
  8982  3472                     ___ftge:	
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8986  3472  1FD3               	btfss	___ftge@ff1+2,7
  8987  3473  2C81               	goto	l25154
  8988  3474  0851               	movf	___ftge@ff1,w
  8989  3475  3C00               	sublw	0
  8990  3476  00D1               	movwf	___ftge@ff1
  8991  3477  0852               	movf	___ftge@ff1+1,w
  8992  3478  1C03               	skipc
  8993  3479  0F52               	incfsz	___ftge@ff1+1,w
  8994  347A  3C00               	sublw	0
  8995  347B  00D2               	movwf	___ftge@ff1+1
  8996  347C  0853               	movf	___ftge@ff1+2,w
  8997  347D  1C03               	skipc
  8998  347E  0F53               	incfsz	___ftge@ff1+2,w
  8999  347F  3C80               	sublw	128
  9000  3480  00D3               	movwf	___ftge@ff1+2
  9001  3481                     l25154:	
  9002  3481  1FD6               	btfss	___ftge@ff2+2,7
  9003  3482  2C90               	goto	l25158
  9004  3483  0854               	movf	___ftge@ff2,w
  9005  3484  3C00               	sublw	0
  9006  3485  00D4               	movwf	___ftge@ff2
  9007  3486  0855               	movf	___ftge@ff2+1,w
  9008  3487  1C03               	skipc
  9009  3488  0F55               	incfsz	___ftge@ff2+1,w
  9010  3489  3C00               	sublw	0
  9011  348A  00D5               	movwf	___ftge@ff2+1
  9012  348B  0856               	movf	___ftge@ff2+2,w
  9013  348C  1C03               	skipc
  9014  348D  0F56               	incfsz	___ftge@ff2+2,w
  9015  348E  3C80               	sublw	128
  9016  348F  00D6               	movwf	___ftge@ff2+2
  9017  3490                     l25158:	
  9018  3490  3080               	movlw	128
  9019  3491  06D3               	xorwf	___ftge@ff1+2,f
  9020  3492  06D6               	xorwf	___ftge@ff2+2,f
  9021  3493  0856               	movf	___ftge@ff2+2,w
  9022  3494  0253               	subwf	___ftge@ff1+2,w
  9023  3495  1D03               	skipz
  9024  3496  0008               	return
  9025  3497  0855               	movf	___ftge@ff2+1,w
  9026  3498  0252               	subwf	___ftge@ff1+1,w
  9027  3499  1D03               	skipz
  9028  349A  0008               	return
  9029  349B  0854               	movf	___ftge@ff2,w
  9030  349C  0251               	subwf	___ftge@ff1,w
  9031  349D  0008               	return
  9032  349E                     __end_of___ftge:	
  9033  349E                     PL68:	
  9034  349E  0022               	movlb	2	; select bank2
  9035  349F  085A               	movf	_dianchi_guoya_baohu^(0+256),w
  9036  34A0  0020               	movlb	0	; select bank0
  9037  34A1  00D4               	movwf	___ftge@ff2
  9038  34A2  0022               	movlb	2	; select bank2
  9039  34A3  085B               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
  9040  34A4  0020               	movlb	0	; select bank0
  9041  34A5  00D5               	movwf	___ftge@ff2+1
  9042  34A6  0022               	movlb	2	; select bank2
  9043  34A7  085C               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
  9044  34A8  0020               	movlb	0	; select bank0
  9045  34A9  00D6               	movwf	___ftge@ff2+2
  9046  34AA  0008               	return
  9047  34AB                     __end_ofPL68:	
  9048  34AB                     PL106:	
  9049  34AB  0023               	movlb	3	; select bank3
  9050  34AC  0858               	movf	_dianchi_guoya_huifu^(0+384),w
  9051  34AD  0020               	movlb	0	; select bank0
  9052  34AE  00D4               	movwf	___ftge@ff2
  9053  34AF  0023               	movlb	3	; select bank3
  9054  34B0  0859               	movf	(_dianchi_guoya_huifu+1)^(0+384),w
  9055  34B1  0020               	movlb	0	; select bank0
  9056  34B2  00D5               	movwf	___ftge@ff2+1
  9057  34B3  0023               	movlb	3	; select bank3
  9058  34B4  085A               	movf	(_dianchi_guoya_huifu+2)^(0+384),w
  9059  34B5  0020               	movlb	0	; select bank0
  9060  34B6  00D6               	movwf	___ftge@ff2+2
  9061  34B7  0008               	return
  9062  34B8                     __end_ofPL106:	
  9063  34B8                     PL118:	
  9064  34B8  0864               	movf	auto_system@sys_bt_voltage,w
  9065  34B9  00D1               	movwf	___ftge@ff1
  9066  34BA  0865               	movf	auto_system@sys_bt_voltage+1,w
  9067  34BB  00D2               	movwf	___ftge@ff1+1
  9068  34BC  0866               	movf	auto_system@sys_bt_voltage+2,w
  9069  34BD  00D3               	movwf	___ftge@ff1+2
  9070  34BE  3020               	movlw	32
  9071  34BF  01D4               	clrf	___ftge@ff2
  9072  34C0  00D5               	movwf	___ftge@ff2+1
  9073  34C1  3041               	movlw	65
  9074  34C2  00D6               	movwf	___ftge@ff2+2
  9075  34C3  0008               	return
  9076  34C4                     __end_ofPL118:	
  9077  34C4                     PL126:	
  9078  34C4  00D1               	movwf	___ftge@ff1
  9079  34C5  3086               	movlw	134
  9080  34C6  00D2               	movwf	___ftge@ff1+1
  9081  34C7  3041               	movlw	65
  9082  34C8  00D3               	movwf	___ftge@ff1+2
  9083  34C9  0864               	movf	auto_system@sys_bt_voltage,w
  9084  34CA  00D4               	movwf	___ftge@ff2
  9085  34CB  0865               	movf	auto_system@sys_bt_voltage+1,w
  9086  34CC  00D5               	movwf	___ftge@ff2+1
  9087  34CD  0866               	movf	auto_system@sys_bt_voltage+2,w
  9088  34CE  00D6               	movwf	___ftge@ff2+2
  9089  34CF  0008               	return
  9090  34D0                     __end_ofPL126:	
  9091  34D0                     PL166:	
  9092  34D0  0828               	movf	(_buck_pwm_value+1)^(0+128),w
  9093  34D1  0020               	movlb	0	; select bank0
  9094  34D2  00B1               	movwf	___lwtoft@c+1
  9095  34D3  0021               	movlb	1	; select bank1
  9096  34D4  0827               	movf	_buck_pwm_value^(0+128),w
  9097  34D5  0020               	movlb	0	; select bank0
  9098  34D6  00B0               	movwf	___lwtoft@c
  9099  34D7  0008               	return
  9100  34D8                     __end_ofPL166:	
  9101  34D8                     PL172:	
  9102  34D8  0828               	movf	(_buck_pwm_value+1)^(0+128),w
  9103  34D9  0020               	movlb	0	; select bank0
  9104  34DA  00A4               	movwf	Set_Buck_Pwm_Duty@duty+1
  9105  34DB  0021               	movlb	1	; select bank1
  9106  34DC  0827               	movf	_buck_pwm_value^(0+128),w
  9107  34DD  0020               	movlb	0	; select bank0
  9108  34DE  00A3               	movwf	Set_Buck_Pwm_Duty@duty
  9109  34DF  0008               	return
  9110  34E0                     __end_ofPL172:	
  9111  34E0                     PL226:	
  9112  34E0  0830               	movf	?___lwtoft,w
  9113  34E1  0021               	movlb	1	; select bank1
  9114  34E2  00A0               	movwf	_PWM^(0+128)
  9115  34E3  0020               	movlb	0	; select bank0
  9116  34E4  0831               	movf	?___lwtoft+1,w
  9117  34E5  0021               	movlb	1	; select bank1
  9118  34E6  00A1               	movwf	(_PWM+1)^(0+128)
  9119  34E7  0020               	movlb	0	; select bank0
  9120  34E8  0832               	movf	?___lwtoft+2,w
  9121  34E9  0021               	movlb	1	; select bank1
  9122  34EA  00A2               	movwf	(_PWM+2)^(0+128)
  9123  34EB  0008               	return
  9124  34EC                     __end_ofPL226:	
  9125  34EC                     PL250:	
  9126  34EC  0852               	movf	?___fttol+1,w
  9127  34ED  0021               	movlb	1	; select bank1
  9128  34EE  00A8               	movwf	(_buck_pwm_value+1)^(0+128)
  9129  34EF  0020               	movlb	0	; select bank0
  9130  34F0  0851               	movf	?___fttol,w
  9131  34F1  0021               	movlb	1	; select bank1
  9132  34F2  00A7               	movwf	_buck_pwm_value^(0+128)
  9133  34F3  0008               	return
  9134  34F4                     __end_ofPL250:	
  9135  34F4                     PL262:	
  9136  34F4  0830               	movf	?___lwtoft,w
  9137  34F5  00C5               	movwf	___ftadd@f2
  9138  34F6  0831               	movf	?___lwtoft+1,w
  9139  34F7  00C6               	movwf	___ftadd@f2+1
  9140  34F8  0832               	movf	?___lwtoft+2,w
  9141  34F9  00C7               	movwf	___ftadd@f2+2
  9142  34FA  30A0               	movlw	160
  9143  34FB  01C2               	clrf	___ftadd@f1
  9144  34FC  00C3               	movwf	___ftadd@f1+1
  9145  34FD  0008               	return
  9146  34FE                     __end_ofPL262:	
  9147  34FE                     PL264:	
  9148  34FE  01DB               	clrf	_volt_id^(0+128)
  9149  34FF  0ADB               	incf	_volt_id^(0+128),f
  9150  3500  085B               	movf	_volt_id^(0+128),w
  9151  3501  0020               	movlb	0	; select bank0
  9152  3502  00DE               	movwf	eeprom_write@value
  9153  3503  3409               	retlw	9
  9154  3504                     __end_ofPL264:	
  9155  3504                     PL326:	
  9156  3504  0842               	movf	?___ftadd,w
  9157  3505  00D1               	movwf	___fttol@f1
  9158  3506  0843               	movf	?___ftadd+1,w
  9159  3507  00D2               	movwf	___fttol@f1+1
  9160  3508  0844               	movf	?___ftadd+2,w
  9161  3509  00D3               	movwf	___fttol@f1+2
  9162  350A  0008               	return
  9163  350B                     __end_ofPL326:	
  9164                           
  9165                           	psect	text5
  9166  1015                     __ptext5:	
  9167 ;; *************** function _handle_uart_rx_buf *****************
  9168 ;; Defined at:
  9169 ;;		line 232 in file "D:\MCUProject\ZH-SL-S4080-1\src\uart.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;		None
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  crc_in          2   67[BANK0 ] unsigned int 
  9174 ;;  byte_l          1    0        unsigned char 
  9175 ;;  byte_h          1    0        unsigned char 
  9176 ;;  i               1    0        unsigned char 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;		None               void
  9179 ;; Registers used:
  9180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9181 ;; Tracked objects:
  9182 ;;		On entry : 1F/2
  9183 ;;		On exit  : 1F/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;Total ram usage:        5 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    4
  9193 ;; This function calls:
  9194 ;;		_Disable_Bost_Pwm1
  9195 ;;		_Disable_Bost_Pwm2
  9196 ;;		_Disable_Buck_Pwm
  9197 ;;		_Enable_Bost_Pwm1
  9198 ;;		_Enable_Bost_Pwm2
  9199 ;;		_Set_Bost_Pwm1_Duty
  9200 ;;		_Set_Bost_Pwm2_Duty
  9201 ;;		_Set_Buck_Pwm_Duty
  9202 ;;		___awtoft
  9203 ;;		___ftdiv
  9204 ;;		___ftge
  9205 ;;		___ftmul
  9206 ;;		___fttol
  9207 ;;		___lbtoft
  9208 ;;		___lmul
  9209 ;;		___lwtoft
  9210 ;;		_crc16
  9211 ;;		_delay_ms
  9212 ;;		_eeprom_read
  9213 ;;		_eeprom_write
  9214 ;;		_memset
  9215 ;; This function is called by:
  9216 ;;		_main
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _handle_uart_rx_buf
  9222  1015                     _handle_uart_rx_buf:	
  9223                           
  9224                           ;uart.c: 236: unsigned int crc_in;
  9225                           ;uart.c: 238: unsigned char byte_h,byte_l;
  9226                           ;uart.c: 240: switch(rx_frame_kind)
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _handle_uart_rx_buf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9230  1015  2ECB               	goto	l24652
  9231  1016                     l24256:	
  9232                           
  9233                           ;uart.c: 243: if(uart1_rx_buf[1]==0xA1)
  9234  1016  0028               	movlb	8	; select bank8
  9235  1017  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
  9236  1018  3AA1               	xorlw	161
  9237  1019  1D03               	skipz
  9238  101A  2EDF               	goto	l24654
  9239                           
  9240                           ;uart.c: 244: {
  9241                           ;uart.c: 245: crc_in=crc16(&uart1_rx_buf[1],1);
  9242  101B  3021               	movlw	low (_uart1_rx_buf+1)
  9243  101C  27F2               	fcall	PL310	;call to abstracted procedure
  9244  101D  3188  20FE  3190   	fcall	_crc16
  9245  1020  0824               	movf	?_crc16+1,w
  9246  1021  00E4               	movwf	handle_uart_rx_buf@crc_in+1
  9247                           
  9248                           ;uart.c: 247: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
  9249  1022  27CB  3190         	fcall	PL244	;call to abstracted procedure
  9250  1024  1D03               	skipz
  9251  1025  2EDF               	goto	l24654
  9252                           
  9253                           ;uart.c: 248: {
  9254                           ;uart.c: 250: p_v=(float)(((float)pv_voltage_value)/10)*61;
  9255  1026  0020               	movlb	0	; select bank0
  9256  1027  27C0               	fcall	PL238	;call to abstracted procedure
  9257  1028  3199  2136  3190   	fcall	PL102	;call to abstracted procedure
  9258  102B  31B4  2461  3190   	fcall	___lwtoft
  9259  102E  2725               	fcall	PL120	;call to abstracted procedure
  9260  102F  319D  258F  3190   	fcall	___ftdiv
  9261  1032  2707               	fcall	PL48	;call to abstracted procedure
  9262  1033  318A  22AA  3190   	fcall	___ftmul
  9263  1036  0833               	movf	?___ftmul,w
  9264  1037  0024               	movlb	4	; select bank4
  9265  1038  00AC               	movwf	_p_v^(0+512)
  9266  1039  0020               	movlb	0	; select bank0
  9267  103A  0834               	movf	?___ftmul+1,w
  9268  103B  0024               	movlb	4	; select bank4
  9269  103C  00AD               	movwf	(_p_v+1)^(0+512)
  9270  103D  0020               	movlb	0	; select bank0
  9271  103E  0835               	movf	?___ftmul+2,w
  9272  103F  0024               	movlb	4	; select bank4
  9273  1040  00AE               	movwf	(_p_v+2)^(0+512)
  9274                           
  9275                           ;uart.c: 252: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
  9276  1041  3052               	movlw	82
  9277  1042  0020               	movlb	0	; select bank0
  9278  1043  00B3               	movwf	___ftmul@f1
  9279  1044  30F8               	movlw	248
  9280  1045  00B4               	movwf	___ftmul@f1+1
  9281  1046  3041               	movlw	65
  9282  1047  00B5               	movwf	___ftmul@f1+2
  9283  1048  3020               	movlw	32
  9284  1049  01C2               	clrf	___ftdiv@f2
  9285  104A  00C3               	movwf	___ftdiv@f2+1
  9286  104B  3041               	movlw	65
  9287  104C  00C4               	movwf	___ftdiv@f2+2
  9288  104D  0869               	movf	_battery_voltage_value+1,w
  9289  104E  00B1               	movwf	___lwtoft@c+1
  9290  104F  0868               	movf	_battery_voltage_value,w
  9291  1050  00B0               	movwf	___lwtoft@c
  9292  1051  31B4  2461  3190   	fcall	___lwtoft
  9293  1054  2725               	fcall	PL120	;call to abstracted procedure
  9294  1055  319D  258F  3190   	fcall	___ftdiv
  9295  1058  2707               	fcall	PL48	;call to abstracted procedure
  9296  1059  318A  22AA  3190   	fcall	___ftmul
  9297  105C  0833               	movf	?___ftmul,w
  9298  105D  0022               	movlb	2	; select bank2
  9299  105E  00A0               	movwf	_b_v^(0+256)
  9300  105F  0020               	movlb	0	; select bank0
  9301  1060  0834               	movf	?___ftmul+1,w
  9302  1061  0022               	movlb	2	; select bank2
  9303  1062  00A1               	movwf	(_b_v+1)^(0+256)
  9304  1063  0020               	movlb	0	; select bank0
  9305  1064  0835               	movf	?___ftmul+2,w
  9306  1065  0022               	movlb	2	; select bank2
  9307  1066  00A2               	movwf	(_b_v+2)^(0+256)
  9308                           
  9309                           ;uart.c: 254: load_v=(float)(((float)load_voltage_value)/10)*61;
  9310  1067  0020               	movlb	0	; select bank0
  9311  1068  27C0               	fcall	PL238	;call to abstracted procedure
  9312  1069  0021               	movlb	1	; select bank1
  9313  106A  3199  217D  3190   	fcall	PL136	;call to abstracted procedure
  9314  106D  31B4  2461  3190   	fcall	___lwtoft
  9315  1070  2725               	fcall	PL120	;call to abstracted procedure
  9316  1071  319D  258F  3190   	fcall	___ftdiv
  9317  1074  2707               	fcall	PL48	;call to abstracted procedure
  9318  1075  318A  22AA  3190   	fcall	___ftmul
  9319  1078  0833               	movf	?___ftmul,w
  9320  1079  0024               	movlb	4	; select bank4
  9321  107A  00A9               	movwf	_load_v^(0+512)
  9322  107B  0020               	movlb	0	; select bank0
  9323  107C  0834               	movf	?___ftmul+1,w
  9324  107D  0024               	movlb	4	; select bank4
  9325  107E  00AA               	movwf	(_load_v+1)^(0+512)
  9326  107F  0020               	movlb	0	; select bank0
  9327  1080  0835               	movf	?___ftmul+2,w
  9328  1081  0024               	movlb	4	; select bank4
  9329  1082  00AB               	movwf	(_load_v+2)^(0+512)
  9330                           
  9331                           ;uart.c: 256: charge_I=((float)charge_current_value)/0.15;
  9332  1083  309A               	movlw	154
  9333  1084  0020               	movlb	0	; select bank0
  9334  1085  00C2               	movwf	___ftdiv@f2
  9335  1086  3019               	movlw	25
  9336  1087  00C3               	movwf	___ftdiv@f2+1
  9337  1088  303E               	movlw	62
  9338  1089  00C4               	movwf	___ftdiv@f2+2
  9339  108A  0021               	movlb	1	; select bank1
  9340  108B  082A               	movf	(_charge_current_value+1)^(0+128),w
  9341  108C  27D7               	fcall	PL266	;call to abstracted procedure
  9342  108D  31B4  2461  3190   	fcall	___lwtoft
  9343  1090  2725               	fcall	PL120	;call to abstracted procedure
  9344  1091  319D  258F  3190   	fcall	___ftdiv
  9345  1094  0842               	movf	?___ftdiv,w
  9346  1095  0024               	movlb	4	; select bank4
  9347  1096  00A3               	movwf	_charge_I^(0+512)
  9348  1097  0020               	movlb	0	; select bank0
  9349  1098  0843               	movf	?___ftdiv+1,w
  9350  1099  0024               	movlb	4	; select bank4
  9351  109A  00A4               	movwf	(_charge_I+1)^(0+512)
  9352  109B  0020               	movlb	0	; select bank0
  9353  109C  0844               	movf	?___ftdiv+2,w
  9354  109D  0024               	movlb	4	; select bank4
  9355  109E  00A5               	movwf	(_charge_I+2)^(0+512)
  9356                           
  9357                           ;uart.c: 258: load_I=((float)discharge_current_value)/0.30;
  9358  109F  309A               	movlw	154
  9359  10A0  0020               	movlb	0	; select bank0
  9360  10A1  00C2               	movwf	___ftdiv@f2
  9361  10A2  3099               	movlw	153
  9362  10A3  00C3               	movwf	___ftdiv@f2+1
  9363  10A4  303E               	movlw	62
  9364  10A5  00C4               	movwf	___ftdiv@f2+2
  9365  10A6  3199  2197  3190   	fcall	PL140	;call to abstracted procedure
  9366  10A9  31B4  2461  3190   	fcall	___lwtoft
  9367  10AC  2725               	fcall	PL120	;call to abstracted procedure
  9368  10AD  319D  258F  3190   	fcall	___ftdiv
  9369  10B0  0842               	movf	?___ftdiv,w
  9370  10B1  0024               	movlb	4	; select bank4
  9371  10B2  00A6               	movwf	_load_I^(0+512)
  9372  10B3  0020               	movlb	0	; select bank0
  9373  10B4  0843               	movf	?___ftdiv+1,w
  9374  10B5  0024               	movlb	4	; select bank4
  9375  10B6  00A7               	movwf	(_load_I+1)^(0+512)
  9376  10B7  0020               	movlb	0	; select bank0
  9377  10B8  0844               	movf	?___ftdiv+2,w
  9378  10B9  0024               	movlb	4	; select bank4
  9379  10BA  00A8               	movwf	(_load_I+2)^(0+512)
  9380                           
  9381                           ;uart.c: 260: sys_mode=(volt_id<<4)|system_status;
  9382  10BB  0021               	movlb	1	; select bank1
  9383  10BC  0E5B               	swapf	_volt_id^(0+128),w
  9384  10BD  39F0               	andlw	240
  9385  10BE  0440               	iorwf	_system_status^(0+128),w
  9386  10BF  0022               	movlb	2	; select bank2
  9387  10C0  00D0               	movwf	_sys_mode^(0+256)
  9388                           
  9389                           ;uart.c: 264: uart1_tx_buf[0]=0x55;
  9390  10C1  3055               	movlw	85
  9391  10C2  0027               	movlb	7	; select bank7
  9392  10C3  00A0               	movwf	_uart1_tx_buf^(0+896)
  9393                           
  9394                           ;uart.c: 266: uart1_tx_buf[1]=0xB1;
  9395  10C4  30B1               	movlw	177
  9396  10C5  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
  9397                           
  9398                           ;uart.c: 268: uart1_tx_buf[2]=(unsigned char )(p_v/256);
  9399  10C6  0024               	movlb	4	; select bank4
  9400  10C7  082C               	movf	_p_v^(0+512),w
  9401  10C8  0020               	movlb	0	; select bank0
  9402  10C9  00C5               	movwf	___ftdiv@f1
  9403  10CA  0024               	movlb	4	; select bank4
  9404  10CB  082D               	movf	(_p_v+1)^(0+512),w
  9405  10CC  0020               	movlb	0	; select bank0
  9406  10CD  00C6               	movwf	___ftdiv@f1+1
  9407  10CE  0024               	movlb	4	; select bank4
  9408  10CF  082E               	movf	(_p_v+2)^(0+512),w
  9409  10D0  26FF               	fcall	PL44	;call to abstracted procedure
  9410  10D1  319D  258F  3190   	fcall	___ftdiv
  9411  10D4  270E               	fcall	PL56	;call to abstracted procedure
  9412  10D5  319E  2600  3190   	fcall	___fttol
  9413  10D8  0851               	movf	?___fttol,w
  9414  10D9  0027               	movlb	7	; select bank7
  9415  10DA  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
  9416                           
  9417                           ;uart.c: 269: uart1_tx_buf[3]=(unsigned char )p_v;
  9418  10DB  0024               	movlb	4	; select bank4
  9419  10DC  082C               	movf	_p_v^(0+512),w
  9420  10DD  0020               	movlb	0	; select bank0
  9421  10DE  00D1               	movwf	___fttol@f1
  9422  10DF  0024               	movlb	4	; select bank4
  9423  10E0  082D               	movf	(_p_v+1)^(0+512),w
  9424  10E1  0020               	movlb	0	; select bank0
  9425  10E2  00D2               	movwf	___fttol@f1+1
  9426  10E3  0024               	movlb	4	; select bank4
  9427  10E4  082E               	movf	(_p_v+2)^(0+512),w
  9428  10E5  0020               	movlb	0	; select bank0
  9429  10E6  00D3               	movwf	___fttol@f1+2
  9430  10E7  319E  2600  3190   	fcall	___fttol
  9431  10EA  0851               	movf	?___fttol,w
  9432  10EB  0027               	movlb	7	; select bank7
  9433  10EC  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
  9434                           
  9435                           ;uart.c: 271: uart1_tx_buf[4]=(unsigned char )(b_v/256);
  9436  10ED  0022               	movlb	2	; select bank2
  9437  10EE  0820               	movf	_b_v^(0+256),w
  9438  10EF  0020               	movlb	0	; select bank0
  9439  10F0  00C5               	movwf	___ftdiv@f1
  9440  10F1  0022               	movlb	2	; select bank2
  9441  10F2  0821               	movf	(_b_v+1)^(0+256),w
  9442  10F3  0020               	movlb	0	; select bank0
  9443  10F4  00C6               	movwf	___ftdiv@f1+1
  9444  10F5  0022               	movlb	2	; select bank2
  9445  10F6  0822               	movf	(_b_v+2)^(0+256),w
  9446  10F7  26FF               	fcall	PL44	;call to abstracted procedure
  9447  10F8  319D  258F  3190   	fcall	___ftdiv
  9448  10FB  270E               	fcall	PL56	;call to abstracted procedure
  9449  10FC  319E  2600  3190   	fcall	___fttol
  9450  10FF  0851               	movf	?___fttol,w
  9451  1100  0027               	movlb	7	; select bank7
  9452  1101  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
  9453                           
  9454                           ;uart.c: 272: uart1_tx_buf[5]=(unsigned char )b_v;
  9455  1102  0022               	movlb	2	; select bank2
  9456  1103  0820               	movf	_b_v^(0+256),w
  9457  1104  0020               	movlb	0	; select bank0
  9458  1105  00D1               	movwf	___fttol@f1
  9459  1106  0022               	movlb	2	; select bank2
  9460  1107  0821               	movf	(_b_v+1)^(0+256),w
  9461  1108  0020               	movlb	0	; select bank0
  9462  1109  00D2               	movwf	___fttol@f1+1
  9463  110A  0022               	movlb	2	; select bank2
  9464  110B  0822               	movf	(_b_v+2)^(0+256),w
  9465  110C  0020               	movlb	0	; select bank0
  9466  110D  00D3               	movwf	___fttol@f1+2
  9467  110E  319E  2600  3190   	fcall	___fttol
  9468  1111  0851               	movf	?___fttol,w
  9469  1112  0027               	movlb	7	; select bank7
  9470  1113  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
  9471                           
  9472                           ;uart.c: 274: uart1_tx_buf[6]=(unsigned char )(load_v/256);
  9473  1114  0024               	movlb	4	; select bank4
  9474  1115  0829               	movf	_load_v^(0+512),w
  9475  1116  0020               	movlb	0	; select bank0
  9476  1117  00C5               	movwf	___ftdiv@f1
  9477  1118  0024               	movlb	4	; select bank4
  9478  1119  082A               	movf	(_load_v+1)^(0+512),w
  9479  111A  0020               	movlb	0	; select bank0
  9480  111B  00C6               	movwf	___ftdiv@f1+1
  9481  111C  0024               	movlb	4	; select bank4
  9482  111D  082B               	movf	(_load_v+2)^(0+512),w
  9483  111E  26FF               	fcall	PL44	;call to abstracted procedure
  9484  111F  319D  258F  3190   	fcall	___ftdiv
  9485  1122  270E               	fcall	PL56	;call to abstracted procedure
  9486  1123  319E  2600  3190   	fcall	___fttol
  9487  1126  0851               	movf	?___fttol,w
  9488  1127  0027               	movlb	7	; select bank7
  9489  1128  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
  9490                           
  9491                           ;uart.c: 275: uart1_tx_buf[7]=(unsigned char )load_v;
  9492  1129  0024               	movlb	4	; select bank4
  9493  112A  0829               	movf	_load_v^(0+512),w
  9494  112B  0020               	movlb	0	; select bank0
  9495  112C  00D1               	movwf	___fttol@f1
  9496  112D  0024               	movlb	4	; select bank4
  9497  112E  082A               	movf	(_load_v+1)^(0+512),w
  9498  112F  0020               	movlb	0	; select bank0
  9499  1130  00D2               	movwf	___fttol@f1+1
  9500  1131  0024               	movlb	4	; select bank4
  9501  1132  082B               	movf	(_load_v+2)^(0+512),w
  9502  1133  0020               	movlb	0	; select bank0
  9503  1134  00D3               	movwf	___fttol@f1+2
  9504  1135  319E  2600  3190   	fcall	___fttol
  9505  1138  0851               	movf	?___fttol,w
  9506  1139  0027               	movlb	7	; select bank7
  9507  113A  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
  9508                           
  9509                           ;uart.c: 277: uart1_tx_buf[8]=(unsigned char )(charge_I/256);
  9510  113B  0024               	movlb	4	; select bank4
  9511  113C  0823               	movf	_charge_I^(0+512),w
  9512  113D  0020               	movlb	0	; select bank0
  9513  113E  00C5               	movwf	___ftdiv@f1
  9514  113F  0024               	movlb	4	; select bank4
  9515  1140  0824               	movf	(_charge_I+1)^(0+512),w
  9516  1141  0020               	movlb	0	; select bank0
  9517  1142  00C6               	movwf	___ftdiv@f1+1
  9518  1143  0024               	movlb	4	; select bank4
  9519  1144  0825               	movf	(_charge_I+2)^(0+512),w
  9520  1145  26FF               	fcall	PL44	;call to abstracted procedure
  9521  1146  319D  258F  3190   	fcall	___ftdiv
  9522  1149  270E               	fcall	PL56	;call to abstracted procedure
  9523  114A  319E  2600  3190   	fcall	___fttol
  9524  114D  0851               	movf	?___fttol,w
  9525  114E  0027               	movlb	7	; select bank7
  9526  114F  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
  9527                           
  9528                           ;uart.c: 278: uart1_tx_buf[9]=(unsigned char )charge_I;
  9529  1150  0024               	movlb	4	; select bank4
  9530  1151  0823               	movf	_charge_I^(0+512),w
  9531  1152  0020               	movlb	0	; select bank0
  9532  1153  00D1               	movwf	___fttol@f1
  9533  1154  0024               	movlb	4	; select bank4
  9534  1155  0824               	movf	(_charge_I+1)^(0+512),w
  9535  1156  0020               	movlb	0	; select bank0
  9536  1157  00D2               	movwf	___fttol@f1+1
  9537  1158  0024               	movlb	4	; select bank4
  9538  1159  0825               	movf	(_charge_I+2)^(0+512),w
  9539  115A  0020               	movlb	0	; select bank0
  9540  115B  00D3               	movwf	___fttol@f1+2
  9541  115C  319E  2600  3190   	fcall	___fttol
  9542  115F  0851               	movf	?___fttol,w
  9543  1160  0027               	movlb	7	; select bank7
  9544  1161  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
  9545                           
  9546                           ;uart.c: 280: uart1_tx_buf[10]=(unsigned char )(load_I/256);
  9547  1162  0024               	movlb	4	; select bank4
  9548  1163  0826               	movf	_load_I^(0+512),w
  9549  1164  0020               	movlb	0	; select bank0
  9550  1165  00C5               	movwf	___ftdiv@f1
  9551  1166  0024               	movlb	4	; select bank4
  9552  1167  0827               	movf	(_load_I+1)^(0+512),w
  9553  1168  0020               	movlb	0	; select bank0
  9554  1169  00C6               	movwf	___ftdiv@f1+1
  9555  116A  0024               	movlb	4	; select bank4
  9556  116B  0828               	movf	(_load_I+2)^(0+512),w
  9557  116C  26FF               	fcall	PL44	;call to abstracted procedure
  9558  116D  319D  258F  3190   	fcall	___ftdiv
  9559  1170  270E               	fcall	PL56	;call to abstracted procedure
  9560  1171  319E  2600  3190   	fcall	___fttol
  9561  1174  0851               	movf	?___fttol,w
  9562  1175  0027               	movlb	7	; select bank7
  9563  1176  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
  9564                           
  9565                           ;uart.c: 281: uart1_tx_buf[11]=(unsigned char )load_I;
  9566  1177  0024               	movlb	4	; select bank4
  9567  1178  0826               	movf	_load_I^(0+512),w
  9568  1179  0020               	movlb	0	; select bank0
  9569  117A  00D1               	movwf	___fttol@f1
  9570  117B  0024               	movlb	4	; select bank4
  9571  117C  0827               	movf	(_load_I+1)^(0+512),w
  9572  117D  0020               	movlb	0	; select bank0
  9573  117E  00D2               	movwf	___fttol@f1+1
  9574  117F  0024               	movlb	4	; select bank4
  9575  1180  0828               	movf	(_load_I+2)^(0+512),w
  9576  1181  0020               	movlb	0	; select bank0
  9577  1182  00D3               	movwf	___fttol@f1+2
  9578  1183  319E  2600  3190   	fcall	___fttol
  9579  1186  0851               	movf	?___fttol,w
  9580  1187  0027               	movlb	7	; select bank7
  9581  1188  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
  9582                           
  9583                           ;uart.c: 283: uart1_tx_buf[12]=(unsigned char )sys_mode;
  9584  1189  0022               	movlb	2	; select bank2
  9585  118A  0850               	movf	_sys_mode^(0+256),w
  9586  118B  0027               	movlb	7	; select bank7
  9587  118C  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
  9588                           
  9589                           ;uart.c: 285: uart1_tx_buf[13]=(unsigned char )(mcu_value/256);
  9590  118D  0021               	movlb	1	; select bank1
  9591  118E  0832               	movf	(_mcu_value+1)^(0+128),w
  9592  118F  0027               	movlb	7	; select bank7
  9593  1190  00AD               	movwf	(_uart1_tx_buf^(0+896)+13)
  9594                           
  9595                           ;uart.c: 287: uart1_tx_buf[14]=(unsigned char )(mcu_value);
  9596  1191  0021               	movlb	1	; select bank1
  9597  1192  0831               	movf	_mcu_value^(0+128),w
  9598  1193  0027               	movlb	7	; select bank7
  9599  1194  00AE               	movwf	(_uart1_tx_buf^(0+896)+14)
  9600                           
  9601                           ;uart.c: 289: uart1_tx_buf[15]=(unsigned char )(discharge_current_value/256);
  9602  1195  0021               	movlb	1	; select bank1
  9603  1196  082E               	movf	(_discharge_current_value+1)^(0+128),w
  9604  1197  0027               	movlb	7	; select bank7
  9605  1198  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
  9606                           
  9607                           ;uart.c: 291: uart1_tx_buf[16]=(unsigned char )(discharge_current_value);
  9608  1199  0021               	movlb	1	; select bank1
  9609  119A  082D               	movf	_discharge_current_value^(0+128),w
  9610  119B  0027               	movlb	7	; select bank7
  9611  119C  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
  9612                           
  9613                           ;uart.c: 293: uart1_tx_buf[17]=(unsigned char )(temperature_value/256);
  9614  119D  0022               	movlb	2	; select bank2
  9615  119E  0828               	movf	(_temperature_value+1)^(0+256),w
  9616  119F  0027               	movlb	7	; select bank7
  9617  11A0  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
  9618                           
  9619                           ;uart.c: 295: uart1_tx_buf[18]=(unsigned char )(temperature_value);
  9620  11A1  0022               	movlb	2	; select bank2
  9621  11A2  0827               	movf	_temperature_value^(0+256),w
  9622  11A3  0027               	movlb	7	; select bank7
  9623  11A4  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
  9624                           
  9625                           ;uart.c: 298: uart1_tx_buf[19]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+0 );
  9626  11A5  0020               	movlb	0	; select bank0
  9627  11A6  2715               	fcall	PL90	;call to abstracted procedure
  9628  11A7  3E12               	addlw	18
  9629  11A8  318F  2732  3190   	fcall	_eeprom_read
  9630  11AB  0027               	movlb	7	; select bank7
  9631  11AC  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
  9632                           
  9633                           ;uart.c: 300: uart1_tx_buf[20]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+1 );
  9634  11AD  0020               	movlb	0	; select bank0
  9635  11AE  2715               	fcall	PL90	;call to abstracted procedure
  9636  11AF  3E13               	addlw	19
  9637  11B0  318F  2732  3190   	fcall	_eeprom_read
  9638  11B3  0027               	movlb	7	; select bank7
  9639  11B4  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
  9640                           
  9641                           ;uart.c: 302: uart1_tx_buf[21]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+2 );
  9642  11B5  0020               	movlb	0	; select bank0
  9643  11B6  2715               	fcall	PL90	;call to abstracted procedure
  9644  11B7  3E14               	addlw	20
  9645  11B8  318F  2732  3190   	fcall	_eeprom_read
  9646  11BB  0027               	movlb	7	; select bank7
  9647  11BC  00B5               	movwf	(_uart1_tx_buf^(0+896)+21)
  9648                           
  9649                           ;uart.c: 304: uart1_tx_buf[22]=eeprom_read(0x12+4*( (today_index+8-0)%8 )+3 );
  9650  11BD  0020               	movlb	0	; select bank0
  9651  11BE  2715               	fcall	PL90	;call to abstracted procedure
  9652  11BF  3E15               	addlw	21
  9653  11C0  318F  2732  3190   	fcall	_eeprom_read
  9654  11C3  0027               	movlb	7	; select bank7
  9655  11C4  00B6               	movwf	(_uart1_tx_buf^(0+896)+22)
  9656                           
  9657                           ;uart.c: 307: uart1_tx_buf[23]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+0 );
  9658  11C5  0020               	movlb	0	; select bank0
  9659  11C6  2759               	fcall	PL184	;call to abstracted procedure
  9660  11C7  3E12               	addlw	18
  9661  11C8  318F  2732  3190   	fcall	_eeprom_read
  9662  11CB  0027               	movlb	7	; select bank7
  9663  11CC  00B7               	movwf	(_uart1_tx_buf^(0+896)+23)
  9664                           
  9665                           ;uart.c: 309: uart1_tx_buf[24]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+1 );
  9666  11CD  0020               	movlb	0	; select bank0
  9667  11CE  2759               	fcall	PL184	;call to abstracted procedure
  9668  11CF  3E13               	addlw	19
  9669  11D0  318F  2732  3190   	fcall	_eeprom_read
  9670  11D3  0027               	movlb	7	; select bank7
  9671  11D4  00B8               	movwf	(_uart1_tx_buf^(0+896)+24)
  9672                           
  9673                           ;uart.c: 311: uart1_tx_buf[25]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+2 );
  9674  11D5  0020               	movlb	0	; select bank0
  9675  11D6  2759               	fcall	PL184	;call to abstracted procedure
  9676  11D7  3E14               	addlw	20
  9677  11D8  318F  2732  3190   	fcall	_eeprom_read
  9678  11DB  0027               	movlb	7	; select bank7
  9679  11DC  00B9               	movwf	(_uart1_tx_buf^(0+896)+25)
  9680                           
  9681                           ;uart.c: 313: uart1_tx_buf[26]=eeprom_read(0x12+4*( (today_index+8-1)%8 )+3 );
  9682  11DD  0020               	movlb	0	; select bank0
  9683  11DE  2759               	fcall	PL184	;call to abstracted procedure
  9684  11DF  3E15               	addlw	21
  9685  11E0  318F  2732  3190   	fcall	_eeprom_read
  9686  11E3  0027               	movlb	7	; select bank7
  9687  11E4  00BA               	movwf	(_uart1_tx_buf^(0+896)+26)
  9688                           
  9689                           ;uart.c: 316: uart1_tx_buf[27]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+0 );
  9690  11E5  0020               	movlb	0	; select bank0
  9691  11E6  275F               	fcall	PL186	;call to abstracted procedure
  9692  11E7  3E12               	addlw	18
  9693  11E8  318F  2732  3190   	fcall	_eeprom_read
  9694  11EB  0027               	movlb	7	; select bank7
  9695  11EC  00BB               	movwf	(_uart1_tx_buf^(0+896)+27)
  9696                           
  9697                           ;uart.c: 318: uart1_tx_buf[28]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+1 );
  9698  11ED  0020               	movlb	0	; select bank0
  9699  11EE  275F               	fcall	PL186	;call to abstracted procedure
  9700  11EF  3E13               	addlw	19
  9701  11F0  318F  2732  3190   	fcall	_eeprom_read
  9702  11F3  0027               	movlb	7	; select bank7
  9703  11F4  00BC               	movwf	(_uart1_tx_buf^(0+896)+28)
  9704                           
  9705                           ;uart.c: 320: uart1_tx_buf[29]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+2 );
  9706  11F5  0020               	movlb	0	; select bank0
  9707  11F6  275F               	fcall	PL186	;call to abstracted procedure
  9708  11F7  3E14               	addlw	20
  9709  11F8  318F  2732  3190   	fcall	_eeprom_read
  9710  11FB  0027               	movlb	7	; select bank7
  9711  11FC  00BD               	movwf	(_uart1_tx_buf^(0+896)+29)
  9712                           
  9713                           ;uart.c: 322: uart1_tx_buf[30]=eeprom_read(0x12+4*( (today_index+8-2)%8 )+3 );
  9714  11FD  0020               	movlb	0	; select bank0
  9715  11FE  275F               	fcall	PL186	;call to abstracted procedure
  9716  11FF  3E15               	addlw	21
  9717  1200  318F  2732  3190   	fcall	_eeprom_read
  9718  1203  0027               	movlb	7	; select bank7
  9719  1204  00BE               	movwf	(_uart1_tx_buf^(0+896)+30)
  9720                           
  9721                           ;uart.c: 325: uart1_tx_buf[31]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+0 );
  9722  1205  0020               	movlb	0	; select bank0
  9723  1206  2753               	fcall	PL182	;call to abstracted procedure
  9724  1207  3E12               	addlw	18
  9725  1208  318F  2732  3190   	fcall	_eeprom_read
  9726  120B  0027               	movlb	7	; select bank7
  9727  120C  00BF               	movwf	(_uart1_tx_buf^(0+896)+31)
  9728                           
  9729                           ;uart.c: 327: uart1_tx_buf[32]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+1 );
  9730  120D  0020               	movlb	0	; select bank0
  9731  120E  2753               	fcall	PL182	;call to abstracted procedure
  9732  120F  3E13               	addlw	19
  9733  1210  318F  2732  3190   	fcall	_eeprom_read
  9734  1213  0027               	movlb	7	; select bank7
  9735  1214  00C0               	movwf	(_uart1_tx_buf^(0+896)+32)
  9736                           
  9737                           ;uart.c: 329: uart1_tx_buf[33]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+2 );
  9738  1215  0020               	movlb	0	; select bank0
  9739  1216  2753               	fcall	PL182	;call to abstracted procedure
  9740  1217  3E14               	addlw	20
  9741  1218  318F  2732  3190   	fcall	_eeprom_read
  9742  121B  0027               	movlb	7	; select bank7
  9743  121C  00C1               	movwf	(_uart1_tx_buf^(0+896)+33)
  9744                           
  9745                           ;uart.c: 331: uart1_tx_buf[34]=eeprom_read(0x12+4*( (today_index+8-3)%8 )+3 );
  9746  121D  0020               	movlb	0	; select bank0
  9747  121E  2753               	fcall	PL182	;call to abstracted procedure
  9748  121F  3E15               	addlw	21
  9749  1220  318F  2732  3190   	fcall	_eeprom_read
  9750  1223  0027               	movlb	7	; select bank7
  9751  1224  00C2               	movwf	(_uart1_tx_buf^(0+896)+34)
  9752                           
  9753                           ;uart.c: 334: uart1_tx_buf[35]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+0 );
  9754  1225  0020               	movlb	0	; select bank0
  9755  1226  274D               	fcall	PL178	;call to abstracted procedure
  9756  1227  3E12               	addlw	18
  9757  1228  318F  2732  3190   	fcall	_eeprom_read
  9758  122B  0027               	movlb	7	; select bank7
  9759  122C  00C3               	movwf	(_uart1_tx_buf^(0+896)+35)
  9760                           
  9761                           ;uart.c: 336: uart1_tx_buf[36]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+1 );
  9762  122D  0020               	movlb	0	; select bank0
  9763  122E  274D               	fcall	PL178	;call to abstracted procedure
  9764  122F  3E13               	addlw	19
  9765  1230  318F  2732  3190   	fcall	_eeprom_read
  9766  1233  0027               	movlb	7	; select bank7
  9767  1234  00C4               	movwf	(_uart1_tx_buf^(0+896)+36)
  9768                           
  9769                           ;uart.c: 338: uart1_tx_buf[37]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+2 );
  9770  1235  0020               	movlb	0	; select bank0
  9771  1236  274D               	fcall	PL178	;call to abstracted procedure
  9772  1237  3E14               	addlw	20
  9773  1238  318F  2732  3190   	fcall	_eeprom_read
  9774  123B  0027               	movlb	7	; select bank7
  9775  123C  00C5               	movwf	(_uart1_tx_buf^(0+896)+37)
  9776                           
  9777                           ;uart.c: 340: uart1_tx_buf[38]=eeprom_read(0x12+4*( (today_index+8-4)%8 )+3 );
  9778  123D  0020               	movlb	0	; select bank0
  9779  123E  274D               	fcall	PL178	;call to abstracted procedure
  9780  123F  3E15               	addlw	21
  9781  1240  318F  2732  3190   	fcall	_eeprom_read
  9782  1243  0027               	movlb	7	; select bank7
  9783  1244  00C6               	movwf	(_uart1_tx_buf^(0+896)+38)
  9784                           
  9785                           ;uart.c: 343: uart1_tx_buf[39]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+0 );
  9786  1245  0020               	movlb	0	; select bank0
  9787  1246  273B               	fcall	PL168	;call to abstracted procedure
  9788  1247  3E12               	addlw	18
  9789  1248  318F  2732  3190   	fcall	_eeprom_read
  9790  124B  0027               	movlb	7	; select bank7
  9791  124C  00C7               	movwf	(_uart1_tx_buf^(0+896)+39)
  9792                           
  9793                           ;uart.c: 345: uart1_tx_buf[40]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+1 );
  9794  124D  0020               	movlb	0	; select bank0
  9795  124E  273B               	fcall	PL168	;call to abstracted procedure
  9796  124F  3E13               	addlw	19
  9797  1250  318F  2732  3190   	fcall	_eeprom_read
  9798  1253  0027               	movlb	7	; select bank7
  9799  1254  00C8               	movwf	(_uart1_tx_buf^(0+896)+40)
  9800                           
  9801                           ;uart.c: 347: uart1_tx_buf[41]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+2 );
  9802  1255  0020               	movlb	0	; select bank0
  9803  1256  273B               	fcall	PL168	;call to abstracted procedure
  9804  1257  3E14               	addlw	20
  9805  1258  318F  2732  3190   	fcall	_eeprom_read
  9806  125B  0027               	movlb	7	; select bank7
  9807  125C  00C9               	movwf	(_uart1_tx_buf^(0+896)+41)
  9808                           
  9809                           ;uart.c: 349: uart1_tx_buf[42]=eeprom_read(0x12+4*( (today_index+8-5)%8 )+3 );
  9810  125D  0020               	movlb	0	; select bank0
  9811  125E  273B               	fcall	PL168	;call to abstracted procedure
  9812  125F  3E15               	addlw	21
  9813  1260  318F  2732  3190   	fcall	_eeprom_read
  9814  1263  0027               	movlb	7	; select bank7
  9815  1264  00CA               	movwf	(_uart1_tx_buf^(0+896)+42)
  9816                           
  9817                           ;uart.c: 352: uart1_tx_buf[43]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+0 );
  9818  1265  0020               	movlb	0	; select bank0
  9819  1266  2741               	fcall	PL170	;call to abstracted procedure
  9820  1267  3E12               	addlw	18
  9821  1268  318F  2732  3190   	fcall	_eeprom_read
  9822  126B  0027               	movlb	7	; select bank7
  9823  126C  00CB               	movwf	(_uart1_tx_buf^(0+896)+43)
  9824                           
  9825                           ;uart.c: 354: uart1_tx_buf[44]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+1 );
  9826  126D  0020               	movlb	0	; select bank0
  9827  126E  2741               	fcall	PL170	;call to abstracted procedure
  9828  126F  3E13               	addlw	19
  9829  1270  318F  2732  3190   	fcall	_eeprom_read
  9830  1273  0027               	movlb	7	; select bank7
  9831  1274  00CC               	movwf	(_uart1_tx_buf^(0+896)+44)
  9832                           
  9833                           ;uart.c: 356: uart1_tx_buf[45]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+2 );
  9834  1275  0020               	movlb	0	; select bank0
  9835  1276  2741               	fcall	PL170	;call to abstracted procedure
  9836  1277  3E14               	addlw	20
  9837  1278  318F  2732  3190   	fcall	_eeprom_read
  9838  127B  0027               	movlb	7	; select bank7
  9839  127C  00CD               	movwf	(_uart1_tx_buf^(0+896)+45)
  9840                           
  9841                           ;uart.c: 358: uart1_tx_buf[46]=eeprom_read(0x12+4*( (today_index+8-6)%8 )+3 );
  9842  127D  0020               	movlb	0	; select bank0
  9843  127E  2741               	fcall	PL170	;call to abstracted procedure
  9844  127F  3E15               	addlw	21
  9845  1280  318F  2732  3190   	fcall	_eeprom_read
  9846  1283  0027               	movlb	7	; select bank7
  9847  1284  00CE               	movwf	(_uart1_tx_buf^(0+896)+46)
  9848                           
  9849                           ;uart.c: 361: uart1_tx_buf[47]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+0 );
  9850  1285  0020               	movlb	0	; select bank0
  9851  1286  2747               	fcall	PL174	;call to abstracted procedure
  9852  1287  3E12               	addlw	18
  9853  1288  318F  2732  3190   	fcall	_eeprom_read
  9854  128B  0027               	movlb	7	; select bank7
  9855  128C  00CF               	movwf	(_uart1_tx_buf^(0+896)+47)
  9856                           
  9857                           ;uart.c: 363: uart1_tx_buf[48]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+1 );
  9858  128D  0020               	movlb	0	; select bank0
  9859  128E  2747               	fcall	PL174	;call to abstracted procedure
  9860  128F  3E13               	addlw	19
  9861  1290  318F  2732  3190   	fcall	_eeprom_read
  9862  1293  0027               	movlb	7	; select bank7
  9863  1294  00D0               	movwf	(_uart1_tx_buf^(0+896)+48)
  9864                           
  9865                           ;uart.c: 365: uart1_tx_buf[49]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+2 );
  9866  1295  0020               	movlb	0	; select bank0
  9867  1296  2747               	fcall	PL174	;call to abstracted procedure
  9868  1297  3E14               	addlw	20
  9869  1298  318F  2732  3190   	fcall	_eeprom_read
  9870  129B  0027               	movlb	7	; select bank7
  9871  129C  00D1               	movwf	(_uart1_tx_buf^(0+896)+49)
  9872                           
  9873                           ;uart.c: 367: uart1_tx_buf[50]=eeprom_read(0x12+4*( (today_index+8-7)%8 )+3 );
  9874  129D  0020               	movlb	0	; select bank0
  9875  129E  2747               	fcall	PL174	;call to abstracted procedure
  9876  129F  3E15               	addlw	21
  9877  12A0  318F  2732  3190   	fcall	_eeprom_read
  9878  12A3  0027               	movlb	7	; select bank7
  9879  12A4  00D2               	movwf	(_uart1_tx_buf^(0+896)+50)
  9880                           
  9881                           ;uart.c: 370: crc_data=crc16(&uart1_tx_buf[1],50);
  9882  12A5  27EC               	fcall	PL300	;call to abstracted procedure
  9883  12A6  3032               	movlw	50
  9884  12A7  00A5               	movwf	crc16@usDataLen
  9885  12A8  3188  20FE  3190   	fcall	_crc16
  9886                           
  9887                           ;uart.c: 372: uart1_tx_buf[51]=crc_data/256;
  9888  12AB  271B  3190         	fcall	PL108	;call to abstracted procedure
  9889  12AD  00D3               	movwf	(_uart1_tx_buf^(0+896)+51)
  9890                           
  9891                           ;uart.c: 373: uart1_tx_buf[52]=crc_data%256;
  9892  12AE  0021               	movlb	1	; select bank1
  9893  12AF  082B               	movf	_crc_data^(0+128),w
  9894  12B0  0027               	movlb	7	; select bank7
  9895  12B1  00D4               	movwf	(_uart1_tx_buf^(0+896)+52)
  9896                           
  9897                           ;uart.c: 375: uart1_tx_buf[53]=0xAA;
  9898  12B2  30AA               	movlw	170
  9899  12B3  00D5               	movwf	(_uart1_tx_buf^(0+896)+53)
  9900  12B4  2EDF               	goto	l24654
  9901  12B5                     l24376:	
  9902                           
  9903                           ;uart.c: 384: if(uart1_rx_buf[1]==0xA2)
  9904  12B5  0028               	movlb	8	; select bank8
  9905  12B6  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
  9906  12B7  3AA2               	xorlw	162
  9907  12B8  1D03               	skipz
  9908  12B9  2EDF               	goto	l24654
  9909                           
  9910                           ;uart.c: 385: {
  9911                           ;uart.c: 386: crc_in=crc16(&uart1_rx_buf[1],1);
  9912  12BA  3021               	movlw	low (_uart1_rx_buf+1)
  9913  12BB  27F2               	fcall	PL310	;call to abstracted procedure
  9914  12BC  3188  20FE  3190   	fcall	_crc16
  9915  12BF  0824               	movf	?_crc16+1,w
  9916  12C0  00E4               	movwf	handle_uart_rx_buf@crc_in+1
  9917                           
  9918                           ;uart.c: 388: if(crc_in==( (uart1_rx_buf[2]<<8) | uart1_rx_buf[3]) )
  9919  12C1  27CB  3190         	fcall	PL244	;call to abstracted procedure
  9920  12C3  1D03               	skipz
  9921  12C4  2EDF               	goto	l24654
  9922                           
  9923                           ;uart.c: 389: {
  9924                           ;uart.c: 392: uart1_tx_buf[0]=0x55;
  9925  12C5  3055               	movlw	85
  9926  12C6  0027               	movlb	7	; select bank7
  9927  12C7  00A0               	movwf	_uart1_tx_buf^(0+896)
  9928                           
  9929                           ;uart.c: 394: uart1_tx_buf[1]=0xB2;
  9930  12C8  30B2               	movlw	178
  9931  12C9  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
  9932                           
  9933                           ;uart.c: 396: uart1_tx_buf[2] =(unsigned char )(light_pv/256);
  9934  12CA  2730  3190         	fcall	PL144	;call to abstracted procedure
  9935  12CC  26FF               	fcall	PL44	;call to abstracted procedure
  9936  12CD  319D  258F  3190   	fcall	___ftdiv
  9937  12D0  270E               	fcall	PL56	;call to abstracted procedure
  9938  12D1  319E  2600  3190   	fcall	___fttol
  9939  12D4  0851               	movf	?___fttol,w
  9940  12D5  0027               	movlb	7	; select bank7
  9941  12D6  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
  9942                           
  9943                           ;uart.c: 398: uart1_tx_buf[3] =(unsigned char )light_pv;
  9944  12D7  278C               	fcall	PL210	;call to abstracted procedure
  9945  12D8  319E  2600  3190   	fcall	___fttol
  9946  12DB  0851               	movf	?___fttol,w
  9947  12DC  0027               	movlb	7	; select bank7
  9948  12DD  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
  9949                           
  9950                           ;uart.c: 400: uart1_tx_buf[4] =(unsigned char )(load_cc_I/256);
  9951  12DE  26ED               	fcall	PL10	;call to abstracted procedure
  9952  12DF  319D  258F  3190   	fcall	___ftdiv
  9953  12E2  270E               	fcall	PL56	;call to abstracted procedure
  9954  12E3  319E  2600  3190   	fcall	___fttol
  9955  12E6  0851               	movf	?___fttol,w
  9956  12E7  0027               	movlb	7	; select bank7
  9957  12E8  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
  9958                           
  9959                           ;uart.c: 402: uart1_tx_buf[5] =(unsigned char )load_cc_I;
  9960  12E9  2799               	fcall	PL212	;call to abstracted procedure
  9961  12EA  319E  2600  3190   	fcall	___fttol
  9962  12ED  0851               	movf	?___fttol,w
  9963  12EE  0027               	movlb	7	; select bank7
  9964  12EF  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
  9965                           
  9966                           ;uart.c: 404: uart1_tx_buf[6] =(unsigned char )(step_01_load_percent);
  9967  12F0  2765               	fcall	PL200	;call to abstracted procedure
  9968  12F1  319E  2600  3190   	fcall	___fttol
  9969  12F4  0851               	movf	?___fttol,w
  9970  12F5  0027               	movlb	7	; select bank7
  9971  12F6  00A6               	movwf	(_uart1_tx_buf^(0+896)+6)
  9972                           
  9973                           ;uart.c: 406: uart1_tx_buf[7] =(unsigned char )(step_02_load_percent);
  9974  12F7  27B3               	fcall	PL218	;call to abstracted procedure
  9975  12F8  319E  2600  3190   	fcall	___fttol
  9976  12FB  0851               	movf	?___fttol,w
  9977  12FC  0027               	movlb	7	; select bank7
  9978  12FD  00A7               	movwf	(_uart1_tx_buf^(0+896)+7)
  9979                           
  9980                           ;uart.c: 408: uart1_tx_buf[8] =(unsigned char )(step_03_load_percent);
  9981  12FE  27A6               	fcall	PL216	;call to abstracted procedure
  9982  12FF  319E  2600  3190   	fcall	___fttol
  9983  1302  0851               	movf	?___fttol,w
  9984  1303  0027               	movlb	7	; select bank7
  9985  1304  00A8               	movwf	(_uart1_tx_buf^(0+896)+8)
  9986                           
  9987                           ;uart.c: 410: uart1_tx_buf[9] =(unsigned char )(step_04_load_percent);
  9988  1305  277F               	fcall	PL208	;call to abstracted procedure
  9989  1306  319E  2600  3190   	fcall	___fttol
  9990  1309  0851               	movf	?___fttol,w
  9991  130A  0027               	movlb	7	; select bank7
  9992  130B  00A9               	movwf	(_uart1_tx_buf^(0+896)+9)
  9993                           
  9994                           ;uart.c: 412: uart1_tx_buf[10]=(unsigned char )(step_05_load_percent);
  9995  130C  2772               	fcall	PL206	;call to abstracted procedure
  9996  130D  319E  2600  3190   	fcall	___fttol
  9997  1310  0851               	movf	?___fttol,w
  9998  1311  0027               	movlb	7	; select bank7
  9999  1312  00AA               	movwf	(_uart1_tx_buf^(0+896)+10)
 10000                           
 10001                           ;uart.c: 414: uart1_tx_buf[11]=(unsigned char )(bt_id);
 10002  1313  0021               	movlb	1	; select bank1
 10003  1314  085A               	movf	_bt_id^(0+128),w
 10004  1315  0027               	movlb	7	; select bank7
 10005  1316  00AB               	movwf	(_uart1_tx_buf^(0+896)+11)
 10006                           
 10007                           ;uart.c: 416: uart1_tx_buf[12]=(unsigned char )(light_time);
 10008  1317  0021               	movlb	1	; select bank1
 10009  1318  0847               	movf	_light_time^(0+128),w
 10010  1319  0027               	movlb	7	; select bank7
 10011  131A  00AC               	movwf	(_uart1_tx_buf^(0+896)+12)
 10012                           
 10013                           ;uart.c: 418: uart1_tx_buf[13] =(unsigned char )(step_01_time_limit);
 10014  131B  0021               	movlb	1	; select bank1
 10015  131C  0852               	movf	_step_01_time_limit^(0+128),w
 10016  131D  0027               	movlb	7	; select bank7
 10017  131E  00AD               	movwf	(_uart1_tx_buf^(0+896)+13)
 10018                           
 10019                           ;uart.c: 420: uart1_tx_buf[14] =(unsigned char )(step_02_time_limit);
 10020  131F  0021               	movlb	1	; select bank1
 10021  1320  0854               	movf	_step_02_time_limit^(0+128),w
 10022  1321  0027               	movlb	7	; select bank7
 10023  1322  00AE               	movwf	(_uart1_tx_buf^(0+896)+14)
 10024                           
 10025                           ;uart.c: 422: uart1_tx_buf[15] =(unsigned char )(step_03_time_limit);
 10026  1323  0021               	movlb	1	; select bank1
 10027  1324  0856               	movf	_step_03_time_limit^(0+128),w
 10028  1325  0027               	movlb	7	; select bank7
 10029  1326  00AF               	movwf	(_uart1_tx_buf^(0+896)+15)
 10030                           
 10031                           ;uart.c: 424: uart1_tx_buf[16] =(unsigned char )(step_04_time_limit);
 10032  1327  0021               	movlb	1	; select bank1
 10033  1328  0858               	movf	_step_04_time_limit^(0+128),w
 10034  1329  0027               	movlb	7	; select bank7
 10035  132A  00B0               	movwf	(_uart1_tx_buf^(0+896)+16)
 10036                           
 10037                           ;uart.c: 426: uart1_tx_buf[17] =(unsigned char )(step_05_time_limit);
 10038  132B  0022               	movlb	2	; select bank2
 10039  132C  086C               	movf	_step_05_time_limit^(0+256),w
 10040  132D  0027               	movlb	7	; select bank7
 10041  132E  00B1               	movwf	(_uart1_tx_buf^(0+896)+17)
 10042                           
 10043                           ;uart.c: 429: crc_data=crc16(&uart1_tx_buf[1],17);
 10044  132F  27EC               	fcall	PL300	;call to abstracted procedure
 10045  1330  3011               	movlw	17
 10046  1331  00A5               	movwf	crc16@usDataLen
 10047  1332  3188  20FE  3190   	fcall	_crc16
 10048                           
 10049                           ;uart.c: 431: uart1_tx_buf[18]=crc_data/256;
 10050  1335  271B  3190         	fcall	PL108	;call to abstracted procedure
 10051  1337  00B2               	movwf	(_uart1_tx_buf^(0+896)+18)
 10052                           
 10053                           ;uart.c: 433: uart1_tx_buf[19]=crc_data%256;
 10054  1338  0021               	movlb	1	; select bank1
 10055  1339  082B               	movf	_crc_data^(0+128),w
 10056  133A  0027               	movlb	7	; select bank7
 10057  133B  00B3               	movwf	(_uart1_tx_buf^(0+896)+19)
 10058                           
 10059                           ;uart.c: 435: uart1_tx_buf[20]=0xAA;
 10060  133C  30AA               	movlw	170
 10061  133D  00B4               	movwf	(_uart1_tx_buf^(0+896)+20)
 10062  133E  2EDF               	goto	l24654
 10063  133F                     l24424:	
 10064                           
 10065                           ;uart.c: 443: if(uart1_rx_buf[1]==0xA3)
 10066  133F  0028               	movlb	8	; select bank8
 10067  1340  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 10068  1341  3AA3               	xorlw	163
 10069  1342  1D03               	skipz
 10070  1343  2EDF               	goto	l24654
 10071                           
 10072                           ;uart.c: 444: {
 10073                           ;uart.c: 445: crc_in=crc16(&uart1_rx_buf[1],17);
 10074  1344  3021               	movlw	low (_uart1_rx_buf+1)
 10075  1345  0020               	movlb	0	; select bank0
 10076  1346  00A3               	movwf	crc16@puchMsg
 10077  1347  3004               	movlw	high (_uart1_rx_buf+1)
 10078  1348  00A4               	movwf	crc16@puchMsg+1
 10079  1349  3011               	movlw	17
 10080  134A  00A5               	movwf	crc16@usDataLen
 10081  134B  3188  20FE  3190   	fcall	_crc16
 10082  134E  0824               	movf	?_crc16+1,w
 10083  134F  00E4               	movwf	handle_uart_rx_buf@crc_in+1
 10084  1350  0823               	movf	?_crc16,w
 10085  1351  00E3               	movwf	handle_uart_rx_buf@crc_in
 10086                           
 10087                           ;uart.c: 447: if(crc_in==( (uart1_rx_buf[18]<<8) | uart1_rx_buf[19]) )
 10088  1352  0864               	movf	handle_uart_rx_buf@crc_in+1,w
 10089  1353  0028               	movlb	8	; select bank8
 10090  1354  0632               	xorwf	(_uart1_rx_buf^(0+1024)+18),w
 10091  1355  1D03               	skipz
 10092  1356  2B5B               	goto	u14875
 10093  1357  0020               	movlb	0	; select bank0
 10094  1358  0863               	movf	handle_uart_rx_buf@crc_in,w
 10095  1359  0028               	movlb	8	; select bank8
 10096  135A  0633               	xorwf	(_uart1_rx_buf^(0+1024)+19),w
 10097  135B                     u14875:	
 10098  135B  1D03               	skipz
 10099  135C  2EDF               	goto	l24654
 10100                           
 10101                           ;uart.c: 448: {
 10102                           ;uart.c: 450: light_pv = (uart1_rx_buf[2]<<8) | uart1_rx_buf[3];
 10103  135D  0822               	movf	(_uart1_rx_buf^(0+1024)+2),w
 10104  135E  0020               	movlb	0	; select bank0
 10105  135F  00AC               	movwf	___awtoft@c+1
 10106  1360  0028               	movlb	8	; select bank8
 10107  1361  0823               	movf	(_uart1_rx_buf^(0+1024)+3),w
 10108  1362  0020               	movlb	0	; select bank0
 10109  1363  00AB               	movwf	___awtoft@c
 10110  1364  318F  2749  3190   	fcall	___awtoft
 10111  1367  082B               	movf	?___awtoft,w
 10112  1368  0021               	movlb	1	; select bank1
 10113  1369  00C9               	movwf	_light_pv^(0+128)
 10114  136A  0020               	movlb	0	; select bank0
 10115  136B  082C               	movf	?___awtoft+1,w
 10116  136C  0021               	movlb	1	; select bank1
 10117  136D  00CA               	movwf	(_light_pv+1)^(0+128)
 10118  136E  0020               	movlb	0	; select bank0
 10119  136F  082D               	movf	?___awtoft+2,w
 10120  1370  0021               	movlb	1	; select bank1
 10121  1371  00CB               	movwf	(_light_pv+2)^(0+128)
 10122                           
 10123                           ;uart.c: 452: load_cc_I = (uart1_rx_buf[4]<<8) | uart1_rx_buf[5];
 10124  1372  0028               	movlb	8	; select bank8
 10125  1373  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 10126  1374  0020               	movlb	0	; select bank0
 10127  1375  00AC               	movwf	___awtoft@c+1
 10128  1376  0028               	movlb	8	; select bank8
 10129  1377  0825               	movf	(_uart1_rx_buf^(0+1024)+5),w
 10130  1378  0020               	movlb	0	; select bank0
 10131  1379  00AB               	movwf	___awtoft@c
 10132  137A  318F  2749  3190   	fcall	___awtoft
 10133  137D  082B               	movf	?___awtoft,w
 10134  137E  0021               	movlb	1	; select bank1
 10135  137F  00CC               	movwf	_load_cc_I^(0+128)
 10136  1380  0020               	movlb	0	; select bank0
 10137  1381  082C               	movf	?___awtoft+1,w
 10138  1382  0021               	movlb	1	; select bank1
 10139  1383  00CD               	movwf	(_load_cc_I+1)^(0+128)
 10140  1384  0020               	movlb	0	; select bank0
 10141  1385  082D               	movf	?___awtoft+2,w
 10142  1386  0021               	movlb	1	; select bank1
 10143  1387  00CE               	movwf	(_load_cc_I+2)^(0+128)
 10144                           
 10145                           ;uart.c: 454: step_01_load_percent = uart1_rx_buf[6];
 10146  1388  0028               	movlb	8	; select bank8
 10147  1389  0826               	movf	(_uart1_rx_buf^(0+1024)+6),w
 10148  138A  318F  2765  3190   	fcall	___lbtoft
 10149  138D  082B               	movf	?___lbtoft,w
 10150  138E  0022               	movlb	2	; select bank2
 10151  138F  00E0               	movwf	_step_01_load_percent^(0+256)
 10152  1390  0020               	movlb	0	; select bank0
 10153  1391  082C               	movf	?___lbtoft+1,w
 10154  1392  0022               	movlb	2	; select bank2
 10155  1393  00E1               	movwf	(_step_01_load_percent+1)^(0+256)
 10156  1394  0020               	movlb	0	; select bank0
 10157  1395  082D               	movf	?___lbtoft+2,w
 10158  1396  0022               	movlb	2	; select bank2
 10159  1397  00E2               	movwf	(_step_01_load_percent+2)^(0+256)
 10160                           
 10161                           ;uart.c: 456: step_02_load_percent = uart1_rx_buf[7];
 10162  1398  0028               	movlb	8	; select bank8
 10163  1399  0827               	movf	(_uart1_rx_buf^(0+1024)+7),w
 10164  139A  318F  2765  3190   	fcall	___lbtoft
 10165  139D  082B               	movf	?___lbtoft,w
 10166  139E  0022               	movlb	2	; select bank2
 10167  139F  00E3               	movwf	_step_02_load_percent^(0+256)
 10168  13A0  0020               	movlb	0	; select bank0
 10169  13A1  082C               	movf	?___lbtoft+1,w
 10170  13A2  0022               	movlb	2	; select bank2
 10171  13A3  00E4               	movwf	(_step_02_load_percent+1)^(0+256)
 10172  13A4  0020               	movlb	0	; select bank0
 10173  13A5  082D               	movf	?___lbtoft+2,w
 10174  13A6  0022               	movlb	2	; select bank2
 10175  13A7  00E5               	movwf	(_step_02_load_percent+2)^(0+256)
 10176                           
 10177                           ;uart.c: 458: step_03_load_percent = uart1_rx_buf[8];
 10178  13A8  0028               	movlb	8	; select bank8
 10179  13A9  0828               	movf	(_uart1_rx_buf^(0+1024)+8),w
 10180  13AA  318F  2765  3190   	fcall	___lbtoft
 10181  13AD  082B               	movf	?___lbtoft,w
 10182  13AE  0022               	movlb	2	; select bank2
 10183  13AF  00E6               	movwf	_step_03_load_percent^(0+256)
 10184  13B0  0020               	movlb	0	; select bank0
 10185  13B1  082C               	movf	?___lbtoft+1,w
 10186  13B2  0022               	movlb	2	; select bank2
 10187  13B3  00E7               	movwf	(_step_03_load_percent+1)^(0+256)
 10188  13B4  0020               	movlb	0	; select bank0
 10189  13B5  082D               	movf	?___lbtoft+2,w
 10190  13B6  0022               	movlb	2	; select bank2
 10191  13B7  00E8               	movwf	(_step_03_load_percent+2)^(0+256)
 10192                           
 10193                           ;uart.c: 460: step_04_load_percent = uart1_rx_buf[9];
 10194  13B8  0028               	movlb	8	; select bank8
 10195  13B9  0829               	movf	(_uart1_rx_buf^(0+1024)+9),w
 10196  13BA  318F  2765  3190   	fcall	___lbtoft
 10197  13BD  082B               	movf	?___lbtoft,w
 10198  13BE  0022               	movlb	2	; select bank2
 10199  13BF  00E9               	movwf	_step_04_load_percent^(0+256)
 10200  13C0  0020               	movlb	0	; select bank0
 10201  13C1  082C               	movf	?___lbtoft+1,w
 10202  13C2  0022               	movlb	2	; select bank2
 10203  13C3  00EA               	movwf	(_step_04_load_percent+1)^(0+256)
 10204  13C4  0020               	movlb	0	; select bank0
 10205  13C5  082D               	movf	?___lbtoft+2,w
 10206  13C6  0022               	movlb	2	; select bank2
 10207  13C7  00EB               	movwf	(_step_04_load_percent+2)^(0+256)
 10208                           
 10209                           ;uart.c: 462: step_05_load_percent = uart1_rx_buf[10];
 10210  13C8  0028               	movlb	8	; select bank8
 10211  13C9  082A               	movf	(_uart1_rx_buf^(0+1024)+10),w
 10212  13CA  318F  2765  3190   	fcall	___lbtoft
 10213  13CD  082B               	movf	?___lbtoft,w
 10214  13CE  0021               	movlb	1	; select bank1
 10215  13CF  00CF               	movwf	_step_05_load_percent^(0+128)
 10216  13D0  0020               	movlb	0	; select bank0
 10217  13D1  082C               	movf	?___lbtoft+1,w
 10218  13D2  0021               	movlb	1	; select bank1
 10219  13D3  00D0               	movwf	(_step_05_load_percent+1)^(0+128)
 10220  13D4  0020               	movlb	0	; select bank0
 10221  13D5  082D               	movf	?___lbtoft+2,w
 10222  13D6  0021               	movlb	1	; select bank1
 10223  13D7  00D1               	movwf	(_step_05_load_percent+2)^(0+128)
 10224                           
 10225                           ;uart.c: 464: Adjust_Pout_Flag=0x00;
 10226  13D8  0020               	movlb	0	; select bank0
 10227  13D9  01EA               	clrf	_Adjust_Pout_Flag
 10228                           
 10229                           ;uart.c: 465: voltage_adjust_index=0x01;
 10230  13DA  0021               	movlb	1	; select bank1
 10231  13DB  01DC               	clrf	_voltage_adjust_index^(0+128)
 10232  13DC  0ADC               	incf	_voltage_adjust_index^(0+128),f
 10233                           
 10234                           ;uart.c: 467: bt_id = uart1_rx_buf[11];
 10235  13DD  0028               	movlb	8	; select bank8
 10236  13DE  082B               	movf	(_uart1_rx_buf^(0+1024)+11),w
 10237  13DF  0021               	movlb	1	; select bank1
 10238  13E0  00DA               	movwf	_bt_id^(0+128)
 10239                           
 10240                           ;uart.c: 469: light_time = uart1_rx_buf[12];
 10241  13E1  0028               	movlb	8	; select bank8
 10242  13E2  082C               	movf	(_uart1_rx_buf^(0+1024)+12),w
 10243  13E3  0021               	movlb	1	; select bank1
 10244  13E4  00C7               	movwf	_light_time^(0+128)
 10245  13E5  01C8               	clrf	(_light_time+1)^(0+128)
 10246                           
 10247                           ;uart.c: 471: step_01_time_limit = uart1_rx_buf[13];
 10248  13E6  0028               	movlb	8	; select bank8
 10249  13E7  082D               	movf	(_uart1_rx_buf^(0+1024)+13),w
 10250  13E8  0021               	movlb	1	; select bank1
 10251  13E9  00D2               	movwf	_step_01_time_limit^(0+128)
 10252  13EA  01D3               	clrf	(_step_01_time_limit+1)^(0+128)
 10253                           
 10254                           ;uart.c: 473: step_02_time_limit = uart1_rx_buf[14];
 10255  13EB  0028               	movlb	8	; select bank8
 10256  13EC  082E               	movf	(_uart1_rx_buf^(0+1024)+14),w
 10257  13ED  0021               	movlb	1	; select bank1
 10258  13EE  00D4               	movwf	_step_02_time_limit^(0+128)
 10259  13EF  01D5               	clrf	(_step_02_time_limit+1)^(0+128)
 10260                           
 10261                           ;uart.c: 475: step_03_time_limit = uart1_rx_buf[15];
 10262  13F0  0028               	movlb	8	; select bank8
 10263  13F1  082F               	movf	(_uart1_rx_buf^(0+1024)+15),w
 10264  13F2  0021               	movlb	1	; select bank1
 10265  13F3  00D6               	movwf	_step_03_time_limit^(0+128)
 10266  13F4  01D7               	clrf	(_step_03_time_limit+1)^(0+128)
 10267                           
 10268                           ;uart.c: 477: step_04_time_limit = uart1_rx_buf[16];
 10269  13F5  0028               	movlb	8	; select bank8
 10270  13F6  0830               	movf	(_uart1_rx_buf^(0+1024)+16),w
 10271  13F7  0021               	movlb	1	; select bank1
 10272  13F8  00D8               	movwf	_step_04_time_limit^(0+128)
 10273  13F9  01D9               	clrf	(_step_04_time_limit+1)^(0+128)
 10274                           
 10275                           ;uart.c: 479: step_05_time_limit = uart1_rx_buf[17];
 10276  13FA  0028               	movlb	8	; select bank8
 10277  13FB  0831               	movf	(_uart1_rx_buf^(0+1024)+17),w
 10278  13FC  0022               	movlb	2	; select bank2
 10279  13FD  00EC               	movwf	_step_05_time_limit^(0+256)
 10280  13FE  01ED               	clrf	(_step_05_time_limit+1)^(0+256)
 10281                           
 10282                           ;uart.c: 481: if((light_pv>=100)&&(light_pv<=1200)&&(load_cc_I<=500)&&(step_01_load_perc
      +                          ent<=100)&&(step_02_load_percent<=100) &&(step_03_load_percent<=100)&&(step_04_load_perc
      +                          ent<=100)&&(step_05_load_percent<=100)&&(bt_id>=1)&&(bt_id<=2) &&(light_time<=60)&&(step
 10283  13FF  0021               	movlb	1	; select bank1
 10284  1400  0849               	movf	_light_pv^(0+128),w
 10285  1401  0020               	movlb	0	; select bank0
 10286  1402  00D1               	movwf	___ftge@ff1
 10287  1403  0021               	movlb	1	; select bank1
 10288  1404  084A               	movf	(_light_pv+1)^(0+128),w
 10289  1405  0020               	movlb	0	; select bank0
 10290  1406  00D2               	movwf	___ftge@ff1+1
 10291  1407  0021               	movlb	1	; select bank1
 10292  1408  084B               	movf	(_light_pv+2)^(0+128),w
 10293  1409  0020               	movlb	0	; select bank0
 10294  140A  00D3               	movwf	___ftge@ff1+2
 10295  140B  30C8               	movlw	200
 10296  140C  01D4               	clrf	___ftge@ff2
 10297  140D  00D5               	movwf	___ftge@ff2+1
 10298  140E  3042               	movlw	66
 10299  140F  00D6               	movwf	___ftge@ff2+2
 10300  1410  31B4  2472  3190   	fcall	___ftge
 10301  1413  1C03               	btfss	3,0
 10302  1414  2E32               	goto	l24538
 10303  1415  3096               	movlw	150
 10304  1416  01D1               	clrf	___ftge@ff1
 10305  1417  00D2               	movwf	___ftge@ff1+1
 10306  1418  3044               	movlw	68
 10307  1419  00D3               	movwf	___ftge@ff1+2
 10308  141A  0021               	movlb	1	; select bank1
 10309  141B  0849               	movf	_light_pv^(0+128),w
 10310  141C  0020               	movlb	0	; select bank0
 10311  141D  00D4               	movwf	___ftge@ff2
 10312  141E  0021               	movlb	1	; select bank1
 10313  141F  084A               	movf	(_light_pv+1)^(0+128),w
 10314  1420  0020               	movlb	0	; select bank0
 10315  1421  00D5               	movwf	___ftge@ff2+1
 10316  1422  0021               	movlb	1	; select bank1
 10317  1423  084B               	movf	(_light_pv+2)^(0+128),w
 10318  1424  0020               	movlb	0	; select bank0
 10319  1425  00D6               	movwf	___ftge@ff2+2
 10320  1426  31B4  2472  3190   	fcall	___ftge
 10321  1429  1C03               	btfss	3,0
 10322  142A  2E32               	goto	l24538
 10323  142B  30FA               	movlw	250
 10324  142C  01D1               	clrf	___ftge@ff1
 10325  142D  00D2               	movwf	___ftge@ff1+1
 10326  142E  3043               	movlw	67
 10327  142F  00D3               	movwf	___ftge@ff1+2
 10328  1430  0021               	movlb	1	; select bank1
 10329  1431  084C               	movf	_load_cc_I^(0+128),w
 10330  1432  0020               	movlb	0	; select bank0
 10331  1433  00D4               	movwf	___ftge@ff2
 10332  1434  0021               	movlb	1	; select bank1
 10333  1435  084D               	movf	(_load_cc_I+1)^(0+128),w
 10334  1436  0020               	movlb	0	; select bank0
 10335  1437  00D5               	movwf	___ftge@ff2+1
 10336  1438  0021               	movlb	1	; select bank1
 10337  1439  084E               	movf	(_load_cc_I+2)^(0+128),w
 10338  143A  0020               	movlb	0	; select bank0
 10339  143B  00D6               	movwf	___ftge@ff2+2
 10340  143C  31B4  2472  3190   	fcall	___ftge
 10341  143F  1C03               	btfss	3,0
 10342  1440  2E32               	goto	l24538
 10343  1441  30C8               	movlw	200
 10344  1442  27DE               	fcall	PL276	;call to abstracted procedure
 10345  1443  0860               	movf	_step_01_load_percent^(0+256),w
 10346  1444  0020               	movlb	0	; select bank0
 10347  1445  00D4               	movwf	___ftge@ff2
 10348  1446  0022               	movlb	2	; select bank2
 10349  1447  0861               	movf	(_step_01_load_percent+1)^(0+256),w
 10350  1448  0020               	movlb	0	; select bank0
 10351  1449  00D5               	movwf	___ftge@ff2+1
 10352  144A  0022               	movlb	2	; select bank2
 10353  144B  0862               	movf	(_step_01_load_percent+2)^(0+256),w
 10354  144C  0020               	movlb	0	; select bank0
 10355  144D  00D6               	movwf	___ftge@ff2+2
 10356  144E  31B4  2472  3190   	fcall	___ftge
 10357  1451  1C03               	btfss	3,0
 10358  1452  2E32               	goto	l24538
 10359  1453  30C8               	movlw	200
 10360  1454  27DE               	fcall	PL276	;call to abstracted procedure
 10361  1455  0863               	movf	_step_02_load_percent^(0+256),w
 10362  1456  0020               	movlb	0	; select bank0
 10363  1457  00D4               	movwf	___ftge@ff2
 10364  1458  0022               	movlb	2	; select bank2
 10365  1459  0864               	movf	(_step_02_load_percent+1)^(0+256),w
 10366  145A  0020               	movlb	0	; select bank0
 10367  145B  00D5               	movwf	___ftge@ff2+1
 10368  145C  0022               	movlb	2	; select bank2
 10369  145D  0865               	movf	(_step_02_load_percent+2)^(0+256),w
 10370  145E  0020               	movlb	0	; select bank0
 10371  145F  00D6               	movwf	___ftge@ff2+2
 10372  1460  31B4  2472  3190   	fcall	___ftge
 10373  1463  1C03               	btfss	3,0
 10374  1464  2E32               	goto	l24538
 10375  1465  30C8               	movlw	200
 10376  1466  27DE               	fcall	PL276	;call to abstracted procedure
 10377  1467  0866               	movf	_step_03_load_percent^(0+256),w
 10378  1468  0020               	movlb	0	; select bank0
 10379  1469  00D4               	movwf	___ftge@ff2
 10380  146A  0022               	movlb	2	; select bank2
 10381  146B  0867               	movf	(_step_03_load_percent+1)^(0+256),w
 10382  146C  0020               	movlb	0	; select bank0
 10383  146D  00D5               	movwf	___ftge@ff2+1
 10384  146E  0022               	movlb	2	; select bank2
 10385  146F  0868               	movf	(_step_03_load_percent+2)^(0+256),w
 10386  1470  0020               	movlb	0	; select bank0
 10387  1471  00D6               	movwf	___ftge@ff2+2
 10388  1472  31B4  2472  3190   	fcall	___ftge
 10389  1475  1C03               	btfss	3,0
 10390  1476  2E32               	goto	l24538
 10391  1477  30C8               	movlw	200
 10392  1478  27DE               	fcall	PL276	;call to abstracted procedure
 10393  1479  0869               	movf	_step_04_load_percent^(0+256),w
 10394  147A  0020               	movlb	0	; select bank0
 10395  147B  00D4               	movwf	___ftge@ff2
 10396  147C  0022               	movlb	2	; select bank2
 10397  147D  086A               	movf	(_step_04_load_percent+1)^(0+256),w
 10398  147E  0020               	movlb	0	; select bank0
 10399  147F  00D5               	movwf	___ftge@ff2+1
 10400  1480  0022               	movlb	2	; select bank2
 10401  1481  086B               	movf	(_step_04_load_percent+2)^(0+256),w
 10402  1482  0020               	movlb	0	; select bank0
 10403  1483  00D6               	movwf	___ftge@ff2+2
 10404  1484  31B4  2472  3190   	fcall	___ftge
 10405  1487  1C03               	btfss	3,0
 10406  1488  2E32               	goto	l24538
 10407  1489  30C8               	movlw	200
 10408  148A  01D1               	clrf	___ftge@ff1
 10409  148B  00D2               	movwf	___ftge@ff1+1
 10410  148C  3042               	movlw	66
 10411  148D  00D3               	movwf	___ftge@ff1+2
 10412  148E  0021               	movlb	1	; select bank1
 10413  148F  084F               	movf	_step_05_load_percent^(0+128),w
 10414  1490  0020               	movlb	0	; select bank0
 10415  1491  00D4               	movwf	___ftge@ff2
 10416  1492  0021               	movlb	1	; select bank1
 10417  1493  0850               	movf	(_step_05_load_percent+1)^(0+128),w
 10418  1494  0020               	movlb	0	; select bank0
 10419  1495  00D5               	movwf	___ftge@ff2+1
 10420  1496  0021               	movlb	1	; select bank1
 10421  1497  0851               	movf	(_step_05_load_percent+2)^(0+128),w
 10422  1498  0020               	movlb	0	; select bank0
 10423  1499  00D6               	movwf	___ftge@ff2+2
 10424  149A  31B4  2472  3190   	fcall	___ftge
 10425  149D  1C03               	btfss	3,0
 10426  149E  2E32               	goto	l24538
 10427  149F  0021               	movlb	1	; select bank1
 10428  14A0  085A               	movf	_bt_id^(0+128),w
 10429  14A1  1903               	btfsc	3,2
 10430  14A2  2E32               	goto	l24538
 10431  14A3  3003               	movlw	3
 10432  14A4  025A               	subwf	_bt_id^(0+128),w
 10433  14A5  1803               	skipnc
 10434  14A6  2E32               	goto	l24538
 10435  14A7  3000               	movlw	0
 10436  14A8  0248               	subwf	(_light_time+1)^(0+128),w
 10437  14A9  303D               	movlw	61
 10438  14AA  1903               	skipnz
 10439  14AB  0247               	subwf	_light_time^(0+128),w
 10440  14AC  1803               	skipnc
 10441  14AD  2E32               	goto	l24538
 10442  14AE  3000               	movlw	0
 10443  14AF  0253               	subwf	(_step_01_time_limit+1)^(0+128),w
 10444  14B0  3019               	movlw	25
 10445  14B1  1903               	skipnz
 10446  14B2  0252               	subwf	_step_01_time_limit^(0+128),w
 10447  14B3  1803               	skipnc
 10448  14B4  2E32               	goto	l24538
 10449  14B5  3000               	movlw	0
 10450  14B6  0255               	subwf	(_step_02_time_limit+1)^(0+128),w
 10451  14B7  3019               	movlw	25
 10452  14B8  1903               	skipnz
 10453  14B9  0254               	subwf	_step_02_time_limit^(0+128),w
 10454  14BA  1803               	skipnc
 10455  14BB  2E32               	goto	l24538
 10456  14BC  3000               	movlw	0
 10457  14BD  0257               	subwf	(_step_03_time_limit+1)^(0+128),w
 10458  14BE  3019               	movlw	25
 10459  14BF  1903               	skipnz
 10460  14C0  0256               	subwf	_step_03_time_limit^(0+128),w
 10461  14C1  1803               	skipnc
 10462  14C2  2E32               	goto	l24538
 10463  14C3  3000               	movlw	0
 10464  14C4  0259               	subwf	(_step_04_time_limit+1)^(0+128),w
 10465  14C5  3019               	movlw	25
 10466  14C6  1903               	skipnz
 10467  14C7  0258               	subwf	_step_04_time_limit^(0+128),w
 10468  14C8  1803               	skipnc
 10469  14C9  2E32               	goto	l24538
 10470  14CA  3000               	movlw	0
 10471  14CB  0022               	movlb	2	; select bank2
 10472  14CC  026D               	subwf	(_step_05_time_limit+1)^(0+256),w
 10473  14CD  3019               	movlw	25
 10474  14CE  1903               	skipnz
 10475  14CF  026C               	subwf	_step_05_time_limit^(0+256),w
 10476  14D0  1C03               	btfss	3,0
 10477  14D1  2CD4               	goto	l24482
 10478  14D2  0021               	movlb	1	; select bank1
 10479  14D3  2E32               	goto	l24538
 10480  14D4                     l24482:	
 10481                           
 10482                           ;uart.c: 484: {
 10483                           ;uart.c: 486: eeprom_write(0x00,(unsigned char)(light_pv/256));
 10484  14D4  2730  3190         	fcall	PL144	;call to abstracted procedure
 10485  14D6  26FF               	fcall	PL44	;call to abstracted procedure
 10486  14D7  319D  258F  3190   	fcall	___ftdiv
 10487  14DA  270E               	fcall	PL56	;call to abstracted procedure
 10488  14DB  319E  2600  3190   	fcall	___fttol
 10489  14DE  0851               	movf	?___fttol,w
 10490  14DF  00DE               	movwf	eeprom_write@value
 10491  14E0  3000               	movlw	0
 10492  14E1  31A9  21BA  3190   	fcall	_eeprom_write
 10493                           
 10494                           ;uart.c: 488: eeprom_write(0x01,(unsigned char)light_pv);
 10495  14E4  278C               	fcall	PL210	;call to abstracted procedure
 10496  14E5  319E  2600  3190   	fcall	___fttol
 10497  14E8  0851               	movf	?___fttol,w
 10498  14E9  00DE               	movwf	eeprom_write@value
 10499  14EA  3001               	movlw	1
 10500  14EB  31A9  21BA  3190   	fcall	_eeprom_write
 10501                           
 10502                           ;uart.c: 491: eeprom_write(0x02,(unsigned char)(load_cc_I/256));
 10503  14EE  26ED               	fcall	PL10	;call to abstracted procedure
 10504  14EF  319D  258F  3190   	fcall	___ftdiv
 10505  14F2  270E               	fcall	PL56	;call to abstracted procedure
 10506  14F3  319E  2600  3190   	fcall	___fttol
 10507  14F6  0851               	movf	?___fttol,w
 10508  14F7  00DE               	movwf	eeprom_write@value
 10509  14F8  3002               	movlw	2
 10510  14F9  31A9  21BA  3190   	fcall	_eeprom_write
 10511                           
 10512                           ;uart.c: 493: eeprom_write(0x03,(unsigned char)load_cc_I);
 10513  14FC  2799               	fcall	PL212	;call to abstracted procedure
 10514  14FD  319E  2600  3190   	fcall	___fttol
 10515  1500  0851               	movf	?___fttol,w
 10516  1501  00DE               	movwf	eeprom_write@value
 10517  1502  3003               	movlw	3
 10518  1503  31A9  21BA  3190   	fcall	_eeprom_write
 10519                           
 10520                           ;uart.c: 496: eeprom_write(0x04,(unsigned char)(step_01_load_percent));
 10521  1506  2765               	fcall	PL200	;call to abstracted procedure
 10522  1507  319E  2600  3190   	fcall	___fttol
 10523  150A  0851               	movf	?___fttol,w
 10524  150B  00DE               	movwf	eeprom_write@value
 10525  150C  3004               	movlw	4
 10526  150D  31A9  21BA  3190   	fcall	_eeprom_write
 10527                           
 10528                           ;uart.c: 498: eeprom_write(0x05,(unsigned char)(step_02_load_percent));
 10529  1510  27B3               	fcall	PL218	;call to abstracted procedure
 10530  1511  319E  2600  3190   	fcall	___fttol
 10531  1514  0851               	movf	?___fttol,w
 10532  1515  00DE               	movwf	eeprom_write@value
 10533  1516  3005               	movlw	5
 10534  1517  31A9  21BA  3190   	fcall	_eeprom_write
 10535                           
 10536                           ;uart.c: 500: eeprom_write(0x06,(unsigned char)(step_03_load_percent));
 10537  151A  27A6               	fcall	PL216	;call to abstracted procedure
 10538  151B  319E  2600  3190   	fcall	___fttol
 10539  151E  0851               	movf	?___fttol,w
 10540  151F  00DE               	movwf	eeprom_write@value
 10541  1520  3006               	movlw	6
 10542  1521  31A9  21BA  3190   	fcall	_eeprom_write
 10543                           
 10544                           ;uart.c: 502: eeprom_write(0x07,(unsigned char)(step_04_load_percent));
 10545  1524  277F               	fcall	PL208	;call to abstracted procedure
 10546  1525  319E  2600  3190   	fcall	___fttol
 10547  1528  0851               	movf	?___fttol,w
 10548  1529  00DE               	movwf	eeprom_write@value
 10549  152A  3007               	movlw	7
 10550  152B  31A9  21BA  3190   	fcall	_eeprom_write
 10551                           
 10552                           ;uart.c: 504: eeprom_write(0x08,(unsigned char)(step_05_load_percent));
 10553  152E  2772               	fcall	PL206	;call to abstracted procedure
 10554  152F  319E  2600  3190   	fcall	___fttol
 10555  1532  0851               	movf	?___fttol,w
 10556  1533  00DE               	movwf	eeprom_write@value
 10557  1534  3008               	movlw	8
 10558  1535  31A9  21BA  3190   	fcall	_eeprom_write
 10559                           
 10560                           ;uart.c: 506: eeprom_write(0x0a,(unsigned char)(bt_id));
 10561  1538  0021               	movlb	1	; select bank1
 10562  1539  085A               	movf	_bt_id^(0+128),w
 10563  153A  0020               	movlb	0	; select bank0
 10564  153B  00DE               	movwf	eeprom_write@value
 10565  153C  300A               	movlw	10
 10566  153D  31A9  21BA  3190   	fcall	_eeprom_write
 10567                           
 10568                           ;uart.c: 508: eeprom_write(0x0b,(unsigned char)(light_time));
 10569  1540  0021               	movlb	1	; select bank1
 10570  1541  0847               	movf	_light_time^(0+128),w
 10571  1542  0020               	movlb	0	; select bank0
 10572  1543  00DE               	movwf	eeprom_write@value
 10573  1544  300B               	movlw	11
 10574  1545  31A9  21BA  3190   	fcall	_eeprom_write
 10575                           
 10576                           ;uart.c: 510: eeprom_write(0x0c,(unsigned char)(step_01_time_limit));
 10577  1548  0021               	movlb	1	; select bank1
 10578  1549  0852               	movf	_step_01_time_limit^(0+128),w
 10579  154A  0020               	movlb	0	; select bank0
 10580  154B  00DE               	movwf	eeprom_write@value
 10581  154C  300C               	movlw	12
 10582  154D  31A9  21BA  3190   	fcall	_eeprom_write
 10583                           
 10584                           ;uart.c: 512: eeprom_write(0x0d,(unsigned char)(step_02_time_limit));
 10585  1550  0021               	movlb	1	; select bank1
 10586  1551  0854               	movf	_step_02_time_limit^(0+128),w
 10587  1552  0020               	movlb	0	; select bank0
 10588  1553  00DE               	movwf	eeprom_write@value
 10589  1554  300D               	movlw	13
 10590  1555  31A9  21BA  3190   	fcall	_eeprom_write
 10591                           
 10592                           ;uart.c: 514: eeprom_write(0x0e,(unsigned char)(step_03_time_limit));
 10593  1558  0021               	movlb	1	; select bank1
 10594  1559  0856               	movf	_step_03_time_limit^(0+128),w
 10595  155A  0020               	movlb	0	; select bank0
 10596  155B  00DE               	movwf	eeprom_write@value
 10597  155C  300E               	movlw	14
 10598  155D  31A9  21BA  3190   	fcall	_eeprom_write
 10599                           
 10600                           ;uart.c: 516: eeprom_write(0x0f,(unsigned char)(step_04_time_limit));
 10601  1560  0021               	movlb	1	; select bank1
 10602  1561  0858               	movf	_step_04_time_limit^(0+128),w
 10603  1562  0020               	movlb	0	; select bank0
 10604  1563  00DE               	movwf	eeprom_write@value
 10605  1564  300F               	movlw	15
 10606  1565  31A9  21BA  3190   	fcall	_eeprom_write
 10607                           
 10608                           ;uart.c: 518: eeprom_write(0x10,(unsigned char)(step_05_time_limit));
 10609  1568  0022               	movlb	2	; select bank2
 10610  1569  086C               	movf	_step_05_time_limit^(0+256),w
 10611  156A  0020               	movlb	0	; select bank0
 10612  156B  00DE               	movwf	eeprom_write@value
 10613  156C  3010               	movlw	16
 10614  156D  31A9  21BA  3190   	fcall	_eeprom_write
 10615                           
 10616                           ;uart.c: 521: light_on_pv_level =(light_pv*10)/61;
 10617  1570  0020               	movlb	0	; select bank0
 10618  1571  3074               	movlw	116
 10619  1572  01C2               	clrf	___ftdiv@f2
 10620  1573  00C3               	movwf	___ftdiv@f2+1
 10621  1574  3042               	movlw	66
 10622  1575  00C4               	movwf	___ftdiv@f2+2
 10623  1576  3020               	movlw	32
 10624  1577  01B3               	clrf	___ftmul@f1
 10625  1578  00B4               	movwf	___ftmul@f1+1
 10626  1579  3041               	movlw	65
 10627  157A  00B5               	movwf	___ftmul@f1+2
 10628  157B  0021               	movlb	1	; select bank1
 10629  157C  0849               	movf	_light_pv^(0+128),w
 10630  157D  0020               	movlb	0	; select bank0
 10631  157E  00B6               	movwf	___ftmul@f2
 10632  157F  0021               	movlb	1	; select bank1
 10633  1580  084A               	movf	(_light_pv+1)^(0+128),w
 10634  1581  0020               	movlb	0	; select bank0
 10635  1582  00B7               	movwf	___ftmul@f2+1
 10636  1583  0021               	movlb	1	; select bank1
 10637  1584  084B               	movf	(_light_pv+2)^(0+128),w
 10638  1585  0020               	movlb	0	; select bank0
 10639  1586  00B8               	movwf	___ftmul@f2+2
 10640  1587  318A  22AA  3190   	fcall	___ftmul
 10641  158A  3199  213F  3190   	fcall	PL104	;call to abstracted procedure
 10642  158D  319D  258F  3190   	fcall	___ftdiv
 10643  1590  0842               	movf	?___ftdiv,w
 10644  1591  0023               	movlb	3	; select bank3
 10645  1592  00EA               	movwf	_light_on_pv_level^(0+384)
 10646  1593  0020               	movlb	0	; select bank0
 10647  1594  0843               	movf	?___ftdiv+1,w
 10648  1595  0023               	movlb	3	; select bank3
 10649  1596  00EB               	movwf	(_light_on_pv_level+1)^(0+384)
 10650  1597  0020               	movlb	0	; select bank0
 10651  1598  0844               	movf	?___ftdiv+2,w
 10652  1599  0023               	movlb	3	; select bank3
 10653  159A  00EC               	movwf	(_light_on_pv_level+2)^(0+384)
 10654                           
 10655                           ;uart.c: 522: light_off_pv_level =(10.0/61)*1000;
 10656  159B  30EF               	movlw	239
 10657  159C  00E7               	movwf	_light_off_pv_level^(0+384)
 10658  159D  3023               	movlw	35
 10659  159E  00E8               	movwf	(_light_off_pv_level+1)^(0+384)
 10660  159F  3043               	movlw	67
 10661  15A0  00E9               	movwf	(_light_off_pv_level+2)^(0+384)
 10662                           
 10663                           ;uart.c: 524: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
 10664  15A1  0020               	movlb	0	; select bank0
 10665  15A2  30F0               	movlw	240
 10666  15A3  01B3               	clrf	___ftmul@f1
 10667  15A4  00B4               	movwf	___ftmul@f1+1
 10668  15A5  3041               	movlw	65
 10669  15A6  3198  2035  3190   	fcall	PL2	;call to abstracted procedure
 10670  15A9  319D  258F  3190   	fcall	___ftdiv
 10671  15AC  2707               	fcall	PL48	;call to abstracted procedure
 10672  15AD  318A  22AA  3190   	fcall	___ftmul
 10673  15B0  3198  208C  3190   	fcall	PL38	;call to abstracted procedure
 10674                           
 10675                           ;uart.c: 525: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 10676  15B3  0021               	movlb	1	; select bank1
 10677  15B4  3198  2057  3190   	fcall	PL6	;call to abstracted procedure
 10678  15B7  3198  2035  3190   	fcall	PL2	;call to abstracted procedure
 10679  15BA  319D  258F  3190   	fcall	___ftdiv
 10680  15BD  2707               	fcall	PL48	;call to abstracted procedure
 10681  15BE  318A  22AA  3190   	fcall	___ftmul
 10682  15C1  0833               	movf	?___ftmul,w
 10683  15C2  00E0               	movwf	_handle_uart_rx_buf$3198
 10684  15C3  0834               	movf	?___ftmul+1,w
 10685  15C4  00E1               	movwf	_handle_uart_rx_buf$3198+1
 10686  15C5  0835               	movf	?___ftmul+2,w
 10687  15C6  00E2               	movwf	_handle_uart_rx_buf$3198+2
 10688                           
 10689                           ;uart.c: 525: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 10690  15C7  309A               	movlw	154
 10691  15C8  00B3               	movwf	___ftmul@f1
 10692  15C9  3099               	movlw	153
 10693  15CA  00B4               	movwf	___ftmul@f1+1
 10694  15CB  303E               	movlw	62
 10695  15CC  00B5               	movwf	___ftmul@f1+2
 10696  15CD  0860               	movf	_handle_uart_rx_buf$3198,w
 10697  15CE  00B6               	movwf	___ftmul@f2
 10698  15CF  0861               	movf	_handle_uart_rx_buf$3198+1,w
 10699  15D0  00B7               	movwf	___ftmul@f2+1
 10700  15D1  0862               	movf	_handle_uart_rx_buf$3198+2,w
 10701  15D2  00B8               	movwf	___ftmul@f2+2
 10702  15D3  318A  22AA  3190   	fcall	___ftmul
 10703  15D6  3198  2098  3190   	fcall	PL40	;call to abstracted procedure
 10704                           
 10705                           ;uart.c: 527: if(light_time==0x00)
 10706  15D9  0021               	movlb	1	; select bank1
 10707  15DA  0848               	movf	(_light_time+1)^(0+128),w
 10708  15DB  0447               	iorwf	_light_time^(0+128),w
 10709  15DC  1D03               	skipz
 10710  15DD  2DE5               	goto	l24496
 10711                           
 10712                           ;uart.c: 528: {
 10713                           ;uart.c: 529: light_time_level = 500;
 10714  15DE  0023               	movlb	3	; select bank3
 10715  15DF  3001               	movlw	1
 10716  15E0  01A3               	clrf	(_light_time_level+3)^(0+384)
 10717  15E1  01A2               	clrf	(_light_time_level+2)^(0+384)
 10718  15E2  00A1               	movwf	(_light_time_level+1)^(0+384)
 10719  15E3  30F4               	movlw	244
 10720  15E4  2E05               	goto	L5
 10721  15E5                     l24496:	
 10722                           ;uart.c: 530: }
 10723                           
 10724                           
 10725                           ;uart.c: 531: else
 10726                           ;uart.c: 532: {
 10727                           ;uart.c: 533: light_time_level = (unsigned long int)((unsigned long int)light_time*6*180
      +                          );
 10728  15E5  0847               	movf	_light_time^(0+128),w
 10729  15E6  0020               	movlb	0	; select bank0
 10730  15E7  00A3               	movwf	___lmul@multiplier
 10731  15E8  0021               	movlb	1	; select bank1
 10732  15E9  0848               	movf	(_light_time+1)^(0+128),w
 10733  15EA  0020               	movlb	0	; select bank0
 10734  15EB  00A4               	movwf	___lmul@multiplier+1
 10735  15EC  3004               	movlw	4
 10736  15ED  01A5               	clrf	___lmul@multiplier+2
 10737  15EE  01A6               	clrf	___lmul@multiplier+3
 10738  15EF  01AA               	clrf	___lmul@multiplicand+3
 10739  15F0  01A9               	clrf	___lmul@multiplicand+2
 10740  15F1  00A8               	movwf	___lmul@multiplicand+1
 10741  15F2  3038               	movlw	56
 10742  15F3  00A7               	movwf	___lmul@multiplicand
 10743  15F4  318F  27DB  3190   	fcall	___lmul
 10744  15F7  0826               	movf	?___lmul+3,w
 10745  15F8  0023               	movlb	3	; select bank3
 10746  15F9  00A3               	movwf	(_light_time_level+3)^(0+384)
 10747  15FA  0020               	movlb	0	; select bank0
 10748  15FB  0825               	movf	?___lmul+2,w
 10749  15FC  0023               	movlb	3	; select bank3
 10750  15FD  00A2               	movwf	(_light_time_level+2)^(0+384)
 10751  15FE  0020               	movlb	0	; select bank0
 10752  15FF  0824               	movf	?___lmul+1,w
 10753  1600  0023               	movlb	3	; select bank3
 10754  1601  00A1               	movwf	(_light_time_level+1)^(0+384)
 10755  1602  0020               	movlb	0	; select bank0
 10756  1603  0823               	movf	?___lmul,w
 10757  1604  0023               	movlb	3	; select bank3
 10758  1605                     L5:	
 10759  1605  00A0               	movwf	_light_time_level^(0+384)
 10760                           
 10761                           ;uart.c: 534: }
 10762                           ;uart.c: 537: device_status=0x00;
 10763  1606  0021               	movlb	1	; select bank1
 10764  1607  01B6               	clrf	_device_status^(0+128)
 10765                           
 10766                           ;uart.c: 539: eeprom_write(0x38,(unsigned char)(device_status));
 10767  1608  31AA  221A  3190   	fcall	PL370	;call to abstracted procedure
 10768  160B  31A9  21BA  3190   	fcall	_eeprom_write
 10769                           
 10770                           ;uart.c: 543: lr_cnt = 0x00;
 10771  160E  3004               	movlw	4
 10772  160F  0021               	movlb	1	; select bank1
 10773  1610  00C6               	movwf	_work_mode^(0+128)
 10774                           
 10775                           ;uart.c: 545: nop_index=0x00;
 10776                           
 10777                           ;uart.c: 546: discharge1_index=0x00;
 10778                           
 10779                           ;uart.c: 547: discharge2_index=0x00;
 10780                           
 10781                           ;uart.c: 548: charge_index=0x00;
 10782  1611  31AA  2203  3190   	fcall	PL114	;call to abstracted procedure
 10783                           
 10784                           ;uart.c: 550: led_out_ctrl=0x00;
 10785                           
 10786                           ;uart.c: 551: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 10787  1614  31AA  220A  3190   	fcall	PL236	;call to abstracted procedure
 10788  1617  31A9  21BA  3190   	fcall	_eeprom_write
 10789                           
 10790                           ;uart.c: 553: pv_voltage_status=0x00;
 10791                           
 10792                           ;uart.c: 555: day_time_count=0x00;
 10793  161A  272C               	fcall	PL134	;call to abstracted procedure
 10794                           
 10795                           ;uart.c: 557: night_time_count=0x00;
 10796  161B  31A9  21FA  3190   	fcall	PL66	;call to abstracted procedure
 10797                           
 10798                           ;uart.c: 559: pv_time_count=0x00;
 10799                           
 10800                           ;uart.c: 563: uart1_tx_buf[0]=0x55;
 10801  161E  27F9               	fcall	PL338	;call to abstracted procedure
 10802                           
 10803                           ;uart.c: 565: uart1_tx_buf[1]=0xB3;
 10804  161F  30B3               	movlw	179
 10805  1620                     L6:	
 10806  1620  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 10807  1621  30A1               	movlw	low (_uart1_tx_buf+1)
 10808                           
 10809                           ;uart.c: 567: uart1_tx_buf[2]=0x01;
 10810  1622  01A2               	clrf	(_uart1_tx_buf^(0+896)+2)
 10811  1623  0AA2               	incf	(_uart1_tx_buf^(0+896)+2),f
 10812                           
 10813                           ;uart.c: 569: crc_data=crc16(&uart1_tx_buf[1],2);
 10814  1624  0020               	movlb	0	; select bank0
 10815  1625  00A3               	movwf	crc16@puchMsg
 10816  1626  3003               	movlw	high (_uart1_tx_buf+1)
 10817  1627  00A4               	movwf	crc16@puchMsg+1
 10818  1628  3002               	movlw	2
 10819  1629  00A5               	movwf	crc16@usDataLen
 10820  162A  3188  20FE  3190   	fcall	_crc16
 10821                           
 10822                           ;uart.c: 571: uart1_tx_buf[3]=crc_data/256;
 10823  162D  271B  3190         	fcall	PL108	;call to abstracted procedure
 10824                           
 10825                           ;uart.c: 573: uart1_tx_buf[4]=crc_data%256;
 10826                           
 10827                           ;uart.c: 575: uart1_tx_buf[5]=0xAA;
 10828  162F  27E4  3190         	fcall	PL290	;call to abstracted procedure
 10829                           
 10830                           ;uart.c: 579: }
 10831  1631  2EDF               	goto	l24654
 10832  1632                     l24538:	
 10833                           
 10834                           ;uart.c: 580: else
 10835                           ;uart.c: 581: {
 10836                           ;uart.c: 582: uart1_tx_buf[0]=0x55;
 10837  1632  3055               	movlw	85
 10838  1633  0027               	movlb	7	; select bank7
 10839  1634  00A0               	movwf	_uart1_tx_buf^(0+896)
 10840                           
 10841                           ;uart.c: 584: uart1_tx_buf[1]=0xB3;
 10842  1635  30B3               	movlw	179
 10843  1636  00A1               	movwf	(_uart1_tx_buf^(0+896)+1)
 10844                           
 10845                           ;uart.c: 586: uart1_tx_buf[2]=0x02;
 10846  1637  3002               	movlw	2
 10847  1638  00A2               	movwf	(_uart1_tx_buf^(0+896)+2)
 10848                           
 10849                           ;uart.c: 588: crc_data=crc16(&uart1_tx_buf[1],2);
 10850  1639  27EC               	fcall	PL300	;call to abstracted procedure
 10851  163A  3002               	movlw	2
 10852  163B  00A5               	movwf	crc16@usDataLen
 10853  163C  3188  20FE  3190   	fcall	_crc16
 10854                           
 10855                           ;uart.c: 590: uart1_tx_buf[3]=crc_data/256;
 10856  163F  271B  3190         	fcall	PL108	;call to abstracted procedure
 10857                           
 10858                           ;uart.c: 592: uart1_tx_buf[4]=crc_data%256;
 10859                           
 10860                           ;uart.c: 594: uart1_tx_buf[5]=0xAA;
 10861  1641  27E4  3190         	fcall	PL290	;call to abstracted procedure
 10862  1643  0001               	reset	;# 
 10863  1644  2EDF               	goto	l24654
 10864  1645                     l2358:	
 10865                           ;uart.c: 606: case 0x04:
 10866                           
 10867                           
 10868                           ;uart.c: 607: work_mode=0x01;
 10869  1645  0021               	movlb	1	; select bank1
 10870  1646  3055               	movlw	85
 10871  1647  01C6               	clrf	_work_mode^(0+128)
 10872  1648  0AC6               	incf	_work_mode^(0+128),f
 10873                           
 10874                           ;uart.c: 609: uart1_tx_buf[0]=0x55;
 10875  1649  0027               	movlb	7	; select bank7
 10876  164A  00A0               	movwf	_uart1_tx_buf^(0+896)
 10877                           
 10878                           ;uart.c: 611: uart1_tx_buf[1]=0xB4;
 10879  164B  30B4               	movlw	180
 10880  164C  2E20               	goto	L6
 10881  164D                     l24560:	
 10882                           
 10883                           ;uart.c: 627: work_mode=0x02;
 10884  164D  3002               	movlw	2
 10885  164E  0021               	movlb	1	; select bank1
 10886  164F  00C6               	movwf	_work_mode^(0+128)
 10887                           
 10888                           ;uart.c: 629: uart1_tx_buf[0]=0x55;
 10889  1650  3055               	movlw	85
 10890  1651  0027               	movlb	7	; select bank7
 10891  1652  00A0               	movwf	_uart1_tx_buf^(0+896)
 10892                           
 10893                           ;uart.c: 631: uart1_tx_buf[1]=0xB5;
 10894  1653  30B5               	movlw	181
 10895  1654  2E20               	goto	L6
 10896  1655                     l24572:	
 10897                           
 10898                           ;uart.c: 646: work_mode=0x00;
 10899  1655  0021               	movlb	1	; select bank1
 10900  1656  01C6               	clrf	_work_mode^(0+128)
 10901                           
 10902                           ;uart.c: 648: (LATAbits.LATA6 = 0x01);
 10903  1657  0022               	movlb	2	; select bank2
 10904  1658  170C               	bsf	12,6	;volatile
 10905                           
 10906                           ;uart.c: 650: open_sleep_time=0x00;
 10907  1659  01CA               	clrf	_open_sleep_time^(0+256)
 10908                           
 10909                           ;uart.c: 652: lr_cnt=0x00;
 10910  165A  0025               	movlb	5	; select bank5
 10911  165B  01C9               	clrf	_sleep_time_count^(0+640)
 10912  165C  01CA               	clrf	(_sleep_time_count+1)^(0+640)
 10913                           
 10914                           ;uart.c: 654: nop_index=0x00;
 10915                           
 10916                           ;uart.c: 655: discharge1_index=0x00;
 10917                           
 10918                           ;uart.c: 656: discharge2_index=0x00;
 10919                           
 10920                           ;uart.c: 657: charge_index=0x00;
 10921  165D  31AA  2203  3190   	fcall	PL114	;call to abstracted procedure
 10922                           
 10923                           ;uart.c: 659: led_out_ctrl=0x00;
 10924                           
 10925                           ;uart.c: 660: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 10926  1660  31AA  220A  3190   	fcall	PL236	;call to abstracted procedure
 10927  1663  31A9  21BA  3190   	fcall	_eeprom_write
 10928                           
 10929                           ;uart.c: 662: device_status=0x01;
 10930  1666  0021               	movlb	1	; select bank1
 10931  1667  01B6               	clrf	_device_status^(0+128)
 10932  1668  0AB6               	incf	_device_status^(0+128),f
 10933                           
 10934                           ;uart.c: 664: eeprom_write(0x38,(unsigned char)(device_status));
 10935  1669  31AA  221A  3190   	fcall	PL370	;call to abstracted procedure
 10936  166C  31A9  21BA  3190   	fcall	_eeprom_write
 10937                           
 10938                           ;uart.c: 666: Disable_Buck_Pwm();
 10939  166F  319E  2655  3190   	fcall	_Disable_Buck_Pwm
 10940                           
 10941                           ;uart.c: 667: Set_Buck_Pwm_Duty(0);
 10942  1672  0020               	movlb	0	; select bank0
 10943  1673  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 10944  1674  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 10945  1675  319E  265A  3190   	fcall	_Set_Buck_Pwm_Duty
 10946                           
 10947                           ;uart.c: 669: Disable_Bost_Pwm1();
 10948  1678  31A9  21D7  3190   	fcall	_Disable_Bost_Pwm1
 10949                           
 10950                           ;uart.c: 670: (LATCbits.LATC3 = 0x00);
 10951                           
 10952                           ;uart.c: 671: Set_Bost_Pwm1_Duty(0);
 10953  167B  319F  275E  3190   	fcall	PL122	;call to abstracted procedure
 10954  167E  319D  2513  3190   	fcall	_Set_Bost_Pwm1_Duty
 10955                           
 10956                           ;uart.c: 672: Disable_Bost_Pwm2();
 10957  1681  319D  25F1  3190   	fcall	_Disable_Bost_Pwm2
 10958                           
 10959                           ;uart.c: 673: (LATCbits.LATC0 = 0x00);
 10960                           
 10961                           ;uart.c: 674: Set_Bost_Pwm2_Duty(0);
 10962  1684  319F  2770  3190   	fcall	PL128	;call to abstracted procedure
 10963  1687  319D  253E  3190   	fcall	_Set_Bost_Pwm2_Duty
 10964                           
 10965                           ;uart.c: 676: (LATCbits.LATC3 = 0x01);
 10966  168A  0022               	movlb	2	; select bank2
 10967  168B  158E               	bsf	14,3	;volatile
 10968                           
 10969                           ;uart.c: 677: Enable_Bost_Pwm1();
 10970  168C  31A9  21DC  3190   	fcall	_Enable_Bost_Pwm1
 10971                           
 10972                           ;uart.c: 678: (LATCbits.LATC0 = 0x01);
 10973  168F  0022               	movlb	2	; select bank2
 10974  1690  140E               	bsf	14,0	;volatile
 10975                           
 10976                           ;uart.c: 679: Enable_Bost_Pwm2();
 10977  1691  31A9  21E1  3190   	fcall	_Enable_Bost_Pwm2
 10978                           
 10979                           ;uart.c: 681: Set_Bost_Pwm1_Duty(200);
 10980  1694  30C8               	movlw	200
 10981  1695  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 10982  1696  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 10983  1697  319D  2513  3190   	fcall	_Set_Bost_Pwm1_Duty
 10984                           
 10985                           ;uart.c: 682: Set_Bost_Pwm2_Duty(200);
 10986  169A  319F  27B0  3190   	fcall	PL288	;call to abstracted procedure
 10987  169D  319D  253E  3190   	fcall	_Set_Bost_Pwm2_Duty
 10988                           
 10989                           ;uart.c: 684: delay_ms(1000);
 10990  16A0  31AA  220F  3190   	fcall	PL272	;call to abstracted procedure
 10991  16A3  319D  256C  3190   	fcall	_delay_ms
 10992                           
 10993                           ;uart.c: 686: Set_Bost_Pwm1_Duty(0);
 10994  16A6  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 10995  16A7  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 10996  16A8  319D  2513  3190   	fcall	_Set_Bost_Pwm1_Duty
 10997                           
 10998                           ;uart.c: 687: Set_Bost_Pwm2_Duty(0);
 10999  16AB  0020               	movlb	0	; select bank0
 11000  16AC  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 11001  16AD  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 11002  16AE  319D  253E  3190   	fcall	_Set_Bost_Pwm2_Duty
 11003                           
 11004                           ;uart.c: 689: Disable_Bost_Pwm1();
 11005  16B1  31A9  21D7  3190   	fcall	_Disable_Bost_Pwm1
 11006                           
 11007                           ;uart.c: 690: (LATCbits.LATC3 = 0x00);
 11008                           
 11009                           ;uart.c: 691: Set_Bost_Pwm1_Duty(0);
 11010  16B4  319F  275E  3190   	fcall	PL122	;call to abstracted procedure
 11011  16B7  319D  2513  3190   	fcall	_Set_Bost_Pwm1_Duty
 11012                           
 11013                           ;uart.c: 692: Disable_Bost_Pwm2();
 11014  16BA  319D  25F1  3190   	fcall	_Disable_Bost_Pwm2
 11015                           
 11016                           ;uart.c: 693: (LATCbits.LATC0 = 0x00);
 11017                           
 11018                           ;uart.c: 694: Set_Bost_Pwm2_Duty(0);
 11019  16BD  319F  2770  3190   	fcall	PL128	;call to abstracted procedure
 11020  16C0  319D  253E  3190   	fcall	_Set_Bost_Pwm2_Duty
 11021                           
 11022                           ;uart.c: 697: pv_voltage_status=0x00;
 11023                           
 11024                           ;uart.c: 699: day_time_count=0x00;
 11025  16C3  272C               	fcall	PL134	;call to abstracted procedure
 11026                           
 11027                           ;uart.c: 701: night_time_count=0x00;
 11028  16C4  31A9  21FA  3190   	fcall	PL66	;call to abstracted procedure
 11029                           
 11030                           ;uart.c: 703: pv_time_count=0x00;
 11031                           
 11032                           ;uart.c: 705: uart1_tx_buf[0]=0x55;
 11033  16C7  27F9  3190         	fcall	PL338	;call to abstracted procedure
 11034                           
 11035                           ;uart.c: 707: uart1_tx_buf[1]=0xB6;
 11036  16C9  30B6               	movlw	182
 11037  16CA  2E20               	goto	L6
 11038  16CB                     l24652:	
 11039  16CB  084E               	movf	_rx_frame_kind^(0+256),w
 11040                           
 11041                           ; Switch size 1, requested type "space"
 11042                           ; Number of cases is 6, Range of values is 1 to 6
 11043                           ; switch strategies available:
 11044                           ; Name         Instructions Cycles
 11045                           ; simple_byte           19    10 (average)
 11046                           ; direct_byte           21     9 (fixed)
 11047                           ; jumptable            263     9 (fixed)
 11048                           ;	Chosen strategy is simple_byte
 11049  16CC  3A01               	xorlw	1	; case 1
 11050  16CD  1903               	skipnz
 11051  16CE  2816               	goto	l24256
 11052  16CF  3A03               	xorlw	3	; case 2
 11053  16D0  1903               	skipnz
 11054  16D1  2AB5               	goto	l24376
 11055  16D2  3A01               	xorlw	1	; case 3
 11056  16D3  1903               	skipnz
 11057  16D4  2B3F               	goto	l24424
 11058  16D5  3A07               	xorlw	7	; case 4
 11059  16D6  1903               	skipnz
 11060  16D7  2E45               	goto	l2358
 11061  16D8  3A01               	xorlw	1	; case 5
 11062  16D9  1903               	skipnz
 11063  16DA  2E4D               	goto	l24560
 11064  16DB  3A03               	xorlw	3	; case 6
 11065  16DC  1903               	skipnz
 11066  16DD  2E55               	goto	l24572
 11067  16DE  2EDF               	goto	l24654
 11068  16DF                     l24654:	
 11069                           
 11070                           ;uart.c: 724: rx_frame_kind=0x00;
 11071  16DF  0022               	movlb	2	; select bank2
 11072  16E0  3020               	movlw	low _uart1_rx_buf
 11073  16E1  01CE               	clrf	_rx_frame_kind^(0+256)
 11074                           
 11075                           ;uart.c: 726: memset (uart1_rx_buf,0,sizeof(uart1_rx_buf));
 11076  16E2  0020               	movlb	0	; select bank0
 11077  16E3  00A3               	movwf	memset@p1
 11078  16E4  3004               	movlw	high _uart1_rx_buf
 11079  16E5  00A4               	movwf	memset@p1+1
 11080  16E6  3050               	movlw	80
 11081  16E7  01A5               	clrf	memset@c
 11082  16E8  01A6               	clrf	memset@c+1
 11083  16E9  00A7               	movwf	memset@n
 11084  16EA  01A8               	clrf	memset@n+1
 11085  16EB  319E  2EBF         	ljmp	l19894
 11086  16ED                     __end_of_handle_uart_rx_buf:	
 11087  16ED                     PL10:	
 11088  16ED  0021               	movlb	1	; select bank1
 11089  16EE  084C               	movf	_load_cc_I^(0+128),w
 11090  16EF  0020               	movlb	0	; select bank0
 11091  16F0  00C5               	movwf	___ftdiv@f1
 11092  16F1  0021               	movlb	1	; select bank1
 11093  16F2  084D               	movf	(_load_cc_I+1)^(0+128),w
 11094  16F3  0020               	movlb	0	; select bank0
 11095  16F4  00C6               	movwf	___ftdiv@f1+1
 11096  16F5  0021               	movlb	1	; select bank1
 11097  16F6  084E               	movf	(_load_cc_I+2)^(0+128),w
 11098  16F7  0020               	movlb	0	; select bank0
 11099  16F8  00C7               	movwf	___ftdiv@f1+2
 11100  16F9  3080               	movlw	128
 11101  16FA  01C2               	clrf	___ftdiv@f2
 11102  16FB  00C3               	movwf	___ftdiv@f2+1
 11103  16FC  3043               	movlw	67
 11104  16FD  00C4               	movwf	___ftdiv@f2+2
 11105  16FE  0008               	return
 11106  16FF                     __end_ofPL10:	
 11107  16FF                     PL44:	
 11108  16FF  0020               	movlb	0	; select bank0
 11109  1700  00C7               	movwf	___ftdiv@f1+2
 11110  1701  3080               	movlw	128
 11111  1702  01C2               	clrf	___ftdiv@f2
 11112  1703  00C3               	movwf	___ftdiv@f2+1
 11113  1704  3043               	movlw	67
 11114  1705  00C4               	movwf	___ftdiv@f2+2
 11115  1706  0008               	return
 11116  1707                     __end_ofPL44:	
 11117  1707                     PL48:	
 11118  1707  0842               	movf	?___ftdiv,w
 11119  1708  00B6               	movwf	___ftmul@f2
 11120  1709  0843               	movf	?___ftdiv+1,w
 11121  170A  00B7               	movwf	___ftmul@f2+1
 11122  170B  0844               	movf	?___ftdiv+2,w
 11123  170C  00B8               	movwf	___ftmul@f2+2
 11124  170D  0008               	return
 11125  170E                     __end_ofPL48:	
 11126  170E                     PL56:	
 11127  170E  0842               	movf	?___ftdiv,w
 11128  170F  00D1               	movwf	___fttol@f1
 11129  1710  0843               	movf	?___ftdiv+1,w
 11130  1711  00D2               	movwf	___fttol@f1+1
 11131  1712  0844               	movf	?___ftdiv+2,w
 11132  1713  00D3               	movwf	___fttol@f1+2
 11133  1714  0008               	return
 11134  1715                     __end_ofPL56:	
 11135  1715                     PL90:	
 11136  1715  086B               	movf	_today_index,w
 11137  1716  3E08               	addlw	8
 11138  1717  3907               	andlw	7
 11139  1718  0709               	addwf	9,w
 11140  1719  0709               	addwf	9,w
 11141  171A  0008               	return
 11142  171B                     __end_ofPL90:	
 11143  171B                     PL108:	
 11144  171B  0824               	movf	?_crc16+1,w
 11145  171C  0021               	movlb	1	; select bank1
 11146  171D  00AC               	movwf	(_crc_data+1)^(0+128)
 11147  171E  0020               	movlb	0	; select bank0
 11148  171F  0823               	movf	?_crc16,w
 11149  1720  0021               	movlb	1	; select bank1
 11150  1721  00AB               	movwf	_crc_data^(0+128)
 11151  1722  082C               	movf	(_crc_data+1)^(0+128),w
 11152  1723  0027               	movlb	7	; select bank7
 11153  1724  0008               	return
 11154  1725                     __end_ofPL108:	
 11155  1725                     PL120:	
 11156  1725  0830               	movf	?___lwtoft,w
 11157  1726  00C5               	movwf	___ftdiv@f1
 11158  1727  0831               	movf	?___lwtoft+1,w
 11159  1728  00C6               	movwf	___ftdiv@f1+1
 11160  1729  0832               	movf	?___lwtoft+2,w
 11161  172A  00C7               	movwf	___ftdiv@f1+2
 11162  172B  0008               	return
 11163  172C                     __end_ofPL120:	
 11164  172C                     PL134:	
 11165  172C  0022               	movlb	2	; select bank2
 11166  172D  01CC               	clrf	_pv_voltage_status^(0+256)
 11167  172E  0025               	movlb	5	; select bank5
 11168  172F  3455               	retlw	85
 11169  1730                     __end_ofPL134:	
 11170  1730                     PL144:	
 11171  1730  0021               	movlb	1	; select bank1
 11172  1731  0849               	movf	_light_pv^(0+128),w
 11173  1732  0020               	movlb	0	; select bank0
 11174  1733  00C5               	movwf	___ftdiv@f1
 11175  1734  0021               	movlb	1	; select bank1
 11176  1735  084A               	movf	(_light_pv+1)^(0+128),w
 11177  1736  0020               	movlb	0	; select bank0
 11178  1737  00C6               	movwf	___ftdiv@f1+1
 11179  1738  0021               	movlb	1	; select bank1
 11180  1739  084B               	movf	(_light_pv+2)^(0+128),w
 11181  173A  0008               	return
 11182  173B                     __end_ofPL144:	
 11183  173B                     PL168:	
 11184  173B  086B               	movf	_today_index,w
 11185  173C  3E03               	addlw	3
 11186  173D  3907               	andlw	7
 11187  173E  0709               	addwf	9,w
 11188  173F  0709               	addwf	9,w
 11189  1740  0008               	return
 11190  1741                     __end_ofPL168:	
 11191  1741                     PL170:	
 11192  1741  086B               	movf	_today_index,w
 11193  1742  3E02               	addlw	2
 11194  1743  3907               	andlw	7
 11195  1744  0709               	addwf	9,w
 11196  1745  0709               	addwf	9,w
 11197  1746  0008               	return
 11198  1747                     __end_ofPL170:	
 11199  1747                     PL174:	
 11200  1747  086B               	movf	_today_index,w
 11201  1748  3E01               	addlw	1
 11202  1749  3907               	andlw	7
 11203  174A  0709               	addwf	9,w
 11204  174B  0709               	addwf	9,w
 11205  174C  0008               	return
 11206  174D                     __end_ofPL174:	
 11207  174D                     PL178:	
 11208  174D  086B               	movf	_today_index,w
 11209  174E  3E04               	addlw	4
 11210  174F  3907               	andlw	7
 11211  1750  0709               	addwf	9,w
 11212  1751  0709               	addwf	9,w
 11213  1752  0008               	return
 11214  1753                     __end_ofPL178:	
 11215  1753                     PL182:	
 11216  1753  086B               	movf	_today_index,w
 11217  1754  3E05               	addlw	5
 11218  1755  3907               	andlw	7
 11219  1756  0709               	addwf	9,w
 11220  1757  0709               	addwf	9,w
 11221  1758  0008               	return
 11222  1759                     __end_ofPL182:	
 11223  1759                     PL184:	
 11224  1759  086B               	movf	_today_index,w
 11225  175A  3E07               	addlw	7
 11226  175B  3907               	andlw	7
 11227  175C  0709               	addwf	9,w
 11228  175D  0709               	addwf	9,w
 11229  175E  0008               	return
 11230  175F                     __end_ofPL184:	
 11231  175F                     PL186:	
 11232  175F  086B               	movf	_today_index,w
 11233  1760  3E06               	addlw	6
 11234  1761  3907               	andlw	7
 11235  1762  0709               	addwf	9,w
 11236  1763  0709               	addwf	9,w
 11237  1764  0008               	return
 11238  1765                     __end_ofPL186:	
 11239  1765                     PL200:	
 11240  1765  0022               	movlb	2	; select bank2
 11241  1766  0860               	movf	_step_01_load_percent^(0+256),w
 11242  1767  0020               	movlb	0	; select bank0
 11243  1768  00D1               	movwf	___fttol@f1
 11244  1769  0022               	movlb	2	; select bank2
 11245  176A  0861               	movf	(_step_01_load_percent+1)^(0+256),w
 11246  176B  0020               	movlb	0	; select bank0
 11247  176C  00D2               	movwf	___fttol@f1+1
 11248  176D  0022               	movlb	2	; select bank2
 11249  176E  0862               	movf	(_step_01_load_percent+2)^(0+256),w
 11250  176F  0020               	movlb	0	; select bank0
 11251  1770  00D3               	movwf	___fttol@f1+2
 11252  1771  0008               	return
 11253  1772                     __end_ofPL200:	
 11254  1772                     PL206:	
 11255  1772  0021               	movlb	1	; select bank1
 11256  1773  084F               	movf	_step_05_load_percent^(0+128),w
 11257  1774  0020               	movlb	0	; select bank0
 11258  1775  00D1               	movwf	___fttol@f1
 11259  1776  0021               	movlb	1	; select bank1
 11260  1777  0850               	movf	(_step_05_load_percent+1)^(0+128),w
 11261  1778  0020               	movlb	0	; select bank0
 11262  1779  00D2               	movwf	___fttol@f1+1
 11263  177A  0021               	movlb	1	; select bank1
 11264  177B  0851               	movf	(_step_05_load_percent+2)^(0+128),w
 11265  177C  0020               	movlb	0	; select bank0
 11266  177D  00D3               	movwf	___fttol@f1+2
 11267  177E  0008               	return
 11268  177F                     __end_ofPL206:	
 11269  177F                     PL208:	
 11270  177F  0022               	movlb	2	; select bank2
 11271  1780  0869               	movf	_step_04_load_percent^(0+256),w
 11272  1781  0020               	movlb	0	; select bank0
 11273  1782  00D1               	movwf	___fttol@f1
 11274  1783  0022               	movlb	2	; select bank2
 11275  1784  086A               	movf	(_step_04_load_percent+1)^(0+256),w
 11276  1785  0020               	movlb	0	; select bank0
 11277  1786  00D2               	movwf	___fttol@f1+1
 11278  1787  0022               	movlb	2	; select bank2
 11279  1788  086B               	movf	(_step_04_load_percent+2)^(0+256),w
 11280  1789  0020               	movlb	0	; select bank0
 11281  178A  00D3               	movwf	___fttol@f1+2
 11282  178B  0008               	return
 11283  178C                     __end_ofPL208:	
 11284  178C                     PL210:	
 11285  178C  0021               	movlb	1	; select bank1
 11286  178D  0849               	movf	_light_pv^(0+128),w
 11287  178E  0020               	movlb	0	; select bank0
 11288  178F  00D1               	movwf	___fttol@f1
 11289  1790  0021               	movlb	1	; select bank1
 11290  1791  084A               	movf	(_light_pv+1)^(0+128),w
 11291  1792  0020               	movlb	0	; select bank0
 11292  1793  00D2               	movwf	___fttol@f1+1
 11293  1794  0021               	movlb	1	; select bank1
 11294  1795  084B               	movf	(_light_pv+2)^(0+128),w
 11295  1796  0020               	movlb	0	; select bank0
 11296  1797  00D3               	movwf	___fttol@f1+2
 11297  1798  0008               	return
 11298  1799                     __end_ofPL210:	
 11299  1799                     PL212:	
 11300  1799  0021               	movlb	1	; select bank1
 11301  179A  084C               	movf	_load_cc_I^(0+128),w
 11302  179B  0020               	movlb	0	; select bank0
 11303  179C  00D1               	movwf	___fttol@f1
 11304  179D  0021               	movlb	1	; select bank1
 11305  179E  084D               	movf	(_load_cc_I+1)^(0+128),w
 11306  179F  0020               	movlb	0	; select bank0
 11307  17A0  00D2               	movwf	___fttol@f1+1
 11308  17A1  0021               	movlb	1	; select bank1
 11309  17A2  084E               	movf	(_load_cc_I+2)^(0+128),w
 11310  17A3  0020               	movlb	0	; select bank0
 11311  17A4  00D3               	movwf	___fttol@f1+2
 11312  17A5  0008               	return
 11313  17A6                     __end_ofPL212:	
 11314  17A6                     PL216:	
 11315  17A6  0022               	movlb	2	; select bank2
 11316  17A7  0866               	movf	_step_03_load_percent^(0+256),w
 11317  17A8  0020               	movlb	0	; select bank0
 11318  17A9  00D1               	movwf	___fttol@f1
 11319  17AA  0022               	movlb	2	; select bank2
 11320  17AB  0867               	movf	(_step_03_load_percent+1)^(0+256),w
 11321  17AC  0020               	movlb	0	; select bank0
 11322  17AD  00D2               	movwf	___fttol@f1+1
 11323  17AE  0022               	movlb	2	; select bank2
 11324  17AF  0868               	movf	(_step_03_load_percent+2)^(0+256),w
 11325  17B0  0020               	movlb	0	; select bank0
 11326  17B1  00D3               	movwf	___fttol@f1+2
 11327  17B2  0008               	return
 11328  17B3                     __end_ofPL216:	
 11329  17B3                     PL218:	
 11330  17B3  0022               	movlb	2	; select bank2
 11331  17B4  0863               	movf	_step_02_load_percent^(0+256),w
 11332  17B5  0020               	movlb	0	; select bank0
 11333  17B6  00D1               	movwf	___fttol@f1
 11334  17B7  0022               	movlb	2	; select bank2
 11335  17B8  0864               	movf	(_step_02_load_percent+1)^(0+256),w
 11336  17B9  0020               	movlb	0	; select bank0
 11337  17BA  00D2               	movwf	___fttol@f1+1
 11338  17BB  0022               	movlb	2	; select bank2
 11339  17BC  0865               	movf	(_step_02_load_percent+2)^(0+256),w
 11340  17BD  0020               	movlb	0	; select bank0
 11341  17BE  00D3               	movwf	___fttol@f1+2
 11342  17BF  0008               	return
 11343  17C0                     __end_ofPL218:	
 11344  17C0                     PL238:	
 11345  17C0  3074               	movlw	116
 11346  17C1  01B3               	clrf	___ftmul@f1
 11347  17C2  00B4               	movwf	___ftmul@f1+1
 11348  17C3  3042               	movlw	66
 11349  17C4  00B5               	movwf	___ftmul@f1+2
 11350  17C5  3020               	movlw	32
 11351  17C6  01C2               	clrf	___ftdiv@f2
 11352  17C7  00C3               	movwf	___ftdiv@f2+1
 11353  17C8  3041               	movlw	65
 11354  17C9  00C4               	movwf	___ftdiv@f2+2
 11355  17CA  0008               	return
 11356  17CB                     __end_ofPL238:	
 11357  17CB                     PL244:	
 11358  17CB  0823               	movf	?_crc16,w
 11359  17CC  00E3               	movwf	handle_uart_rx_buf@crc_in
 11360  17CD  0864               	movf	handle_uart_rx_buf@crc_in+1,w
 11361  17CE  0028               	movlb	8	; select bank8
 11362  17CF  0622               	xorwf	(_uart1_rx_buf^(0+1024)+2),w
 11363  17D0  1D03               	skipz
 11364  17D1  0008               	return
 11365  17D2  0020               	movlb	0	; select bank0
 11366  17D3  0863               	movf	handle_uart_rx_buf@crc_in,w
 11367  17D4  0028               	movlb	8	; select bank8
 11368  17D5  0623               	xorwf	(_uart1_rx_buf^(0+1024)+3),w
 11369  17D6  0008               	return
 11370  17D7                     __end_ofPL244:	
 11371  17D7                     PL266:	
 11372  17D7  0020               	movlb	0	; select bank0
 11373  17D8  00B1               	movwf	___lwtoft@c+1
 11374  17D9  0021               	movlb	1	; select bank1
 11375  17DA  0829               	movf	_charge_current_value^(0+128),w
 11376  17DB  0020               	movlb	0	; select bank0
 11377  17DC  00B0               	movwf	___lwtoft@c
 11378  17DD  0008               	return
 11379  17DE                     __end_ofPL266:	
 11380  17DE                     PL276:	
 11381  17DE  01D1               	clrf	___ftge@ff1
 11382  17DF  00D2               	movwf	___ftge@ff1+1
 11383  17E0  3042               	movlw	66
 11384  17E1  00D3               	movwf	___ftge@ff1+2
 11385  17E2  0022               	movlb	2	; select bank2
 11386  17E3  0008               	return
 11387  17E4                     __end_ofPL276:	
 11388  17E4                     PL290:	
 11389  17E4  00A3               	movwf	(_uart1_tx_buf^(0+896)+3)
 11390  17E5  0021               	movlb	1	; select bank1
 11391  17E6  082B               	movf	_crc_data^(0+128),w
 11392  17E7  0027               	movlb	7	; select bank7
 11393  17E8  00A4               	movwf	(_uart1_tx_buf^(0+896)+4)
 11394  17E9  30AA               	movlw	170
 11395  17EA  00A5               	movwf	(_uart1_tx_buf^(0+896)+5)
 11396  17EB  0008               	return
 11397  17EC                     __end_ofPL290:	
 11398  17EC                     PL300:	
 11399  17EC  30A1               	movlw	low (_uart1_tx_buf+1)
 11400  17ED  0020               	movlb	0	; select bank0
 11401  17EE  00A3               	movwf	crc16@puchMsg
 11402  17EF  3003               	movlw	high (_uart1_tx_buf+1)
 11403  17F0  00A4               	movwf	crc16@puchMsg+1
 11404  17F1  0008               	return
 11405  17F2                     __end_ofPL300:	
 11406  17F2                     PL310:	
 11407  17F2  0020               	movlb	0	; select bank0
 11408  17F3  00A3               	movwf	crc16@puchMsg
 11409  17F4  3004               	movlw	high (_uart1_rx_buf+1)
 11410  17F5  00A4               	movwf	crc16@puchMsg+1
 11411  17F6  01A5               	clrf	crc16@usDataLen
 11412  17F7  0AA5               	incf	crc16@usDataLen,f
 11413  17F8  0008               	return
 11414  17F9                     __end_ofPL310:	
 11415  17F9                     PL338:	
 11416  17F9  01A8               	clrf	_pv_time_count^(0+640)
 11417  17FA  01A9               	clrf	(_pv_time_count+1)^(0+640)
 11418  17FB  01AA               	clrf	(_pv_time_count+2)^(0+640)
 11419  17FC  01AB               	clrf	(_pv_time_count+3)^(0+640)
 11420  17FD  0027               	movlb	7	; select bank7
 11421  17FE  00A0               	movwf	_uart1_tx_buf^(0+896)
 11422  17FF  0008               	return
 11423  1800                     __end_ofPL338:	
 11424                           
 11425                           	psect	text7
 11426  08FE                     __ptext7:	
 11427 ;; *************** function _crc16 *****************
 11428 ;; Defined at:
 11429 ;;		line 75 in file "D:\MCUProject\ZH-SL-S4080-1\src\Modbus.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  puchMsg         2    3[BANK0 ] PTR volatile unsigned ch
 11432 ;;		 -> uart1_tx_buf(80), uart1_rx_buf(80), 
 11433 ;;  usDataLen       1    5[BANK0 ] unsigned char 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  uIndex          4    6[BANK0 ] unsigned long 
 11436 ;;  uchCRCLo        1   11[BANK0 ] unsigned char 
 11437 ;;  uchCRCHi        1   10[BANK0 ] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  2    3[BANK0 ] unsigned int 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11442 ;; Tracked objects:
 11443 ;;		On entry : 1F/0
 11444 ;;		On exit  : 1F/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;Total ram usage:        9 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    2
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_handle_uart_rx_buf
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function _crc16
 11463  08FE                     _crc16:	
 11464                           
 11465                           ;Modbus.c: 77: unsigned char uchCRCHi = 0xFF ;
 11466                           
 11467                           ;incstack = 0
 11468                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
 11469  08FE  30FF               	movlw	255
 11470  08FF  00AA               	movwf	crc16@uchCRCHi
 11471  0900                     L7:	
 11472  0900  00AB               	movwf	crc16@uchCRCLo
 11473  0901  03A5               	decf	crc16@usDataLen,f
 11474  0902  0825               	movf	crc16@usDataLen,w
 11475  0903  3AFF               	xorlw	255
 11476  0904  1903               	btfsc	3,2
 11477  0905  2923               	goto	l19646
 11478                           
 11479                           ;Modbus.c: 81: {
 11480                           ;Modbus.c: 82: uIndex = uchCRCHi ^ *puchMsg++ ;
 11481                           
 11482                           ;Modbus.c: 79: unsigned long uIndex ;
 11483                           ;Modbus.c: 80: while (usDataLen--)
 11484                           
 11485                           ;Modbus.c: 78: unsigned char uchCRCLo = 0xFF ;
 11486  0906  0823               	movf	crc16@puchMsg,w
 11487  0907  0086               	movwf	6
 11488  0908  0824               	movf	crc16@puchMsg+1,w
 11489  0909  0087               	movwf	7
 11490  090A  0801               	movf	1,w
 11491  090B  062A               	xorwf	crc16@uchCRCHi,w
 11492  090C  00A6               	movwf	crc16@uIndex
 11493  090D  01A7               	clrf	crc16@uIndex+1
 11494  090E  01A8               	clrf	crc16@uIndex+2
 11495  090F  01A9               	clrf	crc16@uIndex+3
 11496  0910  0AA3               	incf	crc16@puchMsg,f
 11497  0911  1903               	skipnz
 11498  0912  0AA4               	incf	crc16@puchMsg+1,f
 11499                           
 11500                           ;Modbus.c: 83: uchCRCHi = uchCRCLo ^ CRCHi[uIndex] ;
 11501  0913  3E01               	addlw	low (_CRCHi| (0+32768))
 11502  0914  0084               	movwf	4
 11503  0915  30B8               	movlw	high (_CRCHi| (0+32768))
 11504  0916  3D27               	addwfc	crc16@uIndex+1,w
 11505  0917  0085               	movwf	5
 11506  0918  0800               	movf	0,w	;code access
 11507  0919  062B               	xorwf	crc16@uchCRCLo,w
 11508  091A  00AA               	movwf	crc16@uchCRCHi
 11509                           
 11510                           ;Modbus.c: 84: uchCRCLo = CRCLo[uIndex] ;
 11511  091B  3001               	movlw	low (_CRCLo| (0+32768))
 11512  091C  0726               	addwf	crc16@uIndex,w
 11513  091D  0084               	movwf	4
 11514  091E  30B9               	movlw	high (_CRCLo| (0+32768))
 11515  091F  3D27               	addwfc	crc16@uIndex+1,w
 11516  0920  0085               	movwf	5
 11517  0921  0800               	movf	0,w	;code access
 11518  0922  2900               	goto	L7
 11519  0923                     l19646:	
 11520                           
 11521                           ;Modbus.c: 85: }
 11522                           ;Modbus.c: 86: return ( uchCRCHi<< 8 | uchCRCLo);
 11523  0923  082A               	movf	crc16@uchCRCHi,w
 11524  0924  00A4               	movwf	?_crc16+1
 11525  0925  01A3               	clrf	?_crc16
 11526  0926  082B               	movf	crc16@uchCRCLo,w
 11527  0927  04A3               	iorwf	?_crc16,f
 11528  0928  0008               	return
 11529  0929                     __end_of_crc16:	
 11530                           
 11531                           	psect	text11
 11532  02B3                     __ptext11:	
 11533 ;; *************** function _handle_ad_loop *****************
 11534 ;; Defined at:
 11535 ;;		line 132 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;		None
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  data_cc_var     3    3[BANK5 ] float 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;		None               void
 11542 ;; Registers used:
 11543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 1F/2
 11546 ;;		On exit  : 1F/2
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;      Locals:         0       0       0       0       0       0       6       0       0       0       0       0       
      +0       0
 11551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Totals:         0       2       0       0       0       0       6       0       0       0       0       0       
      +0       0
 11553 ;;Total ram usage:        8 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    7
 11556 ;; This function calls:
 11557 ;;		_Disable_Bost_Pwm1
 11558 ;;		_Disable_Bost_Pwm2
 11559 ;;		_Disable_Buck_Pwm
 11560 ;;		_Enable_Bost_Pwm1
 11561 ;;		_Enable_Bost_Pwm2
 11562 ;;		_Enable_Buck_Pwm
 11563 ;;		_Mppt_Charge
 11564 ;;		_Set_Bost_Pwm1_Duty
 11565 ;;		_Set_Bost_Pwm2_Duty
 11566 ;;		_Set_Buck_Pwm_Duty
 11567 ;;		___awtoft
 11568 ;;		___ftadd
 11569 ;;		___ftdiv
 11570 ;;		___ftge
 11571 ;;		___ftmul
 11572 ;;		___fttol
 11573 ;;		___lldiv
 11574 ;;		___lwdiv
 11575 ;;		___lwtoft
 11576 ;;		___wmul
 11577 ;;		_delay_ms
 11578 ;;		_pid_calc
 11579 ;;		_pid_calc_2
 11580 ;;		_start_ad_convert
 11581 ;; This function is called by:
 11582 ;;		_main
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _handle_ad_loop
 11588  02B3                     _handle_ad_loop:	
 11589                           
 11590                           ;task.c: 135: float data_cc_var;
 11591                           ;task.c: 138: if(handle_an1_process_flag==0x01)
 11592                           
 11593                           ;incstack = 0
 11594                           ; Regs used in _handle_ad_loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11595  02B3  0B2D               	decfsz	_handle_an1_process_flag^(0+256),w
 11596  02B4  2B5C               	goto	l22830
 11597                           
 11598                           ;task.c: 139: {
 11599                           ;task.c: 141: temperature_value=start_ad_convert(0b00001);
 11600  02B5  3001               	movlw	1
 11601  02B6  31B0  2038  3182   	fcall	_start_ad_convert
 11602  02B9  0831               	movf	?_start_ad_convert+1,w
 11603  02BA  0022               	movlb	2	; select bank2
 11604  02BB  00A8               	movwf	(_temperature_value+1)^(0+256)
 11605  02BC  0020               	movlb	0	; select bank0
 11606  02BD  0830               	movf	?_start_ad_convert,w
 11607  02BE  0022               	movlb	2	; select bank2
 11608  02BF  00A7               	movwf	_temperature_value^(0+256)
 11609                           
 11610                           ;task.c: 143: if((temperature_value>4)&&(temperature_value<605))
 11611  02C0  3000               	movlw	0
 11612  02C1  0228               	subwf	(_temperature_value+1)^(0+256),w
 11613  02C2  3005               	movlw	5
 11614  02C3  1903               	skipnz
 11615  02C4  0227               	subwf	_temperature_value^(0+256),w
 11616  02C5  1C03               	skipc
 11617  02C6  2ADA               	goto	l22748
 11618  02C7  3002               	movlw	2
 11619  02C8  0228               	subwf	(_temperature_value+1)^(0+256),w
 11620  02C9  305D               	movlw	93
 11621  02CA  1903               	skipnz
 11622  02CB  0227               	subwf	_temperature_value^(0+256),w
 11623  02CC  1803               	skipnc
 11624  02CD  2ADA               	goto	l22748
 11625                           
 11626                           ;task.c: 144: {
 11627                           ;task.c: 145: temper_time_count++;
 11628  02CE  0AD3               	incf	_temper_time_count^(0+256),f
 11629                           
 11630                           ;task.c: 147: over_temper_time_count=0x00;
 11631  02CF  0023               	movlb	3	; select bank3
 11632  02D0  300A               	movlw	10
 11633  02D1  01BC               	clrf	_over_temper_time_count^(0+384)
 11634                           
 11635                           ;task.c: 149: if(temper_time_count>=10)
 11636  02D2  0022               	movlb	2	; select bank2
 11637  02D3  0253               	subwf	_temper_time_count^(0+256),w
 11638  02D4  1C03               	skipc
 11639  02D5  2AE6               	goto	l22756
 11640                           
 11641                           ;task.c: 150: {
 11642                           ;task.c: 151: temper_time_count=0x00;
 11643  02D6  01D3               	clrf	_temper_time_count^(0+256)
 11644                           
 11645                           ;task.c: 153: sys_temper_flag=0x01;
 11646  02D7  01EF               	clrf	_sys_temper_flag^(0+256)
 11647  02D8  0AEF               	incf	_sys_temper_flag^(0+256),f
 11648  02D9  2AE6               	goto	l22756
 11649  02DA                     l22748:	
 11650                           
 11651                           ;task.c: 156: else
 11652                           ;task.c: 157: {
 11653                           ;task.c: 158: over_temper_time_count++;
 11654  02DA  0023               	movlb	3	; select bank3
 11655  02DB  0ABC               	incf	_over_temper_time_count^(0+384),f
 11656                           
 11657                           ;task.c: 160: temper_time_count=0x00;
 11658  02DC  0022               	movlb	2	; select bank2
 11659  02DD  300A               	movlw	10
 11660  02DE  01D3               	clrf	_temper_time_count^(0+256)
 11661                           
 11662                           ;task.c: 162: if(over_temper_time_count>=10)
 11663  02DF  0023               	movlb	3	; select bank3
 11664  02E0  023C               	subwf	_over_temper_time_count^(0+384),w
 11665  02E1  1C03               	skipc
 11666  02E2  2AE6               	goto	l22756
 11667                           
 11668                           ;task.c: 163: {
 11669                           ;task.c: 164: over_temper_time_count=0x00;
 11670  02E3  01BC               	clrf	_over_temper_time_count^(0+384)
 11671                           
 11672                           ;task.c: 166: sys_temper_flag=0x00;
 11673  02E4  0022               	movlb	2	; select bank2
 11674  02E5  01EF               	clrf	_sys_temper_flag^(0+256)
 11675  02E6                     l22756:	
 11676                           
 11677                           ;task.c: 167: }
 11678                           ;task.c: 168: }
 11679                           ;task.c: 171: ADCON1bits.ADPREF =0b00;
 11680  02E6  30FC               	movlw	-4
 11681  02E7  0021               	movlb	1	; select bank1
 11682  02E8  059E               	andwf	30,f	;volatile
 11683                           
 11684                           ;task.c: 173: mcu_value=start_ad_convert(0b11101);
 11685  02E9  301D               	movlw	29
 11686  02EA  31B0  2038  3182   	fcall	_start_ad_convert
 11687  02ED  0831               	movf	?_start_ad_convert+1,w
 11688  02EE  0021               	movlb	1	; select bank1
 11689  02EF  00B2               	movwf	(_mcu_value+1)^(0+128)
 11690  02F0  0020               	movlb	0	; select bank0
 11691  02F1  0830               	movf	?_start_ad_convert,w
 11692  02F2  0021               	movlb	1	; select bank1
 11693  02F3  00B1               	movwf	_mcu_value^(0+128)
 11694                           
 11695                           ;task.c: 175: ADCON1bits.ADPREF =0b11;
 11696  02F4  3003               	movlw	3
 11697  02F5  049E               	iorwf	30,f	;volatile
 11698                           
 11699                           ;task.c: 177: if(mcu_value<490)
 11700  02F6  3001               	movlw	1
 11701  02F7  0232               	subwf	(_mcu_value+1)^(0+128),w
 11702  02F8  30EA               	movlw	234
 11703  02F9  1903               	skipnz
 11704  02FA  0231               	subwf	_mcu_value^(0+128),w
 11705  02FB  1803               	skipnc
 11706  02FC  2B0A               	goto	l22776
 11707                           
 11708                           ;task.c: 178: {
 11709                           ;task.c: 179: mcu_t00_time_count++;
 11710  02FD  0023               	movlb	3	; select bank3
 11711  02FE  3078               	movlw	120
 11712  02FF  0AB8               	incf	_mcu_t00_time_count^(0+384),f
 11713                           
 11714                           ;task.c: 180: mcu_t01_time_count=0x00;
 11715  0300  01B9               	clrf	_mcu_t01_time_count^(0+384)
 11716                           
 11717                           ;task.c: 181: mcu_t02_time_count=0x00;
 11718  0301  01BA               	clrf	_mcu_t02_time_count^(0+384)
 11719                           
 11720                           ;task.c: 182: mcu_t03_time_count=0x00;
 11721  0302  01BB               	clrf	_mcu_t03_time_count^(0+384)
 11722                           
 11723                           ;task.c: 184: if(mcu_t00_time_count>=120)
 11724  0303  0238               	subwf	_mcu_t00_time_count^(0+384),w
 11725  0304  1C03               	skipc
 11726  0305  2B5A               	goto	l1663
 11727                           
 11728                           ;task.c: 185: {
 11729                           ;task.c: 186: mcu_t00_time_count=0x00;
 11730  0306  01B8               	clrf	_mcu_t00_time_count^(0+384)
 11731                           
 11732                           ;task.c: 188: mcu_temp_index=0x00;
 11733  0307  0021               	movlb	1	; select bank1
 11734  0308  01BE               	clrf	_mcu_temp_index^(0+128)
 11735  0309  2B5A               	goto	l1663
 11736  030A                     l22776:	
 11737                           
 11738                           ;task.c: 191: else if(mcu_value>510 && mcu_value<530)
 11739  030A  3001               	movlw	1
 11740  030B  0232               	subwf	(_mcu_value+1)^(0+128),w
 11741  030C  30FF               	movlw	255
 11742  030D  1903               	skipnz
 11743  030E  0231               	subwf	_mcu_value^(0+128),w
 11744  030F  3002               	movlw	2
 11745  0310  1C03               	skipc
 11746  0311  2B27               	goto	L82
 11747  0312  0232               	subwf	(_mcu_value+1)^(0+128),w
 11748  0313  3012               	movlw	18
 11749  0314  1903               	skipnz
 11750  0315  0231               	subwf	_mcu_value^(0+128),w
 11751  0316  1803               	skipnc
 11752  0317  2B26               	goto	l22794
 11753                           
 11754                           ;task.c: 192: {
 11755                           ;task.c: 193: mcu_t01_time_count++;
 11756  0318  0023               	movlb	3	; select bank3
 11757  0319  303C               	movlw	60
 11758  031A  0AB9               	incf	_mcu_t01_time_count^(0+384),f
 11759                           
 11760                           ;task.c: 194: mcu_t00_time_count=0x00;
 11761  031B  01B8               	clrf	_mcu_t00_time_count^(0+384)
 11762                           
 11763                           ;task.c: 195: mcu_t02_time_count=0x00;
 11764  031C  01BA               	clrf	_mcu_t02_time_count^(0+384)
 11765                           
 11766                           ;task.c: 196: mcu_t03_time_count=0x00;
 11767  031D  01BB               	clrf	_mcu_t03_time_count^(0+384)
 11768                           
 11769                           ;task.c: 198: if(mcu_t01_time_count>=60)
 11770  031E  0239               	subwf	_mcu_t01_time_count^(0+384),w
 11771  031F  1C03               	skipc
 11772  0320  2B5A               	goto	l1663
 11773                           
 11774                           ;task.c: 199: {
 11775                           ;task.c: 200: mcu_t01_time_count=0x00;
 11776  0321  01B9               	clrf	_mcu_t01_time_count^(0+384)
 11777                           
 11778                           ;task.c: 202: mcu_temp_index=0x01;
 11779  0322  0021               	movlb	1	; select bank1
 11780  0323  01BE               	clrf	_mcu_temp_index^(0+128)
 11781  0324  0ABE               	incf	_mcu_temp_index^(0+128),f
 11782  0325  2B5A               	goto	l1663
 11783  0326                     l22794:	
 11784                           
 11785                           ;task.c: 205: else if(mcu_value>530 && mcu_value<550)
 11786  0326  3002               	movlw	2
 11787  0327                     L82:	
 11788  0327  0232               	subwf	(_mcu_value+1)^(0+128),w
 11789  0328  3013               	movlw	19
 11790  0329  1903               	skipnz
 11791  032A  0231               	subwf	_mcu_value^(0+128),w
 11792  032B  3002               	movlw	2
 11793  032C  1C03               	skipc
 11794  032D  2B41               	goto	L83
 11795  032E  0232               	subwf	(_mcu_value+1)^(0+128),w
 11796  032F  3026               	movlw	38
 11797  0330  1903               	skipnz
 11798  0331  0231               	subwf	_mcu_value^(0+128),w
 11799  0332  1803               	skipnc
 11800  0333  2B40               	goto	l22812
 11801                           
 11802                           ;task.c: 206: {
 11803                           ;task.c: 207: mcu_t02_time_count++;
 11804  0334  0023               	movlb	3	; select bank3
 11805  0335  301E               	movlw	30
 11806  0336  0ABA               	incf	_mcu_t02_time_count^(0+384),f
 11807                           
 11808                           ;task.c: 208: mcu_t00_time_count=0x00;
 11809  0337  01B8               	clrf	_mcu_t00_time_count^(0+384)
 11810                           
 11811                           ;task.c: 209: mcu_t01_time_count=0x00;
 11812  0338  01B9               	clrf	_mcu_t01_time_count^(0+384)
 11813                           
 11814                           ;task.c: 210: mcu_t03_time_count=0x00;
 11815  0339  01BB               	clrf	_mcu_t03_time_count^(0+384)
 11816                           
 11817                           ;task.c: 212: if(mcu_t02_time_count>=30)
 11818  033A  023A               	subwf	_mcu_t02_time_count^(0+384),w
 11819  033B  1C03               	skipc
 11820  033C  2B5A               	goto	l1663
 11821  033D  3002               	movlw	2
 11822                           
 11823                           ;task.c: 213: {
 11824                           ;task.c: 214: mcu_t02_time_count=0x00;
 11825  033E  01BA               	clrf	_mcu_t02_time_count^(0+384)
 11826                           
 11827                           ;task.c: 216: mcu_temp_index=0x02;
 11828  033F  2B52               	goto	L8
 11829  0340                     l22812:	
 11830                           
 11831                           ;task.c: 219: else if(mcu_value>=550)
 11832  0340  3002               	movlw	2
 11833  0341                     L83:	
 11834  0341  0232               	subwf	(_mcu_value+1)^(0+128),w
 11835  0342  3026               	movlw	38
 11836  0343  1903               	skipnz
 11837  0344  0231               	subwf	_mcu_value^(0+128),w
 11838  0345  1C03               	skipc
 11839  0346  2B55               	goto	l22828
 11840                           
 11841                           ;task.c: 220: {
 11842                           ;task.c: 221: mcu_t03_time_count++;
 11843  0347  0023               	movlb	3	; select bank3
 11844  0348  300A               	movlw	10
 11845  0349  0ABB               	incf	_mcu_t03_time_count^(0+384),f
 11846                           
 11847                           ;task.c: 222: mcu_t00_time_count=0x00;
 11848  034A  01B8               	clrf	_mcu_t00_time_count^(0+384)
 11849                           
 11850                           ;task.c: 223: mcu_t01_time_count=0x00;
 11851  034B  01B9               	clrf	_mcu_t01_time_count^(0+384)
 11852                           
 11853                           ;task.c: 224: mcu_t02_time_count=0x00;
 11854  034C  01BA               	clrf	_mcu_t02_time_count^(0+384)
 11855                           
 11856                           ;task.c: 226: if(mcu_t03_time_count>=10)
 11857  034D  023B               	subwf	_mcu_t03_time_count^(0+384),w
 11858  034E  1C03               	skipc
 11859  034F  2B5A               	goto	l1663
 11860  0350  3003               	movlw	3
 11861                           
 11862                           ;task.c: 227: {
 11863                           ;task.c: 228: mcu_t03_time_count=0x00;
 11864  0351  01BB               	clrf	_mcu_t03_time_count^(0+384)
 11865  0352                     L8:	
 11866                           ;task.c: 230: mcu_temp_index=0x03;
 11867                           
 11868  0352  0021               	movlb	1	; select bank1
 11869  0353  00BE               	movwf	_mcu_temp_index^(0+128)
 11870  0354  2B5A               	goto	l1663
 11871  0355                     l22828:	
 11872                           
 11873                           ;task.c: 233: else
 11874                           ;task.c: 234: {
 11875                           ;task.c: 235: mcu_t00_time_count=0x00;
 11876  0355  0023               	movlb	3	; select bank3
 11877  0356  01B8               	clrf	_mcu_t00_time_count^(0+384)
 11878                           
 11879                           ;task.c: 236: mcu_t01_time_count=0x00;
 11880  0357  01B9               	clrf	_mcu_t01_time_count^(0+384)
 11881                           
 11882                           ;task.c: 237: mcu_t02_time_count=0x00;
 11883  0358  01BA               	clrf	_mcu_t02_time_count^(0+384)
 11884                           
 11885                           ;task.c: 238: mcu_t03_time_count=0x00;
 11886  0359  01BB               	clrf	_mcu_t03_time_count^(0+384)
 11887  035A                     l1663:	
 11888                           
 11889                           ;task.c: 239: }
 11890                           ;task.c: 241: handle_an1_process_flag=0x00;
 11891  035A  0022               	movlb	2	; select bank2
 11892  035B  01AD               	clrf	_handle_an1_process_flag^(0+256)
 11893  035C                     l22830:	
 11894                           
 11895                           ;task.c: 243: }
 11896                           ;task.c: 248: if(handle_an2_process_flag==0x01)
 11897  035C  0B2E               	decfsz	_handle_an2_process_flag^(0+256),w
 11898  035D  2CAA               	goto	l22892
 11899                           
 11900                           ;task.c: 249: {
 11901                           ;task.c: 251: pv_voltage_value=start_ad_convert(0b00010);
 11902  035E  3002               	movlw	2
 11903  035F  31B0  2038  3182   	fcall	_start_ad_convert
 11904  0362  0831               	movf	?_start_ad_convert+1,w
 11905  0363  0021               	movlb	1	; select bank1
 11906  0364  00B4               	movwf	(_pv_voltage_value+1)^(0+128)
 11907  0365  0020               	movlb	0	; select bank0
 11908  0366  0830               	movf	?_start_ad_convert,w
 11909  0367  0021               	movlb	1	; select bank1
 11910  0368  00B3               	movwf	_pv_voltage_value^(0+128)
 11911                           
 11912                           ;task.c: 254: if(pv_index==0x00)
 11913  0369  0022               	movlb	2	; select bank2
 11914  036A  08CB               	movf	_pv_index^(0+256),f
 11915  036B  1D03               	skipz
 11916  036C  2BF0               	goto	l22860
 11917                           
 11918                           ;task.c: 255: {
 11919                           ;task.c: 256: if(pv_voltage_value<=light_on_pv_level)
 11920  036D  0023               	movlb	3	; select bank3
 11921  036E  3199  2146  3182   	fcall	PL110	;call to abstracted procedure
 11922  0371  3199  2136  3182   	fcall	PL102	;call to abstracted procedure
 11923  0374  31B4  2461  3182   	fcall	___lwtoft
 11924  0377  3198  2085  3182   	fcall	PL36	;call to abstracted procedure
 11925  037A  31B4  2472  3182   	fcall	___ftge
 11926  037D  1C03               	btfss	3,0
 11927  037E  2BA7               	goto	l22848
 11928                           
 11929                           ;task.c: 257: {
 11930                           ;task.c: 258: night_time_count++;
 11931  037F  0025               	movlb	5	; select bank5
 11932  0380  0AA4               	incf	_night_time_count^(0+640),f
 11933  0381  1903               	skipnz
 11934  0382  0AA5               	incf	(_night_time_count+1)^(0+640),f
 11935  0383  1903               	skipnz
 11936  0384  0AA6               	incf	(_night_time_count+2)^(0+640),f
 11937  0385  1903               	skipnz
 11938  0386  0AA7               	incf	(_night_time_count+3)^(0+640),f
 11939                           
 11940                           ;task.c: 260: day_time_count=0x00;
 11941  0387  01A0               	clrf	_day_time_count^(0+640)
 11942  0388  01A1               	clrf	(_day_time_count+1)^(0+640)
 11943  0389  01A2               	clrf	(_day_time_count+2)^(0+640)
 11944  038A  01A3               	clrf	(_day_time_count+3)^(0+640)
 11945                           
 11946                           ;task.c: 262: if(night_time_count>light_time_level)
 11947  038B  0827               	movf	(_night_time_count+3)^(0+640),w
 11948  038C  0023               	movlb	3	; select bank3
 11949  038D  0223               	subwf	(_light_time_level+3)^(0+384),w
 11950  038E  1D03               	skipz
 11951  038F  2BA0               	goto	u12355
 11952  0390  0025               	movlb	5	; select bank5
 11953  0391  0826               	movf	(_night_time_count+2)^(0+640),w
 11954  0392  0023               	movlb	3	; select bank3
 11955  0393  0222               	subwf	(_light_time_level+2)^(0+384),w
 11956  0394  1D03               	skipz
 11957  0395  2BA0               	goto	u12355
 11958  0396  0025               	movlb	5	; select bank5
 11959  0397  0825               	movf	(_night_time_count+1)^(0+640),w
 11960  0398  0023               	movlb	3	; select bank3
 11961  0399  0221               	subwf	(_light_time_level+1)^(0+384),w
 11962  039A  1D03               	skipz
 11963  039B  2BA0               	goto	u12355
 11964  039C  0025               	movlb	5	; select bank5
 11965  039D  0824               	movf	_night_time_count^(0+640),w
 11966  039E  0023               	movlb	3	; select bank3
 11967  039F  0220               	subwf	_light_time_level^(0+384),w
 11968  03A0                     u12355:	
 11969  03A0  1803               	skipnc
 11970  03A1  2BF0               	goto	l22860
 11971                           
 11972                           ;task.c: 263: {
 11973                           ;task.c: 264: night_time_count=0x00;
 11974  03A2  0025               	movlb	5	; select bank5
 11975                           
 11976                           ;task.c: 266: pv_voltage_status=0x02;
 11977  03A3  3187  2779  3182   	fcall	PL296	;call to abstracted procedure
 11978  03A6  2BF0               	goto	l22860
 11979  03A7                     l22848:	
 11980                           
 11981                           ;task.c: 271: else if((pv_voltage_value>light_off_pv_level))
 11982  03A7  0023               	movlb	3	; select bank3
 11983  03A8  0867               	movf	_light_off_pv_level^(0+384),w
 11984  03A9  0020               	movlb	0	; select bank0
 11985  03AA  00D1               	movwf	___ftge@ff1
 11986  03AB  0023               	movlb	3	; select bank3
 11987  03AC  0868               	movf	(_light_off_pv_level+1)^(0+384),w
 11988  03AD  0020               	movlb	0	; select bank0
 11989  03AE  00D2               	movwf	___ftge@ff1+1
 11990  03AF  0023               	movlb	3	; select bank3
 11991  03B0  0869               	movf	(_light_off_pv_level+2)^(0+384),w
 11992  03B1  0020               	movlb	0	; select bank0
 11993  03B2  00D3               	movwf	___ftge@ff1+2
 11994  03B3  3199  2136  3182   	fcall	PL102	;call to abstracted procedure
 11995  03B6  31B4  2461  3182   	fcall	___lwtoft
 11996  03B9  3198  2085  3182   	fcall	PL36	;call to abstracted procedure
 11997  03BC  31B4  2472  3182   	fcall	___ftge
 11998  03BF  1803               	btfsc	3,0
 11999  03C0  2BEC               	goto	l1678
 12000                           
 12001                           ;task.c: 272: {
 12002                           ;task.c: 273: day_time_count++;
 12003  03C1  0025               	movlb	5	; select bank5
 12004  03C2  0AA0               	incf	_day_time_count^(0+640),f
 12005  03C3  1903               	skipnz
 12006  03C4  0AA1               	incf	(_day_time_count+1)^(0+640),f
 12007  03C5  1903               	skipnz
 12008  03C6  0AA2               	incf	(_day_time_count+2)^(0+640),f
 12009  03C7  1903               	skipnz
 12010  03C8  0AA3               	incf	(_day_time_count+3)^(0+640),f
 12011                           
 12012                           ;task.c: 275: night_time_count=0x00;
 12013  03C9  01A4               	clrf	_night_time_count^(0+640)
 12014  03CA  01A5               	clrf	(_night_time_count+1)^(0+640)
 12015  03CB  01A6               	clrf	(_night_time_count+2)^(0+640)
 12016  03CC  01A7               	clrf	(_night_time_count+3)^(0+640)
 12017                           
 12018                           ;task.c: 277: if(day_time_count>light_time_level)
 12019  03CD  0823               	movf	(_day_time_count+3)^(0+640),w
 12020  03CE  0023               	movlb	3	; select bank3
 12021  03CF  0223               	subwf	(_light_time_level+3)^(0+384),w
 12022  03D0  1D03               	skipz
 12023  03D1  2BE2               	goto	u12375
 12024  03D2  0025               	movlb	5	; select bank5
 12025  03D3  0822               	movf	(_day_time_count+2)^(0+640),w
 12026  03D4  0023               	movlb	3	; select bank3
 12027  03D5  0222               	subwf	(_light_time_level+2)^(0+384),w
 12028  03D6  1D03               	skipz
 12029  03D7  2BE2               	goto	u12375
 12030  03D8  0025               	movlb	5	; select bank5
 12031  03D9  0821               	movf	(_day_time_count+1)^(0+640),w
 12032  03DA  0023               	movlb	3	; select bank3
 12033  03DB  0221               	subwf	(_light_time_level+1)^(0+384),w
 12034  03DC  1D03               	skipz
 12035  03DD  2BE2               	goto	u12375
 12036  03DE  0025               	movlb	5	; select bank5
 12037  03DF  0820               	movf	_day_time_count^(0+640),w
 12038  03E0  0023               	movlb	3	; select bank3
 12039  03E1  0220               	subwf	_light_time_level^(0+384),w
 12040  03E2                     u12375:	
 12041  03E2  1803               	skipnc
 12042  03E3  2BF0               	goto	l22860
 12043                           
 12044                           ;task.c: 278: {
 12045                           ;task.c: 279: day_time_count=0x00;
 12046  03E4  0025               	movlb	5	; select bank5
 12047  03E5  01A0               	clrf	_day_time_count^(0+640)
 12048  03E6  01A1               	clrf	(_day_time_count+1)^(0+640)
 12049  03E7  01A2               	clrf	(_day_time_count+2)^(0+640)
 12050  03E8  01A3               	clrf	(_day_time_count+3)^(0+640)
 12051                           
 12052                           ;task.c: 281: pv_voltage_status=0x00;
 12053  03E9  0022               	movlb	2	; select bank2
 12054  03EA  01CC               	clrf	_pv_voltage_status^(0+256)
 12055  03EB  2BF0               	goto	l22860
 12056  03EC                     l1678:	
 12057                           
 12058                           ;task.c: 285: else
 12059                           ;task.c: 286: {
 12060                           ;task.c: 287: day_time_count=0x00;
 12061  03EC  0025               	movlb	5	; select bank5
 12062                           
 12063                           ;task.c: 289: night_time_count=0x00;
 12064  03ED  31A9  21FA  3182   	fcall	PL66	;call to abstracted procedure
 12065  03F0                     l22860:	
 12066                           
 12067                           ;task.c: 290: }
 12068                           ;task.c: 291: }
 12069                           ;task.c: 293: if((pv_voltage_value>=light_off_pv_level)&&(pv_voltage_value<1000))
 12070  03F0  3199  2136  3182   	fcall	PL102	;call to abstracted procedure
 12071  03F3  31B4  2461  3182   	fcall	___lwtoft
 12072  03F6  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12073  03F9  0023               	movlb	3	; select bank3
 12074  03FA  0867               	movf	_light_off_pv_level^(0+384),w
 12075  03FB  0020               	movlb	0	; select bank0
 12076  03FC  00D4               	movwf	___ftge@ff2
 12077  03FD  0023               	movlb	3	; select bank3
 12078  03FE  0868               	movf	(_light_off_pv_level+1)^(0+384),w
 12079  03FF  0020               	movlb	0	; select bank0
 12080  0400  00D5               	movwf	___ftge@ff2+1
 12081  0401  0023               	movlb	3	; select bank3
 12082  0402  0869               	movf	(_light_off_pv_level+2)^(0+384),w
 12083  0403  0020               	movlb	0	; select bank0
 12084  0404  00D6               	movwf	___ftge@ff2+2
 12085  0405  31B4  2472  3182   	fcall	___ftge
 12086  0408  3003               	movlw	3
 12087  0409  1C03               	btfss	3,0
 12088  040A  2C59               	goto	L84
 12089  040B  0021               	movlb	1	; select bank1
 12090  040C  0234               	subwf	(_pv_voltage_value+1)^(0+128),w
 12091  040D  30E8               	movlw	232
 12092  040E  1903               	skipnz
 12093  040F  0233               	subwf	_pv_voltage_value^(0+128),w
 12094  0410  1803               	skipnc
 12095  0411  2C58               	goto	l22870
 12096                           
 12097                           ;task.c: 294: {
 12098                           ;task.c: 295: pv_time_count++;
 12099  0412  0025               	movlb	5	; select bank5
 12100  0413  0AA8               	incf	_pv_time_count^(0+640),f
 12101  0414  1903               	skipnz
 12102  0415  0AA9               	incf	(_pv_time_count+1)^(0+640),f
 12103  0416  1903               	skipnz
 12104  0417  0AAA               	incf	(_pv_time_count+2)^(0+640),f
 12105  0418  1903               	skipnz
 12106  0419  0AAB               	incf	(_pv_time_count+3)^(0+640),f
 12107                           
 12108                           ;task.c: 297: if(pv_time_count>(light_time_level/5))
 12109  041A  3005               	movlw	5
 12110  041B  0020               	movlb	0	; select bank0
 12111  041C  00A3               	movwf	___lldiv@divisor
 12112  041D  01A4               	clrf	___lldiv@divisor+1
 12113  041E  01A5               	clrf	___lldiv@divisor+2
 12114  041F  01A6               	clrf	___lldiv@divisor+3
 12115  0420  0023               	movlb	3	; select bank3
 12116  0421  0823               	movf	(_light_time_level+3)^(0+384),w
 12117  0422  0020               	movlb	0	; select bank0
 12118  0423  00AA               	movwf	___lldiv@dividend+3
 12119  0424  0023               	movlb	3	; select bank3
 12120  0425  0822               	movf	(_light_time_level+2)^(0+384),w
 12121  0426  0020               	movlb	0	; select bank0
 12122  0427  00A9               	movwf	___lldiv@dividend+2
 12123  0428  0023               	movlb	3	; select bank3
 12124  0429  0821               	movf	(_light_time_level+1)^(0+384),w
 12125  042A  0020               	movlb	0	; select bank0
 12126  042B  00A8               	movwf	___lldiv@dividend+1
 12127  042C  0023               	movlb	3	; select bank3
 12128  042D  0820               	movf	_light_time_level^(0+384),w
 12129  042E  0020               	movlb	0	; select bank0
 12130  042F  00A7               	movwf	___lldiv@dividend
 12131  0430  3187  27C1  3182   	fcall	___lldiv
 12132  0433  0025               	movlb	5	; select bank5
 12133  0434  082B               	movf	(_pv_time_count+3)^(0+640),w
 12134  0435  0020               	movlb	0	; select bank0
 12135  0436  0226               	subwf	?___lldiv+3,w
 12136  0437  1D03               	skipz
 12137  0438  2C49               	goto	u12405
 12138  0439  0025               	movlb	5	; select bank5
 12139  043A  082A               	movf	(_pv_time_count+2)^(0+640),w
 12140  043B  0020               	movlb	0	; select bank0
 12141  043C  0225               	subwf	?___lldiv+2,w
 12142  043D  1D03               	skipz
 12143  043E  2C49               	goto	u12405
 12144  043F  0025               	movlb	5	; select bank5
 12145  0440  0829               	movf	(_pv_time_count+1)^(0+640),w
 12146  0441  0020               	movlb	0	; select bank0
 12147  0442  0224               	subwf	?___lldiv+1,w
 12148  0443  1D03               	skipz
 12149  0444  2C49               	goto	u12405
 12150  0445  0025               	movlb	5	; select bank5
 12151  0446  0828               	movf	_pv_time_count^(0+640),w
 12152  0447  0020               	movlb	0	; select bank0
 12153  0448  0223               	subwf	?___lldiv,w
 12154  0449                     u12405:	
 12155  0449  1803               	skipnc
 12156  044A  2C69               	goto	l22876
 12157                           
 12158                           ;task.c: 298: {
 12159                           ;task.c: 299: pv_time_count=0x00;
 12160  044B  0025               	movlb	5	; select bank5
 12161                           
 12162                           ;task.c: 301: pv_voltage_status=0x01;
 12163  044C  3187  278D  3182   	fcall	PL318	;call to abstracted procedure
 12164  044F  0ACC               	incf	_pv_voltage_status^(0+256),f
 12165                           
 12166                           ;task.c: 303: day_time_count=0x00;
 12167  0450  0025               	movlb	5	; select bank5
 12168                           
 12169                           ;task.c: 305: night_time_count=0x00;
 12170  0451  31A9  21FA  3182   	fcall	PL66	;call to abstracted procedure
 12171                           
 12172                           ;task.c: 307: pv_index=0x01;
 12173  0454  0022               	movlb	2	; select bank2
 12174  0455  01CB               	clrf	_pv_index^(0+256)
 12175  0456  0ACB               	incf	_pv_index^(0+256),f
 12176  0457  2C69               	goto	l22876
 12177  0458                     l22870:	
 12178                           
 12179                           ;task.c: 312: else if(pv_voltage_value>=1000)
 12180  0458  3003               	movlw	3
 12181  0459                     L84:	
 12182  0459  0021               	movlb	1	; select bank1
 12183  045A  0234               	subwf	(_pv_voltage_value+1)^(0+128),w
 12184  045B  30E8               	movlw	232
 12185  045C  1903               	skipnz
 12186  045D  0233               	subwf	_pv_voltage_value^(0+128),w
 12187  045E  1C03               	skipc
 12188  045F  2C65               	goto	l1684
 12189                           
 12190                           ;task.c: 313: {
 12191                           ;task.c: 314: pv_time_count=0x00;
 12192  0460  0025               	movlb	5	; select bank5
 12193                           
 12194                           ;task.c: 316: pv_voltage_status=0x00;
 12195  0461  3187  278D  3182   	fcall	PL318	;call to abstracted procedure
 12196                           
 12197                           ;task.c: 317: }
 12198  0464  2C69               	goto	l22876
 12199  0465                     l1684:	
 12200                           
 12201                           ;task.c: 318: else
 12202                           ;task.c: 319: {
 12203                           ;task.c: 320: pv_time_count=0x00;
 12204  0465  0025               	movlb	5	; select bank5
 12205  0466  31AA  2215  3182   	fcall	PL368	;call to abstracted procedure
 12206  0469                     l22876:	
 12207                           
 12208                           ;task.c: 322: }
 12209                           ;task.c: 324: if(pv_index==0x01)
 12210  0469  0022               	movlb	2	; select bank2
 12211  046A  0B4B               	decfsz	_pv_index^(0+256),w
 12212  046B  2CA8               	goto	l22890
 12213                           
 12214                           ;task.c: 325: {
 12215                           ;task.c: 326: if(pv_voltage_value<=light_on_pv_level)
 12216  046C  0023               	movlb	3	; select bank3
 12217  046D  3199  2146  3182   	fcall	PL110	;call to abstracted procedure
 12218  0470  3199  2136  3182   	fcall	PL102	;call to abstracted procedure
 12219  0473  31B4  2461  3182   	fcall	___lwtoft
 12220  0476  3198  2085  3182   	fcall	PL36	;call to abstracted procedure
 12221  0479  31B4  2472  3182   	fcall	___ftge
 12222  047C  1C03               	btfss	3,0
 12223  047D  2CA3               	goto	l1687
 12224                           
 12225                           ;task.c: 327: {
 12226                           ;task.c: 328: night_time_count++;
 12227  047E  0025               	movlb	5	; select bank5
 12228  047F  0AA4               	incf	_night_time_count^(0+640),f
 12229  0480  1903               	skipnz
 12230  0481  0AA5               	incf	(_night_time_count+1)^(0+640),f
 12231  0482  1903               	skipnz
 12232  0483  0AA6               	incf	(_night_time_count+2)^(0+640),f
 12233  0484  1903               	skipnz
 12234  0485  0AA7               	incf	(_night_time_count+3)^(0+640),f
 12235                           
 12236                           ;task.c: 330: if(night_time_count>light_time_level)
 12237  0486  0827               	movf	(_night_time_count+3)^(0+640),w
 12238  0487  0023               	movlb	3	; select bank3
 12239  0488  0223               	subwf	(_light_time_level+3)^(0+384),w
 12240  0489  1D03               	skipz
 12241  048A  2C9B               	goto	u12445
 12242  048B  0025               	movlb	5	; select bank5
 12243  048C  0826               	movf	(_night_time_count+2)^(0+640),w
 12244  048D  0023               	movlb	3	; select bank3
 12245  048E  0222               	subwf	(_light_time_level+2)^(0+384),w
 12246  048F  1D03               	skipz
 12247  0490  2C9B               	goto	u12445
 12248  0491  0025               	movlb	5	; select bank5
 12249  0492  0825               	movf	(_night_time_count+1)^(0+640),w
 12250  0493  0023               	movlb	3	; select bank3
 12251  0494  0221               	subwf	(_light_time_level+1)^(0+384),w
 12252  0495  1D03               	skipz
 12253  0496  2C9B               	goto	u12445
 12254  0497  0025               	movlb	5	; select bank5
 12255  0498  0824               	movf	_night_time_count^(0+640),w
 12256  0499  0023               	movlb	3	; select bank3
 12257  049A  0220               	subwf	_light_time_level^(0+384),w
 12258  049B                     u12445:	
 12259  049B  1803               	skipnc
 12260  049C  2CA8               	goto	l22890
 12261                           
 12262                           ;task.c: 331: {
 12263                           ;task.c: 332: night_time_count=0x00;
 12264  049D  0025               	movlb	5	; select bank5
 12265                           
 12266                           ;task.c: 334: pv_voltage_status=0x02;
 12267  049E  3187  2779  3182   	fcall	PL296	;call to abstracted procedure
 12268                           
 12269                           ;task.c: 336: pv_index=0x00;
 12270  04A1  01CB               	clrf	_pv_index^(0+256)
 12271  04A2  2CA8               	goto	l22890
 12272  04A3                     l1687:	
 12273                           
 12274                           ;task.c: 340: else
 12275                           ;task.c: 341: {
 12276                           ;task.c: 342: night_time_count=0x00;
 12277  04A3  0025               	movlb	5	; select bank5
 12278  04A4  01A4               	clrf	_night_time_count^(0+640)
 12279  04A5  01A5               	clrf	(_night_time_count+1)^(0+640)
 12280  04A6  01A6               	clrf	(_night_time_count+2)^(0+640)
 12281  04A7  01A7               	clrf	(_night_time_count+3)^(0+640)
 12282  04A8                     l22890:	
 12283                           
 12284                           ;task.c: 343: }
 12285                           ;task.c: 345: }
 12286                           ;task.c: 349: handle_an2_process_flag=0x00;
 12287  04A8  0022               	movlb	2	; select bank2
 12288  04A9  01AE               	clrf	_handle_an2_process_flag^(0+256)
 12289  04AA                     l22892:	
 12290                           
 12291                           ;task.c: 351: }
 12292                           ;task.c: 354: if(handle_an9_process_flag==0x01)
 12293  04AA  0B32               	decfsz	_handle_an9_process_flag^(0+256),w
 12294  04AB  2CE5               	goto	l22912
 12295                           
 12296                           ;task.c: 355: {
 12297                           ;task.c: 356: charge_current_value=0x00;
 12298  04AC  0021               	movlb	1	; select bank1
 12299  04AD  01A9               	clrf	_charge_current_value^(0+128)
 12300  04AE  01AA               	clrf	(_charge_current_value+1)^(0+128)
 12301                           
 12302                           ;task.c: 358: if(system_status == 0x01)
 12303  04AF  0B40               	decfsz	_system_status^(0+128),w
 12304  04B0  2CE3               	goto	l22910
 12305                           
 12306                           ;task.c: 359: {
 12307                           ;task.c: 360: charge_current_value=start_ad_convert(0b01001);
 12308  04B1  3009               	movlw	9
 12309  04B2  31B0  2038  3182   	fcall	_start_ad_convert
 12310  04B5  0831               	movf	?_start_ad_convert+1,w
 12311  04B6  0021               	movlb	1	; select bank1
 12312  04B7  00AA               	movwf	(_charge_current_value+1)^(0+128)
 12313  04B8  0020               	movlb	0	; select bank0
 12314  04B9  0830               	movf	?_start_ad_convert,w
 12315  04BA  0021               	movlb	1	; select bank1
 12316  04BB  00A9               	movwf	_charge_current_value^(0+128)
 12317                           
 12318                           ;task.c: 363: if((charge_current_value>=charge_i_limit)&&(charge_index>=0x03))
 12319  04BC  082A               	movf	(_charge_current_value+1)^(0+128),w
 12320  04BD  3197  27D7  3182   	fcall	PL266	;call to abstracted procedure
 12321  04C0  31B4  2461  3182   	fcall	___lwtoft
 12322  04C3  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12323  04C6  3186  26DF  3182   	fcall	PL204	;call to abstracted procedure
 12324  04C9  31B4  2472  3182   	fcall	___ftge
 12325  04CC  1C03               	btfss	3,0
 12326  04CD  2CE3               	goto	l22910
 12327  04CE  3003               	movlw	3
 12328  04CF  0021               	movlb	1	; select bank1
 12329  04D0  0235               	subwf	_charge_index^(0+128),w
 12330  04D1  1C03               	skipc
 12331  04D2  2CE3               	goto	l22910
 12332                           
 12333                           ;task.c: 364: {
 12334                           ;task.c: 366: if(buck_pwm_value>50)
 12335  04D3  3000               	movlw	0
 12336  04D4  0228               	subwf	(_buck_pwm_value+1)^(0+128),w
 12337  04D5  3033               	movlw	51
 12338  04D6  1903               	skipnz
 12339  04D7  0227               	subwf	_buck_pwm_value^(0+128),w
 12340  04D8  1C03               	skipc
 12341  04D9  2CDD               	goto	l22908
 12342                           
 12343                           ;task.c: 367: {
 12344                           ;task.c: 368: buck_pwm_value = buck_pwm_value - 1;
 12345  04DA  30FF               	movlw	255
 12346  04DB  07A7               	addwf	_buck_pwm_value^(0+128),f
 12347  04DC  3DA8               	addwfc	(_buck_pwm_value+1)^(0+128),f
 12348  04DD                     l22908:	
 12349                           
 12350                           ;task.c: 369: }
 12351                           ;task.c: 370: Set_Buck_Pwm_Duty(buck_pwm_value);
 12352  04DD  31B4  24D8  3182   	fcall	PL172	;call to abstracted procedure
 12353  04E0  319E  265A  3182   	fcall	_Set_Buck_Pwm_Duty
 12354  04E3                     l22910:	
 12355                           
 12356                           ;task.c: 372: }
 12357                           ;task.c: 374: }
 12358                           ;task.c: 376: handle_an9_process_flag=0x00;
 12359  04E3  0022               	movlb	2	; select bank2
 12360  04E4  01B2               	clrf	_handle_an9_process_flag^(0+256)
 12361  04E5                     l22912:	
 12362                           
 12363                           ;task.c: 378: }
 12364                           ;task.c: 383: if(handle_an3_process_flag==0x01)
 12365  04E5  31A0  0B2F         	decfsz	_handle_an3_process_flag^(0+256),w
 12366  04E7  2879               	goto	l22990
 12367                           
 12368                           ;task.c: 384: {
 12369                           ;task.c: 386: battery_voltage_value=start_ad_convert(0b00011);
 12370  04E8  3003               	movlw	3
 12371  04E9  31B0  2038  3182   	fcall	_start_ad_convert
 12372  04EC  0831               	movf	?_start_ad_convert+1,w
 12373  04ED  00E9               	movwf	_battery_voltage_value+1
 12374  04EE  0830               	movf	?_start_ad_convert,w
 12375  04EF  00E8               	movwf	_battery_voltage_value
 12376                           
 12377                           ;task.c: 389: b_v=(float)(((float)battery_voltage_value)/10)*31.04;
 12378  04F0  3052               	movlw	82
 12379  04F1  00B3               	movwf	___ftmul@f1
 12380  04F2  30F8               	movlw	248
 12381  04F3  00B4               	movwf	___ftmul@f1+1
 12382  04F4  3041               	movlw	65
 12383  04F5  00B5               	movwf	___ftmul@f1+2
 12384  04F6  3020               	movlw	32
 12385  04F7  01C2               	clrf	___ftdiv@f2
 12386  04F8  00C3               	movwf	___ftdiv@f2+1
 12387  04F9  3041               	movlw	65
 12388  04FA  00C4               	movwf	___ftdiv@f2+2
 12389  04FB  0869               	movf	_battery_voltage_value+1,w
 12390  04FC  00B1               	movwf	___lwtoft@c+1
 12391  04FD  0868               	movf	_battery_voltage_value,w
 12392  04FE  00B0               	movwf	___lwtoft@c
 12393  04FF  31B4  2461  3182   	fcall	___lwtoft
 12394  0502  3197  2725  3182   	fcall	PL120	;call to abstracted procedure
 12395  0505  319D  258F  3182   	fcall	___ftdiv
 12396  0508  3197  2707  3182   	fcall	PL48	;call to abstracted procedure
 12397  050B  318A  22AA  3182   	fcall	___ftmul
 12398  050E  0833               	movf	?___ftmul,w
 12399  050F  0022               	movlb	2	; select bank2
 12400  0510  00A0               	movwf	_b_v^(0+256)
 12401  0511  0020               	movlb	0	; select bank0
 12402  0512  0834               	movf	?___ftmul+1,w
 12403  0513  0022               	movlb	2	; select bank2
 12404  0514  00A1               	movwf	(_b_v+1)^(0+256)
 12405  0515  0020               	movlb	0	; select bank0
 12406  0516  0835               	movf	?___ftmul+2,w
 12407  0517  0022               	movlb	2	; select bank2
 12408  0518  00A2               	movwf	(_b_v+2)^(0+256)
 12409                           
 12410                           ;task.c: 393: if((battery_voltage_value<(dianchi_guoya_baohu+volt_id*5))&&(charge_index=
      +                          =0x00))
 12411  0519  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12412  051C  31B4  2461  3182   	fcall	___lwtoft
 12413  051F  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12414  0522  3187  2768  3182   	fcall	PL286	;call to abstracted procedure
 12415  0525  3188  207A  3182   	fcall	___wmul
 12416  0528  3187  27BC  3182   	fcall	PL378	;call to abstracted procedure
 12417  052B  318F  2749  3182   	fcall	___awtoft
 12418  052E  3199  216A  3182   	fcall	PL132	;call to abstracted procedure
 12419  0531  318B  230F  3182   	fcall	___ftadd
 12420  0534  3187  2786  3182   	fcall	PL308	;call to abstracted procedure
 12421  0537  31B4  2472  3182   	fcall	___ftge
 12422  053A  1803               	btfsc	3,0
 12423  053B  2D4E               	goto	l22932
 12424  053C  0021               	movlb	1	; select bank1
 12425  053D  08B5               	movf	_charge_index^(0+128),f
 12426  053E  1D03               	skipz
 12427  053F  2D4E               	goto	l22932
 12428                           
 12429                           ;task.c: 394: {
 12430                           ;task.c: 395: bt_time_count++;
 12431  0540  0023               	movlb	3	; select bank3
 12432  0541  3064               	movlw	100
 12433  0542  0AB7               	incf	_bt_time_count^(0+384),f
 12434                           
 12435                           ;task.c: 397: if(bt_time_count>=100)
 12436  0543  0237               	subwf	_bt_time_count^(0+384),w
 12437  0544  1C03               	skipc
 12438  0545  2D7A               	goto	l22938
 12439                           
 12440                           ;task.c: 401: bt_led_status=0x01;
 12441  0546  01B7               	clrf	_bt_time_count^(0+384)
 12442                           
 12443                           ;task.c: 403: charge_index=0x01;
 12444  0547  0021               	movlb	1	; select bank1
 12445  0548  01B5               	clrf	_charge_index^(0+128)
 12446  0549  0AB5               	incf	_charge_index^(0+128),f
 12447                           
 12448                           ;task.c: 405: battery_voltage_status=0x01;
 12449  054A  0022               	movlb	2	; select bank2
 12450  054B  01AA               	clrf	_battery_voltage_status^(0+256)
 12451  054C  0AAA               	incf	_battery_voltage_status^(0+256),f
 12452  054D  2D7A               	goto	l22938
 12453  054E                     l22932:	
 12454                           
 12455                           ;task.c: 409: else if((battery_voltage_value>=(dianchi_guoya_baohu+volt_id*5))&&(charge_
      +                          index<=0x01))
 12456  054E  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12457  0551  31B4  2461  3182   	fcall	___lwtoft
 12458  0554  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12459  0557  3187  2768  3182   	fcall	PL286	;call to abstracted procedure
 12460  055A  3188  207A  3182   	fcall	___wmul
 12461  055D  3187  27BC  3182   	fcall	PL378	;call to abstracted procedure
 12462  0560  318F  2749  3182   	fcall	___awtoft
 12463  0563  3199  216A  3182   	fcall	PL132	;call to abstracted procedure
 12464  0566  318B  230F  3182   	fcall	___ftadd
 12465  0569  3187  2786  3182   	fcall	PL308	;call to abstracted procedure
 12466  056C  31B4  2472  3182   	fcall	___ftge
 12467  056F  1C03               	btfss	3,0
 12468  0570  2D7A               	goto	l22938
 12469                           
 12470                           ;task.c: 410: {
 12471                           ;task.c: 411: bt_led_status=0x00;
 12472  0571  3002               	movlw	2
 12473  0572  0021               	movlb	1	; select bank1
 12474  0573  0235               	subwf	_charge_index^(0+128),w
 12475  0574  1803               	skipnc
 12476  0575  2D7A               	goto	l22938
 12477                           
 12478                           ;task.c: 413: bt_time_count=0x00;
 12479  0576  0023               	movlb	3	; select bank3
 12480  0577  01B7               	clrf	_bt_time_count^(0+384)
 12481                           
 12482                           ;task.c: 415: battery_voltage_status=0x00;
 12483  0578  0022               	movlb	2	; select bank2
 12484  0579  01AA               	clrf	_battery_voltage_status^(0+256)
 12485  057A                     l22938:	
 12486                           
 12487                           ;task.c: 416: }
 12488                           ;task.c: 419: if( (battery_voltage_value<dianchi_guoya_huifu) && (charge_index==0x02) )
 12489  057A  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12490  057D  31B4  2461  3182   	fcall	___lwtoft
 12491  0580  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12492  0583  31B4  24AB  3182   	fcall	PL106	;call to abstracted procedure
 12493  0586  31B4  2472  3182   	fcall	___ftge
 12494  0589  1803               	btfsc	3,0
 12495  058A  2D97               	goto	l22946
 12496  058B  0021               	movlb	1	; select bank1
 12497  058C  0835               	movf	_charge_index^(0+128),w
 12498  058D  3A02               	xorlw	2
 12499  058E  1D03               	skipz
 12500  058F  2D97               	goto	l22946
 12501                           
 12502                           ;task.c: 425: charge_led_status=0x01;
 12503  0590  3003               	movlw	3
 12504  0591  00B5               	movwf	_charge_index^(0+128)
 12505                           
 12506                           ;task.c: 427: Enable_Buck_Pwm();
 12507  0592  3188  2040  3182   	fcall	_Enable_Buck_Pwm
 12508  0595                     L113:	
 12509                           
 12510                           ;task.c: 429: }
 12511  0595  31A0  2877         	goto	l22988
 12512  0597                     l22946:	
 12513                           
 12514                           ;task.c: 430: else if( (battery_voltage_value>=dianchi_guoya_huifu) && (charge_index==0x
      +                          02) )
 12515  0597  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12516  059A  31B4  2461  3182   	fcall	___lwtoft
 12517  059D  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12518  05A0  31B4  24AB  3182   	fcall	PL106	;call to abstracted procedure
 12519  05A3  31B4  2472  3182   	fcall	___ftge
 12520  05A6  1C03               	btfss	3,0
 12521  05A7  2DBA               	goto	l22952
 12522  05A8  0021               	movlb	1	; select bank1
 12523  05A9  0835               	movf	_charge_index^(0+128),w
 12524  05AA  3A02               	xorlw	2
 12525  05AB  1D03               	skipz
 12526  05AC  2DBA               	goto	l22952
 12527                           
 12528                           ;task.c: 434: charge_led_status=0x00;
 12529  05AD  0022               	movlb	2	; select bank2
 12530  05AE  0820               	movf	_b_v^(0+256),w
 12531  05AF  0023               	movlb	3	; select bank3
 12532  05B0  00AA               	movwf	_bt_00_lv^(0+384)
 12533  05B1  0022               	movlb	2	; select bank2
 12534  05B2  0821               	movf	(_b_v+1)^(0+256),w
 12535  05B3  0023               	movlb	3	; select bank3
 12536  05B4  00AB               	movwf	(_bt_00_lv+1)^(0+384)
 12537  05B5  0022               	movlb	2	; select bank2
 12538  05B6  0822               	movf	(_b_v+2)^(0+256),w
 12539  05B7  0023               	movlb	3	; select bank3
 12540  05B8  00AC               	movwf	(_bt_00_lv+2)^(0+384)
 12541                           
 12542                           ;task.c: 436: }
 12543  05B9  2D95               	goto	L113
 12544  05BA                     l22952:	
 12545                           
 12546                           ;task.c: 437: else if( (battery_voltage_value<dianchi_guoya_baohu) && (charge_index>=0x0
      +                          3) )
 12547  05BA  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12548  05BD  31B4  2461  3182   	fcall	___lwtoft
 12549  05C0  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12550  05C3  31B4  249E  3182   	fcall	PL68	;call to abstracted procedure
 12551  05C6  31B4  2472  3182   	fcall	___ftge
 12552  05C9  1803               	btfsc	3,0
 12553  05CA  2E03               	goto	l22972
 12554  05CB  3003               	movlw	3
 12555  05CC  0021               	movlb	1	; select bank1
 12556  05CD  0235               	subwf	_charge_index^(0+128),w
 12557  05CE  1C03               	skipc
 12558  05CF  2E03               	goto	l22972
 12559                           
 12560                           ;task.c: 438: {
 12561                           ;task.c: 440: if((charge_current_value<charge_i_limit)&&(charge_index>=0x03))
 12562  05D0  082A               	movf	(_charge_current_value+1)^(0+128),w
 12563  05D1  3197  27D7  3182   	fcall	PL266	;call to abstracted procedure
 12564  05D4  31B4  2461  3182   	fcall	___lwtoft
 12565  05D7  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12566  05DA  3186  26DF  3182   	fcall	PL204	;call to abstracted procedure
 12567  05DD  31B4  2472  3182   	fcall	___ftge
 12568  05E0  1803               	btfsc	3,0
 12569  05E1  2DFF               	goto	l22970
 12570  05E2  3003               	movlw	3
 12571  05E3  0021               	movlb	1	; select bank1
 12572  05E4  0235               	subwf	_charge_index^(0+128),w
 12573  05E5  1C03               	skipc
 12574  05E6  2DFF               	goto	l22970
 12575                           
 12576                           ;task.c: 441: {
 12577                           ;task.c: 442: mppt_time_count++;
 12578  05E7  0025               	movlb	5	; select bank5
 12579  05E8  0AC3               	incf	_mppt_time_count^(0+640),f
 12580  05E9  1903               	skipnz
 12581  05EA  0AC4               	incf	(_mppt_time_count+1)^(0+640),f
 12582                           
 12583                           ;task.c: 444: if(mppt_time_count>5)
 12584  05EB  3000               	movlw	0
 12585  05EC  0244               	subwf	(_mppt_time_count+1)^(0+640),w
 12586  05ED  3006               	movlw	6
 12587  05EE  1903               	skipnz
 12588  05EF  0243               	subwf	_mppt_time_count^(0+640),w
 12589  05F0  1C03               	skipc
 12590  05F1  2DFF               	goto	l22970
 12591                           
 12592                           ;task.c: 445: {
 12593                           ;task.c: 446: mppt_time_count=0x00;
 12594  05F2  01C3               	clrf	_mppt_time_count^(0+640)
 12595  05F3  01C4               	clrf	(_mppt_time_count+1)^(0+640)
 12596                           
 12597                           ;task.c: 448: Mppt_Charge();
 12598  05F4  31B3  230C  3182   	fcall	_Mppt_Charge
 12599                           
 12600                           ;task.c: 450: I_prev=charge_current_value;
 12601  05F7  0021               	movlb	1	; select bank1
 12602  05F8  082A               	movf	(_charge_current_value+1)^(0+128),w
 12603  05F9  0023               	movlb	3	; select bank3
 12604  05FA  00AE               	movwf	(_I_prev+1)^(0+384)
 12605  05FB  0021               	movlb	1	; select bank1
 12606  05FC  0829               	movf	_charge_current_value^(0+128),w
 12607  05FD  0023               	movlb	3	; select bank3
 12608  05FE  00AD               	movwf	_I_prev^(0+384)
 12609  05FF                     l22970:	
 12610                           
 12611                           ;task.c: 451: }
 12612                           ;task.c: 453: }
 12613                           ;task.c: 455: involid_time_count=0x00;
 12614  05FF  0025               	movlb	5	; select bank5
 12615  0600  01BD               	clrf	_involid_time_count^(0+640)
 12616  0601  01BE               	clrf	(_involid_time_count+1)^(0+640)
 12617                           
 12618                           ;task.c: 457: }
 12619  0602  2D95               	goto	L113
 12620  0603                     l22972:	
 12621                           
 12622                           ;task.c: 458: else if( (battery_voltage_value>=dianchi_guoya_baohu) && (charge_index>=0x
      +                          03) )
 12623  0603  3199  2130  3182   	fcall	PL94	;call to abstracted procedure
 12624  0606  31B4  2461  3182   	fcall	___lwtoft
 12625  0609  3198  207E  3182   	fcall	PL34	;call to abstracted procedure
 12626  060C  31B4  249E  3182   	fcall	PL68	;call to abstracted procedure
 12627  060F  31B4  2472  3182   	fcall	___ftge
 12628  0612  1C03               	btfss	3,0
 12629  0613  2D95               	goto	L113
 12630  0614  3003               	movlw	3
 12631  0615  0021               	movlb	1	; select bank1
 12632  0616  0235               	subwf	_charge_index^(0+128),w
 12633  0617  1C03               	skipc
 12634  0618  2D95               	goto	L113
 12635                           
 12636                           ;task.c: 459: {
 12637                           ;task.c: 461: involid_time_count++;
 12638  0619  0025               	movlb	5	; select bank5
 12639  061A  0ABD               	incf	_involid_time_count^(0+640),f
 12640  061B  1903               	skipnz
 12641  061C  0ABE               	incf	(_involid_time_count+1)^(0+640),f
 12642                           
 12643                           ;task.c: 463: if(involid_time_count>200)
 12644  061D  3000               	movlw	0
 12645  061E  023E               	subwf	(_involid_time_count+1)^(0+640),w
 12646  061F  30C9               	movlw	201
 12647  0620  1903               	skipnz
 12648  0621  023D               	subwf	_involid_time_count^(0+640),w
 12649  0622  1C03               	skipc
 12650  0623  2D95               	goto	L113
 12651  0624  3003               	movlw	3
 12652                           
 12653                           ;task.c: 464: {
 12654                           ;task.c: 465: involid_time_count=0x00;
 12655  0625  01BD               	clrf	_involid_time_count^(0+640)
 12656  0626  01BE               	clrf	(_involid_time_count+1)^(0+640)
 12657                           
 12658                           ;task.c: 467: if(charge_index>=0x03)
 12659  0627  0021               	movlb	1	; select bank1
 12660  0628  0235               	subwf	_charge_index^(0+128),w
 12661  0629  1C03               	skipc
 12662  062A  2D95               	goto	L113
 12663                           
 12664                           ;task.c: 468: {
 12665                           ;task.c: 469: charge_index=0x05;
 12666  062B  3005               	movlw	5
 12667  062C  00B5               	movwf	_charge_index^(0+128)
 12668                           
 12669                           ;task.c: 471: Disable_Buck_Pwm();
 12670  062D  319E  2655  3182   	fcall	_Disable_Buck_Pwm
 12671                           
 12672                           ;task.c: 475: charge_led_status=0x00;
 12673  0630  0020               	movlb	0	; select bank0
 12674  0631  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 12675  0632  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 12676  0633  319E  265A  3182   	fcall	_Set_Buck_Pwm_Duty
 12677  0636                     l1710:	
 12678                           ;task.c: 477: while(1);
 12679                           
 12680  0636  2E36               	goto	l1710
 12681                           
 12682                           	psect	text12
 12683  3038                     __ptext12:	
 12684 ;; *************** function _start_ad_convert *****************
 12685 ;; Defined at:
 12686 ;;		line 1450 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;  ch              1    wreg     unsigned char 
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;  ch              1    0[BANK1 ] unsigned char 
 12691 ;;  temp            2    5[BANK1 ] unsigned int 
 12692 ;;  ad_l            2    3[BANK1 ] unsigned int 
 12693 ;;  ad_h            2    1[BANK1 ] unsigned int 
 12694 ;;  i               1    9[BANK1 ] unsigned char 
 12695 ;;  j               1    8[BANK1 ] unsigned char 
 12696 ;;  ad_ch           1    7[BANK1 ] unsigned char 
 12697 ;;  k               1    0        unsigned char 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  2   16[BANK0 ] unsigned int 
 12700 ;; Registers used:
 12701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12702 ;; Tracked objects:
 12703 ;;		On entry : 1C/1
 12704 ;;		On exit  : 1F/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12708 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12709 ;;      Temps:          0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12710 ;;      Totals:         0      52      10       0       0       0       0       0       0       0       0       0       
      +0       0
 12711 ;;Total ram usage:       62 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:    3
 12714 ;; This function calls:
 12715 ;;		___lwdiv
 12716 ;; This function is called by:
 12717 ;;		_auto_system
 12718 ;;		_handle_ad_loop
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           
 12723                           ;psect for function _start_ad_convert
 12724  3038                     _start_ad_convert:	
 12725                           
 12726                           ;incstack = 0
 12727                           ; Regs used in _start_ad_convert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12728                           ;start_ad_convert@ch stored from wreg
 12729  3038  0021               	movlb	1	; select bank1
 12730  3039  00DD               	movwf	start_ad_convert@ch^(0+128)
 12731                           
 12732                           ;task.c: 1464: ad_ch=ch;
 12733  303A  00E4               	movwf	start_ad_convert@ad_ch^(0+128)
 12734                           
 12735                           ;task.c: 1466: ADCON0bits.CHS =ch;
 12736  303B  085D               	movf	start_ad_convert@ch^(0+128),w
 12737  303C  0020               	movlb	0	; select bank0
 12738  303D  00B2               	movwf	??_start_ad_convert
 12739  303E  0DB2               	rlf	??_start_ad_convert,f
 12740  303F  0DB2               	rlf	??_start_ad_convert,f
 12741  3040  0021               	movlb	1	; select bank1
 12742  3041  081D               	movf	29,w	;volatile
 12743  3042  0020               	movlb	0	; select bank0
 12744  3043  0632               	xorwf	??_start_ad_convert,w
 12745  3044  3983               	andlw	-125
 12746  3045  0632               	xorwf	??_start_ad_convert,w
 12747  3046  0021               	movlb	1	; select bank1
 12748  3047  009D               	movwf	29	;volatile
 12749                           
 12750                           ;task.c: 1468: ADCON0bits.ADON =1;
 12751  3048  141D               	bsf	29,0	;volatile
 12752                           
 12753                           ;task.c: 1470: if((ad_ch==0b00000)||(ad_ch==0b01000)||(ad_ch==0b01001))
 12754  3049  0864               	movf	start_ad_convert@ad_ch^(0+128),w
 12755  304A  1903               	btfsc	3,2
 12756  304B  2854               	goto	l21812
 12757  304C  0864               	movf	start_ad_convert@ad_ch^(0+128),w
 12758  304D  3A08               	xorlw	8
 12759  304E  1903               	skipnz
 12760  304F  2854               	goto	l21812
 12761  3050  0864               	movf	start_ad_convert@ad_ch^(0+128),w
 12762  3051  3A09               	xorlw	9
 12763  3052  1D03               	skipz
 12764  3053  2971               	goto	l21860
 12765  3054                     l21812:	
 12766                           
 12767                           ;task.c: 1471: {
 12768                           ;task.c: 1472: for(i=0;i<51;i++)
 12769  3054  01E6               	clrf	start_ad_convert@i^(0+128)
 12770  3055                     l21818:	
 12771                           
 12772                           ;task.c: 1473: {
 12773                           ;task.c: 1474: _delay((unsigned long)((5)*(32000000/4000000.0)));
 12774  3055  300D               	movlw	13
 12775  3056  0020               	movlb	0	; select bank0
 12776  3057  00B2               	movwf	??_start_ad_convert
 12777  3058                     u16447:	
 12778  3058  0BB2               	decfsz	??_start_ad_convert,f
 12779  3059  2858               	goto	u16447
 12780                           
 12781                           ;task.c: 1476: ADCON0bits.GO=1;
 12782  305A  0021               	movlb	1	; select bank1
 12783  305B  149D               	bsf	29,1	;volatile
 12784  305C                     l1967:	
 12785                           ;task.c: 1478: while(ADCON0bits.nDONE);
 12786                           
 12787  305C  189D               	btfsc	29,1	;volatile
 12788  305D  285C               	goto	l1967
 12789                           
 12790                           ;task.c: 1480: ad_h=0b00000011&ADRESH;
 12791  305E  081C               	movf	28,w	;volatile
 12792                           
 12793                           ;task.c: 1482: ad_l=ADRESL;
 12794                           
 12795                           ;task.c: 1484: adc_buffer[i]=(ad_h<<8)|ad_l;
 12796  305F  225E  31B0         	fcall	PL50	;call to abstracted procedure
 12797  3061  3033               	movlw	51
 12798  3062  0AE6               	incf	start_ad_convert@i^(0+128),f
 12799  3063  0266               	subwf	start_ad_convert@i^(0+128),w
 12800  3064  1C03               	skipc
 12801  3065  2855               	goto	l21818
 12802                           
 12803                           ;task.c: 1485: }
 12804                           ;task.c: 1486: for(j=0;j<50;j++)
 12805  3066  01E5               	clrf	start_ad_convert@j^(0+128)
 12806  3067                     l21838:	
 12807                           
 12808                           ;task.c: 1487: {
 12809                           ;task.c: 1488: for(i=0;i<50-j;i++)
 12810  3067  01E6               	clrf	start_ad_convert@i^(0+128)
 12811  3068                     l21850:	
 12812  3068  0020               	movlb	0	; select bank0
 12813  3069  01B3               	clrf	??_start_ad_convert+1
 12814  306A  0021               	movlb	1	; select bank1
 12815  306B  0865               	movf	start_ad_convert@j^(0+128),w
 12816  306C  3C32               	sublw	50
 12817  306D  2289  31B0         	fcall	PL202	;call to abstracted procedure
 12818  306F  1803               	btfsc	3,0
 12819  3070  2879               	goto	l21852
 12820                           
 12821                           ;task.c: 1489: {
 12822                           ;task.c: 1490: if(adc_buffer[i]>adc_buffer[i+1])
 12823  3071  0021               	movlb	1	; select bank1
 12824  3072  225A  31B0         	fcall	PL46	;call to abstracted procedure
 12825  3074  2250  31B0         	fcall	PL32	;call to abstracted procedure
 12826                           
 12827                           ;task.c: 1491: {
 12828                           ;task.c: 1492: temp=adc_buffer[i];
 12829                           
 12830                           ;task.c: 1494: adc_buffer[i]=adc_buffer[i+1];
 12831                           
 12832                           ;task.c: 1496: adc_buffer[i+1]=temp;
 12833  3076  21D8  31B0         	fcall	PL8	;call to abstracted procedure
 12834  3078  2868               	goto	l21850
 12835  3079                     l21852:	
 12836  3079  0021               	movlb	1	; select bank1
 12837  307A  3032               	movlw	50
 12838  307B  0AE5               	incf	start_ad_convert@j^(0+128),f
 12839  307C  0265               	subwf	start_ad_convert@j^(0+128),w
 12840  307D  1C03               	skipc
 12841  307E  2867               	goto	l21838
 12842                           
 12843                           ;task.c: 1497: }
 12844                           ;task.c: 1499: }
 12845                           ;task.c: 1500: }
 12846                           ;task.c: 1502: ADCON0bits.ADON =0;
 12847  307F  101D               	bcf	29,0	;volatile
 12848                           
 12849                           ;task.c: 1504: return((adc_buffer[24]+adc_buffer[26]+
 12850                           ;task.c: 1505: adc_buffer[22]+adc_buffer[28]+
 12851                           ;task.c: 1506: adc_buffer[20]+adc_buffer[30]+
 12852                           ;task.c: 1507: adc_buffer[18]+adc_buffer[32]+
 12853                           ;task.c: 1508: adc_buffer[16]+adc_buffer[34]+
 12854                           ;task.c: 1509: adc_buffer[14]+adc_buffer[36]+
 12855                           ;task.c: 1510: adc_buffer[12]+adc_buffer[38]+
 12856                           ;task.c: 1511: adc_buffer[10]+adc_buffer[40]+
 12857                           ;task.c: 1512: adc_buffer[8]+adc_buffer[42]+
 12858                           ;task.c: 1513: adc_buffer[6]+adc_buffer[44]+
 12859                           ;task.c: 1514: adc_buffer[4]+adc_buffer[46]+
 12860                           ;task.c: 1515: adc_buffer[2]+adc_buffer[48]+
 12861  3080  301A               	movlw	26
 12862  3081  0020               	movlb	0	; select bank0
 12863  3082  00A9               	movwf	___lwdiv@divisor
 12864  3083  3070               	movlw	112
 12865  3084  01AA               	clrf	___lwdiv@divisor+1
 12866  3085  0086               	movwf	6
 12867  3086  3023               	movlw	35
 12868  3087  0087               	movwf	7
 12869  3088  30A0               	movlw	160
 12870  3089  0084               	movwf	4
 12871  308A  3023               	movlw	35
 12872  308B  0085               	movwf	5
 12873  308C  3F00               	moviw [0]fsr0
 12874  308D  00B2               	movwf	??_start_ad_convert
 12875  308E  3F01               	moviw [1]fsr0
 12876  308F  00B3               	movwf	??_start_ad_convert+1
 12877  3090  30A4               	movlw	164
 12878  3091  0084               	movwf	4
 12879  3092  3F00               	moviw [0]fsr0
 12880  3093  0732               	addwf	??_start_ad_convert,w
 12881  3094  00B4               	movwf	??_start_ad_convert+2
 12882  3095  3F01               	moviw [1]fsr0
 12883  3096  3D33               	addwfc	??_start_ad_convert+1,w
 12884  3097  00B5               	movwf	??_start_ad_convert+3
 12885  3098  309C               	movlw	156
 12886  3099  0084               	movwf	4
 12887  309A  3F00               	moviw [0]fsr0
 12888  309B  0734               	addwf	??_start_ad_convert+2,w
 12889  309C  00B6               	movwf	??_start_ad_convert+4
 12890  309D  3F01               	moviw [1]fsr0
 12891  309E  3D35               	addwfc	??_start_ad_convert+3,w
 12892  309F  00B7               	movwf	??_start_ad_convert+5
 12893  30A0  30A8               	movlw	168
 12894  30A1  0084               	movwf	4
 12895  30A2  3F00               	moviw [0]fsr0
 12896  30A3  0736               	addwf	??_start_ad_convert+4,w
 12897  30A4  00B8               	movwf	??_start_ad_convert+6
 12898  30A5  3F01               	moviw [1]fsr0
 12899  30A6  3D37               	addwfc	??_start_ad_convert+5,w
 12900  30A7  00B9               	movwf	??_start_ad_convert+7
 12901  30A8  3098               	movlw	152
 12902  30A9  0084               	movwf	4
 12903  30AA  3F00               	moviw [0]fsr0
 12904  30AB  0738               	addwf	??_start_ad_convert+6,w
 12905  30AC  00BA               	movwf	??_start_ad_convert+8
 12906  30AD  3F01               	moviw [1]fsr0
 12907  30AE  3D39               	addwfc	??_start_ad_convert+7,w
 12908  30AF  00BB               	movwf	??_start_ad_convert+9
 12909  30B0  30AC               	movlw	172
 12910  30B1  0084               	movwf	4
 12911  30B2  3F00               	moviw [0]fsr0
 12912  30B3  073A               	addwf	??_start_ad_convert+8,w
 12913  30B4  00BC               	movwf	??_start_ad_convert+10
 12914  30B5  3F01               	moviw [1]fsr0
 12915  30B6  3D3B               	addwfc	??_start_ad_convert+9,w
 12916  30B7  00BD               	movwf	??_start_ad_convert+11
 12917  30B8  3094               	movlw	148
 12918  30B9  0084               	movwf	4
 12919  30BA  3F00               	moviw [0]fsr0
 12920  30BB  073C               	addwf	??_start_ad_convert+10,w
 12921  30BC  00BE               	movwf	??_start_ad_convert+12
 12922  30BD  3F01               	moviw [1]fsr0
 12923  30BE  3D3D               	addwfc	??_start_ad_convert+11,w
 12924  30BF  00BF               	movwf	??_start_ad_convert+13
 12925  30C0  30B0               	movlw	176
 12926  30C1  0084               	movwf	4
 12927  30C2  3F00               	moviw [0]fsr0
 12928  30C3  073E               	addwf	??_start_ad_convert+12,w
 12929  30C4  00C0               	movwf	??_start_ad_convert+14
 12930  30C5  3F01               	moviw [1]fsr0
 12931  30C6  3D3F               	addwfc	??_start_ad_convert+13,w
 12932  30C7  00C1               	movwf	??_start_ad_convert+15
 12933  30C8  3090               	movlw	144
 12934  30C9  0084               	movwf	4
 12935  30CA  3F00               	moviw [0]fsr0
 12936  30CB  0740               	addwf	??_start_ad_convert+14,w
 12937  30CC  00C2               	movwf	??_start_ad_convert+16
 12938  30CD  3F01               	moviw [1]fsr0
 12939  30CE  3D41               	addwfc	??_start_ad_convert+15,w
 12940  30CF  00C3               	movwf	??_start_ad_convert+17
 12941  30D0  30B4               	movlw	180
 12942  30D1  0084               	movwf	4
 12943  30D2  3F00               	moviw [0]fsr0
 12944  30D3  0742               	addwf	??_start_ad_convert+16,w
 12945  30D4  00C4               	movwf	??_start_ad_convert+18
 12946  30D5  3F01               	moviw [1]fsr0
 12947  30D6  3D43               	addwfc	??_start_ad_convert+17,w
 12948  30D7  00C5               	movwf	??_start_ad_convert+19
 12949  30D8  3070               	movlw	112
 12950  30D9  0084               	movwf	4
 12951  30DA  311C               	addfsr 0,28
 12952  30DB  3F00               	moviw [0]fsr0
 12953  30DC  0744               	addwf	??_start_ad_convert+18,w
 12954  30DD  00C6               	movwf	??_start_ad_convert+20
 12955  30DE  3F01               	moviw [1]fsr0
 12956  30DF  3D45               	addwfc	??_start_ad_convert+19,w
 12957  30E0  00C7               	movwf	??_start_ad_convert+21
 12958  30E1  30B8               	movlw	184
 12959  30E2  0084               	movwf	4
 12960  30E3  3023               	movlw	35
 12961  30E4  0085               	movwf	5
 12962  30E5  3F00               	moviw [0]fsr0
 12963  30E6  0746               	addwf	??_start_ad_convert+20,w
 12964  30E7  00C8               	movwf	??_start_ad_convert+22
 12965  30E8  3F01               	moviw [1]fsr0
 12966  30E9  3D47               	addwfc	??_start_ad_convert+21,w
 12967  30EA  00C9               	movwf	??_start_ad_convert+23
 12968  30EB  3070               	movlw	112
 12969  30EC  0084               	movwf	4
 12970  30ED  3118               	addfsr 0,24
 12971  30EE  3F00               	moviw [0]fsr0
 12972  30EF  0748               	addwf	??_start_ad_convert+22,w
 12973  30F0  00CA               	movwf	??_start_ad_convert+24
 12974  30F1  3F01               	moviw [1]fsr0
 12975  30F2  3D49               	addwfc	??_start_ad_convert+23,w
 12976  30F3  00CB               	movwf	??_start_ad_convert+25
 12977  30F4  30BC               	movlw	188
 12978  30F5  0084               	movwf	4
 12979  30F6  3023               	movlw	35
 12980  30F7  0085               	movwf	5
 12981  30F8  3F00               	moviw [0]fsr0
 12982  30F9  074A               	addwf	??_start_ad_convert+24,w
 12983  30FA  00CC               	movwf	??_start_ad_convert+26
 12984  30FB  3F01               	moviw [1]fsr0
 12985  30FC  3D4B               	addwfc	??_start_ad_convert+25,w
 12986  30FD  00CD               	movwf	??_start_ad_convert+27
 12987  30FE  3070               	movlw	112
 12988  30FF  0084               	movwf	4
 12989  3100  3114               	addfsr 0,20
 12990  3101  3F00               	moviw [0]fsr0
 12991  3102  074C               	addwf	??_start_ad_convert+26,w
 12992  3103  00CE               	movwf	??_start_ad_convert+28
 12993  3104  3F01               	moviw [1]fsr0
 12994  3105  3D4D               	addwfc	??_start_ad_convert+27,w
 12995  3106  00CF               	movwf	??_start_ad_convert+29
 12996  3107  30C0               	movlw	192
 12997  3108  0084               	movwf	4
 12998  3109  3023               	movlw	35
 12999  310A  0085               	movwf	5
 13000  310B  3F00               	moviw [0]fsr0
 13001  310C  074E               	addwf	??_start_ad_convert+28,w
 13002  310D  00D0               	movwf	??_start_ad_convert+30
 13003  310E  3F01               	moviw [1]fsr0
 13004  310F  3D4F               	addwfc	??_start_ad_convert+29,w
 13005  3110  00D1               	movwf	??_start_ad_convert+31
 13006  3111  3070               	movlw	112
 13007  3112  0084               	movwf	4
 13008  3113  3110               	addfsr 0,16
 13009  3114  3F00               	moviw [0]fsr0
 13010  3115  0750               	addwf	??_start_ad_convert+30,w
 13011  3116  00D2               	movwf	??_start_ad_convert+32
 13012  3117  3F01               	moviw [1]fsr0
 13013  3118  3D51               	addwfc	??_start_ad_convert+31,w
 13014  3119  00D3               	movwf	??_start_ad_convert+33
 13015  311A  30C4               	movlw	196
 13016  311B  0084               	movwf	4
 13017  311C  3023               	movlw	35
 13018  311D  0085               	movwf	5
 13019  311E  3F00               	moviw [0]fsr0
 13020  311F  0752               	addwf	??_start_ad_convert+32,w
 13021  3120  00D4               	movwf	??_start_ad_convert+34
 13022  3121  3F01               	moviw [1]fsr0
 13023  3122  3D53               	addwfc	??_start_ad_convert+33,w
 13024  3123  00D5               	movwf	??_start_ad_convert+35
 13025  3124  3070               	movlw	112
 13026  3125  0084               	movwf	4
 13027  3126  310C               	addfsr 0,12
 13028  3127  3F00               	moviw [0]fsr0
 13029  3128  0754               	addwf	??_start_ad_convert+34,w
 13030  3129  00D6               	movwf	??_start_ad_convert+36
 13031  312A  3F01               	moviw [1]fsr0
 13032  312B  3D55               	addwfc	??_start_ad_convert+35,w
 13033  312C  00D7               	movwf	??_start_ad_convert+37
 13034  312D  30C8               	movlw	200
 13035  312E  0084               	movwf	4
 13036  312F  3023               	movlw	35
 13037  3130  0085               	movwf	5
 13038  3131  3F00               	moviw [0]fsr0
 13039  3132  0756               	addwf	??_start_ad_convert+36,w
 13040  3133  00D8               	movwf	??_start_ad_convert+38
 13041  3134  3F01               	moviw [1]fsr0
 13042  3135  3D57               	addwfc	??_start_ad_convert+37,w
 13043  3136  00D9               	movwf	??_start_ad_convert+39
 13044  3137  3070               	movlw	112
 13045  3138  0084               	movwf	4
 13046  3139  3108               	addfsr 0,8
 13047  313A  3F00               	moviw [0]fsr0
 13048  313B  0758               	addwf	??_start_ad_convert+38,w
 13049  313C  00DA               	movwf	??_start_ad_convert+40
 13050  313D  3F01               	moviw [1]fsr0
 13051  313E  3D59               	addwfc	??_start_ad_convert+39,w
 13052  313F  00DB               	movwf	??_start_ad_convert+41
 13053  3140  30CC               	movlw	204
 13054  3141  0084               	movwf	4
 13055  3142  3023               	movlw	35
 13056  3143  0085               	movwf	5
 13057  3144  3F00               	moviw [0]fsr0
 13058  3145  075A               	addwf	??_start_ad_convert+40,w
 13059  3146  00DC               	movwf	??_start_ad_convert+42
 13060  3147  3F01               	moviw [1]fsr0
 13061  3148  3D5B               	addwfc	??_start_ad_convert+41,w
 13062  3149  00DD               	movwf	??_start_ad_convert+43
 13063  314A  3070               	movlw	112
 13064  314B  0084               	movwf	4
 13065  314C  3104               	addfsr 0,4
 13066  314D  3F00               	moviw [0]fsr0
 13067  314E  075C               	addwf	??_start_ad_convert+42,w
 13068  314F  00DE               	movwf	??_start_ad_convert+44
 13069  3150  3F01               	moviw [1]fsr0
 13070  3151  3D5D               	addwfc	??_start_ad_convert+43,w
 13071  3152  00DF               	movwf	??_start_ad_convert+45
 13072  3153  30D0               	movlw	208
 13073  3154  0084               	movwf	4
 13074  3155  3023               	movlw	35
 13075  3156  0085               	movwf	5
 13076  3157  3F00               	moviw [0]fsr0
 13077  3158  075E               	addwf	??_start_ad_convert+44,w
 13078  3159  00E0               	movwf	??_start_ad_convert+46
 13079  315A  3F01               	moviw [1]fsr0
 13080  315B  3D5F               	addwfc	??_start_ad_convert+45,w
 13081  315C  00E1               	movwf	??_start_ad_convert+47
 13082  315D  30D4               	movlw	212
 13083  315E  0084               	movwf	4
 13084  315F  3F00               	moviw [0]fsr0
 13085  3160  0760               	addwf	??_start_ad_convert+46,w
 13086  3161  00E2               	movwf	??_start_ad_convert+48
 13087  3162  3F01               	moviw [1]fsr0
 13088  3163  3D61               	addwfc	??_start_ad_convert+47,w
 13089  3164  00E3               	movwf	??_start_ad_convert+49
 13090  3165  3F40               	moviw [0]fsr1
 13091  3166  0762               	addwf	??_start_ad_convert+48,w
 13092  3167  00AB               	movwf	___lwdiv@dividend
 13093  3168  3F41               	moviw [1]fsr1
 13094  3169  3D63               	addwfc	??_start_ad_convert+49,w
 13095  316A  00AC               	movwf	___lwdiv@dividend+1
 13096  316B  21B3               	fcall	___lwdiv
 13097  316C  082A               	movf	?___lwdiv+1,w
 13098  316D  00B1               	movwf	?_start_ad_convert+1
 13099  316E  0829               	movf	?___lwdiv,w
 13100  316F  00B0               	movwf	?_start_ad_convert
 13101  3170  0008               	return
 13102  3171                     l21860:	
 13103                           
 13104                           ;task.c: 1517: }
 13105                           ;task.c: 1521: for(i=0;i<11;i++)
 13106  3171  01E6               	clrf	start_ad_convert@i^(0+128)
 13107  3172                     l21866:	
 13108                           
 13109                           ;task.c: 1522: {
 13110                           ;task.c: 1523: _delay((unsigned long)((10)*(32000000/4000000.0)));
 13111  3172  301A               	movlw	26
 13112  3173  0020               	movlb	0	; select bank0
 13113  3174  00B2               	movwf	??_start_ad_convert
 13114  3175                     u16457:	
 13115  3175  0BB2               	decfsz	??_start_ad_convert,f
 13116  3176  2975               	goto	u16457
 13117  3177  0000               	nop
 13118                           
 13119                           ;task.c: 1525: ADCON0bits.GO=1;
 13120  3178  0021               	movlb	1	; select bank1
 13121  3179  149D               	bsf	29,1	;volatile
 13122  317A                     l1979:	
 13123                           ;task.c: 1527: while(ADCON0bits.nDONE);
 13124                           
 13125  317A  189D               	btfsc	29,1	;volatile
 13126  317B  297A               	goto	l1979
 13127                           
 13128                           ;task.c: 1529: ad_h=0b00000011&ADRESH;
 13129  317C  081C               	movf	28,w	;volatile
 13130                           
 13131                           ;task.c: 1531: ad_l=ADRESL;
 13132                           
 13133                           ;task.c: 1533: adc_buffer[i]=(ad_h<<8)|ad_l;
 13134  317D  225E  31B0         	fcall	PL50	;call to abstracted procedure
 13135  317F  300B               	movlw	11
 13136  3180  0AE6               	incf	start_ad_convert@i^(0+128),f
 13137  3181  0266               	subwf	start_ad_convert@i^(0+128),w
 13138  3182  1C03               	skipc
 13139  3183  2972               	goto	l21866
 13140                           
 13141                           ;task.c: 1534: }
 13142                           ;task.c: 1536: for(j=0;j<11-1;j++)
 13143  3184  01E5               	clrf	start_ad_convert@j^(0+128)
 13144  3185                     l21886:	
 13145                           
 13146                           ;task.c: 1537: {
 13147                           ;task.c: 1538: for(i=0;i<11-j;i++)
 13148  3185  01E6               	clrf	start_ad_convert@i^(0+128)
 13149  3186                     l21898:	
 13150  3186  0020               	movlb	0	; select bank0
 13151  3187  01B3               	clrf	??_start_ad_convert+1
 13152  3188  0021               	movlb	1	; select bank1
 13153  3189  0865               	movf	start_ad_convert@j^(0+128),w
 13154  318A  3C0B               	sublw	11
 13155  318B  2289  31B0         	fcall	PL202	;call to abstracted procedure
 13156  318D  1803               	btfsc	3,0
 13157  318E  2997               	goto	l21900
 13158                           
 13159                           ;task.c: 1539: {
 13160                           ;task.c: 1540: if(adc_buffer[i]>adc_buffer[i+1])
 13161  318F  0021               	movlb	1	; select bank1
 13162  3190  225A  31B0         	fcall	PL46	;call to abstracted procedure
 13163  3192  2250  31B0         	fcall	PL32	;call to abstracted procedure
 13164                           
 13165                           ;task.c: 1541: {
 13166                           ;task.c: 1542: temp=adc_buffer[i];
 13167                           
 13168                           ;task.c: 1544: adc_buffer[i]=adc_buffer[i+1];
 13169                           
 13170                           ;task.c: 1546: adc_buffer[i+1]=temp;
 13171  3194  21D8  31B0         	fcall	PL8	;call to abstracted procedure
 13172  3196  2986               	goto	l21898
 13173  3197                     l21900:	
 13174  3197  0021               	movlb	1	; select bank1
 13175  3198  300A               	movlw	10
 13176  3199  0AE5               	incf	start_ad_convert@j^(0+128),f
 13177  319A  0265               	subwf	start_ad_convert@j^(0+128),w
 13178  319B  1C03               	skipc
 13179  319C  2985               	goto	l21886
 13180                           
 13181                           ;task.c: 1547: }
 13182                           ;task.c: 1549: }
 13183                           ;task.c: 1550: }
 13184                           ;task.c: 1552: ADCON0bits.ADON =0;
 13185  319D  101D               	bcf	29,0	;volatile
 13186                           
 13187                           ;task.c: 1554: return((adc_buffer[((11-1)/2)-1]+adc_buffer[((11-1)/2)+1])/2);
 13188  319E  3070               	movlw	112
 13189  319F  0086               	movwf	6
 13190  31A0  3023               	movlw	35
 13191  31A1  0087               	movwf	7
 13192  31A2  3070               	movlw	112
 13193  31A3  314C               	addfsr 1,12
 13194  31A4  0084               	movwf	4
 13195  31A5  3023               	movlw	35
 13196  31A6  0085               	movwf	5
 13197  31A7  3108               	addfsr 0,8
 13198  31A8  3F40               	moviw [0]fsr1
 13199  31A9  0700               	addwf	0,w
 13200  31AA  0020               	movlb	0	; select bank0
 13201  31AB  00B0               	movwf	?_start_ad_convert
 13202  31AC  3101               	addfsr 0,1
 13203  31AD  3F41               	moviw [1]fsr1
 13204  31AE  3D00               	addwfc	0,w
 13205  31AF  00B1               	movwf	?_start_ad_convert+1
 13206  31B0  36B1               	lsrf	?_start_ad_convert+1,f
 13207  31B1  0CB0               	rrf	?_start_ad_convert,f
 13208  31B2  0008               	return
 13209  31B3                     __end_of_start_ad_convert:	
 13210  31B3                     __ptext13:	
 13211 ;; *************** function ___lwdiv *****************
 13212 ;; Defined at:
 13213 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;  divisor         2    9[BANK0 ] unsigned int 
 13216 ;;  dividend        2   11[BANK0 ] unsigned int 
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;  quotient        2   14[BANK0 ] unsigned int 
 13219 ;;  counter         1   13[BANK0 ] unsigned char 
 13220 ;; Return value:  Size  Location     Type
 13221 ;;                  2    9[BANK0 ] unsigned int 
 13222 ;; Registers used:
 13223 ;;		wreg, status,2, status,0
 13224 ;; Tracked objects:
 13225 ;;		On entry : 1F/0
 13226 ;;		On exit  : 1F/0
 13227 ;;		Unchanged: 0/0
 13228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13230 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;Total ram usage:        7 bytes
 13234 ;; Hardware stack levels used:    1
 13235 ;; Hardware stack levels required when called:    2
 13236 ;; This function calls:
 13237 ;;		Nothing
 13238 ;; This function is called by:
 13239 ;;		_handle_ad_loop
 13240 ;;		_start_ad_convert
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           
 13245                           ;psect for function ___lwdiv
 13246  31B3                     ___lwdiv:	
 13247                           
 13248                           ;incstack = 0
 13249                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13250  31B3  01AE               	clrf	___lwdiv@quotient
 13251  31B4  01AF               	clrf	___lwdiv@quotient+1
 13252  31B5  082A               	movf	___lwdiv@divisor+1,w
 13253  31B6  0429               	iorwf	___lwdiv@divisor,w
 13254  31B7  1903               	skipnz
 13255  31B8  29D3               	goto	l25318
 13256  31B9  01AD               	clrf	___lwdiv@counter
 13257  31BA                     L85:	
 13258  31BA  0AAD               	incf	___lwdiv@counter,f
 13259  31BB  1BAA               	btfsc	___lwdiv@divisor+1,7
 13260  31BC  29C0               	goto	l25306
 13261  31BD  35A9               	lslf	___lwdiv@divisor,f
 13262  31BE  0DAA               	rlf	___lwdiv@divisor+1,f
 13263  31BF  29BA               	goto	L85
 13264  31C0                     l25306:	
 13265  31C0  35AE               	lslf	___lwdiv@quotient,f
 13266  31C1  0DAF               	rlf	___lwdiv@quotient+1,f
 13267  31C2  082A               	movf	___lwdiv@divisor+1,w
 13268  31C3  022C               	subwf	___lwdiv@dividend+1,w
 13269  31C4  1D03               	skipz
 13270  31C5  29C8               	goto	u16405
 13271  31C6  0829               	movf	___lwdiv@divisor,w
 13272  31C7  022B               	subwf	___lwdiv@dividend,w
 13273  31C8                     u16405:	
 13274  31C8  1C03               	skipc
 13275  31C9  29CF               	goto	l25314
 13276  31CA  0829               	movf	___lwdiv@divisor,w
 13277  31CB  02AB               	subwf	___lwdiv@dividend,f
 13278  31CC  082A               	movf	___lwdiv@divisor+1,w
 13279  31CD  3BAC               	subwfb	___lwdiv@dividend+1,f
 13280  31CE  142E               	bsf	___lwdiv@quotient,0
 13281  31CF                     l25314:	
 13282  31CF  36AA               	lsrf	___lwdiv@divisor+1,f
 13283  31D0  0CA9               	rrf	___lwdiv@divisor,f
 13284  31D1  0BAD               	decfsz	___lwdiv@counter,f
 13285  31D2  29C0               	goto	l25306
 13286  31D3                     l25318:	
 13287  31D3  082F               	movf	___lwdiv@quotient+1,w
 13288  31D4  00AA               	movwf	?___lwdiv+1
 13289  31D5  082E               	movf	___lwdiv@quotient,w
 13290  31D6  00A9               	movwf	?___lwdiv
 13291  31D7  0008               	return
 13292  31D8                     __end_of___lwdiv:	
 13293  31D8                     PL8:	
 13294  31D8  0833               	movf	??_start_ad_convert+1,w
 13295  31D9  3D35               	addwfc	??_start_ad_convert+3,w
 13296  31DA  0087               	movwf	7
 13297  31DB  3F40               	moviw [0]fsr1
 13298  31DC  00B6               	movwf	??_start_ad_convert+4
 13299  31DD  3F41               	moviw [1]fsr1
 13300  31DE  00B7               	movwf	??_start_ad_convert+5
 13301  31DF  0021               	movlb	1	; select bank1
 13302  31E0  0866               	movf	start_ad_convert@i^(0+128),w
 13303  31E1  0020               	movlb	0	; select bank0
 13304  31E2  00B8               	movwf	??_start_ad_convert+6
 13305  31E3  3072               	movlw	114
 13306  31E4  01B9               	clrf	??_start_ad_convert+7
 13307  31E5  35B8               	lslf	??_start_ad_convert+6,f
 13308  31E6  0DB9               	rlf	??_start_ad_convert+7,f
 13309  31E7  00BA               	movwf	??_start_ad_convert+8
 13310  31E8  3023               	movlw	35
 13311  31E9  00BB               	movwf	??_start_ad_convert+9
 13312  31EA  0838               	movf	??_start_ad_convert+6,w
 13313  31EB  073A               	addwf	??_start_ad_convert+8,w
 13314  31EC  0086               	movwf	6
 13315  31ED  0839               	movf	??_start_ad_convert+7,w
 13316  31EE  3D3B               	addwfc	??_start_ad_convert+9,w
 13317  31EF  0087               	movwf	7
 13318  31F0  3F40               	moviw [0]fsr1
 13319  31F1  00BC               	movwf	??_start_ad_convert+10
 13320  31F2  3F41               	moviw [1]fsr1
 13321  31F3  00BD               	movwf	??_start_ad_convert+11
 13322  31F4  0837               	movf	??_start_ad_convert+5,w
 13323  31F5  023D               	subwf	??_start_ad_convert+11,w
 13324  31F6  1D03               	skipz
 13325  31F7  29FA               	goto	u11815
 13326  31F8  0836               	movf	??_start_ad_convert+4,w
 13327  31F9  023C               	subwf	??_start_ad_convert+10,w
 13328  31FA                     u11815:	
 13329  31FA  1803               	skipnc
 13330  31FB  2A4D               	goto	l21848
 13331  31FC  0021               	movlb	1	; select bank1
 13332  31FD  0866               	movf	start_ad_convert@i^(0+128),w
 13333  31FE  0020               	movlb	0	; select bank0
 13334  31FF  00B2               	movwf	??_start_ad_convert
 13335  3200  3070               	movlw	112
 13336  3201  01B3               	clrf	??_start_ad_convert+1
 13337  3202  35B2               	lslf	??_start_ad_convert,f
 13338  3203  0DB3               	rlf	??_start_ad_convert+1,f
 13339  3204  00B4               	movwf	??_start_ad_convert+2
 13340  3205  3023               	movlw	35
 13341  3206  00B5               	movwf	??_start_ad_convert+3
 13342  3207  0832               	movf	??_start_ad_convert,w
 13343  3208  0734               	addwf	??_start_ad_convert+2,w
 13344  3209  0086               	movwf	6
 13345  320A  0833               	movf	??_start_ad_convert+1,w
 13346  320B  3D35               	addwfc	??_start_ad_convert+3,w
 13347  320C  0087               	movwf	7
 13348  320D  3F40               	moviw [0]fsr1
 13349  320E  0021               	movlb	1	; select bank1
 13350  320F  00E2               	movwf	start_ad_convert@temp^(0+128)
 13351  3210  3F41               	moviw [1]fsr1
 13352  3211  00E3               	movwf	(start_ad_convert@temp+1)^(0+128)
 13353  3212  0866               	movf	start_ad_convert@i^(0+128),w
 13354  3213  0020               	movlb	0	; select bank0
 13355  3214  00B2               	movwf	??_start_ad_convert
 13356  3215  3072               	movlw	114
 13357  3216  01B3               	clrf	??_start_ad_convert+1
 13358  3217  35B2               	lslf	??_start_ad_convert,f
 13359  3218  0DB3               	rlf	??_start_ad_convert+1,f
 13360  3219  00B4               	movwf	??_start_ad_convert+2
 13361  321A  3023               	movlw	35
 13362  321B  00B5               	movwf	??_start_ad_convert+3
 13363  321C  0832               	movf	??_start_ad_convert,w
 13364  321D  0734               	addwf	??_start_ad_convert+2,w
 13365  321E  0086               	movwf	6
 13366  321F  0833               	movf	??_start_ad_convert+1,w
 13367  3220  3D35               	addwfc	??_start_ad_convert+3,w
 13368  3221  0087               	movwf	7
 13369  3222  0021               	movlb	1	; select bank1
 13370  3223  0866               	movf	start_ad_convert@i^(0+128),w
 13371  3224  0020               	movlb	0	; select bank0
 13372  3225  00B6               	movwf	??_start_ad_convert+4
 13373  3226  3070               	movlw	112
 13374  3227  01B7               	clrf	??_start_ad_convert+5
 13375  3228  35B6               	lslf	??_start_ad_convert+4,f
 13376  3229  0DB7               	rlf	??_start_ad_convert+5,f
 13377  322A  00B8               	movwf	??_start_ad_convert+6
 13378  322B  3023               	movlw	35
 13379  322C  00B9               	movwf	??_start_ad_convert+7
 13380  322D  0836               	movf	??_start_ad_convert+4,w
 13381  322E  0738               	addwf	??_start_ad_convert+6,w
 13382  322F  0084               	movwf	4
 13383  3230  0837               	movf	??_start_ad_convert+5,w
 13384  3231  3D39               	addwfc	??_start_ad_convert+7,w
 13385  3232  0085               	movwf	5
 13386  3233  3F40               	moviw [0]fsr1
 13387  3234  3F80               	movwi [0]fsr0
 13388  3235  3F41               	moviw [1]fsr1
 13389  3236  3F81               	movwi [1]fsr0
 13390  3237  0021               	movlb	1	; select bank1
 13391  3238  0866               	movf	start_ad_convert@i^(0+128),w
 13392  3239  0020               	movlb	0	; select bank0
 13393  323A  00B2               	movwf	??_start_ad_convert
 13394  323B  3072               	movlw	114
 13395  323C  01B3               	clrf	??_start_ad_convert+1
 13396  323D  35B2               	lslf	??_start_ad_convert,f
 13397  323E  0DB3               	rlf	??_start_ad_convert+1,f
 13398  323F  00B4               	movwf	??_start_ad_convert+2
 13399  3240  3023               	movlw	35
 13400  3241  00B5               	movwf	??_start_ad_convert+3
 13401  3242  0832               	movf	??_start_ad_convert,w
 13402  3243  0734               	addwf	??_start_ad_convert+2,w
 13403  3244  0086               	movwf	6
 13404  3245  0833               	movf	??_start_ad_convert+1,w
 13405  3246  3D35               	addwfc	??_start_ad_convert+3,w
 13406  3247  0087               	movwf	7
 13407  3248  0021               	movlb	1	; select bank1
 13408  3249  0862               	movf	start_ad_convert@temp^(0+128),w
 13409  324A  3FC0               	movwi [0]fsr1
 13410  324B  0863               	movf	(start_ad_convert@temp+1)^(0+128),w
 13411  324C  3FC1               	movwi [1]fsr1
 13412  324D                     l21848:	
 13413  324D  0021               	movlb	1	; select bank1
 13414  324E  0AE6               	incf	start_ad_convert@i^(0+128),f
 13415  324F  0008               	return
 13416  3250                     __end_ofPL8:	
 13417  3250                     PL32:	
 13418  3250  01B3               	clrf	??_start_ad_convert+1
 13419  3251  35B2               	lslf	??_start_ad_convert,f
 13420  3252  0DB3               	rlf	??_start_ad_convert+1,f
 13421  3253  00B4               	movwf	??_start_ad_convert+2
 13422  3254  3023               	movlw	35
 13423  3255  00B5               	movwf	??_start_ad_convert+3
 13424  3256  0832               	movf	??_start_ad_convert,w
 13425  3257  0734               	addwf	??_start_ad_convert+2,w
 13426  3258  0086               	movwf	6
 13427  3259  0008               	return
 13428  325A                     __end_ofPL32:	
 13429  325A                     PL46:	
 13430  325A  0866               	movf	start_ad_convert@i^(0+128),w
 13431  325B  0020               	movlb	0	; select bank0
 13432  325C  00B2               	movwf	??_start_ad_convert
 13433  325D  3470               	retlw	112
 13434  325E                     __end_ofPL46:	
 13435  325E                     PL50:	
 13436  325E  3903               	andlw	3
 13437  325F  00DE               	movwf	start_ad_convert@ad_h^(0+128)
 13438  3260  01DF               	clrf	(start_ad_convert@ad_h+1)^(0+128)
 13439  3261  081B               	movf	27,w	;volatile
 13440  3262  00E0               	movwf	start_ad_convert@ad_l^(0+128)
 13441  3263  01E1               	clrf	(start_ad_convert@ad_l+1)^(0+128)
 13442  3264  085E               	movf	start_ad_convert@ad_h^(0+128),w
 13443  3265  0020               	movlb	0	; select bank0
 13444  3266  00B3               	movwf	??_start_ad_convert+1
 13445  3267  01B2               	clrf	??_start_ad_convert
 13446  3268  0021               	movlb	1	; select bank1
 13447  3269  0860               	movf	start_ad_convert@ad_l^(0+128),w
 13448  326A  0020               	movlb	0	; select bank0
 13449  326B  0432               	iorwf	??_start_ad_convert,w
 13450  326C  00B4               	movwf	??_start_ad_convert+2
 13451  326D  0021               	movlb	1	; select bank1
 13452  326E  0861               	movf	(start_ad_convert@ad_l+1)^(0+128),w
 13453  326F  0020               	movlb	0	; select bank0
 13454  3270  0433               	iorwf	??_start_ad_convert+1,w
 13455  3271  00B5               	movwf	??_start_ad_convert+3
 13456  3272  0021               	movlb	1	; select bank1
 13457  3273  0866               	movf	start_ad_convert@i^(0+128),w
 13458  3274  0020               	movlb	0	; select bank0
 13459  3275  00B6               	movwf	??_start_ad_convert+4
 13460  3276  3070               	movlw	112
 13461  3277  01B7               	clrf	??_start_ad_convert+5
 13462  3278  35B6               	lslf	??_start_ad_convert+4,f
 13463  3279  0DB7               	rlf	??_start_ad_convert+5,f
 13464  327A  00B8               	movwf	??_start_ad_convert+6
 13465  327B  3023               	movlw	35
 13466  327C  00B9               	movwf	??_start_ad_convert+7
 13467  327D  0836               	movf	??_start_ad_convert+4,w
 13468  327E  0738               	addwf	??_start_ad_convert+6,w
 13469  327F  0086               	movwf	6
 13470  3280  0837               	movf	??_start_ad_convert+5,w
 13471  3281  3D39               	addwfc	??_start_ad_convert+7,w
 13472  3282  0087               	movwf	7
 13473  3283  0834               	movf	??_start_ad_convert+2,w
 13474  3284  3FC0               	movwi [0]fsr1
 13475  3285  0835               	movf	??_start_ad_convert+3,w
 13476  3286  3FC1               	movwi [1]fsr1
 13477  3287  0021               	movlb	1	; select bank1
 13478  3288  0008               	return
 13479  3289                     __end_ofPL50:	
 13480  3289                     PL202:	
 13481  3289  0020               	movlb	0	; select bank0
 13482  328A  00B2               	movwf	??_start_ad_convert
 13483  328B  1C03               	skipc
 13484  328C  03B3               	decf	??_start_ad_convert+1,f
 13485  328D  0833               	movf	??_start_ad_convert+1,w
 13486  328E  3A80               	xorlw	128
 13487  328F  3C80               	sublw	128
 13488  3290  1D03               	skipz
 13489  3291  0008               	return
 13490  3292  0832               	movf	??_start_ad_convert,w
 13491  3293  0021               	movlb	1	; select bank1
 13492  3294  0266               	subwf	start_ad_convert@i^(0+128),w
 13493  3295  0008               	return
 13494  3296                     __end_ofPL202:	
 13495                           
 13496                           	psect	text14
 13497  2A1E                     __ptext14:	
 13498 ;; *************** function _pid_calc_2 *****************
 13499 ;; Defined at:
 13500 ;;		line 133 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  pp              1    wreg     PTR struct PID_VAR
 13503 ;;		 -> PID_CC2_discharge(21), 
 13504 ;;  NowPoint        2   55[BANK0 ] int 
 13505 ;; Auto vars:     Size  Location     Type
 13506 ;;  pp              1   15[BANK1 ] PTR struct PID_VAR
 13507 ;;		 -> PID_CC2_discharge(21), 
 13508 ;;  Error           3   16[BANK1 ] float 
 13509 ;;  PWM_var         3   12[BANK1 ] float 
 13510 ;;  dk              3    9[BANK1 ] float 
 13511 ;;  dError          3    0[BANK1 ] float 
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  3   55[BANK0 ] float 
 13514 ;; Registers used:
 13515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13516 ;; Tracked objects:
 13517 ;;		On entry : 1F/0
 13518 ;;		On exit  : 1F/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13521 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13522 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
 13523 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13524 ;;      Totals:         0       6      19       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;Total ram usage:       25 bytes
 13526 ;; Hardware stack levels used:    1
 13527 ;; Hardware stack levels required when called:    5
 13528 ;; This function calls:
 13529 ;;		___awtoft
 13530 ;;		___ftadd
 13531 ;;		___ftge
 13532 ;;		___ftmul
 13533 ;;		___ftsub
 13534 ;; This function is called by:
 13535 ;;		_handle_ad_loop
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           
 13540                           ;psect for function _pid_calc_2
 13541  2A1E                     _pid_calc_2:	
 13542                           
 13543                           ;incstack = 0
 13544                           ; Regs used in _pid_calc_2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13545                           ;pid_calc_2@pp stored from wreg
 13546  2A1E  0021               	movlb	1	; select bank1
 13547  2A1F  00EC               	movwf	pid_calc_2@pp^(0+128)
 13548                           
 13549                           ;PID.c: 135: float PWM_var;
 13550                           ;PID.c: 137: float dError, Error;
 13551                           ;PID.c: 139: float dk;
 13552                           ;PID.c: 141: dk=10.0;
 13553  2A20  3020               	movlw	32
 13554  2A21  01E6               	clrf	pid_calc_2@dk^(0+128)
 13555  2A22  00E7               	movwf	(pid_calc_2@dk+1)^(0+128)
 13556  2A23  3041               	movlw	65
 13557  2A24  00E8               	movwf	(pid_calc_2@dk+2)^(0+128)
 13558                           
 13559                           ;PID.c: 143: Error = pp->SetPoint - NowPoint;
 13560  2A25  0020               	movlb	0	; select bank0
 13561  2A26  0858               	movf	pid_calc_2@NowPoint+1,w
 13562  2A27  00AC               	movwf	___awtoft@c+1
 13563  2A28  0857               	movf	pid_calc_2@NowPoint,w
 13564  2A29  00AB               	movwf	___awtoft@c
 13565  2A2A  318F  2749  31AA   	fcall	___awtoft
 13566  2A2D  27A0  31AA         	fcall	PL306	;call to abstracted procedure
 13567  2A2F  0021               	movlb	1	; select bank1
 13568  2A30  086C               	movf	pid_calc_2@pp^(0+128),w
 13569  2A31  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13570  2A33  2782  31AA         	fcall	PL278	;call to abstracted procedure
 13571  2A35  26CF  31AA         	fcall	___ftsub
 13572  2A37  084E               	movf	?___ftsub,w
 13573  2A38  0021               	movlb	1	; select bank1
 13574  2A39  00ED               	movwf	pid_calc_2@Error^(0+128)
 13575  2A3A  0020               	movlb	0	; select bank0
 13576  2A3B  084F               	movf	?___ftsub+1,w
 13577  2A3C  0021               	movlb	1	; select bank1
 13578  2A3D  00EE               	movwf	(pid_calc_2@Error+1)^(0+128)
 13579  2A3E  0020               	movlb	0	; select bank0
 13580  2A3F  0850               	movf	?___ftsub+2,w
 13581  2A40  0021               	movlb	1	; select bank1
 13582  2A41  00EF               	movwf	(pid_calc_2@Error+2)^(0+128)
 13583                           
 13584                           ;PID.c: 145: if(limit_power_pid2_flag==0x01)
 13585  2A42  0022               	movlb	2	; select bank2
 13586  2A43  0B3D               	decfsz	_limit_power_pid2_flag^(0+256),w
 13587  2A44  2A6C               	goto	l24800
 13588                           
 13589                           ;PID.c: 146: {
 13590                           ;PID.c: 147: if((Error<=2)&&(Error>=-2))
 13591  2A45  0020               	movlb	0	; select bank0
 13592  2A46  3040               	movlw	64
 13593  2A47  01D1               	clrf	___ftge@ff1
 13594  2A48  01D2               	clrf	___ftge@ff1+1
 13595  2A49  26E6               	fcall	PL20	;call to abstracted procedure
 13596  2A4A  31B4  2472  31AA   	fcall	___ftge
 13597  2A4D  1C03               	btfss	3,0
 13598  2A4E  2A58               	goto	l24792
 13599  2A4F  0021               	movlb	1	; select bank1
 13600  2A50  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13601  2A52  27E2               	fcall	PL374	;call to abstracted procedure
 13602  2A53  31B4  2472  31AA   	fcall	___ftge
 13603  2A56  1803               	btfsc	3,0
 13604  2A57  2AAE               	goto	l24824
 13605  2A58                     l24792:	
 13606                           ;PID.c: 150: }
 13607                           
 13608                           ;PID.c: 148: {
 13609                           ;PID.c: 149: Error=0;
 13610                           
 13611                           
 13612                           ;PID.c: 151: else if(Error>=4)
 13613  2A58  0021               	movlb	1	; select bank1
 13614  2A59  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13615  2A5B  27DC               	fcall	PL364	;call to abstracted procedure
 13616  2A5C  31B4  2472  31AA   	fcall	___ftge
 13617  2A5F  1803               	btfsc	3,0
 13618  2A60  2A92               	goto	l24816
 13619                           
 13620                           ;PID.c: 155: else if(Error<=-4)
 13621                           
 13622                           ;PID.c: 154: }
 13623                           
 13624                           ;PID.c: 152: {
 13625                           ;PID.c: 153: dk=200.0;
 13626  2A61  3080               	movlw	128
 13627  2A62  01D1               	clrf	___ftge@ff1
 13628  2A63  00D2               	movwf	___ftge@ff1+1
 13629  2A64  30C0               	movlw	192
 13630  2A65  26E6               	fcall	PL20	;call to abstracted procedure
 13631  2A66  31B4  2472  31AA   	fcall	___ftge
 13632  2A69  1C03               	btfss	3,0
 13633  2A6A  2ACB               	goto	l24832
 13634  2A6B  2A92               	goto	l24816
 13635  2A6C                     l24800:	
 13636                           ;PID.c: 158: }
 13637                           ;PID.c: 159: }
 13638                           
 13639                           ;PID.c: 156: {
 13640                           ;PID.c: 157: dk=200.0;
 13641                           
 13642                           
 13643                           ;PID.c: 160: else
 13644                           ;PID.c: 161: {
 13645                           ;PID.c: 162: if(pid_index==0x01)
 13646  2A6C  0021               	movlb	1	; select bank1
 13647  2A6D  0B3F               	decfsz	_pid_index^(0+128),w
 13648  2A6E  2A98               	goto	l24818
 13649                           
 13650                           ;PID.c: 163: {
 13651                           ;PID.c: 164: if((Error<=1)&&(Error>=-1))
 13652  2A6F  0020               	movlb	0	; select bank0
 13653  2A70  2752  31AA         	fcall	PL142	;call to abstracted procedure
 13654  2A72  26E6               	fcall	PL20	;call to abstracted procedure
 13655  2A73  31B4  2472  31AA   	fcall	___ftge
 13656  2A76  1C03               	btfss	3,0
 13657  2A77  2A81               	goto	l24808
 13658  2A78  0021               	movlb	1	; select bank1
 13659  2A79  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13660  2A7B  278E               	fcall	PL282	;call to abstracted procedure
 13661  2A7C  31B4  2472  31AA   	fcall	___ftge
 13662  2A7F  1803               	btfsc	3,0
 13663  2A80  2AAE               	goto	l24824
 13664  2A81                     l24808:	
 13665                           ;PID.c: 167: }
 13666                           
 13667                           ;PID.c: 165: {
 13668                           ;PID.c: 166: Error=0;
 13669                           
 13670                           
 13671                           ;PID.c: 168: else if(Error>=3)
 13672  2A81  0021               	movlb	1	; select bank1
 13673  2A82  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13674  2A84  27F6               	fcall	PL384	;call to abstracted procedure
 13675  2A85  31B4  2472  31AA   	fcall	___ftge
 13676  2A88  1803               	btfsc	3,0
 13677  2A89  2A92               	goto	l24816
 13678                           
 13679                           ;PID.c: 172: else if(Error<=-3)
 13680                           
 13681                           ;PID.c: 171: }
 13682                           
 13683                           ;PID.c: 169: {
 13684                           ;PID.c: 170: dk=200.0;
 13685  2A8A  3040               	movlw	64
 13686  2A8B  01D1               	clrf	___ftge@ff1
 13687  2A8C  00D2               	movwf	___ftge@ff1+1
 13688  2A8D  30C0               	movlw	192
 13689  2A8E  26E6               	fcall	PL20	;call to abstracted procedure
 13690  2A8F  31B4  2472  31AA   	fcall	___ftge
 13691  2A92                     l24816:	
 13692                           ;PID.c: 175: }
 13693                           
 13694                           ;PID.c: 173: {
 13695                           ;PID.c: 174: dk=200.0;
 13696                           
 13697                           
 13698                           ;PID.c: 176: else
 13699                           ;PID.c: 177: {
 13700                           ;PID.c: 178: dk=200.0;
 13701  2A92  0021               	movlb	1	; select bank1
 13702  2A93  3048               	movlw	72
 13703  2A94  01E6               	clrf	pid_calc_2@dk^(0+128)
 13704  2A95  00E7               	movwf	(pid_calc_2@dk+1)^(0+128)
 13705  2A96  3043               	movlw	67
 13706  2A97  2ACA               	goto	L86
 13707  2A98                     l24818:	
 13708                           
 13709                           ;PID.c: 181: else if(pid_index==0x02)
 13710  2A98  083F               	movf	_pid_index^(0+128),w
 13711  2A99  3A02               	xorlw	2
 13712  2A9A  1D03               	skipz
 13713  2A9B  2ACB               	goto	l24832
 13714                           
 13715                           ;PID.c: 182: {
 13716                           ;PID.c: 183: if((Error<=1)&&(Error>=-1))
 13717  2A9C  0020               	movlb	0	; select bank0
 13718  2A9D  2752  31AA         	fcall	PL142	;call to abstracted procedure
 13719  2A9F  26E6               	fcall	PL20	;call to abstracted procedure
 13720  2AA0  31B4  2472  31AA   	fcall	___ftge
 13721  2AA3  1C03               	btfss	3,0
 13722  2AA4  2AB3               	goto	l24826
 13723  2AA5  0021               	movlb	1	; select bank1
 13724  2AA6  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13725  2AA8  278E               	fcall	PL282	;call to abstracted procedure
 13726  2AA9  31B4  2472  31AA   	fcall	___ftge
 13727  2AAC  1C03               	btfss	3,0
 13728  2AAD  2AB3               	goto	l24826
 13729  2AAE                     l24824:	
 13730                           
 13731                           ;PID.c: 184: {
 13732                           ;PID.c: 185: Error=0;
 13733  2AAE  0021               	movlb	1	; select bank1
 13734  2AAF  01ED               	clrf	pid_calc_2@Error^(0+128)
 13735  2AB0  01EE               	clrf	(pid_calc_2@Error+1)^(0+128)
 13736  2AB1  01EF               	clrf	(pid_calc_2@Error+2)^(0+128)
 13737                           
 13738                           ;PID.c: 186: }
 13739  2AB2  2ACB               	goto	l24832
 13740  2AB3                     l24826:	
 13741                           
 13742                           ;PID.c: 187: else if((Error>=2)||(Error<=-2))
 13743  2AB3  0021               	movlb	1	; select bank1
 13744  2AB4  270E  31AA         	fcall	PL28	;call to abstracted procedure
 13745  2AB6  27A7               	fcall	PL312	;call to abstracted procedure
 13746  2AB7  31B4  2472  31AA   	fcall	___ftge
 13747  2ABA  1803               	btfsc	3,0
 13748  2ABB  2AC5               	goto	l24830
 13749  2ABC  30C0               	movlw	192
 13750  2ABD  01D1               	clrf	___ftge@ff1
 13751  2ABE  01D2               	clrf	___ftge@ff1+1
 13752  2ABF  26E6               	fcall	PL20	;call to abstracted procedure
 13753  2AC0  31B4  2472  31AA   	fcall	___ftge
 13754  2AC3  1C03               	btfss	3,0
 13755  2AC4  2ACB               	goto	l24832
 13756  2AC5                     l24830:	
 13757                           
 13758                           ;PID.c: 188: {
 13759                           ;PID.c: 189: dk=100.0;
 13760  2AC5  0021               	movlb	1	; select bank1
 13761  2AC6  30C8               	movlw	200
 13762  2AC7  01E6               	clrf	pid_calc_2@dk^(0+128)
 13763  2AC8  00E7               	movwf	(pid_calc_2@dk+1)^(0+128)
 13764  2AC9  3042               	movlw	66
 13765  2ACA                     L86:	
 13766  2ACA  00E8               	movwf	(pid_calc_2@dk+2)^(0+128)
 13767  2ACB                     l24832:	
 13768                           
 13769                           ;PID.c: 190: }
 13770                           ;PID.c: 191: }
 13771                           ;PID.c: 193: }
 13772                           ;PID.c: 196: pp->SumError += Error;
 13773  2ACB  0021               	movlb	1	; select bank1
 13774  2ACC  086D               	movf	pid_calc_2@Error^(0+128),w
 13775  2ACD  0020               	movlb	0	; select bank0
 13776  2ACE  00C2               	movwf	___ftadd@f1
 13777  2ACF  0021               	movlb	1	; select bank1
 13778  2AD0  086E               	movf	(pid_calc_2@Error+1)^(0+128),w
 13779  2AD1  0020               	movlb	0	; select bank0
 13780  2AD2  00C3               	movwf	___ftadd@f1+1
 13781  2AD3  0021               	movlb	1	; select bank1
 13782  2AD4  086F               	movf	(pid_calc_2@Error+2)^(0+128),w
 13783  2AD5  0020               	movlb	0	; select bank0
 13784  2AD6  00C4               	movwf	___ftadd@f1+2
 13785  2AD7  0021               	movlb	1	; select bank1
 13786  2AD8  086C               	movf	pid_calc_2@pp^(0+128),w
 13787  2AD9  3E12               	addlw	18
 13788  2ADA  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13789  2ADC  27C0               	fcall	PL344	;call to abstracted procedure
 13790  2ADD  318B  230F  31AA   	fcall	___ftadd
 13791  2AE0  0021               	movlb	1	; select bank1
 13792  2AE1  2777  31AA         	fcall	PL248	;call to abstracted procedure
 13793  2AE3  0020               	movlb	0	; select bank0
 13794  2AE4  27AC  31AA         	fcall	PL314	;call to abstracted procedure
 13795                           
 13796                           ;PID.c: 200: if((pp->SumError)>=2) pp->SumError= 2;
 13797  2AE6  0021               	movlb	1	; select bank1
 13798  2AE7  086C               	movf	pid_calc_2@pp^(0+128),w
 13799  2AE8  3E12               	addlw	18
 13800  2AE9  0086               	movwf	6
 13801  2AEA  3F40               	moviw [0]fsr1
 13802  2AEB  0020               	movlb	0	; select bank0
 13803  2AEC  277D  31AA         	fcall	PL256	;call to abstracted procedure
 13804  2AEE  2764               	fcall	PL220	;call to abstracted procedure
 13805  2AEF  31B4  2472  31AA   	fcall	___ftge
 13806  2AF2  1C03               	btfss	3,0
 13807  2AF3  2AFB               	goto	l24838
 13808  2AF4  0021               	movlb	1	; select bank1
 13809  2AF5  2777  31AA         	fcall	PL248	;call to abstracted procedure
 13810  2AF7  3000               	movlw	0
 13811  2AF8  27FB  31AA         	fcall	PL386	;call to abstracted procedure
 13812  2AFA  2B10               	goto	l24842
 13813  2AFB                     l24838:	
 13814                           
 13815                           ;PID.c: 201: else if((pp->SumError)<=-2) pp->SumError= -2;
 13816  2AFB  30C0               	movlw	192
 13817  2AFC  01D1               	clrf	___ftge@ff1
 13818  2AFD  01D2               	clrf	___ftge@ff1+1
 13819  2AFE  00D3               	movwf	___ftge@ff1+2
 13820  2AFF  0021               	movlb	1	; select bank1
 13821  2B00  086C               	movf	pid_calc_2@pp^(0+128),w
 13822  2B01  3E12               	addlw	18
 13823  2B02  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13824  2B04  27D6               	fcall	PL356	;call to abstracted procedure
 13825  2B05  31B4  2472  31AA   	fcall	___ftge
 13826  2B08  1C03               	btfss	3,0
 13827  2B09  2B10               	goto	l24842
 13828  2B0A  0021               	movlb	1	; select bank1
 13829  2B0B  2777  31AA         	fcall	PL248	;call to abstracted procedure
 13830  2B0D  3000               	movlw	0
 13831  2B0E  27EC  31AA         	fcall	PL380	;call to abstracted procedure
 13832  2B10                     l24842:	
 13833                           
 13834                           ;PID.c: 203: dError = pp->LastError - pp->PrevError;
 13835  2B10  0021               	movlb	1	; select bank1
 13836  2B11  086C               	movf	pid_calc_2@pp^(0+128),w
 13837  2B12  3E0F               	addlw	15
 13838  2B13  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13839  2B15  27BA  31AA         	fcall	PL340	;call to abstracted procedure
 13840  2B17  0021               	movlb	1	; select bank1
 13841  2B18  086C               	movf	pid_calc_2@pp^(0+128),w
 13842  2B19  3E0C               	addlw	12
 13843  2B1A  0086               	movwf	6
 13844  2B1B  3F40               	moviw [0]fsr1
 13845  2B1C  0020               	movlb	0	; select bank0
 13846  2B1D  2782  31AA         	fcall	PL278	;call to abstracted procedure
 13847  2B1F  26CF  31AA         	fcall	___ftsub
 13848  2B21  084E               	movf	?___ftsub,w
 13849  2B22  0021               	movlb	1	; select bank1
 13850  2B23  00DD               	movwf	pid_calc_2@dError^(0+128)
 13851  2B24  0020               	movlb	0	; select bank0
 13852  2B25  084F               	movf	?___ftsub+1,w
 13853  2B26  0021               	movlb	1	; select bank1
 13854  2B27  00DE               	movwf	(pid_calc_2@dError+1)^(0+128)
 13855  2B28  0020               	movlb	0	; select bank0
 13856  2B29  0850               	movf	?___ftsub+2,w
 13857  2B2A  0021               	movlb	1	; select bank1
 13858  2B2B  00DF               	movwf	(pid_calc_2@dError+2)^(0+128)
 13859                           
 13860                           ;PID.c: 205: pp->PrevError = pp->LastError;
 13861  2B2C  086C               	movf	pid_calc_2@pp^(0+128),w
 13862  2B2D  3E0C               	addlw	12
 13863  2B2E  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13864  2B30  00DA               	movwf	??_pid_calc_2
 13865  2B31  3F41               	moviw [1]fsr1
 13866  2B32  00DB               	movwf	??_pid_calc_2+1
 13867  2B33  3F42               	moviw [2]fsr1
 13868  2B34  00DC               	movwf	??_pid_calc_2+2
 13869  2B35  0021               	movlb	1	; select bank1
 13870  2B36  086C               	movf	pid_calc_2@pp^(0+128),w
 13871  2B37  3E0F               	addlw	15
 13872  2B38  0086               	movwf	6
 13873  2B39  0020               	movlb	0	; select bank0
 13874  2B3A  085A               	movf	??_pid_calc_2,w
 13875  2B3B  3FC0               	movwi [0]fsr1
 13876  2B3C  085B               	movf	??_pid_calc_2+1,w
 13877  2B3D  3FC1               	movwi [1]fsr1
 13878  2B3E  085C               	movf	??_pid_calc_2+2,w
 13879  2B3F  3FC2               	movwi [2]fsr1
 13880                           
 13881                           ;PID.c: 207: pp->LastError = Error;
 13882  2B40  0021               	movlb	1	; select bank1
 13883  2B41  086C               	movf	pid_calc_2@pp^(0+128),w
 13884  2B42  3E0C               	addlw	12
 13885  2B43  0086               	movwf	6
 13886  2B44  086D               	movf	pid_calc_2@Error^(0+128),w
 13887  2B45  3FC0               	movwi [0]fsr1
 13888  2B46  086E               	movf	(pid_calc_2@Error+1)^(0+128),w
 13889  2B47  3FC1               	movwi [1]fsr1
 13890  2B48  086F               	movf	(pid_calc_2@Error+2)^(0+128),w
 13891  2B49  3FC2               	movwi [2]fsr1
 13892                           
 13893                           ;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 13894  2B4A  086D               	movf	pid_calc_2@Error^(0+128),w
 13895  2B4B  0020               	movlb	0	; select bank0
 13896  2B4C  00B3               	movwf	___ftmul@f1
 13897  2B4D  0021               	movlb	1	; select bank1
 13898  2B4E  086E               	movf	(pid_calc_2@Error+1)^(0+128),w
 13899  2B4F  0020               	movlb	0	; select bank0
 13900  2B50  00B4               	movwf	___ftmul@f1+1
 13901  2B51  0021               	movlb	1	; select bank1
 13902  2B52  086F               	movf	(pid_calc_2@Error+2)^(0+128),w
 13903  2B53  0020               	movlb	0	; select bank0
 13904  2B54  00B5               	movwf	___ftmul@f1+2
 13905  2B55  0021               	movlb	1	; select bank1
 13906  2B56  086C               	movf	pid_calc_2@pp^(0+128),w
 13907  2B57  3E03               	addlw	3
 13908  2B58  0086               	movwf	6
 13909  2B59  3F40               	moviw [0]fsr1
 13910  2B5A  0020               	movlb	0	; select bank0
 13911  2B5B  2771               	fcall	PL242	;call to abstracted procedure
 13912  2B5C  318A  22AA  31AA   	fcall	___ftmul
 13913  2B5F  0833               	movf	?___ftmul,w
 13914  2B60  0021               	movlb	1	; select bank1
 13915  2B61  00E0               	movwf	_pid_calc_2$3194^(0+128)
 13916  2B62  0020               	movlb	0	; select bank0
 13917  2B63  0834               	movf	?___ftmul+1,w
 13918  2B64  0021               	movlb	1	; select bank1
 13919  2B65  00E1               	movwf	(_pid_calc_2$3194+1)^(0+128)
 13920  2B66  0020               	movlb	0	; select bank0
 13921  2B67  0835               	movf	?___ftmul+2,w
 13922  2B68  0021               	movlb	1	; select bank1
 13923  2B69  00E2               	movwf	(_pid_calc_2$3194+2)^(0+128)
 13924                           
 13925                           ;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 13926  2B6A  086C               	movf	pid_calc_2@pp^(0+128),w
 13927  2B6B  3E12               	addlw	18
 13928  2B6C  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13929  2B6E  27D1  31AA         	fcall	PL354	;call to abstracted procedure
 13930  2B70  00B5               	movwf	___ftmul@f1+2
 13931  2B71  0021               	movlb	1	; select bank1
 13932  2B72  086C               	movf	pid_calc_2@pp^(0+128),w
 13933  2B73  3E06               	addlw	6
 13934  2B74  0086               	movwf	6
 13935  2B75  3F40               	moviw [0]fsr1
 13936  2B76  0020               	movlb	0	; select bank0
 13937  2B77  2771               	fcall	PL242	;call to abstracted procedure
 13938  2B78  318A  22AA  31AA   	fcall	___ftmul
 13939  2B7B  2756               	fcall	PL192	;call to abstracted procedure
 13940  2B7C  0866               	movf	pid_calc_2@dk^(0+128),w
 13941  2B7D  0020               	movlb	0	; select bank0
 13942  2B7E  00B3               	movwf	___ftmul@f1
 13943  2B7F  0021               	movlb	1	; select bank1
 13944  2B80  0867               	movf	(pid_calc_2@dk+1)^(0+128),w
 13945  2B81  0020               	movlb	0	; select bank0
 13946  2B82  00B4               	movwf	___ftmul@f1+1
 13947  2B83  0021               	movlb	1	; select bank1
 13948  2B84  0868               	movf	(pid_calc_2@dk+2)^(0+128),w
 13949  2B85  0020               	movlb	0	; select bank0
 13950  2B86  00B5               	movwf	___ftmul@f1+2
 13951  2B87  0021               	movlb	1	; select bank1
 13952  2B88  0860               	movf	_pid_calc_2$3194^(0+128),w
 13953  2B89  0020               	movlb	0	; select bank0
 13954  2B8A  00B6               	movwf	___ftmul@f2
 13955  2B8B  0021               	movlb	1	; select bank1
 13956  2B8C  0861               	movf	(_pid_calc_2$3194+1)^(0+128),w
 13957  2B8D  0020               	movlb	0	; select bank0
 13958  2B8E  00B7               	movwf	___ftmul@f2+1
 13959  2B8F  0021               	movlb	1	; select bank1
 13960  2B90  0862               	movf	(_pid_calc_2$3194+2)^(0+128),w
 13961  2B91  0020               	movlb	0	; select bank0
 13962  2B92  00B8               	movwf	___ftmul@f2+2
 13963  2B93  318A  22AA  31AA   	fcall	___ftmul
 13964  2B96  27B3               	fcall	PL336	;call to abstracted procedure
 13965  2B97  318B  230F  31AA   	fcall	___ftadd
 13966  2B9A  0842               	movf	?___ftadd,w
 13967  2B9B  0021               	movlb	1	; select bank1
 13968  2B9C  00E3               	movwf	_pid_calc_2$3195^(0+128)
 13969  2B9D  0020               	movlb	0	; select bank0
 13970  2B9E  0843               	movf	?___ftadd+1,w
 13971  2B9F  0021               	movlb	1	; select bank1
 13972  2BA0  00E4               	movwf	(_pid_calc_2$3195+1)^(0+128)
 13973  2BA1  0020               	movlb	0	; select bank0
 13974  2BA2  0844               	movf	?___ftadd+2,w
 13975  2BA3  0021               	movlb	1	; select bank1
 13976  2BA4  00E5               	movwf	(_pid_calc_2$3195+2)^(0+128)
 13977                           
 13978                           ;PID.c: 209: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 13979  2BA5  085D               	movf	pid_calc_2@dError^(0+128),w
 13980  2BA6  0020               	movlb	0	; select bank0
 13981  2BA7  00B3               	movwf	___ftmul@f1
 13982  2BA8  0021               	movlb	1	; select bank1
 13983  2BA9  085E               	movf	(pid_calc_2@dError+1)^(0+128),w
 13984  2BAA  0020               	movlb	0	; select bank0
 13985  2BAB  00B4               	movwf	___ftmul@f1+1
 13986  2BAC  0021               	movlb	1	; select bank1
 13987  2BAD  085F               	movf	(pid_calc_2@dError+2)^(0+128),w
 13988  2BAE  0020               	movlb	0	; select bank0
 13989  2BAF  00B5               	movwf	___ftmul@f1+2
 13990  2BB0  0021               	movlb	1	; select bank1
 13991  2BB1  086C               	movf	pid_calc_2@pp^(0+128),w
 13992  2BB2  3E09               	addlw	9
 13993  2BB3  275E  31AA         	fcall	PL198	;call to abstracted procedure
 13994  2BB5  2771               	fcall	PL242	;call to abstracted procedure
 13995  2BB6  318A  22AA  31AA   	fcall	___ftmul
 13996  2BB9  2756               	fcall	PL192	;call to abstracted procedure
 13997  2BBA  0863               	movf	_pid_calc_2$3195^(0+128),w
 13998  2BBB  0020               	movlb	0	; select bank0
 13999  2BBC  00C5               	movwf	___ftadd@f2
 14000  2BBD  0021               	movlb	1	; select bank1
 14001  2BBE  0864               	movf	(_pid_calc_2$3195+1)^(0+128),w
 14002  2BBF  0020               	movlb	0	; select bank0
 14003  2BC0  00C6               	movwf	___ftadd@f2+1
 14004  2BC1  0021               	movlb	1	; select bank1
 14005  2BC2  0865               	movf	(_pid_calc_2$3195+2)^(0+128),w
 14006  2BC3  0020               	movlb	0	; select bank0
 14007  2BC4  00C7               	movwf	___ftadd@f2+2
 14008  2BC5  318B  230F  31AA   	fcall	___ftadd
 14009  2BC8  0842               	movf	?___ftadd,w
 14010  2BC9  0021               	movlb	1	; select bank1
 14011  2BCA  00E9               	movwf	pid_calc_2@PWM_var^(0+128)
 14012  2BCB  0020               	movlb	0	; select bank0
 14013  2BCC  0843               	movf	?___ftadd+1,w
 14014  2BCD  0021               	movlb	1	; select bank1
 14015  2BCE  00EA               	movwf	(pid_calc_2@PWM_var+1)^(0+128)
 14016  2BCF  0020               	movlb	0	; select bank0
 14017  2BD0  0844               	movf	?___ftadd+2,w
 14018  2BD1  0021               	movlb	1	; select bank1
 14019  2BD2  00EB               	movwf	(pid_calc_2@PWM_var+2)^(0+128)
 14020                           
 14021                           ;PID.c: 212: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
 14022  2BD3  270E  31AA         	fcall	PL28	;call to abstracted procedure
 14023  2BD5  27F6               	fcall	PL384	;call to abstracted procedure
 14024  2BD6  31B4  2472  31AA   	fcall	___ftge
 14025  2BD9  1C03               	btfss	3,0
 14026  2BDA  2BE5               	goto	l24858
 14027  2BDB  30A0               	movlw	160
 14028  2BDC  01D1               	clrf	___ftge@ff1
 14029  2BDD  00D2               	movwf	___ftge@ff1+1
 14030  2BDE  3040               	movlw	64
 14031  2BDF  26E6               	fcall	PL20	;call to abstracted procedure
 14032  2BE0  31B4  2472  31AA   	fcall	___ftge
 14033  2BE3  1803               	btfsc	3,0
 14034  2BE4  2BF8               	goto	l24862
 14035  2BE5                     l24858:	
 14036  2BE5  3040               	movlw	64
 14037  2BE6  01D1               	clrf	___ftge@ff1
 14038  2BE7  00D2               	movwf	___ftge@ff1+1
 14039  2BE8  30C0               	movlw	192
 14040  2BE9  26E6               	fcall	PL20	;call to abstracted procedure
 14041  2BEA  31B4  2472  31AA   	fcall	___ftge
 14042  2BED  1C03               	btfss	3,0
 14043  2BEE  2C04               	goto	l24870
 14044  2BEF  0021               	movlb	1	; select bank1
 14045  2BF0  270E  31AA         	fcall	PL28	;call to abstracted procedure
 14046  2BF2  2788               	fcall	PL280	;call to abstracted procedure
 14047  2BF3  31B4  2472  31AA   	fcall	___ftge
 14048  2BF6  1C03               	btfss	3,0
 14049  2BF7  2C04               	goto	l24870
 14050  2BF8                     l24862:	
 14051                           
 14052                           ;PID.c: 213: {
 14053                           ;PID.c: 214: if(PWM_var>=2)PWM_var = 2;
 14054  2BF8  0021               	movlb	1	; select bank1
 14055  2BF9  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14056  2BFA  2720  31AA         	fcall	PL92	;call to abstracted procedure
 14057  2BFC  27A7               	fcall	PL312	;call to abstracted procedure
 14058  2BFD  31B4  2472  31AA   	fcall	___ftge
 14059  2C00  1803               	btfsc	3,0
 14060  2C01  2C4B               	goto	L89
 14061                           
 14062                           ;PID.c: 215: else if(PWM_var <= -2)PWM_var = -2;
 14063  2C02  30C0               	movlw	192
 14064  2C03  2C4F               	goto	L91
 14065  2C04                     l24870:	
 14066                           
 14067                           ;PID.c: 217: else if((Error>5)||(Error<-5))
 14068  2C04  3187  2758  31AA   	fcall	PL268	;call to abstracted procedure
 14069  2C07  26E6               	fcall	PL20	;call to abstracted procedure
 14070  2C08  31B4  2472  31AA   	fcall	___ftge
 14071  2C0B  1C03               	btfss	3,0
 14072  2C0C  2C16               	goto	l24874
 14073  2C0D  0021               	movlb	1	; select bank1
 14074  2C0E  270E  31AA         	fcall	PL28	;call to abstracted procedure
 14075  2C10  2788               	fcall	PL280	;call to abstracted procedure
 14076  2C11  31B4  2472  31AA   	fcall	___ftge
 14077  2C14  1803               	btfsc	3,0
 14078  2C15  2C3E               	goto	l24882
 14079  2C16                     l24874:	
 14080                           
 14081                           ;PID.c: 218: {
 14082                           ;PID.c: 219: if(PWM_var>=5)PWM_var = 5;
 14083  2C16  0021               	movlb	1	; select bank1
 14084  2C17  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14085  2C18  2720  31AA         	fcall	PL92	;call to abstracted procedure
 14086  2C1A  27CB               	fcall	PL352	;call to abstracted procedure
 14087  2C1B  31B4  2472  31AA   	fcall	___ftge
 14088  2C1E  1C03               	btfss	3,0
 14089  2C1F  2C26               	goto	l24878
 14090  2C20  0021               	movlb	1	; select bank1
 14091  2C21  30A0               	movlw	160
 14092  2C22  01E9               	clrf	pid_calc_2@PWM_var^(0+128)
 14093  2C23  00EA               	movwf	(pid_calc_2@PWM_var+1)^(0+128)
 14094  2C24  3040               	movlw	64
 14095  2C25  2C73               	goto	L88
 14096  2C26                     l24878:	
 14097                           
 14098                           ;PID.c: 220: else if(PWM_var <= -5)PWM_var = -5;
 14099  2C26  30A0               	movlw	160
 14100  2C27  271A               	fcall	PL78	;call to abstracted procedure
 14101  2C28  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14102  2C29  0020               	movlb	0	; select bank0
 14103  2C2A  00D4               	movwf	___ftge@ff2
 14104  2C2B  0021               	movlb	1	; select bank1
 14105  2C2C  086A               	movf	(pid_calc_2@PWM_var+1)^(0+128),w
 14106  2C2D  0020               	movlb	0	; select bank0
 14107  2C2E  00D5               	movwf	___ftge@ff2+1
 14108  2C2F  0021               	movlb	1	; select bank1
 14109  2C30  086B               	movf	(pid_calc_2@PWM_var+2)^(0+128),w
 14110  2C31  0020               	movlb	0	; select bank0
 14111  2C32  00D6               	movwf	___ftge@ff2+2
 14112  2C33  31B4  2472  31AA   	fcall	___ftge
 14113  2C36  1C03               	btfss	3,0
 14114  2C37  2C74               	goto	l1180
 14115  2C38  0021               	movlb	1	; select bank1
 14116  2C39  30A0               	movlw	160
 14117  2C3A  01E9               	clrf	pid_calc_2@PWM_var^(0+128)
 14118  2C3B  00EA               	movwf	(pid_calc_2@PWM_var+1)^(0+128)
 14119  2C3C  30C0               	movlw	192
 14120  2C3D  2C73               	goto	L88
 14121  2C3E                     l24882:	
 14122                           
 14123                           ;PID.c: 222: else
 14124                           ;PID.c: 223: {
 14125                           ;PID.c: 224: if(have_person2_flag)
 14126  2C3E  0021               	movlb	1	; select bank1
 14127  2C3F  083A               	movf	_have_person2_flag^(0+128),w
 14128  2C40  1903               	btfsc	3,2
 14129  2C41  2C5A               	goto	l24892
 14130                           
 14131                           ;PID.c: 225: {
 14132                           ;PID.c: 226: if(PWM_var>=0.5)PWM_var = 2;
 14133  2C42  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14134  2C43  2720  31AA         	fcall	PL92	;call to abstracted procedure
 14135  2C45  27C6               	fcall	PL348	;call to abstracted procedure
 14136  2C46  31B4  2472  31AA   	fcall	___ftge
 14137  2C49  1C03               	btfss	3,0
 14138  2C4A  2C4E               	goto	l24888
 14139  2C4B                     L89:	
 14140  2C4B  0021               	movlb	1	; select bank1
 14141  2C4C  3040               	movlw	64
 14142  2C4D  2C71               	goto	L87
 14143  2C4E                     l24888:	
 14144                           
 14145                           ;PID.c: 227: else if(PWM_var <= -0.5)PWM_var = -2;
 14146  2C4E  30BF               	movlw	191
 14147  2C4F                     L91:	
 14148  2C4F  01D1               	clrf	___ftge@ff1
 14149  2C50  01D2               	clrf	___ftge@ff1+1
 14150  2C51  2744               	fcall	PL100	;call to abstracted procedure
 14151  2C52  31B4  2472  31AA   	fcall	___ftge
 14152  2C55  1C03               	btfss	3,0
 14153  2C56  2C74               	goto	l1180
 14154  2C57  0021               	movlb	1	; select bank1
 14155  2C58  30C0               	movlw	192
 14156  2C59  2C71               	goto	L87
 14157  2C5A                     l24892:	
 14158                           
 14159                           ;PID.c: 229: else
 14160                           ;PID.c: 230: {
 14161                           ;PID.c: 231: if(PWM_var>=0.5)PWM_var = 0.5;
 14162  2C5A  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14163  2C5B  2720  31AA         	fcall	PL92	;call to abstracted procedure
 14164  2C5D  27C6               	fcall	PL348	;call to abstracted procedure
 14165  2C5E  31B4  2472  31AA   	fcall	___ftge
 14166  2C61  1C03               	btfss	3,0
 14167  2C62  2C66               	goto	l24896
 14168  2C63  0021               	movlb	1	; select bank1
 14169  2C64  303F               	movlw	63
 14170  2C65  2C71               	goto	L87
 14171  2C66                     l24896:	
 14172                           
 14173                           ;PID.c: 232: else if(PWM_var <= -0.5)PWM_var = -0.5;
 14174  2C66  30BF               	movlw	191
 14175  2C67  01D1               	clrf	___ftge@ff1
 14176  2C68  01D2               	clrf	___ftge@ff1+1
 14177  2C69  2744               	fcall	PL100	;call to abstracted procedure
 14178  2C6A  31B4  2472  31AA   	fcall	___ftge
 14179  2C6D  1C03               	btfss	3,0
 14180  2C6E  2C74               	goto	l1180
 14181  2C6F  0021               	movlb	1	; select bank1
 14182  2C70  30BF               	movlw	191
 14183  2C71                     L87:	
 14184  2C71  01E9               	clrf	pid_calc_2@PWM_var^(0+128)
 14185  2C72  01EA               	clrf	(pid_calc_2@PWM_var+1)^(0+128)
 14186  2C73                     L88:	
 14187  2C73  00EB               	movwf	(pid_calc_2@PWM_var+2)^(0+128)
 14188  2C74                     l1180:	
 14189                           
 14190                           ;PID.c: 233: }
 14191                           ;PID.c: 235: }
 14192                           ;PID.c: 237: return (PWM_var );
 14193  2C74  0021               	movlb	1	; select bank1
 14194  2C75  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 14195  2C76  0020               	movlb	0	; select bank0
 14196  2C77  00D7               	movwf	?_pid_calc_2
 14197  2C78  0021               	movlb	1	; select bank1
 14198  2C79  086A               	movf	(pid_calc_2@PWM_var+1)^(0+128),w
 14199  2C7A  0020               	movlb	0	; select bank0
 14200  2C7B  00D8               	movwf	?_pid_calc_2+1
 14201  2C7C  0021               	movlb	1	; select bank1
 14202  2C7D  086B               	movf	(pid_calc_2@PWM_var+2)^(0+128),w
 14203  2C7E  0020               	movlb	0	; select bank0
 14204  2C7F  00D9               	movwf	?_pid_calc_2+2
 14205  2C80  0008               	return
 14206  2C81                     __end_of_pid_calc_2:	
 14207  2C81                     __ptext18:	
 14208 ;; *************** function _pid_calc *****************
 14209 ;; Defined at:
 14210 ;;		line 24 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;  pp              2   55[BANK0 ] PTR struct PID_VAR
 14213 ;;		 -> PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
 14214 ;;  NowPoint        2   57[BANK0 ] int 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  Error           3   15[BANK1 ] float 
 14217 ;;  PWM_var         3   12[BANK1 ] float 
 14218 ;;  dk              3    9[BANK1 ] float 
 14219 ;;  dError          3    0[BANK1 ] float 
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  3   55[BANK0 ] float 
 14222 ;; Registers used:
 14223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14224 ;; Tracked objects:
 14225 ;;		On entry : 1F/0
 14226 ;;		On exit  : 1F/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Totals:         0       7      18       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;Total ram usage:       25 bytes
 14234 ;; Hardware stack levels used:    1
 14235 ;; Hardware stack levels required when called:    5
 14236 ;; This function calls:
 14237 ;;		___awtoft
 14238 ;;		___ftadd
 14239 ;;		___ftge
 14240 ;;		___ftmul
 14241 ;;		___ftsub
 14242 ;; This function is called by:
 14243 ;;		_handle_ad_loop
 14244 ;;		_Mppt_Charge
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           
 14249                           ;psect for function _pid_calc
 14250  2C81                     _pid_calc:	
 14251                           
 14252                           ;PID.c: 26: float PWM_var;
 14253                           ;PID.c: 28: float dError, Error;
 14254                           ;PID.c: 30: float dk;
 14255                           ;PID.c: 32: dk=10.0;
 14256                           
 14257                           ;incstack = 0
 14258                           ; Regs used in _pid_calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14259  2C81  0021               	movlb	1	; select bank1
 14260  2C82  3020               	movlw	32
 14261  2C83  01E6               	clrf	pid_calc@dk^(0+128)
 14262  2C84  00E7               	movwf	(pid_calc@dk+1)^(0+128)
 14263  2C85  3041               	movlw	65
 14264  2C86  00E8               	movwf	(pid_calc@dk+2)^(0+128)
 14265                           
 14266                           ;PID.c: 34: Error = pp->SetPoint - NowPoint;
 14267  2C87  0020               	movlb	0	; select bank0
 14268  2C88  085A               	movf	pid_calc@NowPoint+1,w
 14269  2C89  00AC               	movwf	___awtoft@c+1
 14270  2C8A  0859               	movf	pid_calc@NowPoint,w
 14271  2C8B  00AB               	movwf	___awtoft@c
 14272  2C8C  318F  2749  31AA   	fcall	___awtoft
 14273  2C8F  27A0  31AA         	fcall	PL306	;call to abstracted procedure
 14274  2C91  0857               	movf	pid_calc@pp,w
 14275  2C92  0086               	movwf	6
 14276  2C93  0858               	movf	pid_calc@pp+1,w
 14277  2C94  0087               	movwf	7
 14278  2C95  3F40               	moviw [0]fsr1
 14279  2C96  2782  31AA         	fcall	PL278	;call to abstracted procedure
 14280  2C98  26CF  31AA         	fcall	___ftsub
 14281  2C9A  084E               	movf	?___ftsub,w
 14282  2C9B  0021               	movlb	1	; select bank1
 14283  2C9C  00EC               	movwf	pid_calc@Error^(0+128)
 14284  2C9D  0020               	movlb	0	; select bank0
 14285  2C9E  084F               	movf	?___ftsub+1,w
 14286  2C9F  0021               	movlb	1	; select bank1
 14287  2CA0  00ED               	movwf	(pid_calc@Error+1)^(0+128)
 14288  2CA1  0020               	movlb	0	; select bank0
 14289  2CA2  0850               	movf	?___ftsub+2,w
 14290  2CA3  0021               	movlb	1	; select bank1
 14291  2CA4  00EE               	movwf	(pid_calc@Error+2)^(0+128)
 14292                           
 14293                           ;PID.c: 36: if(limit_power_pid_flag==0x01)
 14294  2CA5  0022               	movlb	2	; select bank2
 14295  2CA6  0B3E               	decfsz	_limit_power_pid_flag^(0+256),w
 14296  2CA7  2CCF               	goto	l24678
 14297                           
 14298                           ;PID.c: 37: {
 14299                           ;PID.c: 38: if((Error<=2)&&(Error>=-2))
 14300  2CA8  0020               	movlb	0	; select bank0
 14301  2CA9  3040               	movlw	64
 14302  2CAA  01D1               	clrf	___ftge@ff1
 14303  2CAB  01D2               	clrf	___ftge@ff1+1
 14304  2CAC  26F4               	fcall	PL22	;call to abstracted procedure
 14305  2CAD  31B4  2472  31AA   	fcall	___ftge
 14306  2CB0  1C03               	btfss	3,0
 14307  2CB1  2CBB               	goto	l24670
 14308  2CB2  0021               	movlb	1	; select bank1
 14309  2CB3  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14310  2CB5  27E2               	fcall	PL374	;call to abstracted procedure
 14311  2CB6  31B4  2472  31AA   	fcall	___ftge
 14312  2CB9  1803               	btfsc	3,0
 14313  2CBA  2D11               	goto	l24702
 14314  2CBB                     l24670:	
 14315                           ;PID.c: 41: }
 14316                           
 14317                           ;PID.c: 39: {
 14318                           ;PID.c: 40: Error=0;
 14319                           
 14320                           
 14321                           ;PID.c: 42: else if(Error>=4)
 14322  2CBB  0021               	movlb	1	; select bank1
 14323  2CBC  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14324  2CBE  27DC               	fcall	PL364	;call to abstracted procedure
 14325  2CBF  31B4  2472  31AA   	fcall	___ftge
 14326  2CC2  1803               	btfsc	3,0
 14327  2CC3  2CF5               	goto	l24694
 14328                           
 14329                           ;PID.c: 46: else if(Error<=-4)
 14330                           
 14331                           ;PID.c: 45: }
 14332                           
 14333                           ;PID.c: 43: {
 14334                           ;PID.c: 44: dk=200.0;
 14335  2CC4  3080               	movlw	128
 14336  2CC5  01D1               	clrf	___ftge@ff1
 14337  2CC6  00D2               	movwf	___ftge@ff1+1
 14338  2CC7  30C0               	movlw	192
 14339  2CC8  26F4               	fcall	PL22	;call to abstracted procedure
 14340  2CC9  31B4  2472  31AA   	fcall	___ftge
 14341  2CCC  1C03               	btfss	3,0
 14342  2CCD  2D2E               	goto	l24710
 14343  2CCE  2CF5               	goto	l24694
 14344  2CCF                     l24678:	
 14345                           ;PID.c: 49: }
 14346                           ;PID.c: 50: }
 14347                           
 14348                           ;PID.c: 47: {
 14349                           ;PID.c: 48: dk=200.0;
 14350                           
 14351                           
 14352                           ;PID.c: 51: else
 14353                           ;PID.c: 52: {
 14354                           ;PID.c: 53: if(pid_index==0x01)
 14355  2CCF  0021               	movlb	1	; select bank1
 14356  2CD0  0B3F               	decfsz	_pid_index^(0+128),w
 14357  2CD1  2CFB               	goto	l24696
 14358                           
 14359                           ;PID.c: 54: {
 14360                           ;PID.c: 55: if((Error<=1)&&(Error>=-1))
 14361  2CD2  0020               	movlb	0	; select bank0
 14362  2CD3  2752  31AA         	fcall	PL142	;call to abstracted procedure
 14363  2CD5  26F4               	fcall	PL22	;call to abstracted procedure
 14364  2CD6  31B4  2472  31AA   	fcall	___ftge
 14365  2CD9  1C03               	btfss	3,0
 14366  2CDA  2CE4               	goto	l24686
 14367  2CDB  0021               	movlb	1	; select bank1
 14368  2CDC  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14369  2CDE  278E               	fcall	PL282	;call to abstracted procedure
 14370  2CDF  31B4  2472  31AA   	fcall	___ftge
 14371  2CE2  1803               	btfsc	3,0
 14372  2CE3  2D11               	goto	l24702
 14373  2CE4                     l24686:	
 14374                           ;PID.c: 58: }
 14375                           
 14376                           ;PID.c: 56: {
 14377                           ;PID.c: 57: Error=0;
 14378                           
 14379                           
 14380                           ;PID.c: 59: else if(Error>=3)
 14381  2CE4  0021               	movlb	1	; select bank1
 14382  2CE5  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14383  2CE7  27F1               	fcall	PL382	;call to abstracted procedure
 14384  2CE8  31B4  2472  31AA   	fcall	___ftge
 14385  2CEB  1803               	btfsc	3,0
 14386  2CEC  2CF5               	goto	l24694
 14387                           
 14388                           ;PID.c: 63: else if(Error<=-3)
 14389                           
 14390                           ;PID.c: 62: }
 14391                           
 14392                           ;PID.c: 60: {
 14393                           ;PID.c: 61: dk=200.0;
 14394  2CED  3040               	movlw	64
 14395  2CEE  01D1               	clrf	___ftge@ff1
 14396  2CEF  00D2               	movwf	___ftge@ff1+1
 14397  2CF0  30C0               	movlw	192
 14398  2CF1  26F4               	fcall	PL22	;call to abstracted procedure
 14399  2CF2  31B4  2472  31AA   	fcall	___ftge
 14400  2CF5                     l24694:	
 14401                           ;PID.c: 66: }
 14402                           
 14403                           ;PID.c: 64: {
 14404                           ;PID.c: 65: dk=200.0;
 14405                           
 14406                           
 14407                           ;PID.c: 67: else
 14408                           ;PID.c: 68: {
 14409                           ;PID.c: 69: dk=200.0;
 14410  2CF5  0021               	movlb	1	; select bank1
 14411  2CF6  3048               	movlw	72
 14412  2CF7  01E6               	clrf	pid_calc@dk^(0+128)
 14413  2CF8  00E7               	movwf	(pid_calc@dk+1)^(0+128)
 14414  2CF9  3043               	movlw	67
 14415  2CFA  2D2D               	goto	L99
 14416  2CFB                     l24696:	
 14417                           
 14418                           ;PID.c: 72: else if(pid_index==0x02)
 14419  2CFB  083F               	movf	_pid_index^(0+128),w
 14420  2CFC  3A02               	xorlw	2
 14421  2CFD  1D03               	skipz
 14422  2CFE  2D2E               	goto	l24710
 14423                           
 14424                           ;PID.c: 73: {
 14425                           ;PID.c: 74: if((Error<=1)&&(Error>=-1))
 14426  2CFF  0020               	movlb	0	; select bank0
 14427  2D00  2752  31AA         	fcall	PL142	;call to abstracted procedure
 14428  2D02  26F4               	fcall	PL22	;call to abstracted procedure
 14429  2D03  31B4  2472  31AA   	fcall	___ftge
 14430  2D06  1C03               	btfss	3,0
 14431  2D07  2D16               	goto	l24704
 14432  2D08  0021               	movlb	1	; select bank1
 14433  2D09  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14434  2D0B  278E               	fcall	PL282	;call to abstracted procedure
 14435  2D0C  31B4  2472  31AA   	fcall	___ftge
 14436  2D0F  1C03               	btfss	3,0
 14437  2D10  2D16               	goto	l24704
 14438  2D11                     l24702:	
 14439                           
 14440                           ;PID.c: 75: {
 14441                           ;PID.c: 76: Error=0;
 14442  2D11  0021               	movlb	1	; select bank1
 14443  2D12  01EC               	clrf	pid_calc@Error^(0+128)
 14444  2D13  01ED               	clrf	(pid_calc@Error+1)^(0+128)
 14445  2D14  01EE               	clrf	(pid_calc@Error+2)^(0+128)
 14446                           
 14447                           ;PID.c: 77: }
 14448  2D15  2D2E               	goto	l24710
 14449  2D16                     l24704:	
 14450                           
 14451                           ;PID.c: 78: else if((Error>=2)||(Error<=-2))
 14452  2D16  0021               	movlb	1	; select bank1
 14453  2D17  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14454  2D19  27A7               	fcall	PL312	;call to abstracted procedure
 14455  2D1A  31B4  2472  31AA   	fcall	___ftge
 14456  2D1D  1803               	btfsc	3,0
 14457  2D1E  2D28               	goto	l24708
 14458  2D1F  30C0               	movlw	192
 14459  2D20  01D1               	clrf	___ftge@ff1
 14460  2D21  01D2               	clrf	___ftge@ff1+1
 14461  2D22  26F4               	fcall	PL22	;call to abstracted procedure
 14462  2D23  31B4  2472  31AA   	fcall	___ftge
 14463  2D26  1C03               	btfss	3,0
 14464  2D27  2D2E               	goto	l24710
 14465  2D28                     l24708:	
 14466                           
 14467                           ;PID.c: 79: {
 14468                           ;PID.c: 80: dk=100.0;
 14469  2D28  0021               	movlb	1	; select bank1
 14470  2D29  30C8               	movlw	200
 14471  2D2A  01E6               	clrf	pid_calc@dk^(0+128)
 14472  2D2B  00E7               	movwf	(pid_calc@dk+1)^(0+128)
 14473  2D2C  3042               	movlw	66
 14474  2D2D                     L99:	
 14475  2D2D  00E8               	movwf	(pid_calc@dk+2)^(0+128)
 14476  2D2E                     l24710:	
 14477                           
 14478                           ;PID.c: 81: }
 14479                           ;PID.c: 82: }
 14480                           ;PID.c: 84: }
 14481                           ;PID.c: 87: pp->SumError += Error;
 14482  2D2E  0021               	movlb	1	; select bank1
 14483  2D2F  086C               	movf	pid_calc@Error^(0+128),w
 14484  2D30  0020               	movlb	0	; select bank0
 14485  2D31  00C2               	movwf	___ftadd@f1
 14486  2D32  0021               	movlb	1	; select bank1
 14487  2D33  086D               	movf	(pid_calc@Error+1)^(0+128),w
 14488  2D34  0020               	movlb	0	; select bank0
 14489  2D35  00C3               	movwf	___ftadd@f1+1
 14490  2D36  0021               	movlb	1	; select bank1
 14491  2D37  086E               	movf	(pid_calc@Error+2)^(0+128),w
 14492  2D38  0020               	movlb	0	; select bank0
 14493  2D39  00C4               	movwf	___ftadd@f1+2
 14494  2D3A  276A  31AA         	fcall	PL234	;call to abstracted procedure
 14495  2D3C  27C0               	fcall	PL344	;call to abstracted procedure
 14496  2D3D  318B  230F  31AA   	fcall	___ftadd
 14497  2D40  0857               	movf	pid_calc@pp,w
 14498  2D41  0086               	movwf	6
 14499  2D42  0858               	movf	pid_calc@pp+1,w
 14500  2D43  0087               	movwf	7
 14501  2D44  3152               	addfsr 1,18
 14502  2D45  27AC  31AA         	fcall	PL314	;call to abstracted procedure
 14503                           
 14504                           ;PID.c: 91: if((pp->SumError)>=2) pp->SumError= 2;
 14505  2D47  276A  31AA         	fcall	PL234	;call to abstracted procedure
 14506  2D49  277D  31AA         	fcall	PL256	;call to abstracted procedure
 14507  2D4B  2764               	fcall	PL220	;call to abstracted procedure
 14508  2D4C  31B4  2472  31AA   	fcall	___ftge
 14509  2D4F  1C03               	btfss	3,0
 14510  2D50  2D5A               	goto	l24716
 14511  2D51  0857               	movf	pid_calc@pp,w
 14512  2D52  0086               	movwf	6
 14513  2D53  0858               	movf	pid_calc@pp+1,w
 14514  2D54  0087               	movwf	7
 14515  2D55  3000               	movlw	0
 14516  2D56  3152               	addfsr 1,18
 14517  2D57  27FB  31AA         	fcall	PL386	;call to abstracted procedure
 14518  2D59  2D6C               	goto	l24720
 14519  2D5A                     l24716:	
 14520                           
 14521                           ;PID.c: 92: else if((pp->SumError)<=-2) pp->SumError= -2;
 14522  2D5A  30C0               	movlw	192
 14523  2D5B  01D1               	clrf	___ftge@ff1
 14524  2D5C  01D2               	clrf	___ftge@ff1+1
 14525  2D5D  00D3               	movwf	___ftge@ff1+2
 14526  2D5E  276A  31AA         	fcall	PL234	;call to abstracted procedure
 14527  2D60  27D6               	fcall	PL356	;call to abstracted procedure
 14528  2D61  31B4  2472  31AA   	fcall	___ftge
 14529  2D64  27E7  31AA         	fcall	PL376	;call to abstracted procedure
 14530  2D66  1C03               	btfss	3,0
 14531  2D67  2D6E               	goto	L105
 14532  2D68  3000               	movlw	0
 14533  2D69  3152               	addfsr 1,18
 14534  2D6A  27EC  31AA         	fcall	PL380	;call to abstracted procedure
 14535  2D6C                     l24720:	
 14536                           
 14537                           ;PID.c: 94: dError = pp->LastError - pp->PrevError;
 14538  2D6C  27E7  31AA         	fcall	PL376	;call to abstracted procedure
 14539  2D6E                     L105:	
 14540  2D6E  314F               	addfsr 1,15
 14541  2D6F  3F40               	moviw [0]fsr1
 14542  2D70  27BA  31AA         	fcall	PL340	;call to abstracted procedure
 14543  2D72  279A  31AA         	fcall	PL304	;call to abstracted procedure
 14544  2D74  3F40               	moviw [0]fsr1
 14545  2D75  2782  31AA         	fcall	PL278	;call to abstracted procedure
 14546  2D77  26CF  31AA         	fcall	___ftsub
 14547  2D79  084E               	movf	?___ftsub,w
 14548  2D7A  0021               	movlb	1	; select bank1
 14549  2D7B  00DD               	movwf	pid_calc@dError^(0+128)
 14550  2D7C  0020               	movlb	0	; select bank0
 14551  2D7D  084F               	movf	?___ftsub+1,w
 14552  2D7E  0021               	movlb	1	; select bank1
 14553  2D7F  00DE               	movwf	(pid_calc@dError+1)^(0+128)
 14554  2D80  0020               	movlb	0	; select bank0
 14555  2D81  0850               	movf	?___ftsub+2,w
 14556  2D82  0021               	movlb	1	; select bank1
 14557  2D83  00DF               	movwf	(pid_calc@dError+2)^(0+128)
 14558                           
 14559                           ;PID.c: 96: pp->PrevError = pp->LastError;
 14560  2D84  0020               	movlb	0	; select bank0
 14561  2D85  279A  31AA         	fcall	PL304	;call to abstracted procedure
 14562  2D87  3F40               	moviw [0]fsr1
 14563  2D88  00DB               	movwf	??_pid_calc
 14564  2D89  3F41               	moviw [1]fsr1
 14565  2D8A  00DC               	movwf	??_pid_calc+1
 14566  2D8B  3F42               	moviw [2]fsr1
 14567  2D8C  00DD               	movwf	??_pid_calc+2
 14568  2D8D  0857               	movf	pid_calc@pp,w
 14569  2D8E  0086               	movwf	6
 14570  2D8F  0858               	movf	pid_calc@pp+1,w
 14571  2D90  0087               	movwf	7
 14572  2D91  314F               	addfsr 1,15
 14573  2D92  085B               	movf	??_pid_calc,w
 14574  2D93  3FC0               	movwi [0]fsr1
 14575  2D94  085C               	movf	??_pid_calc+1,w
 14576  2D95  3FC1               	movwi [1]fsr1
 14577  2D96  085D               	movf	??_pid_calc+2,w
 14578  2D97  3FC2               	movwi [2]fsr1
 14579                           
 14580                           ;PID.c: 98: pp->LastError = Error;
 14581  2D98  279A  31AA         	fcall	PL304	;call to abstracted procedure
 14582  2D9A  0021               	movlb	1	; select bank1
 14583  2D9B  086C               	movf	pid_calc@Error^(0+128),w
 14584  2D9C  3FC0               	movwi [0]fsr1
 14585  2D9D  086D               	movf	(pid_calc@Error+1)^(0+128),w
 14586  2D9E  3FC1               	movwi [1]fsr1
 14587  2D9F  086E               	movf	(pid_calc@Error+2)^(0+128),w
 14588  2DA0  3FC2               	movwi [2]fsr1
 14589                           
 14590                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 14591  2DA1  086C               	movf	pid_calc@Error^(0+128),w
 14592  2DA2  0020               	movlb	0	; select bank0
 14593  2DA3  00B3               	movwf	___ftmul@f1
 14594  2DA4  0021               	movlb	1	; select bank1
 14595  2DA5  086D               	movf	(pid_calc@Error+1)^(0+128),w
 14596  2DA6  0020               	movlb	0	; select bank0
 14597  2DA7  00B4               	movwf	___ftmul@f1+1
 14598  2DA8  0021               	movlb	1	; select bank1
 14599  2DA9  086E               	movf	(pid_calc@Error+2)^(0+128),w
 14600  2DAA  0020               	movlb	0	; select bank0
 14601  2DAB  2794  31AA         	fcall	PL302	;call to abstracted procedure
 14602  2DAD  3143               	addfsr 1,3
 14603  2DAE  3F40               	moviw [0]fsr1
 14604  2DAF  2771               	fcall	PL242	;call to abstracted procedure
 14605  2DB0  318A  22AA  31AA   	fcall	___ftmul
 14606  2DB3  0833               	movf	?___ftmul,w
 14607  2DB4  0021               	movlb	1	; select bank1
 14608  2DB5  00E0               	movwf	_pid_calc$3192^(0+128)
 14609  2DB6  0020               	movlb	0	; select bank0
 14610  2DB7  0834               	movf	?___ftmul+1,w
 14611  2DB8  0021               	movlb	1	; select bank1
 14612  2DB9  00E1               	movwf	(_pid_calc$3192+1)^(0+128)
 14613  2DBA  0020               	movlb	0	; select bank0
 14614  2DBB  0835               	movf	?___ftmul+2,w
 14615  2DBC  0021               	movlb	1	; select bank1
 14616  2DBD  00E2               	movwf	(_pid_calc$3192+2)^(0+128)
 14617                           
 14618                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 14619  2DBE  0020               	movlb	0	; select bank0
 14620  2DBF  276A  31AA         	fcall	PL234	;call to abstracted procedure
 14621  2DC1  27D1  31AA         	fcall	PL354	;call to abstracted procedure
 14622  2DC3  2794  31AA         	fcall	PL302	;call to abstracted procedure
 14623  2DC5  3146               	addfsr 1,6
 14624  2DC6  3F40               	moviw [0]fsr1
 14625  2DC7  2771               	fcall	PL242	;call to abstracted procedure
 14626  2DC8  318A  22AA  31AA   	fcall	___ftmul
 14627  2DCB  2756               	fcall	PL192	;call to abstracted procedure
 14628  2DCC  0866               	movf	pid_calc@dk^(0+128),w
 14629  2DCD  0020               	movlb	0	; select bank0
 14630  2DCE  00B3               	movwf	___ftmul@f1
 14631  2DCF  0021               	movlb	1	; select bank1
 14632  2DD0  0867               	movf	(pid_calc@dk+1)^(0+128),w
 14633  2DD1  0020               	movlb	0	; select bank0
 14634  2DD2  00B4               	movwf	___ftmul@f1+1
 14635  2DD3  0021               	movlb	1	; select bank1
 14636  2DD4  0868               	movf	(pid_calc@dk+2)^(0+128),w
 14637  2DD5  0020               	movlb	0	; select bank0
 14638  2DD6  00B5               	movwf	___ftmul@f1+2
 14639  2DD7  0021               	movlb	1	; select bank1
 14640  2DD8  0860               	movf	_pid_calc$3192^(0+128),w
 14641  2DD9  0020               	movlb	0	; select bank0
 14642  2DDA  00B6               	movwf	___ftmul@f2
 14643  2DDB  0021               	movlb	1	; select bank1
 14644  2DDC  0861               	movf	(_pid_calc$3192+1)^(0+128),w
 14645  2DDD  0020               	movlb	0	; select bank0
 14646  2DDE  00B7               	movwf	___ftmul@f2+1
 14647  2DDF  0021               	movlb	1	; select bank1
 14648  2DE0  0862               	movf	(_pid_calc$3192+2)^(0+128),w
 14649  2DE1  0020               	movlb	0	; select bank0
 14650  2DE2  00B8               	movwf	___ftmul@f2+2
 14651  2DE3  318A  22AA  31AA   	fcall	___ftmul
 14652  2DE6  27B3               	fcall	PL336	;call to abstracted procedure
 14653  2DE7  318B  230F  31AA   	fcall	___ftadd
 14654  2DEA  0842               	movf	?___ftadd,w
 14655  2DEB  0021               	movlb	1	; select bank1
 14656  2DEC  00E3               	movwf	_pid_calc$3193^(0+128)
 14657  2DED  0020               	movlb	0	; select bank0
 14658  2DEE  0843               	movf	?___ftadd+1,w
 14659  2DEF  0021               	movlb	1	; select bank1
 14660  2DF0  00E4               	movwf	(_pid_calc$3193+1)^(0+128)
 14661  2DF1  0020               	movlb	0	; select bank0
 14662  2DF2  0844               	movf	?___ftadd+2,w
 14663  2DF3  0021               	movlb	1	; select bank1
 14664  2DF4  00E5               	movwf	(_pid_calc$3193+2)^(0+128)
 14665                           
 14666                           ;PID.c: 100: PWM_var=(pp->Proportion * Error*dk + pp->Integral * pp->SumError + pp->Deri
      +                          vative * dError ) ;
 14667  2DF5  085D               	movf	pid_calc@dError^(0+128),w
 14668  2DF6  0020               	movlb	0	; select bank0
 14669  2DF7  00B3               	movwf	___ftmul@f1
 14670  2DF8  0021               	movlb	1	; select bank1
 14671  2DF9  085E               	movf	(pid_calc@dError+1)^(0+128),w
 14672  2DFA  0020               	movlb	0	; select bank0
 14673  2DFB  00B4               	movwf	___ftmul@f1+1
 14674  2DFC  0021               	movlb	1	; select bank1
 14675  2DFD  085F               	movf	(pid_calc@dError+2)^(0+128),w
 14676  2DFE  0020               	movlb	0	; select bank0
 14677  2DFF  2794  31AA         	fcall	PL302	;call to abstracted procedure
 14678  2E01  3149               	addfsr 1,9
 14679  2E02  3F40               	moviw [0]fsr1
 14680  2E03  2771               	fcall	PL242	;call to abstracted procedure
 14681  2E04  318A  22AA  31AA   	fcall	___ftmul
 14682  2E07  2756               	fcall	PL192	;call to abstracted procedure
 14683  2E08  0863               	movf	_pid_calc$3193^(0+128),w
 14684  2E09  0020               	movlb	0	; select bank0
 14685  2E0A  00C5               	movwf	___ftadd@f2
 14686  2E0B  0021               	movlb	1	; select bank1
 14687  2E0C  0864               	movf	(_pid_calc$3193+1)^(0+128),w
 14688  2E0D  0020               	movlb	0	; select bank0
 14689  2E0E  00C6               	movwf	___ftadd@f2+1
 14690  2E0F  0021               	movlb	1	; select bank1
 14691  2E10  0865               	movf	(_pid_calc$3193+2)^(0+128),w
 14692  2E11  0020               	movlb	0	; select bank0
 14693  2E12  00C7               	movwf	___ftadd@f2+2
 14694  2E13  318B  230F  31AA   	fcall	___ftadd
 14695  2E16  0842               	movf	?___ftadd,w
 14696  2E17  0021               	movlb	1	; select bank1
 14697  2E18  00E9               	movwf	pid_calc@PWM_var^(0+128)
 14698  2E19  0020               	movlb	0	; select bank0
 14699  2E1A  0843               	movf	?___ftadd+1,w
 14700  2E1B  0021               	movlb	1	; select bank1
 14701  2E1C  00EA               	movwf	(pid_calc@PWM_var+1)^(0+128)
 14702  2E1D  0020               	movlb	0	; select bank0
 14703  2E1E  0844               	movf	?___ftadd+2,w
 14704  2E1F  0021               	movlb	1	; select bank1
 14705  2E20  00EB               	movwf	(pid_calc@PWM_var+2)^(0+128)
 14706                           
 14707                           ;PID.c: 103: if((Error>=3 && Error<=5)||(Error<=-3 && Error>=-5))
 14708  2E21  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14709  2E23  27F1               	fcall	PL382	;call to abstracted procedure
 14710  2E24  31B4  2472  31AA   	fcall	___ftge
 14711  2E27  1C03               	btfss	3,0
 14712  2E28  2E33               	goto	l24736
 14713  2E29  30A0               	movlw	160
 14714  2E2A  01D1               	clrf	___ftge@ff1
 14715  2E2B  00D2               	movwf	___ftge@ff1+1
 14716  2E2C  3040               	movlw	64
 14717  2E2D  26F4               	fcall	PL22	;call to abstracted procedure
 14718  2E2E  31B4  2472  31AA   	fcall	___ftge
 14719  2E31  1803               	btfsc	3,0
 14720  2E32  2E46               	goto	l24740
 14721  2E33                     l24736:	
 14722  2E33  3040               	movlw	64
 14723  2E34  01D1               	clrf	___ftge@ff1
 14724  2E35  00D2               	movwf	___ftge@ff1+1
 14725  2E36  30C0               	movlw	192
 14726  2E37  26F4               	fcall	PL22	;call to abstracted procedure
 14727  2E38  31B4  2472  31AA   	fcall	___ftge
 14728  2E3B  1C03               	btfss	3,0
 14729  2E3C  2E52               	goto	l24748
 14730  2E3D  0021               	movlb	1	; select bank1
 14731  2E3E  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14732  2E40  2788               	fcall	PL280	;call to abstracted procedure
 14733  2E41  31B4  2472  31AA   	fcall	___ftge
 14734  2E44  1C03               	btfss	3,0
 14735  2E45  2E52               	goto	l24748
 14736  2E46                     l24740:	
 14737                           
 14738                           ;PID.c: 104: {
 14739                           ;PID.c: 105: if(PWM_var>=2)PWM_var = 2;
 14740  2E46  0021               	movlb	1	; select bank1
 14741  2E47  0869               	movf	pid_calc@PWM_var^(0+128),w
 14742  2E48  272B  31AA         	fcall	PL96	;call to abstracted procedure
 14743  2E4A  27A7               	fcall	PL312	;call to abstracted procedure
 14744  2E4B  31B4  2472  31AA   	fcall	___ftge
 14745  2E4E  1803               	btfsc	3,0
 14746  2E4F  2E99               	goto	L102
 14747                           
 14748                           ;PID.c: 106: else if(PWM_var <= -2)PWM_var = -2;
 14749  2E50  30C0               	movlw	192
 14750  2E51  2E9D               	goto	L104
 14751  2E52                     l24748:	
 14752                           
 14753                           ;PID.c: 108: else if((Error>5)||(Error<-5))
 14754  2E52  3187  2758  31AA   	fcall	PL268	;call to abstracted procedure
 14755  2E55  26F4               	fcall	PL22	;call to abstracted procedure
 14756  2E56  31B4  2472  31AA   	fcall	___ftge
 14757  2E59  1C03               	btfss	3,0
 14758  2E5A  2E64               	goto	l24752
 14759  2E5B  0021               	movlb	1	; select bank1
 14760  2E5C  2702  31AA         	fcall	PL26	;call to abstracted procedure
 14761  2E5E  2788               	fcall	PL280	;call to abstracted procedure
 14762  2E5F  31B4  2472  31AA   	fcall	___ftge
 14763  2E62  1803               	btfsc	3,0
 14764  2E63  2E8C               	goto	l24760
 14765  2E64                     l24752:	
 14766                           
 14767                           ;PID.c: 109: {
 14768                           ;PID.c: 110: if(PWM_var>=5)PWM_var = 5;
 14769  2E64  0021               	movlb	1	; select bank1
 14770  2E65  0869               	movf	pid_calc@PWM_var^(0+128),w
 14771  2E66  272B  31AA         	fcall	PL96	;call to abstracted procedure
 14772  2E68  27CB               	fcall	PL352	;call to abstracted procedure
 14773  2E69  31B4  2472  31AA   	fcall	___ftge
 14774  2E6C  1C03               	btfss	3,0
 14775  2E6D  2E74               	goto	l24756
 14776  2E6E  0021               	movlb	1	; select bank1
 14777  2E6F  30A0               	movlw	160
 14778  2E70  01E9               	clrf	pid_calc@PWM_var^(0+128)
 14779  2E71  00EA               	movwf	(pid_calc@PWM_var+1)^(0+128)
 14780  2E72  3040               	movlw	64
 14781  2E73  2EC1               	goto	L101
 14782  2E74                     l24756:	
 14783                           
 14784                           ;PID.c: 111: else if(PWM_var <= -5)PWM_var = -5;
 14785  2E74  30A0               	movlw	160
 14786  2E75  271A               	fcall	PL78	;call to abstracted procedure
 14787  2E76  0869               	movf	pid_calc@PWM_var^(0+128),w
 14788  2E77  0020               	movlb	0	; select bank0
 14789  2E78  00D4               	movwf	___ftge@ff2
 14790  2E79  0021               	movlb	1	; select bank1
 14791  2E7A  086A               	movf	(pid_calc@PWM_var+1)^(0+128),w
 14792  2E7B  0020               	movlb	0	; select bank0
 14793  2E7C  00D5               	movwf	___ftge@ff2+1
 14794  2E7D  0021               	movlb	1	; select bank1
 14795  2E7E  086B               	movf	(pid_calc@PWM_var+2)^(0+128),w
 14796  2E7F  0020               	movlb	0	; select bank0
 14797  2E80  00D6               	movwf	___ftge@ff2+2
 14798  2E81  31B4  2472  31AA   	fcall	___ftge
 14799  2E84  1C03               	btfss	3,0
 14800  2E85  2EC2               	goto	l1129
 14801  2E86  0021               	movlb	1	; select bank1
 14802  2E87  30A0               	movlw	160
 14803  2E88  01E9               	clrf	pid_calc@PWM_var^(0+128)
 14804  2E89  00EA               	movwf	(pid_calc@PWM_var+1)^(0+128)
 14805  2E8A  30C0               	movlw	192
 14806  2E8B  2EC1               	goto	L101
 14807  2E8C                     l24760:	
 14808                           
 14809                           ;PID.c: 113: else
 14810                           ;PID.c: 114: {
 14811                           ;PID.c: 115: if(have_person1_flag)
 14812  2E8C  0021               	movlb	1	; select bank1
 14813  2E8D  0839               	movf	_have_person1_flag^(0+128),w
 14814  2E8E  1903               	btfsc	3,2
 14815  2E8F  2EA8               	goto	l24770
 14816                           
 14817                           ;PID.c: 116: {
 14818                           ;PID.c: 117: if(PWM_var>=0.5)PWM_var = 2;
 14819  2E90  0869               	movf	pid_calc@PWM_var^(0+128),w
 14820  2E91  272B  31AA         	fcall	PL96	;call to abstracted procedure
 14821  2E93  27C6               	fcall	PL348	;call to abstracted procedure
 14822  2E94  31B4  2472  31AA   	fcall	___ftge
 14823  2E97  1C03               	btfss	3,0
 14824  2E98  2E9C               	goto	l24766
 14825  2E99                     L102:	
 14826  2E99  0021               	movlb	1	; select bank1
 14827  2E9A  3040               	movlw	64
 14828  2E9B  2EBF               	goto	L100
 14829  2E9C                     l24766:	
 14830                           
 14831                           ;PID.c: 118: else if(PWM_var <= -0.5)PWM_var = -2;
 14832  2E9C  30BF               	movlw	191
 14833  2E9D                     L104:	
 14834  2E9D  01D1               	clrf	___ftge@ff1
 14835  2E9E  01D2               	clrf	___ftge@ff1+1
 14836  2E9F  2736               	fcall	PL98	;call to abstracted procedure
 14837  2EA0  31B4  2472  31AA   	fcall	___ftge
 14838  2EA3  1C03               	btfss	3,0
 14839  2EA4  2EC2               	goto	l1129
 14840  2EA5  0021               	movlb	1	; select bank1
 14841  2EA6  30C0               	movlw	192
 14842  2EA7  2EBF               	goto	L100
 14843  2EA8                     l24770:	
 14844                           
 14845                           ;PID.c: 120: else
 14846                           ;PID.c: 121: {
 14847                           ;PID.c: 122: if(PWM_var>=0.5)PWM_var = 0.5;
 14848  2EA8  0869               	movf	pid_calc@PWM_var^(0+128),w
 14849  2EA9  272B  31AA         	fcall	PL96	;call to abstracted procedure
 14850  2EAB  27C6               	fcall	PL348	;call to abstracted procedure
 14851  2EAC  31B4  2472  31AA   	fcall	___ftge
 14852  2EAF  1C03               	btfss	3,0
 14853  2EB0  2EB4               	goto	l24774
 14854  2EB1  0021               	movlb	1	; select bank1
 14855  2EB2  303F               	movlw	63
 14856  2EB3  2EBF               	goto	L100
 14857  2EB4                     l24774:	
 14858                           
 14859                           ;PID.c: 123: else if(PWM_var <= -0.5)PWM_var = -0.5;
 14860  2EB4  30BF               	movlw	191
 14861  2EB5  01D1               	clrf	___ftge@ff1
 14862  2EB6  01D2               	clrf	___ftge@ff1+1
 14863  2EB7  2736               	fcall	PL98	;call to abstracted procedure
 14864  2EB8  31B4  2472  31AA   	fcall	___ftge
 14865  2EBB  1C03               	btfss	3,0
 14866  2EBC  2EC2               	goto	l1129
 14867  2EBD  0021               	movlb	1	; select bank1
 14868  2EBE  30BF               	movlw	191
 14869  2EBF                     L100:	
 14870  2EBF  01E9               	clrf	pid_calc@PWM_var^(0+128)
 14871  2EC0  01EA               	clrf	(pid_calc@PWM_var+1)^(0+128)
 14872  2EC1                     L101:	
 14873  2EC1  00EB               	movwf	(pid_calc@PWM_var+2)^(0+128)
 14874  2EC2                     l1129:	
 14875                           
 14876                           ;PID.c: 124: }
 14877                           ;PID.c: 126: }
 14878                           ;PID.c: 129: return (PWM_var );
 14879  2EC2  0021               	movlb	1	; select bank1
 14880  2EC3  0869               	movf	pid_calc@PWM_var^(0+128),w
 14881  2EC4  0020               	movlb	0	; select bank0
 14882  2EC5  00D7               	movwf	?_pid_calc
 14883  2EC6  0021               	movlb	1	; select bank1
 14884  2EC7  086A               	movf	(pid_calc@PWM_var+1)^(0+128),w
 14885  2EC8  0020               	movlb	0	; select bank0
 14886  2EC9  00D8               	movwf	?_pid_calc+1
 14887  2ECA  0021               	movlb	1	; select bank1
 14888  2ECB  086B               	movf	(pid_calc@PWM_var+2)^(0+128),w
 14889  2ECC  0020               	movlb	0	; select bank0
 14890  2ECD  00D9               	movwf	?_pid_calc+2
 14891  2ECE  0008               	return
 14892  2ECF                     __end_of_pid_calc:	
 14893  2ECF                     __ptext19:	
 14894 ;; *************** function ___ftsub *****************
 14895 ;; Defined at:
 14896 ;;		line 18 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftsub.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;  f2              3   46[BANK0 ] float 
 14899 ;;  f1              3   49[BANK0 ] float 
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;                  3   46[BANK0 ] float 
 14904 ;; Registers used:
 14905 ;;		wreg, status,2, status,0, pclath, cstack
 14906 ;; Tracked objects:
 14907 ;;		On entry : 1F/0
 14908 ;;		On exit  : 1F/0
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14911 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;Total ram usage:        6 bytes
 14916 ;; Hardware stack levels used:    1
 14917 ;; Hardware stack levels required when called:    4
 14918 ;; This function calls:
 14919 ;;		___ftadd
 14920 ;; This function is called by:
 14921 ;;		_pid_calc
 14922 ;;		_pid_calc_2
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           
 14927                           ;psect for function ___ftsub
 14928  2ECF                     ___ftsub:	
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 14932  2ECF  3080               	movlw	128
 14933  2ED0  06D0               	xorwf	___ftsub@f2+2,f
 14934  2ED1  0851               	movf	___ftsub@f1,w
 14935  2ED2  00C2               	movwf	___ftadd@f1
 14936  2ED3  0852               	movf	___ftsub@f1+1,w
 14937  2ED4  00C3               	movwf	___ftadd@f1+1
 14938  2ED5  0853               	movf	___ftsub@f1+2,w
 14939  2ED6  00C4               	movwf	___ftadd@f1+2
 14940  2ED7  084E               	movf	___ftsub@f2,w
 14941  2ED8  00C5               	movwf	___ftadd@f2
 14942  2ED9  084F               	movf	___ftsub@f2+1,w
 14943  2EDA  00C6               	movwf	___ftadd@f2+1
 14944  2EDB  0850               	movf	___ftsub@f2+2,w
 14945  2EDC  00C7               	movwf	___ftadd@f2+2
 14946  2EDD  318B  230F         	fcall	___ftadd
 14947  2EDF  0842               	movf	?___ftadd,w
 14948  2EE0  00CE               	movwf	?___ftsub
 14949  2EE1  0843               	movf	?___ftadd+1,w
 14950  2EE2  00CF               	movwf	?___ftsub+1
 14951  2EE3  0844               	movf	?___ftadd+2,w
 14952  2EE4  00D0               	movwf	?___ftsub+2
 14953  2EE5  0008               	return
 14954  2EE6                     __end_of___ftsub:	
 14955  2EE6                     PL20:	
 14956  2EE6  00D3               	movwf	___ftge@ff1+2
 14957  2EE7  0021               	movlb	1	; select bank1
 14958  2EE8  086D               	movf	pid_calc_2@Error^(0+128),w
 14959  2EE9  0020               	movlb	0	; select bank0
 14960  2EEA  00D4               	movwf	___ftge@ff2
 14961  2EEB  0021               	movlb	1	; select bank1
 14962  2EEC  086E               	movf	(pid_calc_2@Error+1)^(0+128),w
 14963  2EED  0020               	movlb	0	; select bank0
 14964  2EEE  00D5               	movwf	___ftge@ff2+1
 14965  2EEF  0021               	movlb	1	; select bank1
 14966  2EF0  086F               	movf	(pid_calc_2@Error+2)^(0+128),w
 14967  2EF1  0020               	movlb	0	; select bank0
 14968  2EF2  00D6               	movwf	___ftge@ff2+2
 14969  2EF3  0008               	return
 14970  2EF4                     __end_ofPL20:	
 14971  2EF4                     PL22:	
 14972  2EF4  00D3               	movwf	___ftge@ff1+2
 14973  2EF5  0021               	movlb	1	; select bank1
 14974  2EF6  086C               	movf	pid_calc@Error^(0+128),w
 14975  2EF7  0020               	movlb	0	; select bank0
 14976  2EF8  00D4               	movwf	___ftge@ff2
 14977  2EF9  0021               	movlb	1	; select bank1
 14978  2EFA  086D               	movf	(pid_calc@Error+1)^(0+128),w
 14979  2EFB  0020               	movlb	0	; select bank0
 14980  2EFC  00D5               	movwf	___ftge@ff2+1
 14981  2EFD  0021               	movlb	1	; select bank1
 14982  2EFE  086E               	movf	(pid_calc@Error+2)^(0+128),w
 14983  2EFF  0020               	movlb	0	; select bank0
 14984  2F00  00D6               	movwf	___ftge@ff2+2
 14985  2F01  0008               	return
 14986  2F02                     __end_ofPL22:	
 14987  2F02                     PL26:	
 14988  2F02  086C               	movf	pid_calc@Error^(0+128),w
 14989  2F03  0020               	movlb	0	; select bank0
 14990  2F04  00D1               	movwf	___ftge@ff1
 14991  2F05  0021               	movlb	1	; select bank1
 14992  2F06  086D               	movf	(pid_calc@Error+1)^(0+128),w
 14993  2F07  0020               	movlb	0	; select bank0
 14994  2F08  00D2               	movwf	___ftge@ff1+1
 14995  2F09  0021               	movlb	1	; select bank1
 14996  2F0A  086E               	movf	(pid_calc@Error+2)^(0+128),w
 14997  2F0B  0020               	movlb	0	; select bank0
 14998  2F0C  00D3               	movwf	___ftge@ff1+2
 14999  2F0D  0008               	return
 15000  2F0E                     __end_ofPL26:	
 15001  2F0E                     PL28:	
 15002  2F0E  086D               	movf	pid_calc_2@Error^(0+128),w
 15003  2F0F  0020               	movlb	0	; select bank0
 15004  2F10  00D1               	movwf	___ftge@ff1
 15005  2F11  0021               	movlb	1	; select bank1
 15006  2F12  086E               	movf	(pid_calc_2@Error+1)^(0+128),w
 15007  2F13  0020               	movlb	0	; select bank0
 15008  2F14  00D2               	movwf	___ftge@ff1+1
 15009  2F15  0021               	movlb	1	; select bank1
 15010  2F16  086F               	movf	(pid_calc_2@Error+2)^(0+128),w
 15011  2F17  0020               	movlb	0	; select bank0
 15012  2F18  00D3               	movwf	___ftge@ff1+2
 15013  2F19  0008               	return
 15014  2F1A                     __end_ofPL28:	
 15015  2F1A                     PL78:	
 15016  2F1A  01D1               	clrf	___ftge@ff1
 15017  2F1B  00D2               	movwf	___ftge@ff1+1
 15018  2F1C  30C0               	movlw	192
 15019  2F1D  00D3               	movwf	___ftge@ff1+2
 15020  2F1E  0021               	movlb	1	; select bank1
 15021  2F1F  0008               	return
 15022  2F20                     __end_ofPL78:	
 15023  2F20                     PL92:	
 15024  2F20  0020               	movlb	0	; select bank0
 15025  2F21  00D1               	movwf	___ftge@ff1
 15026  2F22  0021               	movlb	1	; select bank1
 15027  2F23  086A               	movf	(pid_calc_2@PWM_var+1)^(0+128),w
 15028  2F24  0020               	movlb	0	; select bank0
 15029  2F25  00D2               	movwf	___ftge@ff1+1
 15030  2F26  0021               	movlb	1	; select bank1
 15031  2F27  086B               	movf	(pid_calc_2@PWM_var+2)^(0+128),w
 15032  2F28  0020               	movlb	0	; select bank0
 15033  2F29  00D3               	movwf	___ftge@ff1+2
 15034  2F2A  0008               	return
 15035  2F2B                     __end_ofPL92:	
 15036  2F2B                     PL96:	
 15037  2F2B  0020               	movlb	0	; select bank0
 15038  2F2C  00D1               	movwf	___ftge@ff1
 15039  2F2D  0021               	movlb	1	; select bank1
 15040  2F2E  086A               	movf	(pid_calc@PWM_var+1)^(0+128),w
 15041  2F2F  0020               	movlb	0	; select bank0
 15042  2F30  00D2               	movwf	___ftge@ff1+1
 15043  2F31  0021               	movlb	1	; select bank1
 15044  2F32  086B               	movf	(pid_calc@PWM_var+2)^(0+128),w
 15045  2F33  0020               	movlb	0	; select bank0
 15046  2F34  00D3               	movwf	___ftge@ff1+2
 15047  2F35  0008               	return
 15048  2F36                     __end_ofPL96:	
 15049  2F36                     PL98:	
 15050  2F36  00D3               	movwf	___ftge@ff1+2
 15051  2F37  0021               	movlb	1	; select bank1
 15052  2F38  0869               	movf	pid_calc@PWM_var^(0+128),w
 15053  2F39  0020               	movlb	0	; select bank0
 15054  2F3A  00D4               	movwf	___ftge@ff2
 15055  2F3B  0021               	movlb	1	; select bank1
 15056  2F3C  086A               	movf	(pid_calc@PWM_var+1)^(0+128),w
 15057  2F3D  0020               	movlb	0	; select bank0
 15058  2F3E  00D5               	movwf	___ftge@ff2+1
 15059  2F3F  0021               	movlb	1	; select bank1
 15060  2F40  086B               	movf	(pid_calc@PWM_var+2)^(0+128),w
 15061  2F41  0020               	movlb	0	; select bank0
 15062  2F42  00D6               	movwf	___ftge@ff2+2
 15063  2F43  0008               	return
 15064  2F44                     __end_ofPL98:	
 15065  2F44                     PL100:	
 15066  2F44  00D3               	movwf	___ftge@ff1+2
 15067  2F45  0021               	movlb	1	; select bank1
 15068  2F46  0869               	movf	pid_calc_2@PWM_var^(0+128),w
 15069  2F47  0020               	movlb	0	; select bank0
 15070  2F48  00D4               	movwf	___ftge@ff2
 15071  2F49  0021               	movlb	1	; select bank1
 15072  2F4A  086A               	movf	(pid_calc_2@PWM_var+1)^(0+128),w
 15073  2F4B  0020               	movlb	0	; select bank0
 15074  2F4C  00D5               	movwf	___ftge@ff2+1
 15075  2F4D  0021               	movlb	1	; select bank1
 15076  2F4E  086B               	movf	(pid_calc_2@PWM_var+2)^(0+128),w
 15077  2F4F  0020               	movlb	0	; select bank0
 15078  2F50  00D6               	movwf	___ftge@ff2+2
 15079  2F51  0008               	return
 15080  2F52                     __end_ofPL100:	
 15081  2F52                     PL142:	
 15082  2F52  3080               	movlw	128
 15083  2F53  01D1               	clrf	___ftge@ff1
 15084  2F54  00D2               	movwf	___ftge@ff1+1
 15085  2F55  343F               	retlw	63
 15086  2F56                     __end_ofPL142:	
 15087  2F56                     PL192:	
 15088  2F56  0833               	movf	?___ftmul,w
 15089  2F57  00C2               	movwf	___ftadd@f1
 15090  2F58  0834               	movf	?___ftmul+1,w
 15091  2F59  00C3               	movwf	___ftadd@f1+1
 15092  2F5A  0835               	movf	?___ftmul+2,w
 15093  2F5B  00C4               	movwf	___ftadd@f1+2
 15094  2F5C  0021               	movlb	1	; select bank1
 15095  2F5D  0008               	return
 15096  2F5E                     __end_ofPL192:	
 15097  2F5E                     PL198:	
 15098  2F5E  0086               	movwf	6
 15099  2F5F  3002               	movlw	2	; select bank4/5
 15100  2F60  0087               	movwf	7
 15101  2F61  3F40               	moviw [0]fsr1
 15102  2F62  0020               	movlb	0	; select bank0
 15103  2F63  0008               	return
 15104  2F64                     __end_ofPL198:	
 15105  2F64                     PL220:	
 15106  2F64  00D3               	movwf	___ftge@ff1+2
 15107  2F65  3040               	movlw	64
 15108  2F66  01D4               	clrf	___ftge@ff2
 15109  2F67  01D5               	clrf	___ftge@ff2+1
 15110  2F68  00D6               	movwf	___ftge@ff2+2
 15111  2F69  0008               	return
 15112  2F6A                     __end_ofPL220:	
 15113  2F6A                     PL234:	
 15114  2F6A  0857               	movf	pid_calc@pp,w
 15115  2F6B  0086               	movwf	6
 15116  2F6C  0858               	movf	pid_calc@pp+1,w
 15117  2F6D  0087               	movwf	7
 15118  2F6E  3152               	addfsr 1,18
 15119  2F6F  3F40               	moviw [0]fsr1
 15120  2F70  0008               	return
 15121  2F71                     __end_ofPL234:	
 15122  2F71                     PL242:	
 15123  2F71  00B6               	movwf	___ftmul@f2
 15124  2F72  3F41               	moviw [1]fsr1
 15125  2F73  00B7               	movwf	___ftmul@f2+1
 15126  2F74  3F42               	moviw [2]fsr1
 15127  2F75  00B8               	movwf	___ftmul@f2+2
 15128  2F76  0008               	return
 15129  2F77                     __end_ofPL242:	
 15130  2F77                     PL248:	
 15131  2F77  086C               	movf	pid_calc_2@pp^(0+128),w
 15132  2F78  3E12               	addlw	18
 15133  2F79  0086               	movwf	6
 15134  2F7A  3002               	movlw	2	; select bank4/5
 15135  2F7B  0087               	movwf	7
 15136  2F7C  0008               	return
 15137  2F7D                     __end_ofPL248:	
 15138  2F7D                     PL256:	
 15139  2F7D  00D1               	movwf	___ftge@ff1
 15140  2F7E  3F41               	moviw [1]fsr1
 15141  2F7F  00D2               	movwf	___ftge@ff1+1
 15142  2F80  3F42               	moviw [2]fsr1
 15143  2F81  0008               	return
 15144  2F82                     __end_ofPL256:	
 15145  2F82                     PL278:	
 15146  2F82  00D1               	movwf	___ftsub@f1
 15147  2F83  3F41               	moviw [1]fsr1
 15148  2F84  00D2               	movwf	___ftsub@f1+1
 15149  2F85  3F42               	moviw [2]fsr1
 15150  2F86  00D3               	movwf	___ftsub@f1+2
 15151  2F87  0008               	return
 15152  2F88                     __end_ofPL278:	
 15153  2F88                     PL280:	
 15154  2F88  30A0               	movlw	160
 15155  2F89  01D4               	clrf	___ftge@ff2
 15156  2F8A  00D5               	movwf	___ftge@ff2+1
 15157  2F8B  30C0               	movlw	192
 15158  2F8C  00D6               	movwf	___ftge@ff2+2
 15159  2F8D  0008               	return
 15160  2F8E                     __end_ofPL280:	
 15161  2F8E                     PL282:	
 15162  2F8E  3080               	movlw	128
 15163  2F8F  01D4               	clrf	___ftge@ff2
 15164  2F90  00D5               	movwf	___ftge@ff2+1
 15165  2F91  30BF               	movlw	191
 15166  2F92  00D6               	movwf	___ftge@ff2+2
 15167  2F93  0008               	return
 15168  2F94                     __end_ofPL282:	
 15169  2F94                     PL302:	
 15170  2F94  00B5               	movwf	___ftmul@f1+2
 15171  2F95  0857               	movf	pid_calc@pp,w
 15172  2F96  0086               	movwf	6
 15173  2F97  0858               	movf	pid_calc@pp+1,w
 15174  2F98  0087               	movwf	7
 15175  2F99  0008               	return
 15176  2F9A                     __end_ofPL302:	
 15177  2F9A                     PL304:	
 15178  2F9A  0857               	movf	pid_calc@pp,w
 15179  2F9B  0086               	movwf	6
 15180  2F9C  0858               	movf	pid_calc@pp+1,w
 15181  2F9D  0087               	movwf	7
 15182  2F9E  314C               	addfsr 1,12
 15183  2F9F  0008               	return
 15184  2FA0                     __end_ofPL304:	
 15185  2FA0                     PL306:	
 15186  2FA0  082B               	movf	?___awtoft,w
 15187  2FA1  00CE               	movwf	___ftsub@f2
 15188  2FA2  082C               	movf	?___awtoft+1,w
 15189  2FA3  00CF               	movwf	___ftsub@f2+1
 15190  2FA4  082D               	movf	?___awtoft+2,w
 15191  2FA5  00D0               	movwf	___ftsub@f2+2
 15192  2FA6  0008               	return
 15193  2FA7                     __end_ofPL306:	
 15194  2FA7                     PL312:	
 15195  2FA7  3040               	movlw	64
 15196  2FA8  01D4               	clrf	___ftge@ff2
 15197  2FA9  01D5               	clrf	___ftge@ff2+1
 15198  2FAA  00D6               	movwf	___ftge@ff2+2
 15199  2FAB  0008               	return
 15200  2FAC                     __end_ofPL312:	
 15201  2FAC                     PL314:	
 15202  2FAC  0842               	movf	?___ftadd,w
 15203  2FAD  3FC0               	movwi [0]fsr1
 15204  2FAE  0843               	movf	?___ftadd+1,w
 15205  2FAF  3FC1               	movwi [1]fsr1
 15206  2FB0  0844               	movf	?___ftadd+2,w
 15207  2FB1  3FC2               	movwi [2]fsr1
 15208  2FB2  0008               	return
 15209  2FB3                     __end_ofPL314:	
 15210  2FB3                     PL336:	
 15211  2FB3  0833               	movf	?___ftmul,w
 15212  2FB4  00C5               	movwf	___ftadd@f2
 15213  2FB5  0834               	movf	?___ftmul+1,w
 15214  2FB6  00C6               	movwf	___ftadd@f2+1
 15215  2FB7  0835               	movf	?___ftmul+2,w
 15216  2FB8  00C7               	movwf	___ftadd@f2+2
 15217  2FB9  0008               	return
 15218  2FBA                     __end_ofPL336:	
 15219  2FBA                     PL340:	
 15220  2FBA  00CE               	movwf	___ftsub@f2
 15221  2FBB  3F41               	moviw [1]fsr1
 15222  2FBC  00CF               	movwf	___ftsub@f2+1
 15223  2FBD  3F42               	moviw [2]fsr1
 15224  2FBE  00D0               	movwf	___ftsub@f2+2
 15225  2FBF  0008               	return
 15226  2FC0                     __end_ofPL340:	
 15227  2FC0                     PL344:	
 15228  2FC0  00C5               	movwf	___ftadd@f2
 15229  2FC1  3F41               	moviw [1]fsr1
 15230  2FC2  00C6               	movwf	___ftadd@f2+1
 15231  2FC3  3F42               	moviw [2]fsr1
 15232  2FC4  00C7               	movwf	___ftadd@f2+2
 15233  2FC5  0008               	return
 15234  2FC6                     __end_ofPL344:	
 15235  2FC6                     PL348:	
 15236  2FC6  303F               	movlw	63
 15237  2FC7  01D4               	clrf	___ftge@ff2
 15238  2FC8  01D5               	clrf	___ftge@ff2+1
 15239  2FC9  00D6               	movwf	___ftge@ff2+2
 15240  2FCA  0008               	return
 15241  2FCB                     __end_ofPL348:	
 15242  2FCB                     PL352:	
 15243  2FCB  30A0               	movlw	160
 15244  2FCC  01D4               	clrf	___ftge@ff2
 15245  2FCD  00D5               	movwf	___ftge@ff2+1
 15246  2FCE  3040               	movlw	64
 15247  2FCF  00D6               	movwf	___ftge@ff2+2
 15248  2FD0  0008               	return
 15249  2FD1                     __end_ofPL352:	
 15250  2FD1                     PL354:	
 15251  2FD1  00B3               	movwf	___ftmul@f1
 15252  2FD2  3F41               	moviw [1]fsr1
 15253  2FD3  00B4               	movwf	___ftmul@f1+1
 15254  2FD4  3F42               	moviw [2]fsr1
 15255  2FD5  0008               	return
 15256  2FD6                     __end_ofPL354:	
 15257  2FD6                     PL356:	
 15258  2FD6  00D4               	movwf	___ftge@ff2
 15259  2FD7  3F41               	moviw [1]fsr1
 15260  2FD8  00D5               	movwf	___ftge@ff2+1
 15261  2FD9  3F42               	moviw [2]fsr1
 15262  2FDA  00D6               	movwf	___ftge@ff2+2
 15263  2FDB  0008               	return
 15264  2FDC                     __end_ofPL356:	
 15265  2FDC                     PL364:	
 15266  2FDC  3080               	movlw	128
 15267  2FDD  01D4               	clrf	___ftge@ff2
 15268  2FDE  00D5               	movwf	___ftge@ff2+1
 15269  2FDF  3040               	movlw	64
 15270  2FE0  00D6               	movwf	___ftge@ff2+2
 15271  2FE1  0008               	return
 15272  2FE2                     __end_ofPL364:	
 15273  2FE2                     PL374:	
 15274  2FE2  30C0               	movlw	192
 15275  2FE3  01D4               	clrf	___ftge@ff2
 15276  2FE4  01D5               	clrf	___ftge@ff2+1
 15277  2FE5  00D6               	movwf	___ftge@ff2+2
 15278  2FE6  0008               	return
 15279  2FE7                     __end_ofPL374:	
 15280  2FE7                     PL376:	
 15281  2FE7  0857               	movf	pid_calc@pp,w
 15282  2FE8  0086               	movwf	6
 15283  2FE9  0858               	movf	pid_calc@pp+1,w
 15284  2FEA  0087               	movwf	7
 15285  2FEB  0008               	return
 15286  2FEC                     __end_ofPL376:	
 15287  2FEC                     PL380:	
 15288  2FEC  3FC0               	movwi [0]fsr1
 15289  2FED  3FC1               	movwi [1]fsr1
 15290  2FEE  30C0               	movlw	192
 15291  2FEF  3FC2               	movwi [2]fsr1
 15292  2FF0  0008               	return
 15293  2FF1                     __end_ofPL380:	
 15294  2FF1                     PL382:	
 15295  2FF1  3040               	movlw	64
 15296  2FF2  01D4               	clrf	___ftge@ff2
 15297  2FF3  00D5               	movwf	___ftge@ff2+1
 15298  2FF4  00D6               	movwf	___ftge@ff2+2
 15299  2FF5  0008               	return
 15300  2FF6                     __end_ofPL382:	
 15301  2FF6                     PL384:	
 15302  2FF6  3040               	movlw	64
 15303  2FF7  01D4               	clrf	___ftge@ff2
 15304  2FF8  00D5               	movwf	___ftge@ff2+1
 15305  2FF9  00D6               	movwf	___ftge@ff2+2
 15306  2FFA  0008               	return
 15307  2FFB                     __end_ofPL384:	
 15308  2FFB                     PL386:	
 15309  2FFB  3FC0               	movwi [0]fsr1
 15310  2FFC  3FC1               	movwi [1]fsr1
 15311  2FFD  3040               	movlw	64
 15312  2FFE  3FC2               	movwi [2]fsr1
 15313  2FFF  0008               	return
 15314  3000                     __end_ofPL386:	
 15315                           
 15316                           	psect	text15
 15317  087A                     __ptext15:	
 15318 ;; *************** function ___wmul *****************
 15319 ;; Defined at:
 15320 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;  multiplier      2    3[BANK0 ] unsigned int 
 15323 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  product         2    7[BANK0 ] unsigned int 
 15326 ;; Return value:  Size  Location     Type
 15327 ;;                  2    3[BANK0 ] unsigned int 
 15328 ;; Registers used:
 15329 ;;		wreg, status,2, status,0
 15330 ;; Tracked objects:
 15331 ;;		On entry : 1F/0
 15332 ;;		On exit  : 1F/0
 15333 ;;		Unchanged: 0/0
 15334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;Total ram usage:        6 bytes
 15340 ;; Hardware stack levels used:    1
 15341 ;; Hardware stack levels required when called:    2
 15342 ;; This function calls:
 15343 ;;		Nothing
 15344 ;; This function is called by:
 15345 ;;		_handle_ad_loop
 15346 ;; This function uses a non-reentrant model
 15347 ;;
 15348                           
 15349                           
 15350                           ;psect for function ___wmul
 15351  087A                     ___wmul:	
 15352                           
 15353                           ;incstack = 0
 15354                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15355  087A  01A7               	clrf	___wmul@product
 15356  087B  01A8               	clrf	___wmul@product+1
 15357  087C                     l25328:	
 15358  087C  1C23               	btfss	___wmul@multiplier,0
 15359  087D  2882               	goto	l25332
 15360  087E  0825               	movf	___wmul@multiplicand,w
 15361  087F  07A7               	addwf	___wmul@product,f
 15362  0880  0826               	movf	___wmul@multiplicand+1,w
 15363  0881  3DA8               	addwfc	___wmul@product+1,f
 15364  0882                     l25332:	
 15365  0882  35A5               	lslf	___wmul@multiplicand,f
 15366  0883  0DA6               	rlf	___wmul@multiplicand+1,f
 15367  0884  36A4               	lsrf	___wmul@multiplier+1,f
 15368  0885  0CA3               	rrf	___wmul@multiplier,f
 15369  0886  0824               	movf	___wmul@multiplier+1,w
 15370  0887  0423               	iorwf	___wmul@multiplier,w
 15371  0888  1D03               	skipz
 15372  0889  287C               	goto	l25328
 15373  088A  0828               	movf	___wmul@product+1,w
 15374  088B  00A4               	movwf	?___wmul+1
 15375  088C  0827               	movf	___wmul@product,w
 15376  088D  00A3               	movwf	?___wmul
 15377  088E  0008               	return
 15378  088F                     __end_of___wmul:	
 15379                           
 15380                           	psect	text16
 15381  07C1                     __ptext16:	
 15382 ;; *************** function ___lldiv *****************
 15383 ;; Defined at:
 15384 ;;		line 6 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lldiv.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;  divisor         4    3[BANK0 ] unsigned long 
 15387 ;;  dividend        4    7[BANK0 ] unsigned long 
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;  quotient        4   11[BANK0 ] unsigned long 
 15390 ;;  counter         1   15[BANK0 ] unsigned char 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  4    3[BANK0 ] unsigned long 
 15393 ;; Registers used:
 15394 ;;		wreg, status,2, status,0
 15395 ;; Tracked objects:
 15396 ;;		On entry : 1F/0
 15397 ;;		On exit  : 1F/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15400 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15404 ;;Total ram usage:       13 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:    2
 15407 ;; This function calls:
 15408 ;;		Nothing
 15409 ;; This function is called by:
 15410 ;;		_handle_ad_loop
 15411 ;; This function uses a non-reentrant model
 15412 ;;
 15413                           
 15414                           
 15415                           ;psect for function ___lldiv
 15416  07C1                     ___lldiv:	
 15417                           
 15418                           ;incstack = 0
 15419                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 15420  07C1  01AB               	clrf	___lldiv@quotient
 15421  07C2  01AC               	clrf	___lldiv@quotient+1
 15422  07C3  01AD               	clrf	___lldiv@quotient+2
 15423  07C4  01AE               	clrf	___lldiv@quotient+3
 15424  07C5  0826               	movf	___lldiv@divisor+3,w
 15425  07C6  0425               	iorwf	___lldiv@divisor+2,w
 15426  07C7  0424               	iorwf	___lldiv@divisor+1,w
 15427  07C8  0423               	iorwf	___lldiv@divisor,w
 15428  07C9  1903               	skipnz
 15429  07CA  2FF7               	goto	l25292
 15430  07CB  01AF               	clrf	___lldiv@counter
 15431  07CC                     L92:	
 15432  07CC  0AAF               	incf	___lldiv@counter,f
 15433  07CD  1BA6               	btfsc	___lldiv@divisor+3,7
 15434  07CE  2FD4               	goto	l25280
 15435  07CF  35A3               	lslf	___lldiv@divisor,f
 15436  07D0  0DA4               	rlf	___lldiv@divisor+1,f
 15437  07D1  0DA5               	rlf	___lldiv@divisor+2,f
 15438  07D2  0DA6               	rlf	___lldiv@divisor+3,f
 15439  07D3  2FCC               	goto	L92
 15440  07D4                     l25280:	
 15441  07D4  35AB               	lslf	___lldiv@quotient,f
 15442  07D5  0DAC               	rlf	___lldiv@quotient+1,f
 15443  07D6  0DAD               	rlf	___lldiv@quotient+2,f
 15444  07D7  0DAE               	rlf	___lldiv@quotient+3,f
 15445  07D8  0826               	movf	___lldiv@divisor+3,w
 15446  07D9  022A               	subwf	___lldiv@dividend+3,w
 15447  07DA  1D03               	skipz
 15448  07DB  2FE6               	goto	u16365
 15449  07DC  0825               	movf	___lldiv@divisor+2,w
 15450  07DD  0229               	subwf	___lldiv@dividend+2,w
 15451  07DE  1D03               	skipz
 15452  07DF  2FE6               	goto	u16365
 15453  07E0  0824               	movf	___lldiv@divisor+1,w
 15454  07E1  0228               	subwf	___lldiv@dividend+1,w
 15455  07E2  1D03               	skipz
 15456  07E3  2FE6               	goto	u16365
 15457  07E4  0823               	movf	___lldiv@divisor,w
 15458  07E5  0227               	subwf	___lldiv@dividend,w
 15459  07E6                     u16365:	
 15460  07E6  1C03               	skipc
 15461  07E7  2FF1               	goto	l25288
 15462  07E8  0823               	movf	___lldiv@divisor,w
 15463  07E9  02A7               	subwf	___lldiv@dividend,f
 15464  07EA  0824               	movf	___lldiv@divisor+1,w
 15465  07EB  3BA8               	subwfb	___lldiv@dividend+1,f
 15466  07EC  0825               	movf	___lldiv@divisor+2,w
 15467  07ED  3BA9               	subwfb	___lldiv@dividend+2,f
 15468  07EE  0826               	movf	___lldiv@divisor+3,w
 15469  07EF  3BAA               	subwfb	___lldiv@dividend+3,f
 15470  07F0  142B               	bsf	___lldiv@quotient,0
 15471  07F1                     l25288:	
 15472  07F1  36A6               	lsrf	___lldiv@divisor+3,f
 15473  07F2  0CA5               	rrf	___lldiv@divisor+2,f
 15474  07F3  0CA4               	rrf	___lldiv@divisor+1,f
 15475  07F4  0CA3               	rrf	___lldiv@divisor,f
 15476  07F5  0BAF               	decfsz	___lldiv@counter,f
 15477  07F6  2FD4               	goto	l25280
 15478  07F7                     l25292:	
 15479  07F7  082E               	movf	___lldiv@quotient+3,w
 15480  07F8  00A6               	movwf	?___lldiv+3
 15481  07F9  082D               	movf	___lldiv@quotient+2,w
 15482  07FA  00A5               	movwf	?___lldiv+2
 15483  07FB  082C               	movf	___lldiv@quotient+1,w
 15484  07FC  00A4               	movwf	?___lldiv+1
 15485  07FD  082B               	movf	___lldiv@quotient,w
 15486  07FE  00A3               	movwf	?___lldiv
 15487  07FF  0008               	return
 15488  0800                     __end_of___lldiv:	
 15489                           
 15490                           	psect	text24
 15491  0840                     __ptext24:	
 15492 ;; *************** function _Enable_Buck_Pwm *****************
 15493 ;; Defined at:
 15494 ;;		line 125 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;		None
 15497 ;; Auto vars:     Size  Location     Type
 15498 ;;		None
 15499 ;; Return value:  Size  Location     Type
 15500 ;;		None               void
 15501 ;; Registers used:
 15502 ;;		None
 15503 ;; Tracked objects:
 15504 ;;		On entry : 1F/1
 15505 ;;		On exit  : 1F/8
 15506 ;;		Unchanged: 0/0
 15507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;Total ram usage:        0 bytes
 15513 ;; Hardware stack levels used:    1
 15514 ;; Hardware stack levels required when called:    2
 15515 ;; This function calls:
 15516 ;;		Nothing
 15517 ;; This function is called by:
 15518 ;;		_handle_ad_loop
 15519 ;; This function uses a non-reentrant model
 15520 ;;
 15521                           
 15522                           
 15523                           ;psect for function _Enable_Buck_Pwm
 15524  0840                     _Enable_Buck_Pwm:	
 15525                           
 15526                           ;pwm.c: 127: TRISCbits.TRISC2=0;
 15527                           
 15528                           ;incstack = 0
 15529                           ; Regs used in _Enable_Buck_Pwm: []
 15530  0840  110E               	bcf	14,2	;volatile
 15531                           
 15532                           ;pwm.c: 129: TMR6ON=1;
 15533  0841  0028               	movlb	8	; select bank8
 15534  0842  151E               	bsf	30,2	;volatile
 15535  0843  0008               	return
 15536  0844                     __end_of_Enable_Buck_Pwm:	
 15537                           
 15538                           	psect	text38
 15539  19A6                     __ptext38:	
 15540 ;; *************** function _Key_Menu *****************
 15541 ;; Defined at:
 15542 ;;		line 567 in file "D:\MCUProject\ZH-SL-S4080-1\src\ird_remote.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;  key_value       4   64[BANK0 ] unsigned long 
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;  remote_mac      2    0        unsigned int 
 15547 ;;  code            1   68[BANK0 ] unsigned char 
 15548 ;; Return value:  Size  Location     Type
 15549 ;;		None               void
 15550 ;; Registers used:
 15551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15552 ;; Tracked objects:
 15553 ;;		On entry : 1F/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15557 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15560 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15561 ;;Total ram usage:        5 bytes
 15562 ;; Hardware stack levels used:    1
 15563 ;; Hardware stack levels required when called:    3
 15564 ;; This function calls:
 15565 ;;		_Disable_Bost_Pwm1
 15566 ;;		_Disable_Bost_Pwm2
 15567 ;;		_Disable_Buck_Pwm
 15568 ;;		_Enable_Bost_Pwm1
 15569 ;;		_Enable_Bost_Pwm2
 15570 ;;		_Set_Bost_Pwm1_Duty
 15571 ;;		_Set_Bost_Pwm2_Duty
 15572 ;;		_Set_Buck_Pwm_Duty
 15573 ;;		_delay_ms
 15574 ;;		_eeprom_write
 15575 ;; This function is called by:
 15576 ;;		_main
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           
 15581                           ;psect for function _Key_Menu
 15582  19A6                     _Key_Menu:	
 15583                           
 15584                           ;ird_remote.c: 578: remote_mac=key_value>>16;
 15585                           
 15586                           ;incstack = 0
 15587                           ; Regs used in _Key_Menu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15588  19A6  0861               	movf	Key_Menu@key_value+1,w
 15589  19A7  00E4               	movwf	Key_Menu@code
 15590                           
 15591                           ;ird_remote.c: 586: switch(code)
 15592  19A8  2AA1               	goto	l22264
 15593  19A9                     l623:	
 15594                           ;ird_remote.c: 587: {
 15595                           ;ird_remote.c: 588: case 0x00:
 15596                           
 15597                           
 15598                           ;ird_remote.c: 589: __nop();
 15599  19A9  0000               	nop
 15600                           
 15601                           ;ird_remote.c: 590: break;
 15602  19AA  0008               	return
 15603  19AB                     l21912:	
 15604                           
 15605                           ;ird_remote.c: 592: if(device_status==0x01)
 15606  19AB  0021               	movlb	1	; select bank1
 15607  19AC  0B36               	decfsz	_device_status^(0+128),w
 15608  19AD  0008               	return
 15609                           
 15610                           ;ird_remote.c: 593: {
 15611                           ;ird_remote.c: 594: light_mode =0x00;
 15612  19AE  01BD               	clrf	_light_mode^(0+128)
 15613                           
 15614                           ;ird_remote.c: 595: eeprom_write(0x36,(unsigned char)(light_mode));
 15615  19AF  27CA               	fcall	PL324	;call to abstracted procedure
 15616  19B0  31A9  21BA  3199   	fcall	_eeprom_write
 15617                           
 15618                           ;ird_remote.c: 597: light2_mode =0x00;
 15619  19B3  0021               	movlb	1	; select bank1
 15620  19B4  01BC               	clrf	_light2_mode^(0+128)
 15621  19B5                     L107:	
 15622                           
 15623                           ;ird_remote.c: 598: eeprom_write(0x37,(unsigned char)(light2_mode));
 15624  19B5  083C               	movf	_light2_mode^(0+128),w
 15625  19B6  0020               	movlb	0	; select bank0
 15626  19B7  00DE               	movwf	eeprom_write@value
 15627  19B8  3037               	movlw	55
 15628  19B9  31A9  21BA  3199   	fcall	_eeprom_write
 15629                           
 15630                           ;ird_remote.c: 600: led_out_ctrl=0x00;
 15631  19BC  0021               	movlb	1	; select bank1
 15632                           
 15633                           ;ird_remote.c: 601: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 15634  19BD  31AA  220A  3199   	fcall	PL236	;call to abstracted procedure
 15635  19C0  31A9  21BA  3199   	fcall	_eeprom_write
 15636                           
 15637                           ;ird_remote.c: 605: lr_cnt = 0x00;
 15638  19C3  0021               	movlb	1	; select bank1
 15639  19C4                     L108:	
 15640  19C4  01C6               	clrf	_work_mode^(0+128)
 15641                           
 15642                           ;ird_remote.c: 607: nop_index=0x00;
 15643                           
 15644                           ;ird_remote.c: 608: discharge1_index=0x00;
 15645                           
 15646                           ;ird_remote.c: 609: discharge2_index=0x00;
 15647                           
 15648                           ;ird_remote.c: 610: charge_index=0x00;
 15649  19C5  31AA  2203  3199   	fcall	PL114	;call to abstracted procedure
 15650                           
 15651                           ;ird_remote.c: 612: Disable_Buck_Pwm();
 15652  19C8  2655  3199         	fcall	_Disable_Buck_Pwm
 15653                           
 15654                           ;ird_remote.c: 613: Set_Buck_Pwm_Duty(0);
 15655  19CA  0020               	movlb	0	; select bank0
 15656  19CB  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 15657  19CC  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 15658  19CD  265A               	fcall	_Set_Buck_Pwm_Duty
 15659                           
 15660                           ;ird_remote.c: 615: Disable_Bost_Pwm1();
 15661  19CE  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 15662                           
 15663                           ;ird_remote.c: 616: (LATCbits.LATC3 = 0x00);
 15664                           
 15665                           ;ird_remote.c: 617: Set_Bost_Pwm1_Duty(0);
 15666  19D1  275E  3199         	fcall	PL122	;call to abstracted procedure
 15667  19D3  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15668                           
 15669                           ;ird_remote.c: 618: Disable_Bost_Pwm2();
 15670  19D5  25F1  3199         	fcall	_Disable_Bost_Pwm2
 15671                           
 15672                           ;ird_remote.c: 619: (LATCbits.LATC0 = 0x00);
 15673                           
 15674                           ;ird_remote.c: 620: Set_Bost_Pwm2_Duty(0);
 15675  19D7  2770  3199         	fcall	PL128	;call to abstracted procedure
 15676  19D9  253E               	fcall	_Set_Bost_Pwm2_Duty
 15677                           
 15678                           ;ird_remote.c: 622: (LATCbits.LATC3 = 0x01);
 15679  19DA  0022               	movlb	2	; select bank2
 15680  19DB  158E               	bsf	14,3	;volatile
 15681                           
 15682                           ;ird_remote.c: 623: Enable_Bost_Pwm1();
 15683  19DC  31A9  21DC  3199   	fcall	_Enable_Bost_Pwm1
 15684                           
 15685                           ;ird_remote.c: 624: (LATCbits.LATC0 = 0x01);
 15686  19DF  0022               	movlb	2	; select bank2
 15687  19E0  140E               	bsf	14,0	;volatile
 15688                           
 15689                           ;ird_remote.c: 625: Enable_Bost_Pwm2();
 15690  19E1  31A9  21E1  3199   	fcall	_Enable_Bost_Pwm2
 15691                           
 15692                           ;ird_remote.c: 627: Set_Bost_Pwm1_Duty(200);
 15693  19E4  30C8               	movlw	200
 15694  19E5  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 15695  19E6  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15696  19E7  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15697                           
 15698                           ;ird_remote.c: 628: Set_Bost_Pwm2_Duty(200);
 15699  19E9  27B0  3199         	fcall	PL288	;call to abstracted procedure
 15700  19EB  253E               	fcall	_Set_Bost_Pwm2_Duty
 15701                           
 15702                           ;ird_remote.c: 630: delay_ms(1000);
 15703  19EC  31AA  220F  3199   	fcall	PL272	;call to abstracted procedure
 15704  19EF                     L109:	
 15705  19EF  256C  3199         	fcall	_delay_ms
 15706                           
 15707                           ;ird_remote.c: 632: Set_Bost_Pwm1_Duty(0);
 15708  19F1  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 15709  19F2  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15710  19F3  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15711                           
 15712                           ;ird_remote.c: 633: Set_Bost_Pwm2_Duty(0);
 15713  19F5  0020               	movlb	0	; select bank0
 15714  19F6  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 15715  19F7  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 15716  19F8  253E               	fcall	_Set_Bost_Pwm2_Duty
 15717                           
 15718                           ;ird_remote.c: 635: Disable_Bost_Pwm1();
 15719  19F9  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 15720                           
 15721                           ;ird_remote.c: 636: (LATCbits.LATC3 = 0x00);
 15722                           
 15723                           ;ird_remote.c: 637: Set_Bost_Pwm1_Duty(0);
 15724  19FC  275E  3199         	fcall	PL122	;call to abstracted procedure
 15725  19FE  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15726                           
 15727                           ;ird_remote.c: 638: Disable_Bost_Pwm2();
 15728  1A00  25F1  3199         	fcall	_Disable_Bost_Pwm2
 15729                           
 15730                           ;ird_remote.c: 639: (LATCbits.LATC0 = 0x00);
 15731                           
 15732                           ;ird_remote.c: 640: Set_Bost_Pwm2_Duty(0);
 15733  1A02  2770  3199         	fcall	PL128	;call to abstracted procedure
 15734  1A04  253E               	fcall	_Set_Bost_Pwm2_Duty
 15735                           
 15736                           ;ird_remote.c: 643: pv_voltage_status=0x00;
 15737  1A05  0022               	movlb	2	; select bank2
 15738  1A06  01CC               	clrf	_pv_voltage_status^(0+256)
 15739                           
 15740                           ;ird_remote.c: 645: day_time_count=0x00;
 15741  1A07  0025               	movlb	5	; select bank5
 15742                           
 15743                           ;ird_remote.c: 647: night_time_count=0x00;
 15744  1A08  31A9  21FA         	fcall	PL66	;call to abstracted procedure
 15745                           
 15746                           ;ird_remote.c: 649: pv_time_count=0x00;
 15747  1A0A  01A8               	clrf	_pv_time_count^(0+640)
 15748  1A0B  01A9               	clrf	(_pv_time_count+1)^(0+640)
 15749  1A0C  01AA               	clrf	(_pv_time_count+2)^(0+640)
 15750  1A0D  01AB               	clrf	(_pv_time_count+3)^(0+640)
 15751  1A0E  0008               	return
 15752  1A0F                     l21978:	
 15753                           
 15754                           ;ird_remote.c: 653: if(device_status==0x01)
 15755  1A0F  0021               	movlb	1	; select bank1
 15756  1A10  0B36               	decfsz	_device_status^(0+128),w
 15757  1A11  0008               	return
 15758                           
 15759                           ;ird_remote.c: 654: {
 15760                           ;ird_remote.c: 655: light_mode =0x01;
 15761  1A12  01BD               	clrf	_light_mode^(0+128)
 15762  1A13  0ABD               	incf	_light_mode^(0+128),f
 15763                           
 15764                           ;ird_remote.c: 656: eeprom_write(0x36,(unsigned char)(light_mode));
 15765  1A14  27CA               	fcall	PL324	;call to abstracted procedure
 15766  1A15  31A9  21BA  3199   	fcall	_eeprom_write
 15767                           
 15768                           ;ird_remote.c: 658: light2_mode =0x01;
 15769  1A18  0021               	movlb	1	; select bank1
 15770  1A19  01BC               	clrf	_light2_mode^(0+128)
 15771  1A1A  0ABC               	incf	_light2_mode^(0+128),f
 15772  1A1B  29B5               	goto	L107
 15773  1A1C                     l22044:	
 15774                           ;ird_remote.c: 671: charge_index=0x00;
 15775                           
 15776                           ;ird_remote.c: 670: discharge2_index=0x00;
 15777                           
 15778                           ;ird_remote.c: 669: discharge1_index=0x00;
 15779                           
 15780                           ;ird_remote.c: 668: nop_index=0x00;
 15781                           
 15782                           ;ird_remote.c: 666: lr_cnt = 0x00;
 15783                           
 15784                           ;ird_remote.c: 662: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 15785                           
 15786                           ;ird_remote.c: 661: led_out_ctrl=0x00;
 15787                           
 15788                           ;ird_remote.c: 659: eeprom_write(0x37,(unsigned char)(light2_mode));
 15789                           
 15790                           
 15791                           ;ird_remote.c: 714: if(device_status==0x01)
 15792  1A1C  0021               	movlb	1	; select bank1
 15793  1A1D  0B36               	decfsz	_device_status^(0+128),w
 15794  1A1E  0008               	return
 15795                           
 15796                           ;ird_remote.c: 715: {
 15797                           ;ird_remote.c: 716: light_mode =0x02;
 15798  1A1F  3002               	movlw	2
 15799  1A20  00BD               	movwf	_light_mode^(0+128)
 15800                           
 15801                           ;ird_remote.c: 717: eeprom_write(0x36,(unsigned char)(light_mode));
 15802  1A21  27CA               	fcall	PL324	;call to abstracted procedure
 15803  1A22  31A9  21BA  3199   	fcall	_eeprom_write
 15804                           
 15805                           ;ird_remote.c: 719: light2_mode =0x02;
 15806  1A25  3002               	movlw	2
 15807  1A26  0021               	movlb	1	; select bank1
 15808  1A27  00BC               	movwf	_light2_mode^(0+128)
 15809  1A28  29B5               	goto	L107
 15810  1A29                     l22110:	
 15811                           ;ird_remote.c: 732: charge_index=0x00;
 15812                           
 15813                           ;ird_remote.c: 731: discharge2_index=0x00;
 15814                           
 15815                           ;ird_remote.c: 730: discharge1_index=0x00;
 15816                           
 15817                           ;ird_remote.c: 729: nop_index=0x00;
 15818                           
 15819                           ;ird_remote.c: 727: lr_cnt = 0x00;
 15820                           
 15821                           ;ird_remote.c: 723: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 15822                           
 15823                           ;ird_remote.c: 722: led_out_ctrl=0x00;
 15824                           
 15825                           ;ird_remote.c: 720: eeprom_write(0x37,(unsigned char)(light2_mode));
 15826                           
 15827                           
 15828                           ;ird_remote.c: 775: if(device_status==0x01)
 15829  1A29  0021               	movlb	1	; select bank1
 15830  1A2A  0B36               	decfsz	_device_status^(0+128),w
 15831  1A2B  2A36               	goto	l22118
 15832  1A2C  3001               	movlw	1
 15833                           
 15834                           ;ird_remote.c: 776: {
 15835                           ;ird_remote.c: 777: led_out_ctrl=led_out_ctrl+1;
 15836  1A2D  0ABB               	incf	_led_out_ctrl^(0+128),f
 15837                           
 15838                           ;ird_remote.c: 779: led_out_ctrl=led_out_ctrl%2;
 15839  1A2E  05BB               	andwf	_led_out_ctrl^(0+128),f
 15840                           
 15841                           ;ird_remote.c: 781: eeprom_write(0x39,(unsigned char)(led_out_ctrl));
 15842  1A2F  083B               	movf	_led_out_ctrl^(0+128),w
 15843  1A30  0020               	movlb	0	; select bank0
 15844  1A31  00DE               	movwf	eeprom_write@value
 15845  1A32  3039               	movlw	57
 15846  1A33  31A9  21BA  3199   	fcall	_eeprom_write
 15847  1A36                     l22118:	
 15848                           
 15849                           ;ird_remote.c: 782: }
 15850                           ;ird_remote.c: 783: if(led_out_ctrl==0x00 && device_status==0x01)
 15851  1A36  0021               	movlb	1	; select bank1
 15852  1A37  08BB               	movf	_led_out_ctrl^(0+128),f
 15853  1A38  1D03               	skipz
 15854  1A39  2A3D               	goto	l22178
 15855  1A3A  0B36               	decfsz	_device_status^(0+128),w
 15856  1A3B  2A3D               	goto	l22178
 15857  1A3C  29C4               	goto	L108
 15858  1A3D                     l22178:	
 15859                           ;ird_remote.c: 792: charge_index=0x00;
 15860                           
 15861                           ;ird_remote.c: 791: discharge2_index=0x00;
 15862                           
 15863                           ;ird_remote.c: 790: discharge1_index=0x00;
 15864                           
 15865                           ;ird_remote.c: 789: nop_index=0x00;
 15866                           
 15867                           ;ird_remote.c: 787: lr_cnt = 0x00;
 15868                           
 15869                           
 15870                           ;ird_remote.c: 835: else if(led_out_ctrl==0x01 && device_status==0x01)
 15871  1A3D  0B3B               	decfsz	_led_out_ctrl^(0+128),w
 15872  1A3E  0008               	return
 15873  1A3F  0B36               	decfsz	_device_status^(0+128),w
 15874  1A40  0008               	return
 15875                           
 15876                           ;ird_remote.c: 839: lr_cnt = 0x00;
 15877  1A41  01C6               	clrf	_work_mode^(0+128)
 15878                           
 15879                           ;ird_remote.c: 841: nop_index=0x00;
 15880                           
 15881                           ;ird_remote.c: 842: discharge1_index=0x00;
 15882                           
 15883                           ;ird_remote.c: 843: discharge2_index=0x00;
 15884                           
 15885                           ;ird_remote.c: 844: charge_index=0x00;
 15886  1A42  31AA  2203  3199   	fcall	PL114	;call to abstracted procedure
 15887                           
 15888                           ;ird_remote.c: 846: Disable_Buck_Pwm();
 15889  1A45  2655  3199         	fcall	_Disable_Buck_Pwm
 15890                           
 15891                           ;ird_remote.c: 847: Set_Buck_Pwm_Duty(0);
 15892  1A47  0020               	movlb	0	; select bank0
 15893  1A48  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 15894  1A49  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 15895  1A4A  265A               	fcall	_Set_Buck_Pwm_Duty
 15896                           
 15897                           ;ird_remote.c: 848: Disable_Bost_Pwm1();
 15898  1A4B  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 15899                           
 15900                           ;ird_remote.c: 849: (LATCbits.LATC3 = 0x00);
 15901                           
 15902                           ;ird_remote.c: 850: Set_Bost_Pwm1_Duty(0);
 15903  1A4E  275E  3199         	fcall	PL122	;call to abstracted procedure
 15904  1A50  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15905                           
 15906                           ;ird_remote.c: 851: Disable_Bost_Pwm2();
 15907  1A52  25F1  3199         	fcall	_Disable_Bost_Pwm2
 15908                           
 15909                           ;ird_remote.c: 852: (LATCbits.LATC0 = 0x00);
 15910                           
 15911                           ;ird_remote.c: 853: Set_Bost_Pwm2_Duty(0);
 15912  1A54  2770  3199         	fcall	PL128	;call to abstracted procedure
 15913  1A56  253E               	fcall	_Set_Bost_Pwm2_Duty
 15914                           
 15915                           ;ird_remote.c: 855: (LATCbits.LATC3 = 0x01);
 15916  1A57  0022               	movlb	2	; select bank2
 15917  1A58  158E               	bsf	14,3	;volatile
 15918                           
 15919                           ;ird_remote.c: 856: Enable_Bost_Pwm1();
 15920  1A59  31A9  21DC  3199   	fcall	_Enable_Bost_Pwm1
 15921                           
 15922                           ;ird_remote.c: 857: (LATCbits.LATC0 = 0x01);
 15923  1A5C  0022               	movlb	2	; select bank2
 15924  1A5D  140E               	bsf	14,0	;volatile
 15925                           
 15926                           ;ird_remote.c: 858: Enable_Bost_Pwm2();
 15927  1A5E  31A9  21E1  3199   	fcall	_Enable_Bost_Pwm2
 15928                           
 15929                           ;ird_remote.c: 860: Set_Bost_Pwm1_Duty(200);
 15930  1A61  30C8               	movlw	200
 15931  1A62  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 15932  1A63  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15933  1A64  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15934                           
 15935                           ;ird_remote.c: 861: Set_Bost_Pwm2_Duty(200);
 15936  1A66  27B0  3199         	fcall	PL288	;call to abstracted procedure
 15937  1A68  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 15938                           
 15939                           ;ird_remote.c: 863: delay_ms(200);
 15940  1A6A  27AB  3199         	fcall	PL274	;call to abstracted procedure
 15941  1A6C  256C  3199         	fcall	_delay_ms
 15942                           
 15943                           ;ird_remote.c: 865: Set_Bost_Pwm1_Duty(0);
 15944  1A6E  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 15945  1A6F  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15946  1A70  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15947                           
 15948                           ;ird_remote.c: 866: Set_Bost_Pwm2_Duty(0);
 15949  1A72  0020               	movlb	0	; select bank0
 15950  1A73  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 15951  1A74  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 15952  1A75  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 15953                           
 15954                           ;ird_remote.c: 868: delay_ms(200);
 15955  1A77  27AB  3199         	fcall	PL274	;call to abstracted procedure
 15956  1A79  256C  3199         	fcall	_delay_ms
 15957                           
 15958                           ;ird_remote.c: 870: Set_Bost_Pwm1_Duty(200);
 15959  1A7B  30C8               	movlw	200
 15960  1A7C  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 15961  1A7D  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15962  1A7E  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15963                           
 15964                           ;ird_remote.c: 871: Set_Bost_Pwm2_Duty(200);
 15965  1A80  27B0  3199         	fcall	PL288	;call to abstracted procedure
 15966  1A82  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 15967                           
 15968                           ;ird_remote.c: 873: delay_ms(200);
 15969  1A84  27AB  3199         	fcall	PL274	;call to abstracted procedure
 15970  1A86  256C  3199         	fcall	_delay_ms
 15971                           
 15972                           ;ird_remote.c: 875: Set_Bost_Pwm1_Duty(0);
 15973  1A88  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 15974  1A89  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15975  1A8A  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15976                           
 15977                           ;ird_remote.c: 876: Set_Bost_Pwm2_Duty(0);
 15978  1A8C  0020               	movlb	0	; select bank0
 15979  1A8D  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 15980  1A8E  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 15981  1A8F  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 15982                           
 15983                           ;ird_remote.c: 878: delay_ms(200);
 15984  1A91  27AB  3199         	fcall	PL274	;call to abstracted procedure
 15985  1A93  256C  3199         	fcall	_delay_ms
 15986                           
 15987                           ;ird_remote.c: 880: Set_Bost_Pwm1_Duty(200);
 15988  1A95  30C8               	movlw	200
 15989  1A96  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 15990  1A97  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 15991  1A98  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 15992                           
 15993                           ;ird_remote.c: 881: Set_Bost_Pwm2_Duty(200);
 15994  1A9A  27B0  3199         	fcall	PL288	;call to abstracted procedure
 15995  1A9C  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 15996                           
 15997                           ;ird_remote.c: 883: delay_ms(200);
 15998  1A9E  27AB  3199         	fcall	PL274	;call to abstracted procedure
 15999  1AA0  29EF               	goto	L109
 16000  1AA1                     l22264:	
 16001  1AA1  0864               	movf	Key_Menu@code,w
 16002                           
 16003                           ; Switch size 1, requested type "space"
 16004                           ; Number of cases is 5, Range of values is 0 to 136
 16005                           ; switch strategies available:
 16006                           ; Name         Instructions Cycles
 16007                           ; simple_byte           16     9 (average)
 16008                           ; jumptable            260     6 (fixed)
 16009                           ;	Chosen strategy is simple_byte
 16010  1AA2  3A00               	xorlw	0	; case 0
 16011  1AA3  1903               	skipnz
 16012  1AA4  29A9               	goto	l623
 16013  1AA5  3A10               	xorlw	16	; case 16
 16014  1AA6  1903               	skipnz
 16015  1AA7  2A0F               	goto	l21978
 16016  1AA8  3A50               	xorlw	80	; case 64
 16017  1AA9  1903               	skipnz
 16018  1AAA  29AB               	goto	l21912
 16019  1AAB  3A10               	xorlw	16	; case 80
 16020  1AAC  1903               	skipnz
 16021  1AAD  2A1C               	goto	l22044
 16022  1AAE  3AD8               	xorlw	216	; case 136
 16023  1AAF  1903               	skipnz
 16024  1AB0  2A29               	goto	l22110
 16025  1AB1  2AB2               	goto	l637
 16026  1AB2                     l637:	
 16027  1AB2  0008               	return
 16028  1AB3                     __end_of_Key_Menu:	
 16029  1AB3                     __ptext10:	
 16030 ;; *************** function _handle_task_process *****************
 16031 ;; Defined at:
 16032 ;;		line 1568 in file "D:\MCUProject\ZH-SL-S4080-1\src\task.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;		None
 16035 ;; Auto vars:     Size  Location     Type
 16036 ;;		None
 16037 ;; Return value:  Size  Location     Type
 16038 ;;		None               void
 16039 ;; Registers used:
 16040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16041 ;; Tracked objects:
 16042 ;;		On entry : 1F/2
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16047 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16049 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;Total ram usage:        3 bytes
 16051 ;; Hardware stack levels used:    1
 16052 ;; Hardware stack levels required when called:    4
 16053 ;; This function calls:
 16054 ;;		_Disable_Bost_Pwm1
 16055 ;;		_Disable_Bost_Pwm2
 16056 ;;		_Disable_Buck_Pwm
 16057 ;;		_Enable_Bost_Pwm1
 16058 ;;		_Enable_Bost_Pwm2
 16059 ;;		_Set_Bost_Pwm1_Duty
 16060 ;;		_Set_Bost_Pwm2_Duty
 16061 ;;		_Set_Buck_Pwm_Duty
 16062 ;;		___ftadd
 16063 ;;		___ftdiv
 16064 ;;		___ftmul
 16065 ;;		___fttol
 16066 ;;		_delay_ms
 16067 ;;		_eeprom_write
 16068 ;;		_pid_init
 16069 ;; This function is called by:
 16070 ;;		_main
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           
 16075                           ;psect for function _handle_task_process
 16076  1AB3                     _handle_task_process:	
 16077                           
 16078                           ;task.c: 1572: if(handle_short1_flag==0x01)
 16079                           
 16080                           ;incstack = 0
 16081                           ; Regs used in _handle_task_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16082  1AB3  0B34               	decfsz	_handle_short1_flag^(0+256),w
 16083  1AB4  2ABB               	goto	l23878
 16084                           
 16085                           ;task.c: 1576: load1_voltage_status=0x01;
 16086  1AB5  0025               	movlb	5	; select bank5
 16087  1AB6  01C5               	clrf	_over_load1_time_count^(0+640)
 16088  1AB7  01C6               	clrf	(_over_load1_time_count+1)^(0+640)
 16089                           
 16090                           ;task.c: 1580: discharge_led_status=0x00;
 16091  1AB8  0022               	movlb	2	; select bank2
 16092  1AB9  01B4               	clrf	_handle_short1_flag^(0+256)
 16093  1ABA                     l1991:	
 16094                           ;task.c: 1582: while(1);
 16095                           
 16096  1ABA  2ABA               	goto	l1991
 16097  1ABB                     l23878:	
 16098                           
 16099                           ;task.c: 1583: }
 16100                           ;task.c: 1585: if(handle_short2_flag==0x01)
 16101  1ABB  0B35               	decfsz	_handle_short2_flag^(0+256),w
 16102  1ABC  2AC3               	goto	l23882
 16103                           
 16104                           ;task.c: 1589: load2_voltage_status=0x01;
 16105  1ABD  0025               	movlb	5	; select bank5
 16106  1ABE  01C7               	clrf	_over_load2_time_count^(0+640)
 16107  1ABF  01C8               	clrf	(_over_load2_time_count+1)^(0+640)
 16108                           
 16109                           ;task.c: 1593: discharge_led_status=0x00;
 16110  1AC0  0022               	movlb	2	; select bank2
 16111  1AC1  01B5               	clrf	_handle_short2_flag^(0+256)
 16112  1AC2                     l1995:	
 16113                           ;task.c: 1595: while(1);
 16114                           
 16115  1AC2  2AC2               	goto	l1995
 16116  1AC3                     l23882:	
 16117                           
 16118                           ;task.c: 1596: }
 16119                           ;task.c: 1598: if(work_mode==0x00)
 16120  1AC3  0021               	movlb	1	; select bank1
 16121  1AC4  08C6               	movf	_work_mode^(0+128),f
 16122  1AC5  1D03               	skipz
 16123  1AC6  2AF4               	goto	l23906
 16124                           
 16125                           ;task.c: 1599: {
 16126                           ;task.c: 1600: if((pv_voltage_status==0x01)&&(battery_voltage_status==0x01)&&(sys_temper
      +                          _flag==0x01)&&(mcu_temp_index<0x03))
 16127  1AC7  0022               	movlb	2	; select bank2
 16128  1AC8  0B4C               	decfsz	_pv_voltage_status^(0+256),w
 16129  1AC9  2AE0               	goto	l23894
 16130  1ACA  0B2A               	decfsz	_battery_voltage_status^(0+256),w
 16131  1ACB  2AE0               	goto	l23894
 16132  1ACC  0B6F               	decfsz	_sys_temper_flag^(0+256),w
 16133  1ACD  2AE0               	goto	l23894
 16134  1ACE  3003               	movlw	3
 16135  1ACF  0021               	movlb	1	; select bank1
 16136  1AD0  023E               	subwf	_mcu_temp_index^(0+128),w
 16137  1AD1  1803               	skipnc
 16138  1AD2  2AE0               	goto	l23894
 16139  1AD3                     l23892:	
 16140                           
 16141                           ;task.c: 1601: {
 16142                           ;task.c: 1603: system_status = 0x01;
 16143  1AD3  01C0               	clrf	_system_status^(0+128)
 16144  1AD4  0AC0               	incf	_system_status^(0+128),f
 16145  1AD5                     l24252:	
 16146                           ;task.c: 1605: }
 16147                           
 16148  1AD5  0840               	movf	_system_status^(0+128),w
 16149                           
 16150                           ; Switch size 1, requested type "space"
 16151                           ; Number of cases is 3, Range of values is 0 to 2
 16152                           ; switch strategies available:
 16153                           ; Name         Instructions Cycles
 16154                           ; simple_byte           10     6 (average)
 16155                           ; direct_byte           12     6 (fixed)
 16156                           ; jumptable            260     6 (fixed)
 16157                           ;	Chosen strategy is simple_byte
 16158  1AD6  3A00               	xorlw	0	; case 0
 16159  1AD7  1903               	skipnz
 16160  1AD8  2AFC               	goto	l23916
 16161  1AD9  3A01               	xorlw	1	; case 1
 16162  1ADA  1903               	skipnz
 16163  1ADB  2BFF               	goto	l24070
 16164  1ADC  3A03               	xorlw	3	; case 2
 16165  1ADD  1903               	skipnz
 16166  1ADE  2C45               	goto	l24132
 16167  1ADF  2D12               	goto	l2019
 16168  1AE0                     l23894:	
 16169                           
 16170                           ;task.c: 1606: else if((pv_voltage_status==0x02)&&(battery_voltage_status==0x01)&&(sys_t
      +                          emper_flag==0x01)&&(mcu_temp_index<0x03))
 16171  1AE0  0022               	movlb	2	; select bank2
 16172  1AE1  084C               	movf	_pv_voltage_status^(0+256),w
 16173  1AE2  3A02               	xorlw	2
 16174  1AE3  1D03               	skipz
 16175  1AE4  2AF1               	goto	l23904
 16176  1AE5  0B2A               	decfsz	_battery_voltage_status^(0+256),w
 16177  1AE6  2AF1               	goto	l23904
 16178  1AE7  0B6F               	decfsz	_sys_temper_flag^(0+256),w
 16179  1AE8  2AF1               	goto	l23904
 16180  1AE9  3003               	movlw	3
 16181  1AEA  0021               	movlb	1	; select bank1
 16182  1AEB  023E               	subwf	_mcu_temp_index^(0+128),w
 16183  1AEC  1803               	skipnc
 16184  1AED  2AF1               	goto	l23904
 16185  1AEE                     l23902:	
 16186                           
 16187                           ;task.c: 1607: {
 16188                           ;task.c: 1609: system_status = 0x02;
 16189  1AEE  3002               	movlw	2
 16190  1AEF  00C0               	movwf	_system_status^(0+128)
 16191                           
 16192                           ;task.c: 1611: }
 16193  1AF0  2AD5               	goto	l24252
 16194  1AF1                     l23904:	
 16195                           
 16196                           ;task.c: 1612: else
 16197                           ;task.c: 1613: {
 16198                           ;task.c: 1614: system_status = 0x00;
 16199  1AF1  0021               	movlb	1	; select bank1
 16200  1AF2  01C0               	clrf	_system_status^(0+128)
 16201  1AF3  2AD5               	goto	l24252
 16202  1AF4                     l23906:	
 16203                           
 16204                           ;task.c: 1617: else if(work_mode==0x01)
 16205  1AF4  0B46               	decfsz	_work_mode^(0+128),w
 16206  1AF5  2AF7               	goto	l23910
 16207  1AF6  2AD3               	goto	l23892
 16208  1AF7                     l23910:	
 16209                           
 16210                           ;task.c: 1621: else if(work_mode==0x02)
 16211  1AF7  0846               	movf	_work_mode^(0+128),w
 16212  1AF8  3A02               	xorlw	2
 16213  1AF9  1903               	btfsc	3,2
 16214  1AFA  2AEE               	goto	l23902
 16215  1AFB  2AF1               	goto	l23904
 16216  1AFC                     l23916:	
 16217                           
 16218                           ;task.c: 1640: discharge_led_status=0x00;
 16219  1AFC  0022               	movlb	2	; select bank2
 16220  1AFD  08C0               	movf	_nop_index^(0+256),f
 16221  1AFE  1D03               	skipz
 16222  1AFF  2B7B               	goto	l23990
 16223                           
 16224                           ;task.c: 1642: Disable_Buck_Pwm();
 16225  1B00  2655  3199         	fcall	_Disable_Buck_Pwm
 16226                           
 16227                           ;task.c: 1644: Set_Buck_Pwm_Duty(0);
 16228  1B02  0020               	movlb	0	; select bank0
 16229  1B03  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 16230  1B04  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 16231  1B05  265A               	fcall	_Set_Buck_Pwm_Duty
 16232                           
 16233                           ;task.c: 1646: Disable_Bost_Pwm1();
 16234  1B06  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 16235                           
 16236                           ;task.c: 1647: Disable_Bost_Pwm2();
 16237  1B09  25F1  3199         	fcall	_Disable_Bost_Pwm2
 16238                           
 16239                           ;task.c: 1649: Set_Bost_Pwm1_Duty(0);
 16240  1B0B  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16241  1B0C  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16242  1B0D  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16243                           
 16244                           ;task.c: 1650: Set_Bost_Pwm2_Duty(0);
 16245  1B0F  0020               	movlb	0	; select bank0
 16246  1B10  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16247  1B11  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16248  1B12  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16249                           
 16250                           ;task.c: 1652: (LATCbits.LATC3 = 0x00);
 16251  1B14  0022               	movlb	2	; select bank2
 16252  1B15  118E               	bcf	14,3	;volatile
 16253                           
 16254                           ;task.c: 1659: pv_prev=0;
 16255  1B16  100E               	bcf	14,0	;volatile
 16256                           
 16257                           ;task.c: 1661: buck_pwm_value=0;
 16258  1B17  0021               	movlb	1	; select bank1
 16259  1B18  3048               	movlw	72
 16260  1B19  01A7               	clrf	_buck_pwm_value^(0+128)
 16261  1B1A  01A8               	clrf	(_buck_pwm_value+1)^(0+128)
 16262                           
 16263                           ;task.c: 1663: bost_pwm1_value=0;
 16264  1B1B  01A3               	clrf	_bost_pwm1_value^(0+128)
 16265  1B1C  01A4               	clrf	(_bost_pwm1_value+1)^(0+128)
 16266                           
 16267                           ;task.c: 1664: bost_pwm2_value=0;
 16268  1B1D  01A5               	clrf	_bost_pwm2_value^(0+128)
 16269  1B1E  01A6               	clrf	(_bost_pwm2_value+1)^(0+128)
 16270                           
 16271                           ;task.c: 1666: PWM =50;
 16272  1B1F  01A0               	clrf	_PWM^(0+128)
 16273  1B20  00A1               	movwf	(_PWM+1)^(0+128)
 16274  1B21  3042               	movlw	66
 16275  1B22  00A2               	movwf	(_PWM+2)^(0+128)
 16276                           
 16277                           ;task.c: 1667: PWM2 =50;
 16278  1B23  27C3  3199         	fcall	PL322	;call to abstracted procedure
 16279                           
 16280                           ;task.c: 1669: pid_init ( &PID_CC_charge);
 16281  1B25  27CE  3199         	fcall	PL362	;call to abstracted procedure
 16282  1B27  25F6  3199         	fcall	_pid_init
 16283                           
 16284                           ;task.c: 1671: pid_init ( &PID_CV_charge);
 16285  1B29  27D4  3199         	fcall	PL366	;call to abstracted procedure
 16286  1B2B  25F6  3199         	fcall	_pid_init
 16287                           
 16288                           ;task.c: 1673: pid_init ( &PID_CC_discharge);
 16289  1B2D  30BD               	movlw	low _PID_CC_discharge
 16290  1B2E  00AB               	movwf	pid_init@pp
 16291  1B2F  3001               	movlw	high _PID_CC_discharge
 16292  1B30  00AC               	movwf	pid_init@pp+1
 16293  1B31  25F6  3199         	fcall	_pid_init
 16294                           
 16295                           ;task.c: 1674: pid_init ( &PID_CC2_discharge);
 16296  1B33  3045               	movlw	low _PID_CC2_discharge
 16297  1B34  00AB               	movwf	pid_init@pp
 16298  1B35  3002               	movlw	high _PID_CC2_discharge
 16299  1B36  00AC               	movwf	pid_init@pp+1
 16300  1B37  25F6  3199         	fcall	_pid_init
 16301                           
 16302                           ;task.c: 1678: PID_CC_charge.Proportion = 0.001;
 16303                           
 16304                           ;task.c: 1680: PID_CC_charge.Integral = 0;
 16305                           
 16306                           ;task.c: 1682: PID_CC_charge.Derivative = 0;
 16307                           
 16308                           ;task.c: 1684: PID_CC_charge.SetPoint = 5.0*15.0;
 16309                           
 16310                           ;task.c: 1689: PID_CV_charge.Proportion = 0.001;
 16311                           
 16312                           ;task.c: 1691: PID_CV_charge.Integral = 0;
 16313                           
 16314                           ;task.c: 1693: PID_CV_charge.Derivative = 0;
 16315                           
 16316                           ;task.c: 1695: PID_CV_charge.SetPoint = dianchi_cv_level+1;
 16317  1B39  26D6               	fcall	PL16	;call to abstracted procedure
 16318  1B3A  318B  230F  3199   	fcall	___ftadd
 16319  1B3D  2764  3199         	fcall	PL124	;call to abstracted procedure
 16320                           
 16321                           ;task.c: 1699: PID_CC_discharge.Proportion = 0.001;
 16322                           
 16323                           ;task.c: 1701: PID_CC_discharge.Integral = 0;
 16324                           
 16325                           ;task.c: 1703: PID_CC_discharge.Derivative = 0;
 16326                           
 16327                           ;task.c: 1705: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
 16328  1B3F  2717               	fcall	PL24	;call to abstracted procedure
 16329  1B40  3198  2035  3199   	fcall	PL2	;call to abstracted procedure
 16330  1B43  258F               	fcall	___ftdiv
 16331  1B44  3197  2707  3199   	fcall	PL48	;call to abstracted procedure
 16332  1B47  318A  22AA  3199   	fcall	___ftmul
 16333  1B4A  3198  208C  3199   	fcall	PL38	;call to abstracted procedure
 16334                           
 16335                           ;task.c: 1707: PID_CC2_discharge.Proportion = 0.001;
 16336                           
 16337                           ;task.c: 1709: PID_CC2_discharge.Integral = 0;
 16338                           
 16339                           ;task.c: 1711: PID_CC2_discharge.Derivative = 0;
 16340                           
 16341                           ;task.c: 1713: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 16342  1B4D  2708               	fcall	PL18	;call to abstracted procedure
 16343  1B4E  3198  2057  3199   	fcall	PL6	;call to abstracted procedure
 16344  1B51  3198  2035  3199   	fcall	PL2	;call to abstracted procedure
 16345  1B54  258F               	fcall	___ftdiv
 16346  1B55  3197  2707  3199   	fcall	PL48	;call to abstracted procedure
 16347  1B58  318A  22AA  3199   	fcall	___ftmul
 16348                           
 16349                           ;task.c: 1713: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 16350  1B5B  2776               	fcall	PL130	;call to abstracted procedure
 16351  1B5C  318A  22AA  3199   	fcall	___ftmul
 16352  1B5F  3198  2098  3199   	fcall	PL40	;call to abstracted procedure
 16353                           
 16354                           ;task.c: 1715: open_discharge_time=0x00;
 16355  1B62  0022               	movlb	2	; select bank2
 16356  1B63  01C9               	clrf	_open_discharge_time^(0+256)
 16357                           
 16358                           ;task.c: 1717: ms_cnt=0x00;
 16359  1B64  0024               	movlb	4	; select bank4
 16360  1B65  01C1               	clrf	_ms_cnt^(0+512)
 16361  1B66  01C2               	clrf	(_ms_cnt+1)^(0+512)
 16362                           
 16363                           ;task.c: 1718: se_cnt=0x00;
 16364  1B67  01C3               	clrf	_se_cnt^(0+512)
 16365  1B68  01C4               	clrf	(_se_cnt+1)^(0+512)
 16366                           
 16367                           ;task.c: 1719: mi_cnt=0x00;
 16368  1B69  01BF               	clrf	_mi_cnt^(0+512)
 16369  1B6A  01C0               	clrf	(_mi_cnt+1)^(0+512)
 16370                           
 16371                           ;task.c: 1720: ho_cnt=0x00;
 16372  1B6B  01FC               	clrf	_ho_cnt
 16373  1B6C  01FD               	clrf	_ho_cnt+1
 16374                           
 16375                           ;task.c: 1721: limit_power_pid_flag=0x00;
 16376  1B6D  0022               	movlb	2	; select bank2
 16377  1B6E  01BE               	clrf	_limit_power_pid_flag^(0+256)
 16378                           
 16379                           ;task.c: 1722: Adjust_Pout_Flag=0x00;
 16380  1B6F  0020               	movlb	0	; select bank0
 16381  1B70  01EA               	clrf	_Adjust_Pout_Flag
 16382                           
 16383                           ;task.c: 1723: voltage_adjust_index=0x01;
 16384  1B71  0021               	movlb	1	; select bank1
 16385  1B72  01DC               	clrf	_voltage_adjust_index^(0+128)
 16386  1B73  0ADC               	incf	_voltage_adjust_index^(0+128),f
 16387                           
 16388                           ;task.c: 1725: nop_index=0x01;
 16389  1B74  0022               	movlb	2	; select bank2
 16390  1B75  01C0               	clrf	_nop_index^(0+256)
 16391  1B76  0AC0               	incf	_nop_index^(0+256),f
 16392                           
 16393                           ;task.c: 1727: discharge1_index=0x00;
 16394  1B77  0021               	movlb	1	; select bank1
 16395  1B78  01B7               	clrf	_discharge1_index^(0+128)
 16396                           
 16397                           ;task.c: 1728: discharge2_index=0x00;
 16398  1B79  01B8               	clrf	_discharge2_index^(0+128)
 16399                           
 16400                           ;task.c: 1730: charge_index=0x00;
 16401  1B7A  01B5               	clrf	_charge_index^(0+128)
 16402  1B7B                     l23990:	
 16403                           
 16404                           ;task.c: 1731: }
 16405                           ;task.c: 1733: if(device_status==0x00 && nop_index==0x01)
 16406  1B7B  0021               	movlb	1	; select bank1
 16407  1B7C  08B6               	movf	_device_status^(0+128),f
 16408  1B7D  1D03               	skipz
 16409  1B7E  0008               	return
 16410  1B7F  0022               	movlb	2	; select bank2
 16411  1B80  0B40               	decfsz	_nop_index^(0+256),w
 16412  1B81  0008               	return
 16413                           
 16414                           ;task.c: 1734: {
 16415                           ;task.c: 1736: Disable_Buck_Pwm();
 16416  1B82  2655  3199         	fcall	_Disable_Buck_Pwm
 16417                           
 16418                           ;task.c: 1737: Set_Buck_Pwm_Duty(0);
 16419  1B84  0020               	movlb	0	; select bank0
 16420  1B85  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 16421  1B86  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 16422  1B87  265A               	fcall	_Set_Buck_Pwm_Duty
 16423                           
 16424                           ;task.c: 1738: Disable_Bost_Pwm1();
 16425  1B88  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 16426                           
 16427                           ;task.c: 1739: (LATCbits.LATC3 = 0x00);
 16428                           
 16429                           ;task.c: 1740: Set_Bost_Pwm1_Duty(0);
 16430  1B8B  275E  3199         	fcall	PL122	;call to abstracted procedure
 16431  1B8D  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16432                           
 16433                           ;task.c: 1741: Disable_Bost_Pwm2();
 16434  1B8F  25F1  3199         	fcall	_Disable_Bost_Pwm2
 16435                           
 16436                           ;task.c: 1742: (LATCbits.LATC0 = 0x00);
 16437                           
 16438                           ;task.c: 1743: Set_Bost_Pwm2_Duty(0);
 16439  1B91  2770  3199         	fcall	PL128	;call to abstracted procedure
 16440  1B93  253E               	fcall	_Set_Bost_Pwm2_Duty
 16441                           
 16442                           ;task.c: 1745: (LATCbits.LATC3 = 0x01);
 16443  1B94  0022               	movlb	2	; select bank2
 16444  1B95  158E               	bsf	14,3	;volatile
 16445                           
 16446                           ;task.c: 1746: Enable_Bost_Pwm1();
 16447  1B96  31A9  21DC  3199   	fcall	_Enable_Bost_Pwm1
 16448                           
 16449                           ;task.c: 1747: (LATCbits.LATC0 = 0x01);
 16450  1B99  0022               	movlb	2	; select bank2
 16451  1B9A  140E               	bsf	14,0	;volatile
 16452                           
 16453                           ;task.c: 1748: Enable_Bost_Pwm2();
 16454  1B9B  31A9  21E1  3199   	fcall	_Enable_Bost_Pwm2
 16455                           
 16456                           ;task.c: 1750: Set_Bost_Pwm1_Duty(200);
 16457  1B9E  30C8               	movlw	200
 16458  1B9F  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 16459  1BA0  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16460  1BA1  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16461                           
 16462                           ;task.c: 1751: Set_Bost_Pwm2_Duty(200);
 16463  1BA3  27B0  3199         	fcall	PL288	;call to abstracted procedure
 16464  1BA5  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16465                           
 16466                           ;task.c: 1753: delay_ms(200);
 16467  1BA7  27AB  3199         	fcall	PL274	;call to abstracted procedure
 16468  1BA9  256C  3199         	fcall	_delay_ms
 16469                           
 16470                           ;task.c: 1755: Set_Bost_Pwm1_Duty(0);
 16471  1BAB  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16472  1BAC  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16473  1BAD  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16474                           
 16475                           ;task.c: 1756: Set_Bost_Pwm2_Duty(0);
 16476  1BAF  0020               	movlb	0	; select bank0
 16477  1BB0  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16478  1BB1  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16479  1BB2  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16480                           
 16481                           ;task.c: 1758: delay_ms(200);
 16482  1BB4  27AB  3199         	fcall	PL274	;call to abstracted procedure
 16483  1BB6  256C  3199         	fcall	_delay_ms
 16484                           
 16485                           ;task.c: 1760: Set_Bost_Pwm1_Duty(200);
 16486  1BB8  30C8               	movlw	200
 16487  1BB9  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 16488  1BBA  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16489  1BBB  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16490                           
 16491                           ;task.c: 1761: Set_Bost_Pwm2_Duty(200);
 16492  1BBD  27B0  3199         	fcall	PL288	;call to abstracted procedure
 16493  1BBF  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16494                           
 16495                           ;task.c: 1763: delay_ms(200);
 16496  1BC1  27AB  3199         	fcall	PL274	;call to abstracted procedure
 16497  1BC3  256C  3199         	fcall	_delay_ms
 16498                           
 16499                           ;task.c: 1765: Set_Bost_Pwm1_Duty(0);
 16500  1BC5  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16501  1BC6  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16502  1BC7  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16503                           
 16504                           ;task.c: 1766: Set_Bost_Pwm2_Duty(0);
 16505  1BC9  0020               	movlb	0	; select bank0
 16506  1BCA  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16507  1BCB  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16508  1BCC  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16509                           
 16510                           ;task.c: 1768: delay_ms(200);
 16511  1BCE  27AB  3199         	fcall	PL274	;call to abstracted procedure
 16512  1BD0  256C  3199         	fcall	_delay_ms
 16513                           
 16514                           ;task.c: 1770: Set_Bost_Pwm1_Duty(200);
 16515  1BD2  30C8               	movlw	200
 16516  1BD3  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 16517  1BD4  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16518  1BD5  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16519                           
 16520                           ;task.c: 1771: Set_Bost_Pwm2_Duty(200);
 16521  1BD7  27B0  3199         	fcall	PL288	;call to abstracted procedure
 16522  1BD9  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16523                           
 16524                           ;task.c: 1773: delay_ms(200);
 16525  1BDB  27AB  3199         	fcall	PL274	;call to abstracted procedure
 16526  1BDD  256C  3199         	fcall	_delay_ms
 16527                           
 16528                           ;task.c: 1775: Set_Bost_Pwm1_Duty(0);
 16529  1BDF  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16530  1BE0  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16531  1BE1  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16532                           
 16533                           ;task.c: 1776: Set_Bost_Pwm2_Duty(0);
 16534  1BE3  0020               	movlb	0	; select bank0
 16535  1BE4  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16536  1BE5  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16537  1BE6  253E               	fcall	_Set_Bost_Pwm2_Duty
 16538                           
 16539                           ;task.c: 1778: Disable_Bost_Pwm1();
 16540  1BE7  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 16541                           
 16542                           ;task.c: 1779: (LATCbits.LATC3 = 0x00);
 16543                           
 16544                           ;task.c: 1780: Set_Bost_Pwm1_Duty(0);
 16545  1BEA  275E  3199         	fcall	PL122	;call to abstracted procedure
 16546  1BEC  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16547                           
 16548                           ;task.c: 1781: Disable_Bost_Pwm2();
 16549  1BEE  25F1  3199         	fcall	_Disable_Bost_Pwm2
 16550                           
 16551                           ;task.c: 1782: (LATCbits.LATC0 = 0x00);
 16552                           
 16553                           ;task.c: 1783: Set_Bost_Pwm2_Duty(0);
 16554  1BF0  2770  3199         	fcall	PL128	;call to abstracted procedure
 16555  1BF2  253E               	fcall	_Set_Bost_Pwm2_Duty
 16556                           
 16557                           ;task.c: 1785: nop_index=0x02;
 16558  1BF3  3002               	movlw	2
 16559  1BF4  0022               	movlb	2	; select bank2
 16560  1BF5  00C0               	movwf	_nop_index^(0+256)
 16561                           
 16562                           ;task.c: 1787: key1_index=0x00;
 16563  1BF6  01BB               	clrf	_key1_index^(0+256)
 16564                           
 16565                           ;task.c: 1789: (LATAbits.LATA6 = 0x00);
 16566  1BF7  130C               	bcf	12,6	;volatile
 16567                           
 16568                           ;task.c: 1791: open_sleep_time = 0x01;
 16569  1BF8  01CA               	clrf	_open_sleep_time^(0+256)
 16570  1BF9  0ACA               	incf	_open_sleep_time^(0+256),f
 16571  1BFA  0063               	sleep	;# 
 16572                           
 16573                           ;task.c: 1795: __nop();
 16574  1BFB  0000               	nop
 16575                           
 16576                           ;task.c: 1796: __nop();
 16577  1BFC  0000               	nop
 16578                           
 16579                           ;task.c: 1797: __nop();
 16580  1BFD  0000               	nop
 16581  1BFE  0008               	return
 16582  1BFF                     l24070:	
 16583                           
 16584                           ;task.c: 1806: {
 16585                           ;task.c: 1808: discharge_led_status=0x01;
 16586  1BFF  0B35               	decfsz	_charge_index^(0+128),w
 16587  1C00  0008               	return
 16588                           
 16589                           ;task.c: 1811: Disable_Bost_Pwm1();
 16590  1C01  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 16591                           
 16592                           ;task.c: 1812: Disable_Bost_Pwm2();
 16593  1C04  25F1  3199         	fcall	_Disable_Bost_Pwm2
 16594                           
 16595                           ;task.c: 1814: Set_Bost_Pwm1_Duty(0);
 16596  1C06  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16597  1C07  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16598  1C08  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16599                           
 16600                           ;task.c: 1815: Set_Bost_Pwm2_Duty(0);
 16601  1C0A  0020               	movlb	0	; select bank0
 16602  1C0B  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16603  1C0C  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16604  1C0D  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16605                           
 16606                           ;task.c: 1817: (LATCbits.LATC3 = 0x00);
 16607  1C0F  0022               	movlb	2	; select bank2
 16608  1C10  118E               	bcf	14,3	;volatile
 16609                           
 16610                           ;task.c: 1818: (LATCbits.LATC0 = 0x00);
 16611  1C11  100E               	bcf	14,0	;volatile
 16612                           
 16613                           ;task.c: 1820: Disable_Buck_Pwm();
 16614  1C12  2655  3199         	fcall	_Disable_Buck_Pwm
 16615                           
 16616                           ;task.c: 1822: PWM =50;
 16617                           
 16618                           ;task.c: 1824: buck_pwm_value=50;
 16619  1C14  27B5               	fcall	PL292	;call to abstracted procedure
 16620  1C15  00A7               	movwf	_buck_pwm_value^(0+128)
 16621  1C16  01A8               	clrf	(_buck_pwm_value+1)^(0+128)
 16622                           
 16623                           ;task.c: 1826: Set_Buck_Pwm_Duty(buck_pwm_value);
 16624  1C17  31B4  24D8  3199   	fcall	PL172	;call to abstracted procedure
 16625  1C1A  265A  3199         	fcall	_Set_Buck_Pwm_Duty
 16626                           
 16627                           ;task.c: 1844: pid_init ( &PID_CC_charge);
 16628  1C1C  27CE  3199         	fcall	PL362	;call to abstracted procedure
 16629  1C1E  25F6  3199         	fcall	_pid_init
 16630                           
 16631                           ;task.c: 1846: pid_init ( &PID_CV_charge);
 16632  1C20  27D4  3199         	fcall	PL366	;call to abstracted procedure
 16633  1C22  25F6  3199         	fcall	_pid_init
 16634                           
 16635                           ;task.c: 1849: PID_CC_charge.Proportion = 0.001;
 16636                           
 16637                           ;task.c: 1851: PID_CC_charge.Integral = 0;
 16638                           
 16639                           ;task.c: 1855: PID_CC_charge.SetPoint = 5.0*15.0;
 16640                           
 16641                           ;task.c: 1859: PID_CV_charge.Proportion = 0.001;
 16642                           
 16643                           ;task.c: 1861: PID_CV_charge.Integral = 0;
 16644                           
 16645                           ;task.c: 1863: PID_CV_charge.Derivative = 0;
 16646                           
 16647                           ;task.c: 1870: P_last=0;
 16648  1C24  26D6               	fcall	PL16	;call to abstracted procedure
 16649  1C25  318B  230F  3199   	fcall	___ftadd
 16650  1C28  2764  3199         	fcall	PL124	;call to abstracted procedure
 16651                           
 16652                           ;task.c: 1872: open_discharge_time=0x00;
 16653                           
 16654                           ;task.c: 1874: ms_cnt=0x00;
 16655                           
 16656                           ;task.c: 1875: se_cnt=0x00;
 16657                           
 16658                           ;task.c: 1876: mi_cnt=0x00;
 16659                           
 16660                           ;task.c: 1877: ho_cnt=0x00;
 16661                           
 16662                           ;task.c: 1878: limit_power_pid_flag=0x00;
 16663                           
 16664                           ;task.c: 1879: Adjust_Pout_Flag=0x00;
 16665                           
 16666                           ;task.c: 1880: voltage_adjust_index=0x01;
 16667                           
 16668                           ;task.c: 1881: nop_index=0x00;
 16669                           
 16670                           ;task.c: 1883: discharge1_index=0x00;
 16671  1C2A  2729               	fcall	PL54	;call to abstracted procedure
 16672  1C2B  3002               	movlw	2
 16673  1C2C  01B7               	clrf	_discharge1_index^(0+128)
 16674                           
 16675                           ;task.c: 1884: discharge2_index=0x00;
 16676  1C2D  01B8               	clrf	_discharge2_index^(0+128)
 16677                           
 16678                           ;task.c: 1886: charge_index=0x02;
 16679  1C2E  00B5               	movwf	_charge_index^(0+128)
 16680                           
 16681                           ;task.c: 1889: today_index = today_index+1;
 16682  1C2F  0020               	movlb	0	; select bank0
 16683  1C30  3007               	movlw	7
 16684  1C31  0AEB               	incf	_today_index,f
 16685                           
 16686                           ;task.c: 1891: today_index = today_index%8;
 16687  1C32  05EB               	andwf	_today_index,f
 16688                           
 16689                           ;task.c: 1893: eeprom_write(0x11,(unsigned char)today_index);
 16690  1C33  086B               	movf	_today_index,w
 16691  1C34  00DE               	movwf	eeprom_write@value
 16692  1C35  3011               	movlw	17
 16693  1C36  31A9  21BA         	fcall	_eeprom_write
 16694                           
 16695                           ;task.c: 1895: bt_00_lv = b_v;
 16696  1C38  0022               	movlb	2	; select bank2
 16697  1C39  0820               	movf	_b_v^(0+256),w
 16698  1C3A  0023               	movlb	3	; select bank3
 16699  1C3B  00AA               	movwf	_bt_00_lv^(0+384)
 16700  1C3C  0022               	movlb	2	; select bank2
 16701  1C3D  0821               	movf	(_b_v+1)^(0+256),w
 16702  1C3E  0023               	movlb	3	; select bank3
 16703  1C3F  00AB               	movwf	(_bt_00_lv+1)^(0+384)
 16704  1C40  0022               	movlb	2	; select bank2
 16705  1C41  0822               	movf	(_b_v+2)^(0+256),w
 16706  1C42  0023               	movlb	3	; select bank3
 16707  1C43  00AC               	movwf	(_bt_00_lv+2)^(0+384)
 16708  1C44  0008               	return
 16709  1C45                     l24132:	
 16710                           
 16711                           ;task.c: 1903: {
 16712                           ;task.c: 1905: charge_led_status=0x01;
 16713  1C45  08B7               	movf	_discharge1_index^(0+128),f
 16714  1C46  1D03               	skipz
 16715  1C47  2CA7               	goto	l24190
 16716                           
 16717                           ;task.c: 1907: Disable_Buck_Pwm();
 16718  1C48  2655  3199         	fcall	_Disable_Buck_Pwm
 16719                           
 16720                           ;task.c: 1909: Set_Buck_Pwm_Duty(0);
 16721  1C4A  0020               	movlb	0	; select bank0
 16722  1C4B  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 16723  1C4C  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 16724  1C4D  265A  3199         	fcall	_Set_Buck_Pwm_Duty
 16725                           
 16726                           ;task.c: 1911: Set_Bost_Pwm1_Duty(0);
 16727  1C4F  0020               	movlb	0	; select bank0
 16728  1C50  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 16729  1C51  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 16730  1C52  2513               	fcall	_Set_Bost_Pwm1_Duty
 16731                           
 16732                           ;task.c: 1913: (LATCbits.LATC3 = 0x00);
 16733  1C53  0022               	movlb	2	; select bank2
 16734  1C54  118E               	bcf	14,3	;volatile
 16735                           
 16736                           ;task.c: 1915: Disable_Bost_Pwm1();
 16737  1C55  31A9  21D7  3199   	fcall	_Disable_Bost_Pwm1
 16738                           
 16739                           ;task.c: 1917: PWM =50;
 16740                           
 16741                           ;task.c: 1919: bost_pwm1_value=50;
 16742  1C58  27B5               	fcall	PL292	;call to abstracted procedure
 16743                           
 16744                           ;task.c: 1921: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 16745  1C59  3198  20BC  3199   	fcall	PL60	;call to abstracted procedure
 16746  1C5C  2513  3199         	fcall	_Set_Bost_Pwm1_Duty
 16747                           
 16748                           ;task.c: 1943: pid_init ( &PID_CC_discharge);
 16749  1C5E  30BD               	movlw	low _PID_CC_discharge
 16750  1C5F  0020               	movlb	0	; select bank0
 16751  1C60  00AB               	movwf	pid_init@pp
 16752  1C61  3001               	movlw	high _PID_CC_discharge
 16753  1C62  00AC               	movwf	pid_init@pp+1
 16754  1C63  25F6  3199         	fcall	_pid_init
 16755                           
 16756                           ;task.c: 1946: PID_CC_discharge.Proportion = 0.001;
 16757                           
 16758                           ;task.c: 1948: PID_CC_discharge.Integral = 0;
 16759                           
 16760                           ;task.c: 1950: PID_CC_discharge.Derivative = 0;
 16761                           
 16762                           ;task.c: 1952: PID_CC_discharge.SetPoint = (load_cc_I/100)*30;
 16763  1C65  2717               	fcall	PL24	;call to abstracted procedure
 16764  1C66  3198  2035  3199   	fcall	PL2	;call to abstracted procedure
 16765  1C69  258F               	fcall	___ftdiv
 16766  1C6A  3197  2707  3199   	fcall	PL48	;call to abstracted procedure
 16767  1C6D  318A  22AA  3199   	fcall	___ftmul
 16768  1C70  3198  208C  3199   	fcall	PL38	;call to abstracted procedure
 16769                           
 16770                           ;task.c: 1954: open_discharge_time=0x00;
 16771                           
 16772                           ;task.c: 1956: ms_cnt=0x00;
 16773                           
 16774                           ;task.c: 1957: se_cnt=0x00;
 16775                           
 16776                           ;task.c: 1958: mi_cnt=0x00;
 16777                           
 16778                           ;task.c: 1959: ho_cnt=0x00;
 16779                           
 16780                           ;task.c: 1960: limit_power_pid_flag=0x00;
 16781                           
 16782                           ;task.c: 1961: Adjust_Pout_Flag=0x00;
 16783                           
 16784                           ;task.c: 1962: voltage_adjust_index=0x01;
 16785                           
 16786                           ;task.c: 1963: nop_index=0x00;
 16787                           
 16788                           ;task.c: 1965: discharge1_index=0x01;
 16789  1C73  2729  3199         	fcall	PL54	;call to abstracted procedure
 16790  1C75  01B7               	clrf	_discharge1_index^(0+128)
 16791  1C76  0AB7               	incf	_discharge1_index^(0+128),f
 16792                           
 16793                           ;task.c: 1967: charge_index=0x00;
 16794                           
 16795                           ;task.c: 1970: bt_00_hv = b_v;
 16796                           
 16797                           ;task.c: 1972: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/
      +                          256));
 16798  1C77  273F               	fcall	PL72	;call to abstracted procedure
 16799  1C78  3196  26FF  3199   	fcall	PL44	;call to abstracted procedure
 16800  1C7B  258F               	fcall	___ftdiv
 16801  1C7C  3197  270E  3199   	fcall	PL56	;call to abstracted procedure
 16802  1C7F  2600  3199         	fcall	___fttol
 16803  1C81  2756               	fcall	PL82	;call to abstracted procedure
 16804  1C82  3E12               	addlw	18
 16805  1C83  31A9  21BA  3199   	fcall	_eeprom_write
 16806                           
 16807                           ;task.c: 1974: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
 16808  1C86  279F  3199         	fcall	PL240	;call to abstracted procedure
 16809  1C88  2600  3199         	fcall	___fttol
 16810  1C8A  2756               	fcall	PL82	;call to abstracted procedure
 16811  1C8B  3E13               	addlw	19
 16812  1C8C  31A9  21BA  3199   	fcall	_eeprom_write
 16813                           
 16814                           ;task.c: 1976: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/
      +                          256));
 16815  1C8F  2789               	fcall	PL150	;call to abstracted procedure
 16816  1C90  3196  26FF  3199   	fcall	PL44	;call to abstracted procedure
 16817  1C93  258F               	fcall	___ftdiv
 16818  1C94  3197  270E  3199   	fcall	PL56	;call to abstracted procedure
 16819  1C97  2600  3199         	fcall	___fttol
 16820  1C99  2756               	fcall	PL82	;call to abstracted procedure
 16821  1C9A  3E14               	addlw	20
 16822  1C9B  31A9  21BA  3199   	fcall	_eeprom_write
 16823                           
 16824                           ;task.c: 1978: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
 16825  1C9E  2793  3199         	fcall	PL222	;call to abstracted procedure
 16826  1CA0  2600  3199         	fcall	___fttol
 16827  1CA2  2756               	fcall	PL82	;call to abstracted procedure
 16828  1CA3  3E15               	addlw	21
 16829  1CA4  31A9  21BA  3199   	fcall	_eeprom_write
 16830  1CA7                     l24190:	
 16831                           
 16832                           ;task.c: 1985: {
 16833                           ;task.c: 1987: charge_led_status=0x01;
 16834  1CA7  0021               	movlb	1	; select bank1
 16835  1CA8  08B8               	movf	_discharge2_index^(0+128),f
 16836  1CA9  1D03               	skipz
 16837  1CAA  0008               	return
 16838                           
 16839                           ;task.c: 1990: Disable_Buck_Pwm();
 16840  1CAB  2655  3199         	fcall	_Disable_Buck_Pwm
 16841                           
 16842                           ;task.c: 1992: Set_Buck_Pwm_Duty(0);
 16843  1CAD  0020               	movlb	0	; select bank0
 16844  1CAE  01A3               	clrf	Set_Buck_Pwm_Duty@duty
 16845  1CAF  01A4               	clrf	Set_Buck_Pwm_Duty@duty+1
 16846  1CB0  265A  3199         	fcall	_Set_Buck_Pwm_Duty
 16847                           
 16848                           ;task.c: 1994: Set_Bost_Pwm2_Duty(0);
 16849  1CB2  0020               	movlb	0	; select bank0
 16850  1CB3  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 16851  1CB4  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 16852  1CB5  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16853                           
 16854                           ;task.c: 1996: (LATCbits.LATC0 = 0x00);
 16855  1CB7  0022               	movlb	2	; select bank2
 16856  1CB8  100E               	bcf	14,0	;volatile
 16857                           
 16858                           ;task.c: 1998: Disable_Bost_Pwm2();
 16859  1CB9  25F1  3199         	fcall	_Disable_Bost_Pwm2
 16860                           
 16861                           ;task.c: 2000: PWM2 =50;
 16862  1CBB  27C3               	fcall	PL322	;call to abstracted procedure
 16863                           
 16864                           ;task.c: 2002: bost_pwm2_value=50;
 16865  1CBC  3032               	movlw	50
 16866  1CBD  0021               	movlb	1	; select bank1
 16867                           
 16868                           ;task.c: 2004: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 16869  1CBE  3198  20DD  3199   	fcall	PL64	;call to abstracted procedure
 16870  1CC1  253E  3199         	fcall	_Set_Bost_Pwm2_Duty
 16871                           
 16872                           ;task.c: 2026: pid_init ( &PID_CC2_discharge);
 16873  1CC3  3045               	movlw	low _PID_CC2_discharge
 16874  1CC4  0020               	movlb	0	; select bank0
 16875  1CC5  00AB               	movwf	pid_init@pp
 16876  1CC6  3002               	movlw	high _PID_CC2_discharge
 16877  1CC7  00AC               	movwf	pid_init@pp+1
 16878  1CC8  25F6  3199         	fcall	_pid_init
 16879                           
 16880                           ;task.c: 2029: PID_CC2_discharge.Proportion = 0.001;
 16881                           
 16882                           ;task.c: 2031: PID_CC2_discharge.Integral = 0;
 16883                           
 16884                           ;task.c: 2033: PID_CC2_discharge.Derivative = 0;
 16885                           
 16886                           ;task.c: 2035: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 16887  1CCA  2708               	fcall	PL18	;call to abstracted procedure
 16888  1CCB  3198  2057  3199   	fcall	PL6	;call to abstracted procedure
 16889  1CCE  3198  2035  3199   	fcall	PL2	;call to abstracted procedure
 16890  1CD1  258F               	fcall	___ftdiv
 16891  1CD2  3197  2707  3199   	fcall	PL48	;call to abstracted procedure
 16892  1CD5  318A  22AA  3199   	fcall	___ftmul
 16893                           
 16894                           ;task.c: 2035: PID_CC2_discharge.SetPoint = (load_cc_I/100)*0.30*step_05_load_percent;
 16895  1CD8  2776               	fcall	PL130	;call to abstracted procedure
 16896  1CD9  318A  22AA  3199   	fcall	___ftmul
 16897  1CDC  3198  2098  3199   	fcall	PL40	;call to abstracted procedure
 16898                           
 16899                           ;task.c: 2037: open_discharge_time=0x00;
 16900                           
 16901                           ;task.c: 2039: ms_cnt=0x00;
 16902                           
 16903                           ;task.c: 2040: se_cnt=0x00;
 16904                           
 16905                           ;task.c: 2041: mi_cnt=0x00;
 16906                           
 16907                           ;task.c: 2042: ho_cnt=0x00;
 16908                           
 16909                           ;task.c: 2043: limit_power_pid_flag=0x00;
 16910                           
 16911                           ;task.c: 2044: Adjust_Pout_Flag=0x00;
 16912                           
 16913                           ;task.c: 2045: voltage_adjust_index=0x01;
 16914                           
 16915                           ;task.c: 2046: nop_index=0x00;
 16916                           
 16917                           ;task.c: 2048: discharge2_index=0x01;
 16918  1CDF  2729  3199         	fcall	PL54	;call to abstracted procedure
 16919  1CE1  01B8               	clrf	_discharge2_index^(0+128)
 16920  1CE2  0AB8               	incf	_discharge2_index^(0+128),f
 16921                           
 16922                           ;task.c: 2050: charge_index=0x00;
 16923                           
 16924                           ;task.c: 2053: bt_00_hv = b_v;
 16925                           
 16926                           ;task.c: 2055: eeprom_write((0x12+4*( (today_index+8-0)%8 )+0),(unsigned char)(bt_00_hv/
      +                          256));
 16927  1CE3  273F               	fcall	PL72	;call to abstracted procedure
 16928  1CE4  3196  26FF  3199   	fcall	PL44	;call to abstracted procedure
 16929  1CE7  258F               	fcall	___ftdiv
 16930  1CE8  3197  270E  3199   	fcall	PL56	;call to abstracted procedure
 16931  1CEB  2600  3199         	fcall	___fttol
 16932  1CED  2756               	fcall	PL82	;call to abstracted procedure
 16933  1CEE  3E12               	addlw	18
 16934  1CEF  31A9  21BA  3199   	fcall	_eeprom_write
 16935                           
 16936                           ;task.c: 2057: eeprom_write((0x12+4*( (today_index+8-0)%8 )+1),(unsigned char)bt_00_hv);
 16937  1CF2  279F  3199         	fcall	PL240	;call to abstracted procedure
 16938  1CF4  2600  3199         	fcall	___fttol
 16939  1CF6  2756               	fcall	PL82	;call to abstracted procedure
 16940  1CF7  3E13               	addlw	19
 16941  1CF8  31A9  21BA  3199   	fcall	_eeprom_write
 16942                           
 16943                           ;task.c: 2059: eeprom_write((0x12+4*( (today_index+8-0)%8 )+2),(unsigned char)(bt_00_lv/
      +                          256));
 16944  1CFB  2789               	fcall	PL150	;call to abstracted procedure
 16945  1CFC  3196  26FF  3199   	fcall	PL44	;call to abstracted procedure
 16946  1CFF  258F               	fcall	___ftdiv
 16947  1D00  3197  270E  3199   	fcall	PL56	;call to abstracted procedure
 16948  1D03  2600  3199         	fcall	___fttol
 16949  1D05  2756               	fcall	PL82	;call to abstracted procedure
 16950  1D06  3E14               	addlw	20
 16951  1D07  31A9  21BA  3199   	fcall	_eeprom_write
 16952                           
 16953                           ;task.c: 2061: eeprom_write((0x12+4*( (today_index+8-0)%8 )+3),(unsigned char)bt_00_lv);
 16954  1D0A  2793  3199         	fcall	PL222	;call to abstracted procedure
 16955  1D0C  2600  3199         	fcall	___fttol
 16956  1D0E  2756               	fcall	PL82	;call to abstracted procedure
 16957  1D0F  3E15               	addlw	21
 16958  1D10  31A9  29BA         	ljmp	_eeprom_write
 16959  1D12                     l2019:	
 16960  1D12  0008               	return
 16961  1D13                     __end_of_handle_task_process:	
 16962  1D13                     __ptext43:	
 16963 ;; *************** function _Set_Bost_Pwm1_Duty *****************
 16964 ;; Defined at:
 16965 ;;		line 242 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 16966 ;; Parameters:    Size  Location     Type
 16967 ;;  dduty           2    3[BANK0 ] unsigned int 
 16968 ;; Auto vars:     Size  Location     Type
 16969 ;;		None
 16970 ;; Return value:  Size  Location     Type
 16971 ;;		None               void
 16972 ;; Registers used:
 16973 ;;		wreg, status,2, status,0
 16974 ;; Tracked objects:
 16975 ;;		On entry : 1F/0
 16976 ;;		On exit  : 1F/6
 16977 ;;		Unchanged: 0/0
 16978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16982 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;Total ram usage:        4 bytes
 16984 ;; Hardware stack levels used:    1
 16985 ;; Hardware stack levels required when called:    2
 16986 ;; This function calls:
 16987 ;;		Nothing
 16988 ;; This function is called by:
 16989 ;;		_Key_Menu
 16990 ;;		_scan_key_value
 16991 ;;		_handle_ad_loop
 16992 ;;		_handle_task_process
 16993 ;;		_handle_uart_rx_buf
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           
 16998                           ;psect for function _Set_Bost_Pwm1_Duty
 16999  1D13                     _Set_Bost_Pwm1_Duty:	
 17000                           
 17001                           ;pwm.c: 245: bost_pwm1_value=dduty;
 17002                           
 17003                           ;incstack = 0
 17004                           ; Regs used in _Set_Bost_Pwm1_Duty: [wreg+status,2+status,0]
 17005  1D13  0824               	movf	Set_Bost_Pwm1_Duty@dduty+1,w
 17006  1D14  0021               	movlb	1	; select bank1
 17007  1D15  00A4               	movwf	(_bost_pwm1_value+1)^(0+128)
 17008  1D16  0020               	movlb	0	; select bank0
 17009  1D17  0823               	movf	Set_Bost_Pwm1_Duty@dduty,w
 17010  1D18  0021               	movlb	1	; select bank1
 17011  1D19  00A3               	movwf	_bost_pwm1_value^(0+128)
 17012                           
 17013                           ;pwm.c: 247: if(dduty<=488)
 17014  1D1A  3001               	movlw	1
 17015  1D1B  0020               	movlb	0	; select bank0
 17016  1D1C  0224               	subwf	Set_Bost_Pwm1_Duty@dduty+1,w
 17017  1D1D  30E9               	movlw	233
 17018  1D1E  1903               	skipnz
 17019  1D1F  0223               	subwf	Set_Bost_Pwm1_Duty@dduty,w
 17020  1D20  1803               	skipnc
 17021  1D21  2D3B               	goto	l21678
 17022                           
 17023                           ;pwm.c: 248: {
 17024                           ;pwm.c: 249: CCPR3L=(unsigned char)(dduty>>2);
 17025  1D22  0824               	movf	Set_Bost_Pwm1_Duty@dduty+1,w
 17026  1D23  00A6               	movwf	??_Set_Bost_Pwm1_Duty+1
 17027  1D24  0823               	movf	Set_Bost_Pwm1_Duty@dduty,w
 17028  1D25  00A5               	movwf	??_Set_Bost_Pwm1_Duty
 17029  1D26  36A6               	lsrf	??_Set_Bost_Pwm1_Duty+1,f
 17030  1D27  0CA5               	rrf	??_Set_Bost_Pwm1_Duty,f
 17031  1D28  36A6               	lsrf	??_Set_Bost_Pwm1_Duty+1,f
 17032  1D29  0CA5               	rrf	??_Set_Bost_Pwm1_Duty,f
 17033  1D2A  0825               	movf	??_Set_Bost_Pwm1_Duty,w
 17034  1D2B  0026               	movlb	6	; select bank6
 17035  1D2C  0091               	movwf	17	;volatile
 17036                           
 17037                           ;pwm.c: 251: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
 17038  1D2D  0020               	movlb	0	; select bank0
 17039  1D2E  0823               	movf	Set_Bost_Pwm1_Duty@dduty,w
 17040  1D2F  3903               	andlw	3
 17041  1D30  00A5               	movwf	??_Set_Bost_Pwm1_Duty
 17042  1D31  0EA5               	swapf	??_Set_Bost_Pwm1_Duty,f
 17043  1D32  0026               	movlb	6	; select bank6
 17044  1D33  0813               	movf	19,w	;volatile
 17045  1D34  0020               	movlb	0	; select bank0
 17046  1D35  0625               	xorwf	??_Set_Bost_Pwm1_Duty,w
 17047  1D36  39CF               	andlw	-49
 17048  1D37  0625               	xorwf	??_Set_Bost_Pwm1_Duty,w
 17049  1D38  0026               	movlb	6	; select bank6
 17050  1D39  0093               	movwf	19	;volatile
 17051                           
 17052                           ;pwm.c: 252: }
 17053  1D3A  0008               	return
 17054  1D3B                     l21678:	
 17055                           
 17056                           ;pwm.c: 257: CCPR3L=(unsigned char)(dduty>>2);
 17057  1D3B  307A               	movlw	122
 17058  1D3C  0026               	movlb	6	; select bank6
 17059                           
 17060                           ;pwm.c: 259: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
 17061  1D3D  2FFC               	ljmp	PL372	;call to abstracted procedure
 17062  1D3E                     __end_of_Set_Bost_Pwm1_Duty:	
 17063  1D3E                     __ptext42:	
 17064 ;; *************** function _Set_Bost_Pwm2_Duty *****************
 17065 ;; Defined at:
 17066 ;;		line 271 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;  dduty           2    3[BANK0 ] unsigned int 
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;		None
 17071 ;; Return value:  Size  Location     Type
 17072 ;;		None               void
 17073 ;; Registers used:
 17074 ;;		wreg, status,2, status,0
 17075 ;; Tracked objects:
 17076 ;;		On entry : 1F/0
 17077 ;;		On exit  : 1F/6
 17078 ;;		Unchanged: 0/0
 17079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17080 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;Total ram usage:        4 bytes
 17085 ;; Hardware stack levels used:    1
 17086 ;; Hardware stack levels required when called:    2
 17087 ;; This function calls:
 17088 ;;		Nothing
 17089 ;; This function is called by:
 17090 ;;		_Key_Menu
 17091 ;;		_scan_key_value
 17092 ;;		_handle_ad_loop
 17093 ;;		_handle_task_process
 17094 ;;		_handle_uart_rx_buf
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           
 17099                           ;psect for function _Set_Bost_Pwm2_Duty
 17100  1D3E                     _Set_Bost_Pwm2_Duty:	
 17101                           
 17102                           ;pwm.c: 274: bost_pwm2_value=dduty;
 17103                           
 17104                           ;incstack = 0
 17105                           ; Regs used in _Set_Bost_Pwm2_Duty: [wreg+status,2+status,0]
 17106  1D3E  0824               	movf	Set_Bost_Pwm2_Duty@dduty+1,w
 17107  1D3F  0021               	movlb	1	; select bank1
 17108  1D40  00A6               	movwf	(_bost_pwm2_value+1)^(0+128)
 17109  1D41  0020               	movlb	0	; select bank0
 17110  1D42  0823               	movf	Set_Bost_Pwm2_Duty@dduty,w
 17111  1D43  0021               	movlb	1	; select bank1
 17112  1D44  00A5               	movwf	_bost_pwm2_value^(0+128)
 17113                           
 17114                           ;pwm.c: 276: if(dduty<=488)
 17115  1D45  3001               	movlw	1
 17116  1D46  0020               	movlb	0	; select bank0
 17117  1D47  0224               	subwf	Set_Bost_Pwm2_Duty@dduty+1,w
 17118  1D48  30E9               	movlw	233
 17119  1D49  1903               	skipnz
 17120  1D4A  0223               	subwf	Set_Bost_Pwm2_Duty@dduty,w
 17121  1D4B  1803               	skipnc
 17122  1D4C  2D66               	goto	l21690
 17123                           
 17124                           ;pwm.c: 277: {
 17125                           ;pwm.c: 278: CCPR5L=(unsigned char)(dduty>>2);
 17126  1D4D  0824               	movf	Set_Bost_Pwm2_Duty@dduty+1,w
 17127  1D4E  00A6               	movwf	??_Set_Bost_Pwm2_Duty+1
 17128  1D4F  0823               	movf	Set_Bost_Pwm2_Duty@dduty,w
 17129  1D50  00A5               	movwf	??_Set_Bost_Pwm2_Duty
 17130  1D51  36A6               	lsrf	??_Set_Bost_Pwm2_Duty+1,f
 17131  1D52  0CA5               	rrf	??_Set_Bost_Pwm2_Duty,f
 17132  1D53  36A6               	lsrf	??_Set_Bost_Pwm2_Duty+1,f
 17133  1D54  0CA5               	rrf	??_Set_Bost_Pwm2_Duty,f
 17134  1D55  0825               	movf	??_Set_Bost_Pwm2_Duty,w
 17135  1D56  0026               	movlb	6	; select bank6
 17136  1D57  009C               	movwf	28	;volatile
 17137                           
 17138                           ;pwm.c: 280: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
 17139  1D58  0020               	movlb	0	; select bank0
 17140  1D59  0823               	movf	Set_Bost_Pwm2_Duty@dduty,w
 17141  1D5A  3903               	andlw	3
 17142  1D5B  00A5               	movwf	??_Set_Bost_Pwm2_Duty
 17143  1D5C  0EA5               	swapf	??_Set_Bost_Pwm2_Duty,f
 17144  1D5D  0026               	movlb	6	; select bank6
 17145  1D5E  081E               	movf	30,w	;volatile
 17146  1D5F  0020               	movlb	0	; select bank0
 17147  1D60  0625               	xorwf	??_Set_Bost_Pwm2_Duty,w
 17148  1D61  39CF               	andlw	-49
 17149  1D62  0625               	xorwf	??_Set_Bost_Pwm2_Duty,w
 17150  1D63  0026               	movlb	6	; select bank6
 17151  1D64  009E               	movwf	30	;volatile
 17152                           
 17153                           ;pwm.c: 281: }
 17154  1D65  0008               	return
 17155  1D66                     l21690:	
 17156                           
 17157                           ;pwm.c: 286: CCPR5L=(unsigned char)(dduty>>2);
 17158  1D66  307A               	movlw	122
 17159  1D67  0026               	movlb	6	; select bank6
 17160  1D68  009C               	movwf	28	;volatile
 17161                           
 17162                           ;pwm.c: 288: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
 17163  1D69  30CF               	movlw	-49
 17164  1D6A  059E               	andwf	30,f	;volatile
 17165  1D6B  0008               	return
 17166  1D6C                     __end_of_Set_Bost_Pwm2_Duty:	
 17167  1D6C                     __ptext40:	
 17168 ;; *************** function _delay_ms *****************
 17169 ;; Defined at:
 17170 ;;		line 64 in file "D:\MCUProject\ZH-SL-S4080-1\src\delay.c"
 17171 ;; Parameters:    Size  Location     Type
 17172 ;;  count           2    3[BANK0 ] unsigned short 
 17173 ;; Auto vars:     Size  Location     Type
 17174 ;;  j               2    7[BANK0 ] unsigned short 
 17175 ;;  i               2    5[BANK0 ] unsigned short 
 17176 ;; Return value:  Size  Location     Type
 17177 ;;		None               void
 17178 ;; Registers used:
 17179 ;;		wreg, status,2, status,0
 17180 ;; Tracked objects:
 17181 ;;		On entry : 1F/0
 17182 ;;		On exit  : 1F/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17186 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17188 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17189 ;;Total ram usage:        6 bytes
 17190 ;; Hardware stack levels used:    1
 17191 ;; Hardware stack levels required when called:    2
 17192 ;; This function calls:
 17193 ;;		Nothing
 17194 ;; This function is called by:
 17195 ;;		_auto_system
 17196 ;;		_Key_Menu
 17197 ;;		_scan_key_value
 17198 ;;		_handle_ad_loop
 17199 ;;		_handle_task_process
 17200 ;;		_handle_uart_rx_buf
 17201 ;; This function uses a non-reentrant model
 17202 ;;
 17203                           
 17204                           
 17205                           ;psect for function _delay_ms
 17206  1D6C                     _delay_ms:	
 17207                           
 17208                           ;delay.c: 66: WORD i, j;
 17209                           ;delay.c: 68: for (i = 0; i < count; i++)
 17210                           
 17211                           ;incstack = 0
 17212                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
 17213  1D6C  01A5               	clrf	delay_ms@i
 17214  1D6D  01A6               	clrf	delay_ms@i+1
 17215  1D6E                     l21670:	
 17216  1D6E  0824               	movf	delay_ms@count+1,w
 17217  1D6F  0226               	subwf	delay_ms@i+1,w
 17218  1D70  1D03               	skipz
 17219  1D71  2D74               	goto	u11625
 17220  1D72  0823               	movf	delay_ms@count,w
 17221  1D73  0225               	subwf	delay_ms@i,w
 17222  1D74                     u11625:	
 17223  1D74  1803               	btfsc	3,0
 17224  1D75  0008               	return
 17225                           
 17226                           ;delay.c: 69: {
 17227                           ;delay.c: 70: for (j = 0; j < 1000; j++)
 17228  1D76  01A7               	clrf	delay_ms@j
 17229  1D77  01A8               	clrf	delay_ms@j+1
 17230  1D78                     l75:	
 17231                           
 17232                           ;delay.c: 71: {
 17233                           ;delay.c: 72: __nop();
 17234  1D78  0000               	nop
 17235                           
 17236                           ;delay.c: 73: __nop();
 17237  1D79  0000               	nop
 17238                           
 17239                           ;delay.c: 74: __nop();
 17240  1D7A  0000               	nop
 17241                           
 17242                           ;delay.c: 75: __nop();
 17243  1D7B  0000               	nop
 17244                           
 17245                           ;delay.c: 76: __nop();
 17246  1D7C  0000               	nop
 17247                           
 17248                           ;delay.c: 77: __nop();
 17249  1D7D  0000               	nop
 17250                           
 17251                           ;delay.c: 78: __nop();
 17252  1D7E  0000               	nop
 17253                           
 17254                           ;delay.c: 79: __nop();
 17255  1D7F  0000               	nop
 17256  1D80  0020               	movlb	0	; select bank0
 17257  1D81  0AA7               	incf	delay_ms@j,f
 17258  1D82  1903               	skipnz
 17259  1D83  0AA8               	incf	delay_ms@j+1,f
 17260  1D84  3003               	movlw	3
 17261  1D85  0228               	subwf	delay_ms@j+1,w
 17262  1D86  30E8               	movlw	232
 17263  1D87  1903               	skipnz
 17264  1D88  0227               	subwf	delay_ms@j,w
 17265  1D89  1C03               	skipc
 17266  1D8A  2D78               	goto	l75
 17267  1D8B  0AA5               	incf	delay_ms@i,f
 17268  1D8C  1903               	skipnz
 17269  1D8D  0AA6               	incf	delay_ms@i+1,f
 17270  1D8E  2D6E               	goto	l21670
 17271  1D8F                     __end_of_delay_ms:	
 17272  1D8F                     __ptext50:	
 17273 ;; *************** function ___ftdiv *****************
 17274 ;; Defined at:
 17275 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic\ftdiv.c"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;  f2              3   34[BANK0 ] float 
 17278 ;;  f1              3   37[BANK0 ] float 
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;  f3              3   44[BANK0 ] float 
 17281 ;;  sign            1   48[BANK0 ] unsigned char 
 17282 ;;  exp             1   47[BANK0 ] unsigned char 
 17283 ;;  cntr            1   43[BANK0 ] unsigned char 
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  3   34[BANK0 ] float 
 17286 ;; Registers used:
 17287 ;;		wreg, status,2, status,0, pclath, cstack
 17288 ;; Tracked objects:
 17289 ;;		On entry : 1F/0
 17290 ;;		On exit  : 1F/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17294 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;Total ram usage:       15 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; Hardware stack levels required when called:    3
 17300 ;; This function calls:
 17301 ;;		___ftpack
 17302 ;; This function is called by:
 17303 ;;		_read_param_eeprom
 17304 ;;		_auto_system
 17305 ;;		_application_init
 17306 ;;		_handle_ad_loop
 17307 ;;		_handle_task_process
 17308 ;;		_handle_uart_rx_buf
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           
 17313                           ;psect for function ___ftdiv
 17314  1D8F                     ___ftdiv:	
 17315                           
 17316                           ;incstack = 0
 17317                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 17318  1D8F  0845               	movf	___ftdiv@f1,w
 17319  1D90  00C8               	movwf	??___ftdiv
 17320  1D91  0846               	movf	___ftdiv@f1+1,w
 17321  1D92  00C9               	movwf	??___ftdiv+1
 17322  1D93  0847               	movf	___ftdiv@f1+2,w
 17323  1D94  00CA               	movwf	??___ftdiv+2
 17324  1D95  1003               	clrc
 17325  1D96  0D49               	rlf	??___ftdiv+1,w
 17326  1D97  0D4A               	rlf	??___ftdiv+2,w
 17327  1D98  00CF               	movwf	___ftdiv@exp
 17328  1D99  08CF               	movf	___ftdiv@exp,f
 17329  1D9A  1D03               	skipz
 17330  1D9B  2DA0               	goto	l25114
 17331  1D9C  01C2               	clrf	?___ftdiv
 17332  1D9D  01C3               	clrf	?___ftdiv+1
 17333  1D9E  01C4               	clrf	?___ftdiv+2
 17334  1D9F  0008               	return
 17335  1DA0                     l25114:	
 17336  1DA0  0842               	movf	___ftdiv@f2,w
 17337  1DA1  00C8               	movwf	??___ftdiv
 17338  1DA2  0843               	movf	___ftdiv@f2+1,w
 17339  1DA3  00C9               	movwf	??___ftdiv+1
 17340  1DA4  0844               	movf	___ftdiv@f2+2,w
 17341  1DA5  00CA               	movwf	??___ftdiv+2
 17342  1DA6  1003               	clrc
 17343  1DA7  0D49               	rlf	??___ftdiv+1,w
 17344  1DA8  0D4A               	rlf	??___ftdiv+2,w
 17345  1DA9  00D0               	movwf	___ftdiv@sign
 17346  1DAA  08D0               	movf	___ftdiv@sign,f
 17347  1DAB  1D03               	skipz
 17348  1DAC  2DB1               	goto	l2677
 17349  1DAD  01C2               	clrf	?___ftdiv
 17350  1DAE  01C3               	clrf	?___ftdiv+1
 17351  1DAF  01C4               	clrf	?___ftdiv+2
 17352  1DB0  0008               	return
 17353  1DB1                     l2677:	
 17354  1DB1  3089               	movlw	137
 17355  1DB2  01CC               	clrf	___ftdiv@f3
 17356  1DB3  01CD               	clrf	___ftdiv@f3+1
 17357  1DB4  01CE               	clrf	___ftdiv@f3+2
 17358  1DB5  0750               	addwf	___ftdiv@sign,w
 17359  1DB6  00C8               	movwf	??___ftdiv
 17360  1DB7  02CF               	subwf	___ftdiv@exp,f
 17361  1DB8  0847               	movf	___ftdiv@f1+2,w
 17362  1DB9  00D0               	movwf	___ftdiv@sign
 17363  1DBA  0844               	movf	___ftdiv@f2+2,w
 17364  1DBB  06D0               	xorwf	___ftdiv@sign,f
 17365  1DBC  3080               	movlw	128
 17366  1DBD  05D0               	andwf	___ftdiv@sign,f
 17367  1DBE  3018               	movlw	24
 17368  1DBF  17C6               	bsf	___ftdiv@f1+1,7
 17369  1DC0  01C7               	clrf	___ftdiv@f1+2
 17370  1DC1  17C3               	bsf	___ftdiv@f2+1,7
 17371  1DC2  01C4               	clrf	___ftdiv@f2+2
 17372  1DC3  00CB               	movwf	___ftdiv@cntr
 17373  1DC4                     l25136:	
 17374  1DC4  35CC               	lslf	___ftdiv@f3,f
 17375  1DC5  0DCD               	rlf	___ftdiv@f3+1,f
 17376  1DC6  0DCE               	rlf	___ftdiv@f3+2,f
 17377  1DC7  0844               	movf	___ftdiv@f2+2,w
 17378  1DC8  0247               	subwf	___ftdiv@f1+2,w
 17379  1DC9  1D03               	skipz
 17380  1DCA  2DD1               	goto	u16155
 17381  1DCB  0843               	movf	___ftdiv@f2+1,w
 17382  1DCC  0246               	subwf	___ftdiv@f1+1,w
 17383  1DCD  1D03               	skipz
 17384  1DCE  2DD1               	goto	u16155
 17385  1DCF  0842               	movf	___ftdiv@f2,w
 17386  1DD0  0245               	subwf	___ftdiv@f1,w
 17387  1DD1                     u16155:	
 17388  1DD1  1C03               	skipc
 17389  1DD2  2DDA               	goto	l25142
 17390  1DD3  0842               	movf	___ftdiv@f2,w
 17391  1DD4  02C5               	subwf	___ftdiv@f1,f
 17392  1DD5  0843               	movf	___ftdiv@f2+1,w
 17393  1DD6  3BC6               	subwfb	___ftdiv@f1+1,f
 17394  1DD7  0844               	movf	___ftdiv@f2+2,w
 17395  1DD8  3BC7               	subwfb	___ftdiv@f1+2,f
 17396  1DD9  144C               	bsf	___ftdiv@f3,0
 17397  1DDA                     l25142:	
 17398  1DDA  35C5               	lslf	___ftdiv@f1,f
 17399  1DDB  0DC6               	rlf	___ftdiv@f1+1,f
 17400  1DDC  0DC7               	rlf	___ftdiv@f1+2,f
 17401  1DDD  0BCB               	decfsz	___ftdiv@cntr,f
 17402  1DDE  2DC4               	goto	l25136
 17403  1DDF  084C               	movf	___ftdiv@f3,w
 17404  1DE0  00A3               	movwf	___ftpack@arg
 17405  1DE1  084D               	movf	___ftdiv@f3+1,w
 17406  1DE2  00A4               	movwf	___ftpack@arg+1
 17407  1DE3  084E               	movf	___ftdiv@f3+2,w
 17408  1DE4  00A5               	movwf	___ftpack@arg+2
 17409  1DE5  084F               	movf	___ftdiv@exp,w
 17410  1DE6  00A6               	movwf	___ftpack@exp
 17411  1DE7  0850               	movf	___ftdiv@sign,w
 17412  1DE8  00A7               	movwf	___ftpack@sign
 17413  1DE9  2685               	fcall	___ftpack
 17414  1DEA  0823               	movf	?___ftpack,w
 17415  1DEB  00C2               	movwf	?___ftdiv
 17416  1DEC  0824               	movf	?___ftpack+1,w
 17417  1DED  00C3               	movwf	?___ftdiv+1
 17418  1DEE  0825               	movf	?___ftpack+2,w
 17419  1DEF  00C4               	movwf	?___ftdiv+2
 17420  1DF0  0008               	return
 17421  1DF1                     __end_of___ftdiv:	
 17422  1DF1                     __ptext47:	
 17423 ;; *************** function _Disable_Bost_Pwm2 *****************
 17424 ;; Defined at:
 17425 ;;		line 228 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;		None
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;		None
 17430 ;; Return value:  Size  Location     Type
 17431 ;;		None               void
 17432 ;; Registers used:
 17433 ;;		None
 17434 ;; Tracked objects:
 17435 ;;		On entry : 11/6
 17436 ;;		On exit  : 1F/0
 17437 ;;		Unchanged: 0/0
 17438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;Total ram usage:        0 bytes
 17444 ;; Hardware stack levels used:    1
 17445 ;; Hardware stack levels required when called:    2
 17446 ;; This function calls:
 17447 ;;		Nothing
 17448 ;; This function is called by:
 17449 ;;		_Key_Menu
 17450 ;;		_scan_key_value
 17451 ;;		_handle_ad_loop
 17452 ;;		_handle_task_process
 17453 ;;		_handle_uart_rx_buf
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           
 17458                           ;psect for function _Disable_Bost_Pwm2
 17459  1DF1                     _Disable_Bost_Pwm2:	
 17460                           
 17461                           ;pwm.c: 230: TRISAbits.TRISA4 =1;
 17462                           
 17463                           ;incstack = 0
 17464                           ; Regs used in _Disable_Bost_Pwm2: []
 17465  1DF1  0021               	movlb	1	; select bank1
 17466  1DF2  160C               	bsf	12,4	;volatile
 17467                           
 17468                           ;pwm.c: 232: TMR2ON=0;
 17469  1DF3  0020               	movlb	0	; select bank0
 17470  1DF4  111C               	bcf	28,2	;volatile
 17471  1DF5  0008               	return
 17472  1DF6                     __end_of_Disable_Bost_Pwm2:	
 17473  1DF6                     __ptext36:	
 17474 ;; *************** function _pid_init *****************
 17475 ;; Defined at:
 17476 ;;		line 243 in file "D:\MCUProject\ZH-SL-S4080-1\src\PID.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;  pp              2   11[BANK0 ] PTR struct PID_VAR
 17479 ;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;		None               void
 17484 ;; Registers used:
 17485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 1F/0
 17488 ;;		On exit  : 1F/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;Total ram usage:        2 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; Hardware stack levels required when called:    3
 17498 ;; This function calls:
 17499 ;;		_memset
 17500 ;; This function is called by:
 17501 ;;		_application_init
 17502 ;;		_handle_task_process
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _pid_init
 17508  1DF6                     _pid_init:	
 17509                           
 17510                           ;PID.c: 245: memset (pp,0,sizeof(PID));
 17511                           
 17512                           ;incstack = 0
 17513                           ; Regs used in _pid_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17514  1DF6  082C               	movf	pid_init@pp+1,w
 17515  1DF7  00A4               	movwf	memset@p1+1
 17516  1DF8  082B               	movf	pid_init@pp,w
 17517  1DF9  00A3               	movwf	memset@p1
 17518  1DFA  3015               	movlw	21
 17519  1DFB  01A5               	clrf	memset@c
 17520  1DFC  01A6               	clrf	memset@c+1
 17521  1DFD  00A7               	movwf	memset@n
 17522  1DFE  01A8               	clrf	memset@n+1
 17523  1DFF  2EBF               	ljmp	l19894
 17524  1E00                     __end_of_pid_init:	
 17525  1E00                     __ptext23:	
 17526 ;; *************** function ___fttol *****************
 17527 ;; Defined at:
 17528 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
 17529 ;; Parameters:    Size  Location     Type
 17530 ;;  f1              3   49[BANK0 ] float 
 17531 ;; Auto vars:     Size  Location     Type
 17532 ;;  lval            4   57[BANK0 ] unsigned long 
 17533 ;;  exp1            1   61[BANK0 ] unsigned char 
 17534 ;;  sign1           1   56[BANK0 ] unsigned char 
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  4   49[BANK0 ] long 
 17537 ;; Registers used:
 17538 ;;		wreg, status,2, status,0
 17539 ;; Tracked objects:
 17540 ;;		On entry : 1F/0
 17541 ;;		On exit  : 1F/0
 17542 ;;		Unchanged: 0/0
 17543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17544 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17545 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17546 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17547 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;Total ram usage:       13 bytes
 17549 ;; Hardware stack levels used:    1
 17550 ;; Hardware stack levels required when called:    2
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_handle_ad_loop
 17555 ;;		_handle_task_process
 17556 ;;		_Mppt_Charge
 17557 ;;		_handle_uart_rx_buf
 17558 ;; This function uses a non-reentrant model
 17559 ;;
 17560                           
 17561                           
 17562                           ;psect for function ___fttol
 17563  1E00                     ___fttol:	
 17564                           
 17565                           ;incstack = 0
 17566                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 17567  1E00  27BC  3199         	fcall	PL316	;call to abstracted procedure
 17568  1E02  1003               	clrc
 17569  1E03  0D56               	rlf	??___fttol+1,w
 17570  1E04  0D57               	rlf	??___fttol+2,w
 17571  1E05  00DD               	movwf	___fttol@exp1
 17572  1E06  08DD               	movf	___fttol@exp1,f
 17573  1E07  1D03               	skipz
 17574  1E08  2E0E               	goto	l25232
 17575  1E09                     l25230:	
 17576  1E09  01D1               	clrf	?___fttol
 17577  1E0A  01D2               	clrf	?___fttol+1
 17578  1E0B  01D3               	clrf	?___fttol+2
 17579  1E0C  01D4               	clrf	?___fttol+3
 17580  1E0D  0008               	return
 17581  1E0E                     l25232:	
 17582  1E0E  27BC  3199         	fcall	PL316	;call to abstracted procedure
 17583  1E10  3017               	movlw	23
 17584  1E11                     u16275:	
 17585  1E11  36D7               	lsrf	??___fttol+2,f
 17586  1E12  0CD6               	rrf	??___fttol+1,f
 17587  1E13  0CD5               	rrf	??___fttol,f
 17588  1E14  0B89               	decfsz	9,f
 17589  1E15  2E11               	goto	u16275
 17590  1E16  0855               	movf	??___fttol,w
 17591  1E17  00D8               	movwf	___fttol@sign1
 17592  1E18  17D2               	bsf	___fttol@f1+1,7
 17593  1E19  01D3               	clrf	___fttol@f1+2
 17594  1E1A  0851               	movf	___fttol@f1,w
 17595  1E1B  00D9               	movwf	___fttol@lval
 17596  1E1C  0852               	movf	___fttol@f1+1,w
 17597  1E1D  00DA               	movwf	___fttol@lval+1
 17598  1E1E  0853               	movf	___fttol@f1+2,w
 17599  1E1F  00DB               	movwf	___fttol@lval+2
 17600  1E20  308E               	movlw	142
 17601  1E21  01DC               	clrf	___fttol@lval+3
 17602  1E22  02DD               	subwf	___fttol@exp1,f
 17603  1E23  1FDD               	btfss	___fttol@exp1,7
 17604  1E24  2E31               	goto	l25252
 17605  1E25  085D               	movf	___fttol@exp1,w
 17606  1E26  3A80               	xorlw	128
 17607  1E27  3E8F               	addlw	143
 17608  1E28  1C03               	btfss	3,0
 17609  1E29  2E09               	goto	l25230
 17610  1E2A                     l25248:	
 17611  1E2A  36DC               	lsrf	___fttol@lval+3,f
 17612  1E2B  0CDB               	rrf	___fttol@lval+2,f
 17613  1E2C  0CDA               	rrf	___fttol@lval+1,f
 17614  1E2D  0CD9               	rrf	___fttol@lval,f
 17615  1E2E  0FDD               	incfsz	___fttol@exp1,f
 17616  1E2F  2E2A               	goto	l25248
 17617  1E30  2E3E               	goto	l25258
 17618  1E31                     l25252:	
 17619  1E31  3018               	movlw	24
 17620  1E32  025D               	subwf	___fttol@exp1,w
 17621  1E33  1803               	btfsc	3,0
 17622  1E34  2E09               	goto	l25230
 17623  1E35                     l2718:	
 17624  1E35  08DD               	movf	___fttol@exp1,f
 17625  1E36  1903               	btfsc	3,2
 17626  1E37  2E3E               	goto	l25258
 17627  1E38  35D9               	lslf	___fttol@lval,f
 17628  1E39  0DDA               	rlf	___fttol@lval+1,f
 17629  1E3A  0DDB               	rlf	___fttol@lval+2,f
 17630  1E3B  0DDC               	rlf	___fttol@lval+3,f
 17631  1E3C  03DD               	decf	___fttol@exp1,f
 17632  1E3D  2E35               	goto	l2718
 17633  1E3E                     l25258:	
 17634  1E3E  0858               	movf	___fttol@sign1,w
 17635  1E3F  1903               	btfsc	3,2
 17636  1E40  2E4C               	goto	l25262
 17637  1E41  09D9               	comf	___fttol@lval,f
 17638  1E42  09DA               	comf	___fttol@lval+1,f
 17639  1E43  09DB               	comf	___fttol@lval+2,f
 17640  1E44  09DC               	comf	___fttol@lval+3,f
 17641  1E45  0AD9               	incf	___fttol@lval,f
 17642  1E46  1903               	skipnz
 17643  1E47  0ADA               	incf	___fttol@lval+1,f
 17644  1E48  1903               	skipnz
 17645  1E49  0ADB               	incf	___fttol@lval+2,f
 17646  1E4A  1903               	skipnz
 17647  1E4B  0ADC               	incf	___fttol@lval+3,f
 17648  1E4C                     l25262:	
 17649  1E4C  085C               	movf	___fttol@lval+3,w
 17650  1E4D  00D4               	movwf	?___fttol+3
 17651  1E4E  085B               	movf	___fttol@lval+2,w
 17652  1E4F  00D3               	movwf	?___fttol+2
 17653  1E50  085A               	movf	___fttol@lval+1,w
 17654  1E51  00D2               	movwf	?___fttol+1
 17655  1E52  0859               	movf	___fttol@lval,w
 17656  1E53  00D1               	movwf	?___fttol
 17657  1E54  0008               	return
 17658  1E55                     __end_of___fttol:	
 17659  1E55                     __ptext46:	
 17660 ;; *************** function _Disable_Buck_Pwm *****************
 17661 ;; Defined at:
 17662 ;;		line 141 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;		None
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;		None
 17667 ;; Return value:  Size  Location     Type
 17668 ;;		None               void
 17669 ;; Registers used:
 17670 ;;		None
 17671 ;; Tracked objects:
 17672 ;;		On entry : 1C/1
 17673 ;;		On exit  : 1F/8
 17674 ;;		Unchanged: 0/0
 17675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17680 ;;Total ram usage:        0 bytes
 17681 ;; Hardware stack levels used:    1
 17682 ;; Hardware stack levels required when called:    2
 17683 ;; This function calls:
 17684 ;;		Nothing
 17685 ;; This function is called by:
 17686 ;;		_Key_Menu
 17687 ;;		_scan_key_value
 17688 ;;		_handle_ad_loop
 17689 ;;		_handle_task_process
 17690 ;;		_handle_uart_rx_buf
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           
 17695                           ;psect for function _Disable_Buck_Pwm
 17696  1E55                     _Disable_Buck_Pwm:	
 17697                           
 17698                           ;pwm.c: 143: TRISCbits.TRISC2=1;
 17699                           
 17700                           ;incstack = 0
 17701                           ; Regs used in _Disable_Buck_Pwm: []
 17702  1E55  0021               	movlb	1	; select bank1
 17703  1E56  150E               	bsf	14,2	;volatile
 17704                           
 17705                           ;pwm.c: 145: TMR6ON=0;
 17706  1E57  0028               	movlb	8	; select bank8
 17707  1E58  111E               	bcf	30,2	;volatile
 17708  1E59  0008               	return
 17709  1E5A                     __end_of_Disable_Buck_Pwm:	
 17710  1E5A                     __ptext41:	
 17711 ;; *************** function _Set_Buck_Pwm_Duty *****************
 17712 ;; Defined at:
 17713 ;;		line 157 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;  duty            2    3[BANK0 ] unsigned int 
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;		None
 17718 ;; Return value:  Size  Location     Type
 17719 ;;		None               void
 17720 ;; Registers used:
 17721 ;;		wreg, status,2, status,0
 17722 ;; Tracked objects:
 17723 ;;		On entry : 1F/0
 17724 ;;		On exit  : 1F/5
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;Total ram usage:        4 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:    2
 17734 ;; This function calls:
 17735 ;;		Nothing
 17736 ;; This function is called by:
 17737 ;;		_Key_Menu
 17738 ;;		_scan_key_value
 17739 ;;		_handle_ad_loop
 17740 ;;		_handle_task_process
 17741 ;;		_Mppt_Charge
 17742 ;;		_handle_uart_rx_buf
 17743 ;; This function uses a non-reentrant model
 17744 ;;
 17745                           
 17746                           
 17747                           ;psect for function _Set_Buck_Pwm_Duty
 17748  1E5A                     _Set_Buck_Pwm_Duty:	
 17749  1E5A                     l22268:	
 17750                           ;incstack = 0
 17751                           ; Regs used in _Set_Buck_Pwm_Duty: [wreg+status,2+status,0]
 17752                           
 17753                           
 17754                           ;pwm.c: 159: buck_pwm_value=duty;
 17755  1E5A  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
 17756  1E5B  0021               	movlb	1	; select bank1
 17757  1E5C  00A8               	movwf	(_buck_pwm_value+1)^(0+128)
 17758  1E5D  0020               	movlb	0	; select bank0
 17759  1E5E  0823               	movf	Set_Buck_Pwm_Duty@duty,w
 17760  1E5F  0021               	movlb	1	; select bank1
 17761  1E60  00A7               	movwf	_buck_pwm_value^(0+128)
 17762                           
 17763                           ;pwm.c: 161: if(duty<=900)
 17764  1E61  3003               	movlw	3
 17765  1E62  0020               	movlb	0	; select bank0
 17766  1E63  0224               	subwf	Set_Buck_Pwm_Duty@duty+1,w
 17767  1E64  3085               	movlw	133
 17768  1E65  1903               	skipnz
 17769  1E66  0223               	subwf	Set_Buck_Pwm_Duty@duty,w
 17770  1E67  1803               	skipnc
 17771  1E68  2E82               	goto	l22274
 17772                           
 17773                           ;pwm.c: 162: {
 17774                           ;pwm.c: 163: CCPR1L=(unsigned char)(duty>>2);
 17775  1E69  0824               	movf	Set_Buck_Pwm_Duty@duty+1,w
 17776  1E6A  00A6               	movwf	??_Set_Buck_Pwm_Duty+1
 17777  1E6B  0823               	movf	Set_Buck_Pwm_Duty@duty,w
 17778  1E6C  00A5               	movwf	??_Set_Buck_Pwm_Duty
 17779  1E6D  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
 17780  1E6E  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
 17781  1E6F  36A6               	lsrf	??_Set_Buck_Pwm_Duty+1,f
 17782  1E70  0CA5               	rrf	??_Set_Buck_Pwm_Duty,f
 17783  1E71  0825               	movf	??_Set_Buck_Pwm_Duty,w
 17784  1E72  0025               	movlb	5	; select bank5
 17785  1E73  0091               	movwf	17	;volatile
 17786                           
 17787                           ;pwm.c: 165: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
 17788  1E74  0020               	movlb	0	; select bank0
 17789  1E75  0823               	movf	Set_Buck_Pwm_Duty@duty,w
 17790  1E76  3903               	andlw	3
 17791  1E77  00A5               	movwf	??_Set_Buck_Pwm_Duty
 17792  1E78  0EA5               	swapf	??_Set_Buck_Pwm_Duty,f
 17793  1E79  0025               	movlb	5	; select bank5
 17794  1E7A  0813               	movf	19,w	;volatile
 17795  1E7B  0020               	movlb	0	; select bank0
 17796  1E7C  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
 17797  1E7D  39CF               	andlw	-49
 17798  1E7E  0625               	xorwf	??_Set_Buck_Pwm_Duty,w
 17799  1E7F  0025               	movlb	5	; select bank5
 17800  1E80  0093               	movwf	19	;volatile
 17801                           
 17802                           ;pwm.c: 166: }
 17803  1E81  0008               	return
 17804  1E82                     l22274:	
 17805                           
 17806                           ;pwm.c: 171: CCPR1L=(unsigned char)(duty>>2);
 17807  1E82  30E1               	movlw	225
 17808  1E83  0025               	movlb	5	; select bank5
 17809                           
 17810                           ;pwm.c: 173: CCP1CONbits.DC1B=(unsigned char)(duty&0b11);
 17811  1E84  2FFC               	ljmp	PL372	;call to abstracted procedure
 17812  1E85                     __end_of_Set_Buck_Pwm_Duty:	
 17813  1E85                     __ptext52:	
 17814 ;; *************** function ___ftpack *****************
 17815 ;; Defined at:
 17816 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
 17817 ;; Parameters:    Size  Location     Type
 17818 ;;  arg             3    3[BANK0 ] unsigned um
 17819 ;;  exp             1    6[BANK0 ] unsigned char 
 17820 ;;  sign            1    7[BANK0 ] unsigned char 
 17821 ;; Auto vars:     Size  Location     Type
 17822 ;;		None
 17823 ;; Return value:  Size  Location     Type
 17824 ;;                  3    3[BANK0 ] float 
 17825 ;; Registers used:
 17826 ;;		wreg, status,2, status,0
 17827 ;; Tracked objects:
 17828 ;;		On entry : 1F/0
 17829 ;;		On exit  : 1F/0
 17830 ;;		Unchanged: 0/0
 17831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17832 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17834 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17835 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17836 ;;Total ram usage:        8 bytes
 17837 ;; Hardware stack levels used:    1
 17838 ;; Hardware stack levels required when called:    2
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		___awtoft
 17843 ;;		___ftadd
 17844 ;;		___ftdiv
 17845 ;;		___ftmul
 17846 ;;		___lbtoft
 17847 ;;		___lwtoft
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           
 17852                           ;psect for function ___ftpack
 17853  1E85                     ___ftpack:	
 17854                           
 17855                           ;incstack = 0
 17856                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 17857  1E85  0826               	movf	___ftpack@exp,w
 17858  1E86  1903               	btfsc	3,2
 17859  1E87  2E8D               	goto	l2625
 17860  1E88  0825               	movf	___ftpack@arg+2,w
 17861  1E89  0424               	iorwf	___ftpack@arg+1,w
 17862  1E8A  0423               	iorwf	___ftpack@arg,w
 17863  1E8B  1D03               	skipz
 17864  1E8C  2E95               	goto	l25002
 17865  1E8D                     l2625:	
 17866  1E8D  01A3               	clrf	?___ftpack
 17867  1E8E  01A4               	clrf	?___ftpack+1
 17868  1E8F  01A5               	clrf	?___ftpack+2
 17869  1E90  0008               	return
 17870  1E91                     l25000:	
 17871  1E91  0AA6               	incf	___ftpack@exp,f
 17872  1E92  36A5               	lsrf	___ftpack@arg+2,f
 17873  1E93  0CA4               	rrf	___ftpack@arg+1,f
 17874  1E94  0CA3               	rrf	___ftpack@arg,f
 17875  1E95                     l25002:	
 17876  1E95  30FE               	movlw	254
 17877  1E96  0525               	andwf	___ftpack@arg+2,w
 17878  1E97  1903               	btfsc	3,2
 17879  1E98  2EA3               	goto	l25006
 17880  1E99  2E91               	goto	l25000
 17881  1E9A                     l25004:	
 17882  1E9A  0AA6               	incf	___ftpack@exp,f
 17883  1E9B  0AA3               	incf	___ftpack@arg,f
 17884  1E9C  1903               	skipnz
 17885  1E9D  0AA4               	incf	___ftpack@arg+1,f
 17886  1E9E  1903               	skipnz
 17887  1E9F  0AA5               	incf	___ftpack@arg+2,f
 17888  1EA0  36A5               	lsrf	___ftpack@arg+2,f
 17889  1EA1  0CA4               	rrf	___ftpack@arg+1,f
 17890  1EA2  0CA3               	rrf	___ftpack@arg,f
 17891  1EA3                     l25006:	
 17892  1EA3  30FF               	movlw	255
 17893  1EA4  0525               	andwf	___ftpack@arg+2,w
 17894  1EA5  1903               	btfsc	3,2
 17895  1EA6  2EAC               	goto	l25010
 17896  1EA7  2E9A               	goto	l25004
 17897  1EA8                     l25008:	
 17898  1EA8  03A6               	decf	___ftpack@exp,f
 17899  1EA9  35A3               	lslf	___ftpack@arg,f
 17900  1EAA  0DA4               	rlf	___ftpack@arg+1,f
 17901  1EAB  0DA5               	rlf	___ftpack@arg+2,f
 17902  1EAC                     l25010:	
 17903  1EAC  1FA4               	btfss	___ftpack@arg+1,7
 17904  1EAD  2EA8               	goto	l25008
 17905  1EAE  1C26               	btfss	___ftpack@exp,0
 17906  1EAF  13A4               	bcf	___ftpack@arg+1,7
 17907  1EB0  36A6               	lsrf	___ftpack@exp,f
 17908  1EB1  0826               	movf	___ftpack@exp,w
 17909  1EB2  00AA               	movwf	??___ftpack+2
 17910  1EB3  01A9               	clrf	??___ftpack+1
 17911  1EB4  01A8               	clrf	??___ftpack
 17912  1EB5  0828               	movf	??___ftpack,w
 17913  1EB6  04A3               	iorwf	___ftpack@arg,f
 17914  1EB7  0829               	movf	??___ftpack+1,w
 17915  1EB8  04A4               	iorwf	___ftpack@arg+1,f
 17916  1EB9  082A               	movf	??___ftpack+2,w
 17917  1EBA  04A5               	iorwf	___ftpack@arg+2,f
 17918  1EBB  0827               	movf	___ftpack@sign,w
 17919  1EBC  1D03               	skipz
 17920  1EBD  17A5               	bsf	___ftpack@arg+2,7
 17921  1EBE  0008               	return
 17922  1EBF                     __end_of___ftpack:	
 17923  1EBF                     __ptext37:	
 17924 ;; *************** function _memset *****************
 17925 ;; Defined at:
 17926 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memset.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;  p1              2    3[BANK0 ] PTR void 
 17929 ;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
 17930 ;;		 -> uart1_rx_buf(80), 
 17931 ;;  c               2    5[BANK0 ] int 
 17932 ;;  n               2    7[BANK0 ] unsigned int 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  p               2    9[BANK0 ] PTR unsigned char 
 17935 ;;		 -> PID_CC2_discharge(21), PID_CC_discharge(21), PID_CV_charge(21), PID_CC_charge(21), 
 17936 ;;		 -> uart1_rx_buf(80), 
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  2    3[BANK0 ] PTR void 
 17939 ;; Registers used:
 17940 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17941 ;; Tracked objects:
 17942 ;;		On entry : 1F/0
 17943 ;;		On exit  : 1F/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17946 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17950 ;;Total ram usage:        8 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:    2
 17953 ;; This function calls:
 17954 ;;		Nothing
 17955 ;; This function is called by:
 17956 ;;		_pid_init
 17957 ;;		_handle_uart_rx_buf
 17958 ;; This function uses a non-reentrant model
 17959 ;;
 17960                           
 17961                           
 17962                           ;psect for function _memset
 17963  1EBF                     _memset:	
 17964  1EBF                     l19894:	
 17965                           ;incstack = 0
 17966                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 17967                           
 17968  1EBF  0824               	movf	memset@p1+1,w
 17969  1EC0  00AA               	movwf	memset@p+1
 17970  1EC1  0823               	movf	memset@p1,w
 17971  1EC2  00A9               	movwf	memset@p
 17972  1EC3                     l19900:	
 17973  1EC3  3001               	movlw	1
 17974  1EC4  02A7               	subwf	memset@n,f
 17975  1EC5  3000               	movlw	0
 17976  1EC6  3BA8               	subwfb	memset@n+1,f
 17977  1EC7  0A27               	incf	memset@n,w
 17978  1EC8  1903               	skipnz
 17979  1EC9  0A28               	incf	memset@n+1,w
 17980  1ECA  1903               	btfsc	3,2
 17981  1ECB  0008               	return
 17982  1ECC  0829               	movf	memset@p,w
 17983  1ECD  0086               	movwf	6
 17984  1ECE  082A               	movf	memset@p+1,w
 17985  1ECF  0087               	movwf	7
 17986  1ED0  0825               	movf	memset@c,w
 17987  1ED1  0081               	movwf	1
 17988  1ED2  0AA9               	incf	memset@p,f
 17989  1ED3  1903               	skipnz
 17990  1ED4  0AAA               	incf	memset@p+1,f
 17991  1ED5  2EC3               	goto	l19900
 17992  1ED6                     __end_of_memset:	
 17993  1ED6                     PL16:	
 17994  1ED6  3012               	movlw	18
 17995  1ED7  0026               	movlb	6	; select bank6
 17996  1ED8  00A3               	movwf	(_PID_CC_charge^(0+768)+3)
 17997  1ED9  3083               	movlw	131
 17998  1EDA  00A4               	movwf	((_PID_CC_charge+1)^(0+768)+3)
 17999  1EDB  303A               	movlw	58
 18000  1EDC  00A5               	movwf	((_PID_CC_charge+2)^(0+768)+3)
 18001  1EDD  3096               	movlw	150
 18002  1EDE  01A6               	clrf	(_PID_CC_charge^(0+768)+6)
 18003  1EDF  01A7               	clrf	((_PID_CC_charge+1)^(0+768)+6)
 18004  1EE0  01A8               	clrf	((_PID_CC_charge+2)^(0+768)+6)
 18005  1EE1  01A9               	clrf	(_PID_CC_charge^(0+768)+9)
 18006  1EE2  01AA               	clrf	((_PID_CC_charge+1)^(0+768)+9)
 18007  1EE3  01AB               	clrf	((_PID_CC_charge+2)^(0+768)+9)
 18008  1EE4  01A0               	clrf	_PID_CC_charge^(0+768)
 18009  1EE5  00A1               	movwf	(_PID_CC_charge+1)^(0+768)
 18010  1EE6  3042               	movlw	66
 18011  1EE7  00A2               	movwf	(_PID_CC_charge+2)^(0+768)
 18012  1EE8  3012               	movlw	18
 18013  1EE9  0025               	movlb	5	; select bank5
 18014  1EEA  00CE               	movwf	(_PID_CV_charge^(0+640)+3)
 18015  1EEB  3083               	movlw	131
 18016  1EEC  00CF               	movwf	((_PID_CV_charge+1)^(0+640)+3)
 18017  1EED  303A               	movlw	58
 18018  1EEE  00D0               	movwf	((_PID_CV_charge+2)^(0+640)+3)
 18019  1EEF  01D1               	clrf	(_PID_CV_charge^(0+640)+6)
 18020  1EF0  01D2               	clrf	((_PID_CV_charge+1)^(0+640)+6)
 18021  1EF1  01D3               	clrf	((_PID_CV_charge+2)^(0+640)+6)
 18022  1EF2  01D4               	clrf	(_PID_CV_charge^(0+640)+9)
 18023  1EF3  01D5               	clrf	((_PID_CV_charge+1)^(0+640)+9)
 18024  1EF4  01D6               	clrf	((_PID_CV_charge+2)^(0+640)+9)
 18025  1EF5  0020               	movlb	0	; select bank0
 18026  1EF6  3080               	movlw	128
 18027  1EF7  01C2               	clrf	___ftadd@f1
 18028  1EF8  00C3               	movwf	___ftadd@f1+1
 18029  1EF9  303F               	movlw	63
 18030  1EFA  00C4               	movwf	___ftadd@f1+2
 18031  1EFB  0023               	movlb	3	; select bank3
 18032  1EFC  0855               	movf	_dianchi_cv_level^(0+384),w
 18033  1EFD  0020               	movlb	0	; select bank0
 18034  1EFE  00C5               	movwf	___ftadd@f2
 18035  1EFF  0023               	movlb	3	; select bank3
 18036  1F00  0856               	movf	(_dianchi_cv_level+1)^(0+384),w
 18037  1F01  0020               	movlb	0	; select bank0
 18038  1F02  00C6               	movwf	___ftadd@f2+1
 18039  1F03  0023               	movlb	3	; select bank3
 18040  1F04  0857               	movf	(_dianchi_cv_level+2)^(0+384),w
 18041  1F05  0020               	movlb	0	; select bank0
 18042  1F06  00C7               	movwf	___ftadd@f2+2
 18043  1F07  0008               	return
 18044  1F08                     __end_ofPL16:	
 18045  1F08                     PL18:	
 18046  1F08  3012               	movlw	18
 18047  1F09  0024               	movlb	4	; select bank4
 18048  1F0A  00C8               	movwf	(_PID_CC2_discharge^(0+512)+3)
 18049  1F0B  3083               	movlw	131
 18050  1F0C  00C9               	movwf	((_PID_CC2_discharge+1)^(0+512)+3)
 18051  1F0D  303A               	movlw	58
 18052  1F0E  00CA               	movwf	((_PID_CC2_discharge+2)^(0+512)+3)
 18053  1F0F  01CB               	clrf	(_PID_CC2_discharge^(0+512)+6)
 18054  1F10  01CC               	clrf	((_PID_CC2_discharge+1)^(0+512)+6)
 18055  1F11  01CD               	clrf	((_PID_CC2_discharge+2)^(0+512)+6)
 18056  1F12  01CE               	clrf	(_PID_CC2_discharge^(0+512)+9)
 18057  1F13  01CF               	clrf	((_PID_CC2_discharge+1)^(0+512)+9)
 18058  1F14  01D0               	clrf	((_PID_CC2_discharge+2)^(0+512)+9)
 18059  1F15  0021               	movlb	1	; select bank1
 18060  1F16  0008               	return
 18061  1F17                     __end_ofPL18:	
 18062  1F17                     PL24:	
 18063  1F17  3012               	movlw	18
 18064  1F18  0023               	movlb	3	; select bank3
 18065  1F19  00C0               	movwf	(_PID_CC_discharge^(0+384)+3)
 18066  1F1A  3083               	movlw	131
 18067  1F1B  00C1               	movwf	((_PID_CC_discharge+1)^(0+384)+3)
 18068  1F1C  303A               	movlw	58
 18069  1F1D  00C2               	movwf	((_PID_CC_discharge+2)^(0+384)+3)
 18070  1F1E  01C3               	clrf	(_PID_CC_discharge^(0+384)+6)
 18071  1F1F  01C4               	clrf	((_PID_CC_discharge+1)^(0+384)+6)
 18072  1F20  01C5               	clrf	((_PID_CC_discharge+2)^(0+384)+6)
 18073  1F21  01C6               	clrf	(_PID_CC_discharge^(0+384)+9)
 18074  1F22  01C7               	clrf	((_PID_CC_discharge+1)^(0+384)+9)
 18075  1F23  01C8               	clrf	((_PID_CC_discharge+2)^(0+384)+9)
 18076  1F24  0020               	movlb	0	; select bank0
 18077  1F25  30F0               	movlw	240
 18078  1F26  01B3               	clrf	___ftmul@f1
 18079  1F27  00B4               	movwf	___ftmul@f1+1
 18080  1F28  3441               	retlw	65
 18081  1F29                     __end_ofPL24:	
 18082  1F29                     PL54:	
 18083  1F29  0022               	movlb	2	; select bank2
 18084  1F2A  01C9               	clrf	_open_discharge_time^(0+256)
 18085  1F2B  0024               	movlb	4	; select bank4
 18086  1F2C  01C1               	clrf	_ms_cnt^(0+512)
 18087  1F2D  01C2               	clrf	(_ms_cnt+1)^(0+512)
 18088  1F2E  01C3               	clrf	_se_cnt^(0+512)
 18089  1F2F  01C4               	clrf	(_se_cnt+1)^(0+512)
 18090  1F30  01BF               	clrf	_mi_cnt^(0+512)
 18091  1F31  01C0               	clrf	(_mi_cnt+1)^(0+512)
 18092  1F32  01FC               	clrf	_ho_cnt
 18093  1F33  01FD               	clrf	_ho_cnt+1
 18094  1F34  0022               	movlb	2	; select bank2
 18095  1F35  01BE               	clrf	_limit_power_pid_flag^(0+256)
 18096  1F36  0020               	movlb	0	; select bank0
 18097  1F37  01EA               	clrf	_Adjust_Pout_Flag
 18098  1F38  0021               	movlb	1	; select bank1
 18099  1F39  01DC               	clrf	_voltage_adjust_index^(0+128)
 18100  1F3A  0ADC               	incf	_voltage_adjust_index^(0+128),f
 18101  1F3B  0022               	movlb	2	; select bank2
 18102  1F3C  01C0               	clrf	_nop_index^(0+256)
 18103  1F3D  0021               	movlb	1	; select bank1
 18104  1F3E  0008               	return
 18105  1F3F                     __end_ofPL54:	
 18106  1F3F                     PL72:	
 18107  1F3F  01B5               	clrf	_charge_index^(0+128)
 18108  1F40  0022               	movlb	2	; select bank2
 18109  1F41  0820               	movf	_b_v^(0+256),w
 18110  1F42  0023               	movlb	3	; select bank3
 18111  1F43  00A7               	movwf	_bt_00_hv^(0+384)
 18112  1F44  0022               	movlb	2	; select bank2
 18113  1F45  0821               	movf	(_b_v+1)^(0+256),w
 18114  1F46  0023               	movlb	3	; select bank3
 18115  1F47  00A8               	movwf	(_bt_00_hv+1)^(0+384)
 18116  1F48  0022               	movlb	2	; select bank2
 18117  1F49  0822               	movf	(_b_v+2)^(0+256),w
 18118  1F4A  0023               	movlb	3	; select bank3
 18119  1F4B  00A9               	movwf	(_bt_00_hv+2)^(0+384)
 18120  1F4C  0827               	movf	_bt_00_hv^(0+384),w
 18121  1F4D  0020               	movlb	0	; select bank0
 18122  1F4E  00C5               	movwf	___ftdiv@f1
 18123  1F4F  0023               	movlb	3	; select bank3
 18124  1F50  0828               	movf	(_bt_00_hv+1)^(0+384),w
 18125  1F51  0020               	movlb	0	; select bank0
 18126  1F52  00C6               	movwf	___ftdiv@f1+1
 18127  1F53  0023               	movlb	3	; select bank3
 18128  1F54  0829               	movf	(_bt_00_hv+2)^(0+384),w
 18129  1F55  0008               	return
 18130  1F56                     __end_ofPL72:	
 18131  1F56                     PL82:	
 18132  1F56  0851               	movf	?___fttol,w
 18133  1F57  00DE               	movwf	eeprom_write@value
 18134  1F58  086B               	movf	_today_index,w
 18135  1F59  3E08               	addlw	8
 18136  1F5A  3907               	andlw	7
 18137  1F5B  0709               	addwf	9,w
 18138  1F5C  0709               	addwf	9,w
 18139  1F5D  0008               	return
 18140  1F5E                     __end_ofPL82:	
 18141  1F5E                     PL122:	
 18142  1F5E  0022               	movlb	2	; select bank2
 18143  1F5F  118E               	bcf	14,3	;volatile
 18144  1F60  0020               	movlb	0	; select bank0
 18145  1F61  01A3               	clrf	Set_Bost_Pwm1_Duty@dduty
 18146  1F62  01A4               	clrf	Set_Bost_Pwm1_Duty@dduty+1
 18147  1F63  0008               	return
 18148  1F64                     __end_ofPL122:	
 18149  1F64                     PL124:	
 18150  1F64  0842               	movf	?___ftadd,w
 18151  1F65  0025               	movlb	5	; select bank5
 18152  1F66  00CB               	movwf	_PID_CV_charge^(0+640)
 18153  1F67  0020               	movlb	0	; select bank0
 18154  1F68  0843               	movf	?___ftadd+1,w
 18155  1F69  0025               	movlb	5	; select bank5
 18156  1F6A  00CC               	movwf	(_PID_CV_charge+1)^(0+640)
 18157  1F6B  0020               	movlb	0	; select bank0
 18158  1F6C  0844               	movf	?___ftadd+2,w
 18159  1F6D  0025               	movlb	5	; select bank5
 18160  1F6E  00CD               	movwf	(_PID_CV_charge+2)^(0+640)
 18161  1F6F  0008               	return
 18162  1F70                     __end_ofPL124:	
 18163  1F70                     PL128:	
 18164  1F70  0022               	movlb	2	; select bank2
 18165  1F71  100E               	bcf	14,0	;volatile
 18166  1F72  0020               	movlb	0	; select bank0
 18167  1F73  01A3               	clrf	Set_Bost_Pwm2_Duty@dduty
 18168  1F74  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 18169  1F75  0008               	return
 18170  1F76                     __end_ofPL128:	
 18171  1F76                     PL130:	
 18172  1F76  0833               	movf	?___ftmul,w
 18173  1F77  00E0               	movwf	_handle_task_process$3197
 18174  1F78  0834               	movf	?___ftmul+1,w
 18175  1F79  00E1               	movwf	_handle_task_process$3197+1
 18176  1F7A  0835               	movf	?___ftmul+2,w
 18177  1F7B  00E2               	movwf	_handle_task_process$3197+2
 18178  1F7C  309A               	movlw	154
 18179  1F7D  00B3               	movwf	___ftmul@f1
 18180  1F7E  3099               	movlw	153
 18181  1F7F  00B4               	movwf	___ftmul@f1+1
 18182  1F80  303E               	movlw	62
 18183  1F81  00B5               	movwf	___ftmul@f1+2
 18184  1F82  0860               	movf	_handle_task_process$3197,w
 18185  1F83  00B6               	movwf	___ftmul@f2
 18186  1F84  0861               	movf	_handle_task_process$3197+1,w
 18187  1F85  00B7               	movwf	___ftmul@f2+1
 18188  1F86  0862               	movf	_handle_task_process$3197+2,w
 18189  1F87  00B8               	movwf	___ftmul@f2+2
 18190  1F88  0008               	return
 18191  1F89                     __end_ofPL130:	
 18192  1F89                     PL150:	
 18193  1F89  082A               	movf	_bt_00_lv^(0+384),w
 18194  1F8A  0020               	movlb	0	; select bank0
 18195  1F8B  00C5               	movwf	___ftdiv@f1
 18196  1F8C  0023               	movlb	3	; select bank3
 18197  1F8D  082B               	movf	(_bt_00_lv+1)^(0+384),w
 18198  1F8E  0020               	movlb	0	; select bank0
 18199  1F8F  00C6               	movwf	___ftdiv@f1+1
 18200  1F90  0023               	movlb	3	; select bank3
 18201  1F91  082C               	movf	(_bt_00_lv+2)^(0+384),w
 18202  1F92  0008               	return
 18203  1F93                     __end_ofPL150:	
 18204  1F93                     PL222:	
 18205  1F93  082A               	movf	_bt_00_lv^(0+384),w
 18206  1F94  0020               	movlb	0	; select bank0
 18207  1F95  00D1               	movwf	___fttol@f1
 18208  1F96  0023               	movlb	3	; select bank3
 18209  1F97  082B               	movf	(_bt_00_lv+1)^(0+384),w
 18210  1F98  0020               	movlb	0	; select bank0
 18211  1F99  00D2               	movwf	___fttol@f1+1
 18212  1F9A  0023               	movlb	3	; select bank3
 18213  1F9B  082C               	movf	(_bt_00_lv+2)^(0+384),w
 18214  1F9C  0020               	movlb	0	; select bank0
 18215  1F9D  00D3               	movwf	___fttol@f1+2
 18216  1F9E  0008               	return
 18217  1F9F                     __end_ofPL222:	
 18218  1F9F                     PL240:	
 18219  1F9F  0827               	movf	_bt_00_hv^(0+384),w
 18220  1FA0  0020               	movlb	0	; select bank0
 18221  1FA1  00D1               	movwf	___fttol@f1
 18222  1FA2  0023               	movlb	3	; select bank3
 18223  1FA3  0828               	movf	(_bt_00_hv+1)^(0+384),w
 18224  1FA4  0020               	movlb	0	; select bank0
 18225  1FA5  00D2               	movwf	___fttol@f1+1
 18226  1FA6  0023               	movlb	3	; select bank3
 18227  1FA7  0829               	movf	(_bt_00_hv+2)^(0+384),w
 18228  1FA8  0020               	movlb	0	; select bank0
 18229  1FA9  00D3               	movwf	___fttol@f1+2
 18230  1FAA  0008               	return
 18231  1FAB                     __end_ofPL240:	
 18232  1FAB                     PL274:	
 18233  1FAB  30C8               	movlw	200
 18234  1FAC  0020               	movlb	0	; select bank0
 18235  1FAD  00A3               	movwf	delay_ms@count
 18236  1FAE  01A4               	clrf	delay_ms@count+1
 18237  1FAF  0008               	return
 18238  1FB0                     __end_ofPL274:	
 18239  1FB0                     PL288:	
 18240  1FB0  30C8               	movlw	200
 18241  1FB1  0020               	movlb	0	; select bank0
 18242  1FB2  00A3               	movwf	Set_Bost_Pwm2_Duty@dduty
 18243  1FB3  01A4               	clrf	Set_Bost_Pwm2_Duty@dduty+1
 18244  1FB4  0008               	return
 18245  1FB5                     __end_ofPL288:	
 18246  1FB5                     PL292:	
 18247  1FB5  0021               	movlb	1	; select bank1
 18248  1FB6  3048               	movlw	72
 18249  1FB7  01A0               	clrf	_PWM^(0+128)
 18250  1FB8  00A1               	movwf	(_PWM+1)^(0+128)
 18251  1FB9  3042               	movlw	66
 18252  1FBA  00A2               	movwf	(_PWM+2)^(0+128)
 18253  1FBB  3432               	retlw	50
 18254  1FBC                     __end_ofPL292:	
 18255  1FBC                     PL316:	
 18256  1FBC  0851               	movf	___fttol@f1,w
 18257  1FBD  00D5               	movwf	??___fttol
 18258  1FBE  0852               	movf	___fttol@f1+1,w
 18259  1FBF  00D6               	movwf	??___fttol+1
 18260  1FC0  0853               	movf	___fttol@f1+2,w
 18261  1FC1  00D7               	movwf	??___fttol+2
 18262  1FC2  0008               	return
 18263  1FC3                     __end_ofPL316:	
 18264  1FC3                     PL322:	
 18265  1FC3  0023               	movlb	3	; select bank3
 18266  1FC4  3048               	movlw	72
 18267  1FC5  01A4               	clrf	_PWM2^(0+384)
 18268  1FC6  00A5               	movwf	(_PWM2+1)^(0+384)
 18269  1FC7  3042               	movlw	66
 18270  1FC8  00A6               	movwf	(_PWM2+2)^(0+384)
 18271  1FC9  0008               	return
 18272  1FCA                     __end_ofPL322:	
 18273  1FCA                     PL324:	
 18274  1FCA  083D               	movf	_light_mode^(0+128),w
 18275  1FCB  0020               	movlb	0	; select bank0
 18276  1FCC  00DE               	movwf	eeprom_write@value
 18277  1FCD  3436               	retlw	54
 18278  1FCE                     __end_ofPL324:	
 18279  1FCE                     PL362:	
 18280  1FCE  3020               	movlw	low _PID_CC_charge
 18281  1FCF  0020               	movlb	0	; select bank0
 18282  1FD0  00AB               	movwf	pid_init@pp
 18283  1FD1  3003               	movlw	high _PID_CC_charge
 18284  1FD2  00AC               	movwf	pid_init@pp+1
 18285  1FD3  0008               	return
 18286  1FD4                     __end_ofPL362:	
 18287  1FD4                     PL366:	
 18288  1FD4  30CB               	movlw	low _PID_CV_charge
 18289  1FD5  00AB               	movwf	pid_init@pp
 18290  1FD6  3002               	movlw	high _PID_CV_charge
 18291  1FD7  00AC               	movwf	pid_init@pp+1
 18292  1FD8  0008               	return
 18293  1FD9                     __end_ofPL366:	
 18294  1FD9                     __ptext55:	
 18295 ;; *************** function i1_Set_Bost_Pwm1_Duty *****************
 18296 ;; Defined at:
 18297 ;;		line 242 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 18298 ;; Parameters:    Size  Location     Type
 18299 ;;  dduty           2    0[COMMON] unsigned int 
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;		None
 18302 ;; Return value:  Size  Location     Type
 18303 ;;		None               void
 18304 ;; Registers used:
 18305 ;;		wreg, status,2, status,0
 18306 ;; Tracked objects:
 18307 ;;		On entry : 1F/1
 18308 ;;		On exit  : 1F/6
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;Total ram usage:        4 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_isr
 18321 ;; This function uses a non-reentrant model
 18322 ;;
 18323                           
 18324                           
 18325                           ;psect for function i1_Set_Bost_Pwm1_Duty
 18326  1FD9                     i1_Set_Bost_Pwm1_Duty:	
 18327                           
 18328                           ;pwm.c: 245: bost_pwm1_value=dduty;
 18329                           
 18330                           ;incstack = 0
 18331                           ; Regs used in i1_Set_Bost_Pwm1_Duty: [wreg+status,2+status,0]
 18332  1FD9  0871               	movf	i1Set_Bost_Pwm1_Duty@dduty+1,w
 18333  1FDA  00A4               	movwf	(_bost_pwm1_value+1)^(0+128)
 18334  1FDB  0870               	movf	i1Set_Bost_Pwm1_Duty@dduty,w
 18335  1FDC  00A3               	movwf	_bost_pwm1_value^(0+128)
 18336                           
 18337                           ;pwm.c: 247: if(dduty<=488)
 18338  1FDD  3001               	movlw	1
 18339  1FDE  0271               	subwf	i1Set_Bost_Pwm1_Duty@dduty+1,w
 18340  1FDF  30E9               	movlw	233
 18341  1FE0  1903               	skipnz
 18342  1FE1  0270               	subwf	i1Set_Bost_Pwm1_Duty@dduty,w
 18343  1FE2  1803               	skipnc
 18344  1FE3  2FF9               	goto	i1l20364
 18345                           
 18346                           ;pwm.c: 248: {
 18347                           ;pwm.c: 249: CCPR3L=(unsigned char)(dduty>>2);
 18348  1FE4  0871               	movf	i1Set_Bost_Pwm1_Duty@dduty+1,w
 18349  1FE5  00F3               	movwf	??i1_Set_Bost_Pwm1_Duty+1
 18350  1FE6  0870               	movf	i1Set_Bost_Pwm1_Duty@dduty,w
 18351  1FE7  00F2               	movwf	??i1_Set_Bost_Pwm1_Duty
 18352  1FE8  36F3               	lsrf	??i1_Set_Bost_Pwm1_Duty+1,f
 18353  1FE9  0CF2               	rrf	??i1_Set_Bost_Pwm1_Duty,f
 18354  1FEA  36F3               	lsrf	??i1_Set_Bost_Pwm1_Duty+1,f
 18355  1FEB  0CF2               	rrf	??i1_Set_Bost_Pwm1_Duty,f
 18356  1FEC  0872               	movf	??i1_Set_Bost_Pwm1_Duty,w
 18357  1FED  0026               	movlb	6	; select bank6
 18358  1FEE  0091               	movwf	17	;volatile
 18359                           
 18360                           ;pwm.c: 251: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
 18361  1FEF  0870               	movf	i1Set_Bost_Pwm1_Duty@dduty,w
 18362  1FF0  3903               	andlw	3
 18363  1FF1  00F2               	movwf	??i1_Set_Bost_Pwm1_Duty
 18364  1FF2  0EF2               	swapf	??i1_Set_Bost_Pwm1_Duty,f
 18365  1FF3  0813               	movf	19,w	;volatile
 18366  1FF4  0672               	xorwf	??i1_Set_Bost_Pwm1_Duty,w
 18367  1FF5  39CF               	andlw	-49
 18368  1FF6  0672               	xorwf	??i1_Set_Bost_Pwm1_Duty,w
 18369  1FF7  0093               	movwf	19	;volatile
 18370                           
 18371                           ;pwm.c: 252: }
 18372  1FF8  0008               	return
 18373  1FF9                     i1l20364:	
 18374                           
 18375                           ;pwm.c: 257: CCPR3L=(unsigned char)(dduty>>2);
 18376  1FF9  307A               	movlw	122
 18377  1FFA  0026               	movlb	6	; select bank6
 18378                           
 18379                           ;pwm.c: 259: CCP3CONbits.DC3B=(unsigned char)(dduty&0b11);
 18380  1FFB  2FFC               	ljmp	PL372	;call to abstracted procedure
 18381  1FFC                     __end_ofi1_Set_Bost_Pwm1_Duty:	
 18382  1FFC                     PL372:	
 18383  1FFC  0091               	movwf	17	;volatile
 18384  1FFD  30CF               	movlw	-49
 18385  1FFE  0593               	andwf	19,f	;volatile
 18386  1FFF  0008               	return
 18387  2000                     __end_ofPL372:	
 18388                           
 18389                           	psect	intentry
 18390  0004                     __pintentry:	
 18391 ;; *************** function _isr *****************
 18392 ;; Defined at:
 18393 ;;		line 67 in file "D:\MCUProject\ZH-SL-S4080-1\src\interrupt.c"
 18394 ;; Parameters:    Size  Location     Type
 18395 ;;		None
 18396 ;; Auto vars:     Size  Location     Type
 18397 ;;  time_cnt        2    1[BANK0 ] unsigned int 
 18398 ;;  r1_data         1    0[BANK0 ] unsigned char 
 18399 ;;  r2_data         1    0        unsigned char 
 18400 ;; Return value:  Size  Location     Type
 18401 ;;		None               void
 18402 ;; Registers used:
 18403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18404 ;; Tracked objects:
 18405 ;;		On entry : 0/0
 18406 ;;		On exit  : 10/0
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18411 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18413 ;;Total ram usage:       11 bytes
 18414 ;; Hardware stack levels used:    1
 18415 ;; Hardware stack levels required when called:    1
 18416 ;; This function calls:
 18417 ;;		i1_Disable_Bost_Pwm1
 18418 ;;		i1_Disable_Bost_Pwm2
 18419 ;;		i1_Set_Bost_Pwm1_Duty
 18420 ;;		i1_Set_Bost_Pwm2_Duty
 18421 ;; This function is called by:
 18422 ;;		Interrupt level 1
 18423 ;; This function uses a non-reentrant model
 18424 ;;
 18425                           
 18426  0004                     _isr:	
 18427                           
 18428                           ;incstack = 0
 18429                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18430  0004  3180               	pagesel	$
 18431                           
 18432                           ;interrupt.c: 69: unsigned char r1_data,r2_data;
 18433                           ;interrupt.c: 72: if (TMR1IE && TMR1IF)
 18434  0005  0021               	movlb	1	; select bank1
 18435  0006  1C11               	btfss	17,0	;volatile
 18436  0007  29C6               	goto	i1l20630
 18437  0008  0020               	movlb	0	; select bank0
 18438  0009  1C11               	btfss	17,0	;volatile
 18439  000A  29C6               	goto	i1l20630
 18440                           
 18441                           ;interrupt.c: 73: {
 18442                           ;interrupt.c: 74: TMR1IF = 0x00;
 18443  000B  1011               	bcf	17,0	;volatile
 18444                           
 18445                           ;interrupt.c: 75: TMR1H = 0xE0;
 18446  000C  30E0               	movlw	224
 18447  000D  0097               	movwf	23	;volatile
 18448                           
 18449                           ;interrupt.c: 76: TMR1L = 0xC0;
 18450  000E  30C0               	movlw	192
 18451  000F  0096               	movwf	22	;volatile
 18452                           
 18453                           ;interrupt.c: 79: if(system_check_time==0x01)
 18454  0010  0022               	movlb	2	; select bank2
 18455  0011  0B51               	decfsz	_system_check_time^(0+256),w
 18456  0012  2859               	goto	i1l20432
 18457                           
 18458                           ;interrupt.c: 80: {
 18459                           ;interrupt.c: 81: system_time_count++;
 18460  0013  0023               	movlb	3	; select bank3
 18461  0014  0AB5               	incf	_system_time_count^(0+384),f
 18462  0015  1903               	skipnz
 18463  0016  0AB6               	incf	(_system_time_count+1)^(0+384),f
 18464                           
 18465                           ;interrupt.c: 83: if(system_time_count>800)
 18466  0017  3003               	movlw	3
 18467  0018  0236               	subwf	(_system_time_count+1)^(0+384),w
 18468  0019  3021               	movlw	33
 18469  001A  1903               	skipnz
 18470  001B  0235               	subwf	_system_time_count^(0+384),w
 18471  001C  1C03               	skipc
 18472  001D  2850               	goto	i1l20424
 18473                           
 18474                           ;interrupt.c: 87: set_1HZ_flag^=0x01;
 18475  001E  01B5               	clrf	_system_time_count^(0+384)
 18476  001F  01B6               	clrf	(_system_time_count+1)^(0+384)
 18477                           
 18478                           ;interrupt.c: 89: if(have_person1_flag==0x01)
 18479  0020  0021               	movlb	1	; select bank1
 18480  0021  0B39               	decfsz	_have_person1_flag^(0+128),w
 18481  0022  282C               	goto	i1l20400
 18482                           
 18483                           ;interrupt.c: 90: {
 18484                           ;interrupt.c: 91: have_person1_time_count++;
 18485  0023  0022               	movlb	2	; select bank2
 18486  0024  3015               	movlw	21
 18487  0025  0AB6               	incf	_have_person1_time_count^(0+256),f
 18488                           
 18489                           ;interrupt.c: 93: if(have_person1_time_count>20)
 18490  0026  0236               	subwf	_have_person1_time_count^(0+256),w
 18491  0027  1C03               	skipc
 18492  0028  282C               	goto	i1l20400
 18493                           
 18494                           ;interrupt.c: 94: {
 18495                           ;interrupt.c: 95: have_person1_time_count=0x00;
 18496  0029  01B6               	clrf	_have_person1_time_count^(0+256)
 18497                           
 18498                           ;interrupt.c: 97: have_person1_flag=0x00;
 18499  002A  0021               	movlb	1	; select bank1
 18500  002B  01B9               	clrf	_have_person1_flag^(0+128)
 18501  002C                     i1l20400:	
 18502                           
 18503                           ;interrupt.c: 98: }
 18504                           ;interrupt.c: 99: }
 18505                           ;interrupt.c: 101: if(have_person2_flag==0x01)
 18506  002C  0021               	movlb	1	; select bank1
 18507  002D  0B3A               	decfsz	_have_person2_flag^(0+128),w
 18508  002E  2838               	goto	i1l20408
 18509                           
 18510                           ;interrupt.c: 102: {
 18511                           ;interrupt.c: 103: have_person2_time_count++;
 18512  002F  0022               	movlb	2	; select bank2
 18513  0030  3015               	movlw	21
 18514  0031  0AB7               	incf	_have_person2_time_count^(0+256),f
 18515                           
 18516                           ;interrupt.c: 105: if(have_person2_time_count>20)
 18517  0032  0237               	subwf	_have_person2_time_count^(0+256),w
 18518  0033  1C03               	skipc
 18519  0034  2838               	goto	i1l20408
 18520                           
 18521                           ;interrupt.c: 106: {
 18522                           ;interrupt.c: 107: have_person2_time_count=0x00;
 18523  0035  01B7               	clrf	_have_person2_time_count^(0+256)
 18524                           
 18525                           ;interrupt.c: 109: have_person2_flag=0x00;
 18526  0036  0021               	movlb	1	; select bank1
 18527  0037  01BA               	clrf	_have_person2_flag^(0+128)
 18528  0038                     i1l20408:	
 18529                           
 18530                           ;interrupt.c: 110: }
 18531                           ;interrupt.c: 111: }
 18532                           ;interrupt.c: 113: if(open_sleep_time==0x01 && device_status==0x00)
 18533  0038  0022               	movlb	2	; select bank2
 18534  0039  0B4A               	decfsz	_open_sleep_time^(0+256),w
 18535  003A  2850               	goto	i1l20424
 18536  003B  0021               	movlb	1	; select bank1
 18537  003C  08B6               	movf	_device_status^(0+128),f
 18538  003D  1D03               	skipz
 18539  003E  2850               	goto	i1l20424
 18540                           
 18541                           ;interrupt.c: 114: {
 18542                           ;interrupt.c: 115: sleep_time_count++;
 18543  003F  0025               	movlb	5	; select bank5
 18544  0040  0AC9               	incf	_sleep_time_count^(0+640),f
 18545  0041  1903               	skipnz
 18546  0042  0ACA               	incf	(_sleep_time_count+1)^(0+640),f
 18547                           
 18548                           ;interrupt.c: 117: if(sleep_time_count>=20)
 18549  0043  3000               	movlw	0
 18550  0044  024A               	subwf	(_sleep_time_count+1)^(0+640),w
 18551  0045  3014               	movlw	20
 18552  0046  1903               	skipnz
 18553  0047  0249               	subwf	_sleep_time_count^(0+640),w
 18554  0048  1C03               	skipc
 18555  0049  2850               	goto	i1l20424
 18556                           
 18557                           ;interrupt.c: 118: {
 18558                           ;interrupt.c: 119: sleep_time_count=0x00;
 18559  004A  01C9               	clrf	_sleep_time_count^(0+640)
 18560  004B  01CA               	clrf	(_sleep_time_count+1)^(0+640)
 18561  004C  0063               	sleep	;# 
 18562                           
 18563                           ;interrupt.c: 123: __nop();
 18564  004D  0000               	nop
 18565                           
 18566                           ;interrupt.c: 124: __nop();
 18567  004E  0000               	nop
 18568                           
 18569                           ;interrupt.c: 125: __nop();
 18570  004F  0000               	nop
 18571  0050                     i1l20424:	
 18572                           
 18573                           ;interrupt.c: 126: }
 18574                           ;interrupt.c: 127: }
 18575                           ;interrupt.c: 128: }
 18576                           ;interrupt.c: 130: scan_key_time_count++;
 18577  0050  0022               	movlb	2	; select bank2
 18578  0051  3028               	movlw	40
 18579  0052  0ACF               	incf	_scan_key_time_count^(0+256),f
 18580                           
 18581                           ;interrupt.c: 132: if(scan_key_time_count>=40)
 18582  0053  024F               	subwf	_scan_key_time_count^(0+256),w
 18583  0054  1C03               	skipc
 18584  0055  2859               	goto	i1l20432
 18585                           
 18586                           ;interrupt.c: 133: {
 18587                           ;interrupt.c: 134: scan_key_time_count=0x00;
 18588  0056  01CF               	clrf	_scan_key_time_count^(0+256)
 18589                           
 18590                           ;interrupt.c: 136: handle_scan_key_flag=0x01;
 18591  0057  01B3               	clrf	_handle_scan_key_flag^(0+256)
 18592  0058  0AB3               	incf	_handle_scan_key_flag^(0+256),f
 18593  0059                     i1l20432:	
 18594                           
 18595                           ;interrupt.c: 137: }
 18596                           ;interrupt.c: 139: }
 18597                           ;interrupt.c: 141: if(open_discharge_time==0x01)
 18598  0059  0B49               	decfsz	_open_discharge_time^(0+256),w
 18599  005A  2890               	goto	i1l20458
 18600                           
 18601                           ;interrupt.c: 142: {
 18602                           ;interrupt.c: 143: if(ms_cnt<1000)
 18603  005B  3003               	movlw	3
 18604  005C  0024               	movlb	4	; select bank4
 18605  005D  0242               	subwf	(_ms_cnt+1)^(0+512),w
 18606  005E  30E8               	movlw	232
 18607  005F  1903               	skipnz
 18608  0060  0241               	subwf	_ms_cnt^(0+512),w
 18609  0061  1803               	skipnc
 18610  0062  2867               	goto	i1l20438
 18611                           
 18612                           ;interrupt.c: 144: {
 18613                           ;interrupt.c: 145: ms_cnt++;
 18614  0063  0AC1               	incf	_ms_cnt^(0+512),f
 18615  0064  1903               	skipnz
 18616  0065  0AC2               	incf	(_ms_cnt+1)^(0+512),f
 18617                           
 18618                           ;interrupt.c: 146: }
 18619  0066  2890               	goto	i1l20458
 18620  0067                     i1l20438:	
 18621  0067  3000               	movlw	0
 18622                           
 18623                           ;interrupt.c: 147: else
 18624                           ;interrupt.c: 148: {
 18625                           ;interrupt.c: 149: ms_cnt=0x00;
 18626  0068  01C1               	clrf	_ms_cnt^(0+512)
 18627  0069  01C2               	clrf	(_ms_cnt+1)^(0+512)
 18628                           
 18629                           ;interrupt.c: 151: if(se_cnt<60)
 18630  006A  0244               	subwf	(_se_cnt+1)^(0+512),w
 18631  006B  303C               	movlw	60
 18632  006C  1903               	skipnz
 18633  006D  0243               	subwf	_se_cnt^(0+512),w
 18634  006E  1803               	skipnc
 18635  006F  2874               	goto	i1l20444
 18636                           
 18637                           ;interrupt.c: 152: {
 18638                           ;interrupt.c: 153: se_cnt++;
 18639  0070  0AC3               	incf	_se_cnt^(0+512),f
 18640  0071  1903               	skipnz
 18641  0072  0AC4               	incf	(_se_cnt+1)^(0+512),f
 18642                           
 18643                           ;interrupt.c: 154: }
 18644  0073  2890               	goto	i1l20458
 18645  0074                     i1l20444:	
 18646  0074  3000               	movlw	0
 18647                           
 18648                           ;interrupt.c: 155: else
 18649                           ;interrupt.c: 156: {
 18650                           ;interrupt.c: 157: se_cnt=0x00;
 18651  0075  01C3               	clrf	_se_cnt^(0+512)
 18652  0076  01C4               	clrf	(_se_cnt+1)^(0+512)
 18653                           
 18654                           ;interrupt.c: 159: if(mi_cnt<60)
 18655  0077  0240               	subwf	(_mi_cnt+1)^(0+512),w
 18656  0078  303C               	movlw	60
 18657  0079  1903               	skipnz
 18658  007A  023F               	subwf	_mi_cnt^(0+512),w
 18659  007B  1803               	skipnc
 18660  007C  2881               	goto	i1l20450
 18661                           
 18662                           ;interrupt.c: 160: {
 18663                           ;interrupt.c: 161: mi_cnt++;
 18664  007D  0ABF               	incf	_mi_cnt^(0+512),f
 18665  007E  1903               	skipnz
 18666  007F  0AC0               	incf	(_mi_cnt+1)^(0+512),f
 18667                           
 18668                           ;interrupt.c: 162: }
 18669  0080  2890               	goto	i1l20458
 18670  0081                     i1l20450:	
 18671  0081  3000               	movlw	0
 18672                           
 18673                           ;interrupt.c: 163: else
 18674                           ;interrupt.c: 164: {
 18675                           ;interrupt.c: 165: mi_cnt=0x00;
 18676  0082  01BF               	clrf	_mi_cnt^(0+512)
 18677  0083  01C0               	clrf	(_mi_cnt+1)^(0+512)
 18678                           
 18679                           ;interrupt.c: 167: if(ho_cnt<24)
 18680  0084  027D               	subwf	_ho_cnt+1,w
 18681  0085  3018               	movlw	24
 18682  0086  1903               	skipnz
 18683  0087  027C               	subwf	_ho_cnt,w
 18684  0088  1803               	skipnc
 18685  0089  288E               	goto	i1l20456
 18686                           
 18687                           ;interrupt.c: 168: {
 18688                           ;interrupt.c: 169: ho_cnt++;
 18689  008A  0AFC               	incf	_ho_cnt,f
 18690  008B  1903               	skipnz
 18691  008C  0AFD               	incf	_ho_cnt+1,f
 18692                           
 18693                           ;interrupt.c: 170: }
 18694  008D  2890               	goto	i1l20458
 18695  008E                     i1l20456:	
 18696                           
 18697                           ;interrupt.c: 171: else
 18698                           ;interrupt.c: 172: {
 18699                           ;interrupt.c: 173: ho_cnt=0x00;
 18700  008E  01FC               	clrf	_ho_cnt
 18701  008F  01FD               	clrf	_ho_cnt+1
 18702  0090                     i1l20458:	
 18703                           
 18704                           ;interrupt.c: 174: }
 18705                           ;interrupt.c: 175: }
 18706                           ;interrupt.c: 176: }
 18707                           ;interrupt.c: 177: }
 18708                           ;interrupt.c: 178: }
 18709                           ;interrupt.c: 180: if(open_an0_time==0x01)
 18710  0090  0022               	movlb	2	; select bank2
 18711  0091  0B41               	decfsz	_open_an0_time^(0+256),w
 18712  0092  28A3               	goto	i1l20468
 18713                           
 18714                           ;interrupt.c: 181: {
 18715                           ;interrupt.c: 182: an0_time_count++;
 18716  0093  0024               	movlb	4	; select bank4
 18717  0094  0AAF               	incf	_an0_time_count^(0+512),f
 18718  0095  1903               	skipnz
 18719  0096  0AB0               	incf	(_an0_time_count+1)^(0+512),f
 18720                           
 18721                           ;interrupt.c: 184: if(an0_time_count>=2)
 18722  0097  3000               	movlw	0
 18723  0098  0230               	subwf	(_an0_time_count+1)^(0+512),w
 18724  0099  3002               	movlw	2
 18725  009A  1903               	skipnz
 18726  009B  022F               	subwf	_an0_time_count^(0+512),w
 18727  009C  1C03               	skipc
 18728  009D  28A3               	goto	i1l20468
 18729                           
 18730                           ;interrupt.c: 185: {
 18731                           ;interrupt.c: 186: an0_time_count=0x00;
 18732  009E  01AF               	clrf	_an0_time_count^(0+512)
 18733  009F  01B0               	clrf	(_an0_time_count+1)^(0+512)
 18734                           
 18735                           ;interrupt.c: 188: handle_an0_process_flag=0x01;
 18736  00A0  0022               	movlb	2	; select bank2
 18737  00A1  01AB               	clrf	_handle_an0_process_flag^(0+256)
 18738  00A2  0AAB               	incf	_handle_an0_process_flag^(0+256),f
 18739  00A3                     i1l20468:	
 18740                           
 18741                           ;interrupt.c: 189: }
 18742                           ;interrupt.c: 191: }
 18743                           ;interrupt.c: 192: if(open_an1_time==0x01)
 18744  00A3  0022               	movlb	2	; select bank2
 18745  00A4  0B43               	decfsz	_open_an1_time^(0+256),w
 18746  00A5  28B6               	goto	i1l20478
 18747                           
 18748                           ;interrupt.c: 193: {
 18749                           ;interrupt.c: 194: an1_time_count++;
 18750  00A6  0024               	movlb	4	; select bank4
 18751  00A7  0AB3               	incf	_an1_time_count^(0+512),f
 18752  00A8  1903               	skipnz
 18753  00A9  0AB4               	incf	(_an1_time_count+1)^(0+512),f
 18754                           
 18755                           ;interrupt.c: 196: if(an1_time_count>=1000)
 18756  00AA  3003               	movlw	3
 18757  00AB  0234               	subwf	(_an1_time_count+1)^(0+512),w
 18758  00AC  30E8               	movlw	232
 18759  00AD  1903               	skipnz
 18760  00AE  0233               	subwf	_an1_time_count^(0+512),w
 18761  00AF  1C03               	skipc
 18762  00B0  28B6               	goto	i1l20478
 18763                           
 18764                           ;interrupt.c: 197: {
 18765                           ;interrupt.c: 198: an1_time_count=0x00;
 18766  00B1  01B3               	clrf	_an1_time_count^(0+512)
 18767  00B2  01B4               	clrf	(_an1_time_count+1)^(0+512)
 18768                           
 18769                           ;interrupt.c: 200: handle_an1_process_flag=0x01;
 18770  00B3  0022               	movlb	2	; select bank2
 18771  00B4  01AD               	clrf	_handle_an1_process_flag^(0+256)
 18772  00B5  0AAD               	incf	_handle_an1_process_flag^(0+256),f
 18773  00B6                     i1l20478:	
 18774                           
 18775                           ;interrupt.c: 201: }
 18776                           ;interrupt.c: 203: }
 18777                           ;interrupt.c: 204: if(open_an2_time==0x01)
 18778  00B6  0022               	movlb	2	; select bank2
 18779  00B7  0B44               	decfsz	_open_an2_time^(0+256),w
 18780  00B8  28C9               	goto	i1l20488
 18781                           
 18782                           ;interrupt.c: 205: {
 18783                           ;interrupt.c: 206: an2_time_count++;
 18784  00B9  0024               	movlb	4	; select bank4
 18785  00BA  0AB5               	incf	_an2_time_count^(0+512),f
 18786  00BB  1903               	skipnz
 18787  00BC  0AB6               	incf	(_an2_time_count+1)^(0+512),f
 18788                           
 18789                           ;interrupt.c: 208: if(an2_time_count>=5)
 18790  00BD  3000               	movlw	0
 18791  00BE  0236               	subwf	(_an2_time_count+1)^(0+512),w
 18792  00BF  3005               	movlw	5
 18793  00C0  1903               	skipnz
 18794  00C1  0235               	subwf	_an2_time_count^(0+512),w
 18795  00C2  1C03               	skipc
 18796  00C3  28C9               	goto	i1l20488
 18797                           
 18798                           ;interrupt.c: 209: {
 18799                           ;interrupt.c: 210: an2_time_count=0x00;
 18800  00C4  01B5               	clrf	_an2_time_count^(0+512)
 18801  00C5  01B6               	clrf	(_an2_time_count+1)^(0+512)
 18802                           
 18803                           ;interrupt.c: 212: handle_an2_process_flag=0x01;
 18804  00C6  0022               	movlb	2	; select bank2
 18805  00C7  01AE               	clrf	_handle_an2_process_flag^(0+256)
 18806  00C8  0AAE               	incf	_handle_an2_process_flag^(0+256),f
 18807  00C9                     i1l20488:	
 18808                           
 18809                           ;interrupt.c: 213: }
 18810                           ;interrupt.c: 215: }
 18811                           ;interrupt.c: 217: if(open_an3_time==0x01)
 18812  00C9  0022               	movlb	2	; select bank2
 18813  00CA  0B45               	decfsz	_open_an3_time^(0+256),w
 18814  00CB  28DC               	goto	i1l20498
 18815                           
 18816                           ;interrupt.c: 218: {
 18817                           ;interrupt.c: 219: an3_time_count++;
 18818  00CC  0024               	movlb	4	; select bank4
 18819  00CD  0AB7               	incf	_an3_time_count^(0+512),f
 18820  00CE  1903               	skipnz
 18821  00CF  0AB8               	incf	(_an3_time_count+1)^(0+512),f
 18822                           
 18823                           ;interrupt.c: 221: if(an3_time_count>=5)
 18824  00D0  3000               	movlw	0
 18825  00D1  0238               	subwf	(_an3_time_count+1)^(0+512),w
 18826  00D2  3005               	movlw	5
 18827  00D3  1903               	skipnz
 18828  00D4  0237               	subwf	_an3_time_count^(0+512),w
 18829  00D5  1C03               	skipc
 18830  00D6  28DC               	goto	i1l20498
 18831                           
 18832                           ;interrupt.c: 222: {
 18833                           ;interrupt.c: 223: an3_time_count=0x00;
 18834  00D7  01B7               	clrf	_an3_time_count^(0+512)
 18835  00D8  01B8               	clrf	(_an3_time_count+1)^(0+512)
 18836                           
 18837                           ;interrupt.c: 225: handle_an3_process_flag=0x01;
 18838  00D9  0022               	movlb	2	; select bank2
 18839  00DA  01AF               	clrf	_handle_an3_process_flag^(0+256)
 18840  00DB  0AAF               	incf	_handle_an3_process_flag^(0+256),f
 18841  00DC                     i1l20498:	
 18842                           
 18843                           ;interrupt.c: 226: }
 18844                           ;interrupt.c: 228: }
 18845                           ;interrupt.c: 231: if(open_an9_time==0x01)
 18846  00DC  0022               	movlb	2	; select bank2
 18847  00DD  0B48               	decfsz	_open_an9_time^(0+256),w
 18848  00DE  28EF               	goto	i1l20508
 18849                           
 18850                           ;interrupt.c: 232: {
 18851                           ;interrupt.c: 233: an9_time_count++;
 18852  00DF  0024               	movlb	4	; select bank4
 18853  00E0  0ABD               	incf	_an9_time_count^(0+512),f
 18854  00E1  1903               	skipnz
 18855  00E2  0ABE               	incf	(_an9_time_count+1)^(0+512),f
 18856                           
 18857                           ;interrupt.c: 235: if(an9_time_count>=5)
 18858  00E3  3000               	movlw	0
 18859  00E4  023E               	subwf	(_an9_time_count+1)^(0+512),w
 18860  00E5  3005               	movlw	5
 18861  00E6  1903               	skipnz
 18862  00E7  023D               	subwf	_an9_time_count^(0+512),w
 18863  00E8  1C03               	skipc
 18864  00E9  28EF               	goto	i1l20508
 18865                           
 18866                           ;interrupt.c: 236: {
 18867                           ;interrupt.c: 237: an9_time_count=0x00;
 18868  00EA  01BD               	clrf	_an9_time_count^(0+512)
 18869  00EB  01BE               	clrf	(_an9_time_count+1)^(0+512)
 18870                           
 18871                           ;interrupt.c: 239: handle_an9_process_flag=0x01;
 18872  00EC  0022               	movlb	2	; select bank2
 18873  00ED  01B2               	clrf	_handle_an9_process_flag^(0+256)
 18874  00EE  0AB2               	incf	_handle_an9_process_flag^(0+256),f
 18875  00EF                     i1l20508:	
 18876                           
 18877                           ;interrupt.c: 242: }
 18878                           ;interrupt.c: 244: }
 18879                           ;interrupt.c: 246: if(open_an4_time==0x01)
 18880  00EF  0022               	movlb	2	; select bank2
 18881  00F0  0B46               	decfsz	_open_an4_time^(0+256),w
 18882  00F1  2902               	goto	i1l20518
 18883                           
 18884                           ;interrupt.c: 247: {
 18885                           ;interrupt.c: 248: an4_time_count++;
 18886  00F2  0024               	movlb	4	; select bank4
 18887  00F3  0AB9               	incf	_an4_time_count^(0+512),f
 18888  00F4  1903               	skipnz
 18889  00F5  0ABA               	incf	(_an4_time_count+1)^(0+512),f
 18890                           
 18891                           ;interrupt.c: 250: if(an4_time_count>=2)
 18892  00F6  3000               	movlw	0
 18893  00F7  023A               	subwf	(_an4_time_count+1)^(0+512),w
 18894  00F8  3002               	movlw	2
 18895  00F9  1903               	skipnz
 18896  00FA  0239               	subwf	_an4_time_count^(0+512),w
 18897  00FB  1C03               	skipc
 18898  00FC  2902               	goto	i1l20518
 18899                           
 18900                           ;interrupt.c: 251: {
 18901                           ;interrupt.c: 252: an4_time_count=0x00;
 18902  00FD  01B9               	clrf	_an4_time_count^(0+512)
 18903  00FE  01BA               	clrf	(_an4_time_count+1)^(0+512)
 18904                           
 18905                           ;interrupt.c: 254: handle_an4_process_flag=0x01;
 18906  00FF  0022               	movlb	2	; select bank2
 18907  0100  01B0               	clrf	_handle_an4_process_flag^(0+256)
 18908  0101  0AB0               	incf	_handle_an4_process_flag^(0+256),f
 18909  0102                     i1l20518:	
 18910                           
 18911                           ;interrupt.c: 255: }
 18912                           ;interrupt.c: 257: }
 18913                           ;interrupt.c: 259: if(open_an8_time==0x01)
 18914  0102  0022               	movlb	2	; select bank2
 18915  0103  0B47               	decfsz	_open_an8_time^(0+256),w
 18916  0104  2915               	goto	i1l20528
 18917                           
 18918                           ;interrupt.c: 260: {
 18919                           ;interrupt.c: 261: an8_time_count++;
 18920  0105  0024               	movlb	4	; select bank4
 18921  0106  0ABB               	incf	_an8_time_count^(0+512),f
 18922  0107  1903               	skipnz
 18923  0108  0ABC               	incf	(_an8_time_count+1)^(0+512),f
 18924                           
 18925                           ;interrupt.c: 263: if(an8_time_count>=2)
 18926  0109  3000               	movlw	0
 18927  010A  023C               	subwf	(_an8_time_count+1)^(0+512),w
 18928  010B  3002               	movlw	2
 18929  010C  1903               	skipnz
 18930  010D  023B               	subwf	_an8_time_count^(0+512),w
 18931  010E  1C03               	skipc
 18932  010F  2915               	goto	i1l20528
 18933                           
 18934                           ;interrupt.c: 264: {
 18935                           ;interrupt.c: 265: an8_time_count=0x00;
 18936  0110  01BB               	clrf	_an8_time_count^(0+512)
 18937  0111  01BC               	clrf	(_an8_time_count+1)^(0+512)
 18938                           
 18939                           ;interrupt.c: 267: handle_an8_process_flag=0x01;
 18940  0112  0022               	movlb	2	; select bank2
 18941  0113  01B1               	clrf	_handle_an8_process_flag^(0+256)
 18942  0114  0AB1               	incf	_handle_an8_process_flag^(0+256),f
 18943  0115                     i1l20528:	
 18944                           
 18945                           ;interrupt.c: 268: }
 18946                           ;interrupt.c: 270: }
 18947                           ;interrupt.c: 272: if(open_an11_time==0x01)
 18948  0115  0022               	movlb	2	; select bank2
 18949  0116  0B42               	decfsz	_open_an11_time^(0+256),w
 18950  0117  2928               	goto	i1l20538
 18951                           
 18952                           ;interrupt.c: 273: {
 18953                           ;interrupt.c: 274: an11_time_count++;
 18954  0118  0024               	movlb	4	; select bank4
 18955  0119  0AB1               	incf	_an11_time_count^(0+512),f
 18956  011A  1903               	skipnz
 18957  011B  0AB2               	incf	(_an11_time_count+1)^(0+512),f
 18958                           
 18959                           ;interrupt.c: 276: if(an11_time_count>=2)
 18960  011C  3000               	movlw	0
 18961  011D  0232               	subwf	(_an11_time_count+1)^(0+512),w
 18962  011E  3002               	movlw	2
 18963  011F  1903               	skipnz
 18964  0120  0231               	subwf	_an11_time_count^(0+512),w
 18965  0121  1C03               	skipc
 18966  0122  2928               	goto	i1l20538
 18967                           
 18968                           ;interrupt.c: 277: {
 18969                           ;interrupt.c: 278: an11_time_count=0x00;
 18970  0123  01B1               	clrf	_an11_time_count^(0+512)
 18971  0124  01B2               	clrf	(_an11_time_count+1)^(0+512)
 18972                           
 18973                           ;interrupt.c: 280: handle_an11_process_flag=0x01;
 18974  0125  0022               	movlb	2	; select bank2
 18975  0126  01AC               	clrf	_handle_an11_process_flag^(0+256)
 18976  0127  0AAC               	incf	_handle_an11_process_flag^(0+256),f
 18977  0128                     i1l20538:	
 18978                           
 18979                           ;interrupt.c: 281: }
 18980                           ;interrupt.c: 283: }
 18981                           ;interrupt.c: 286: if (uart1_time_count > 0x00)
 18982  0128  0022               	movlb	2	; select bank2
 18983  0129  0855               	movf	_uart1_time_count^(0+256),w
 18984  012A  1903               	btfsc	3,2
 18985  012B  29A3               	goto	i1l20604
 18986                           
 18987                           ;interrupt.c: 287: {
 18988                           ;interrupt.c: 288: uart1_time_count--;
 18989  012C  0BD5               	decfsz	_uart1_time_count^(0+256),f
 18990                           
 18991                           ;interrupt.c: 290: if(uart1_time_count==0)
 18992  012D  29A3               	goto	i1l20604
 18993                           
 18994                           ;interrupt.c: 291: {
 18995                           ;interrupt.c: 292: if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA1)&&(uart1_rx_
      +                          buf[4]==0xAA))
 18996  012E  0021               	movlb	1	; select bank1
 18997  012F  0845               	movf	_uart1_receive_byte_count^(0+128),w
 18998  0130  3A05               	xorlw	5
 18999  0131  1D03               	skipz
 19000  0132  2940               	goto	i1l20550
 19001  0133  0028               	movlb	8	; select bank8
 19002  0134  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19003  0135  3AA1               	xorlw	161
 19004  0136  1D03               	skipz
 19005  0137  2940               	goto	i1l20550
 19006  0138  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 19007  0139  3AAA               	xorlw	170
 19008  013A  1D03               	skipz
 19009  013B  2940               	goto	i1l20550
 19010                           
 19011                           ;interrupt.c: 293: {
 19012                           ;interrupt.c: 294: rx_frame_kind=0x01;
 19013  013C  0022               	movlb	2	; select bank2
 19014  013D  01CE               	clrf	_rx_frame_kind^(0+256)
 19015  013E  0ACE               	incf	_rx_frame_kind^(0+256),f
 19016  013F  2951               	goto	i1l20558
 19017  0140                     i1l20550:	
 19018                           ;interrupt.c: 297: }
 19019                           
 19020                           ;interrupt.c: 296: uart1_receive_flag=TRUE;
 19021                           
 19022                           
 19023                           ;interrupt.c: 298: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA2)&&(uart
      +                          1_rx_buf[4]==0xAA))
 19024  0140  0021               	movlb	1	; select bank1
 19025  0141  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19026  0142  3A05               	xorlw	5
 19027  0143  1D03               	skipz
 19028  0144  2954               	goto	i1l20560
 19029  0145  0028               	movlb	8	; select bank8
 19030  0146  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19031  0147  3AA2               	xorlw	162
 19032  0148  1D03               	skipz
 19033  0149  2954               	goto	i1l20560
 19034  014A  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 19035  014B  3AAA               	xorlw	170
 19036  014C  1D03               	skipz
 19037  014D  2954               	goto	i1l20560
 19038                           
 19039                           ;interrupt.c: 299: {
 19040                           ;interrupt.c: 300: rx_frame_kind=0x02;
 19041  014E  3002               	movlw	2
 19042  014F                     L111:	
 19043  014F  0022               	movlb	2	; select bank2
 19044  0150  00CE               	movwf	_rx_frame_kind^(0+256)
 19045  0151                     i1l20558:	
 19046                           
 19047                           ;interrupt.c: 302: uart1_receive_flag=TRUE;
 19048  0151  01D4               	clrf	_uart1_receive_flag^(0+256)
 19049  0152  0AD4               	incf	_uart1_receive_flag^(0+256),f
 19050                           
 19051                           ;interrupt.c: 303: }
 19052  0153  29A3               	goto	i1l20604
 19053  0154                     i1l20560:	
 19054                           
 19055                           ;interrupt.c: 304: else if((uart1_receive_byte_count==21)&&(uart1_rx_buf[1]==0xA3)&&(uar
      +                          t1_rx_buf[20]==0xAA))
 19056  0154  0021               	movlb	1	; select bank1
 19057  0155  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19058  0156  3A15               	xorlw	21
 19059  0157  1D03               	skipz
 19060  0158  2964               	goto	i1l20570
 19061  0159  0028               	movlb	8	; select bank8
 19062  015A  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19063  015B  3AA3               	xorlw	163
 19064  015C  1D03               	skipz
 19065  015D  2964               	goto	i1l20570
 19066  015E  0834               	movf	(_uart1_rx_buf^(0+1024)+20),w
 19067  015F  3AAA               	xorlw	170
 19068  0160  1D03               	skipz
 19069  0161  2964               	goto	i1l20570
 19070                           
 19071                           ;interrupt.c: 305: {
 19072                           ;interrupt.c: 306: rx_frame_kind=0x03;
 19073  0162  3003               	movlw	3
 19074  0163  294F               	goto	L111
 19075  0164                     i1l20570:	
 19076                           
 19077                           ;interrupt.c: 310: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA4)&&(uart
      +                          1_rx_buf[4]==0xAA))
 19078  0164  0021               	movlb	1	; select bank1
 19079  0165  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19080  0166  3A05               	xorlw	5
 19081  0167  1D03               	skipz
 19082  0168  2974               	goto	i1l20580
 19083  0169  0028               	movlb	8	; select bank8
 19084  016A  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19085  016B  3AA4               	xorlw	164
 19086  016C  1D03               	skipz
 19087  016D  2974               	goto	i1l20580
 19088  016E  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 19089  016F  3AAA               	xorlw	170
 19090  0170  1D03               	skipz
 19091  0171  2974               	goto	i1l20580
 19092                           
 19093                           ;interrupt.c: 311: {
 19094                           ;interrupt.c: 312: rx_frame_kind=0x04;
 19095  0172  3004               	movlw	4
 19096  0173  294F               	goto	L111
 19097  0174                     i1l20580:	
 19098                           
 19099                           ;interrupt.c: 316: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA5)&&(uart
      +                          1_rx_buf[4]==0xAA))
 19100  0174  0021               	movlb	1	; select bank1
 19101  0175  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19102  0176  3A05               	xorlw	5
 19103  0177  1D03               	skipz
 19104  0178  2984               	goto	i1l20590
 19105  0179  0028               	movlb	8	; select bank8
 19106  017A  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19107  017B  3AA5               	xorlw	165
 19108  017C  1D03               	skipz
 19109  017D  2984               	goto	i1l20590
 19110  017E  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 19111  017F  3AAA               	xorlw	170
 19112  0180  1D03               	skipz
 19113  0181  2984               	goto	i1l20590
 19114                           
 19115                           ;interrupt.c: 317: {
 19116                           ;interrupt.c: 318: rx_frame_kind=0x05;
 19117  0182  3005               	movlw	5
 19118  0183  294F               	goto	L111
 19119  0184                     i1l20590:	
 19120                           
 19121                           ;interrupt.c: 322: else if((uart1_receive_byte_count==5)&&(uart1_rx_buf[1]==0xA6)&&(uart
      +                          1_rx_buf[4]==0xAA))
 19122  0184  0021               	movlb	1	; select bank1
 19123  0185  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19124  0186  3A05               	xorlw	5
 19125  0187  1D03               	skipz
 19126  0188  2994               	goto	i1l340
 19127  0189  0028               	movlb	8	; select bank8
 19128  018A  0821               	movf	(_uart1_rx_buf^(0+1024)+1),w
 19129  018B  3AA6               	xorlw	166
 19130  018C  1D03               	skipz
 19131  018D  2994               	goto	i1l340
 19132  018E  0824               	movf	(_uart1_rx_buf^(0+1024)+4),w
 19133  018F  3AAA               	xorlw	170
 19134  0190  1D03               	skipz
 19135  0191  2994               	goto	i1l340
 19136                           
 19137                           ;interrupt.c: 323: {
 19138                           ;interrupt.c: 324: rx_frame_kind=0x06;
 19139  0192  3006               	movlw	6
 19140  0193  294F               	goto	L111
 19141  0194                     i1l340:	
 19142                           
 19143                           ;interrupt.c: 328: else
 19144                           ;interrupt.c: 329: {
 19145                           ;interrupt.c: 330: if (RCSTAbits.FERR || RCSTAbits.OERR)
 19146  0194  0023               	movlb	3	; select bank3
 19147  0195  191D               	btfsc	29,2	;volatile
 19148  0196  2999               	goto	i1l344
 19149  0197  1C9D               	btfss	29,1	;volatile
 19150  0198  29A1               	goto	i1l20602
 19151  0199                     i1l344:	
 19152                           
 19153                           ;interrupt.c: 331: {
 19154                           ;interrupt.c: 332: RCSTAbits.CREN = 0x00;
 19155  0199  121D               	bcf	29,4	;volatile
 19156                           
 19157                           ;interrupt.c: 333: RCSTAbits.SPEN = 0x00;
 19158  019A  139D               	bcf	29,7	;volatile
 19159                           
 19160                           ;interrupt.c: 334: __nop();
 19161  019B  0000               	nop
 19162                           
 19163                           ;interrupt.c: 335: __nop();
 19164  019C  0000               	nop
 19165                           
 19166                           ;interrupt.c: 336: __nop();
 19167  019D  0000               	nop
 19168                           
 19169                           ;interrupt.c: 337: RCSTAbits.CREN = 0x01;
 19170  019E  0023               	movlb	3	; select bank3
 19171  019F  161D               	bsf	29,4	;volatile
 19172                           
 19173                           ;interrupt.c: 338: RCSTAbits.SPEN = 0x01;
 19174  01A0  179D               	bsf	29,7	;volatile
 19175  01A1                     i1l20602:	
 19176                           
 19177                           ;interrupt.c: 339: }
 19178                           ;interrupt.c: 341: uart1_receive_byte_count=0x00;
 19179  01A1  0021               	movlb	1	; select bank1
 19180  01A2  01C5               	clrf	_uart1_receive_byte_count^(0+128)
 19181  01A3                     i1l20604:	
 19182                           
 19183                           ;interrupt.c: 342: }
 19184                           ;interrupt.c: 343: }
 19185                           ;interrupt.c: 345: }
 19186                           ;interrupt.c: 348: if (uart_send_delay_timer > 0x00)
 19187  01A3  0022               	movlb	2	; select bank2
 19188  01A4  0857               	movf	_uart_send_delay_timer^(0+256),w
 19189  01A5  1903               	btfsc	3,2
 19190  01A6  29AB               	goto	i1l20610
 19191                           
 19192                           ;interrupt.c: 349: {
 19193                           ;interrupt.c: 350: uart_send_delay_timer--;
 19194  01A7  0BD7               	decfsz	_uart_send_delay_timer^(0+256),f
 19195                           
 19196                           ;interrupt.c: 352: if (uart_send_delay_timer == 0x00)
 19197  01A8  29AB               	goto	i1l20610
 19198                           
 19199                           ;interrupt.c: 353: {
 19200                           ;interrupt.c: 354: TXIE = 0x01;
 19201  01A9  0021               	movlb	1	; select bank1
 19202  01AA  1611               	bsf	17,4	;volatile
 19203  01AB                     i1l20610:	
 19204                           
 19205                           ;interrupt.c: 355: }
 19206                           ;interrupt.c: 357: }
 19207                           ;interrupt.c: 359: if (uart_send_end_flag == 0x01)
 19208  01AB  0022               	movlb	2	; select bank2
 19209  01AC  0B58               	decfsz	_uart_send_end_flag^(0+256),w
 19210  01AD  29B3               	goto	i1l20616
 19211                           
 19212                           ;interrupt.c: 360: {
 19213                           ;interrupt.c: 361: if (TXSTAbits.TRMT)
 19214  01AE  0023               	movlb	3	; select bank3
 19215  01AF  1C9E               	btfss	30,1	;volatile
 19216  01B0  29B3               	goto	i1l20616
 19217                           
 19218                           ;interrupt.c: 362: {
 19219                           ;interrupt.c: 364: uart_send_end_flag = 0x00;
 19220  01B1  0022               	movlb	2	; select bank2
 19221  01B2  01D8               	clrf	_uart_send_end_flag^(0+256)
 19222  01B3                     i1l20616:	
 19223                           
 19224                           ;interrupt.c: 366: }
 19225                           ;interrupt.c: 368: }
 19226                           ;interrupt.c: 372: if(ird_receive_time_count>0)
 19227  01B3  0022               	movlb	2	; select bank2
 19228  01B4  0839               	movf	_ird_receive_time_count^(0+256),w
 19229  01B5  1903               	btfsc	3,2
 19230  01B6  29C6               	goto	i1l20630
 19231                           
 19232                           ;interrupt.c: 373: {
 19233                           ;interrupt.c: 374: ird_receive_time_count--;
 19234  01B7  0BB9               	decfsz	_ird_receive_time_count^(0+256),f
 19235                           
 19236                           ;interrupt.c: 376: if(ird_receive_time_count==0x00)
 19237  01B8  29C6               	goto	i1l20630
 19238                           
 19239                           ;interrupt.c: 377: {
 19240                           ;interrupt.c: 378: if(receive_bit_count==32)
 19241  01B9  084D               	movf	_receive_bit_count^(0+256),w
 19242  01BA  3A20               	xorlw	32
 19243  01BB  1D03               	skipz
 19244  01BC  29C1               	goto	i1l20626
 19245                           
 19246                           ;interrupt.c: 379: {
 19247                           ;interrupt.c: 380: ird_receive_flag=0x01;
 19248  01BD  01B8               	clrf	_ird_receive_flag^(0+256)
 19249  01BE  0AB8               	incf	_ird_receive_flag^(0+256),f
 19250                           
 19251                           ;interrupt.c: 382: receive_bit_count=0x00;
 19252  01BF  01CD               	clrf	_receive_bit_count^(0+256)
 19253                           
 19254                           ;interrupt.c: 383: }
 19255  01C0  29C6               	goto	i1l20630
 19256  01C1                     i1l20626:	
 19257                           
 19258                           ;interrupt.c: 384: else
 19259                           ;interrupt.c: 385: {
 19260                           ;interrupt.c: 386: receive_bit_count=0x00;
 19261  01C1  01CD               	clrf	_receive_bit_count^(0+256)
 19262                           
 19263                           ;interrupt.c: 388: ird_status=0x00;
 19264  01C2  01BA               	clrf	_ird_status^(0+256)
 19265                           
 19266                           ;interrupt.c: 390: TMR0=0;
 19267  01C3  0020               	movlb	0	; select bank0
 19268  01C4  0195               	clrf	21	;volatile
 19269                           
 19270                           ;interrupt.c: 392: TMR0IF = 0;
 19271  01C5  110B               	bcf	11,2	;volatile
 19272  01C6                     i1l20630:	
 19273                           
 19274                           ;interrupt.c: 394: }
 19275                           ;interrupt.c: 395: }
 19276                           ;interrupt.c: 396: }
 19277                           ;interrupt.c: 400: }
 19278                           ;interrupt.c: 404: if (TXIE && TXIF)
 19279  01C6  0021               	movlb	1	; select bank1
 19280  01C7  1E11               	btfss	17,4	;volatile
 19281  01C8  29E3               	goto	i1l353
 19282  01C9  0020               	movlb	0	; select bank0
 19283  01CA  1E11               	btfss	17,4	;volatile
 19284  01CB  29E3               	goto	i1l353
 19285                           
 19286                           ;interrupt.c: 405: {
 19287                           ;interrupt.c: 406: if (uart_send_byte_count > 0x00)
 19288  01CC  0022               	movlb	2	; select bank2
 19289  01CD  0856               	movf	_uart_send_byte_count^(0+256),w
 19290  01CE  1903               	btfsc	3,2
 19291  01CF  29DA               	goto	i1l20642
 19292                           
 19293                           ;interrupt.c: 407: {
 19294                           ;interrupt.c: 408: uart_send_byte_count--;
 19295  01D0  03D6               	decf	_uart_send_byte_count^(0+256),f
 19296                           
 19297                           ;interrupt.c: 409: TXREG = *uart_send_point;
 19298  01D1  0859               	movf	_uart_send_point^(0+256),w
 19299  01D2  0086               	movwf	6
 19300  01D3  0187               	clrf	7
 19301  01D4  0801               	movf	1,w
 19302  01D5  0023               	movlb	3	; select bank3
 19303  01D6  009A               	movwf	26	;volatile
 19304                           
 19305                           ;interrupt.c: 410: uart_send_point++;
 19306  01D7  0022               	movlb	2	; select bank2
 19307  01D8  0AD9               	incf	_uart_send_point^(0+256),f
 19308                           
 19309                           ;interrupt.c: 411: }
 19310  01D9  29E3               	goto	i1l353
 19311  01DA                     i1l20642:	
 19312                           
 19313                           ;interrupt.c: 412: else if (uart_send_byte_count == 0x00)
 19314  01DA  08D6               	movf	_uart_send_byte_count^(0+256),f
 19315  01DB  1D03               	skipz
 19316  01DC  29E2               	goto	i1l356
 19317                           
 19318                           ;interrupt.c: 413: {
 19319                           ;interrupt.c: 414: uart_send_end_flag = 0x01;
 19320  01DD  01D8               	clrf	_uart_send_end_flag^(0+256)
 19321  01DE  0AD8               	incf	_uart_send_end_flag^(0+256),f
 19322                           
 19323                           ;interrupt.c: 415: TXIE = 0x00;
 19324  01DF  0021               	movlb	1	; select bank1
 19325  01E0  1211               	bcf	17,4	;volatile
 19326                           
 19327                           ;interrupt.c: 416: }
 19328  01E1  29E3               	goto	i1l353
 19329  01E2                     i1l356:	
 19330                           
 19331                           ;interrupt.c: 417: else
 19332                           ;interrupt.c: 418: {
 19333                           ;interrupt.c: 419: __nop();
 19334  01E2  0000               	nop
 19335  01E3                     i1l353:	
 19336                           
 19337                           ;interrupt.c: 420: }
 19338                           ;interrupt.c: 421: }
 19339                           ;interrupt.c: 423: if(RCIF && RCIE)
 19340  01E3  0020               	movlb	0	; select bank0
 19341  01E4  1E91               	btfss	17,5	;volatile
 19342  01E5  2A09               	goto	i1l20658
 19343  01E6  0021               	movlb	1	; select bank1
 19344  01E7  1E91               	btfss	17,5	;volatile
 19345  01E8  2A09               	goto	i1l20658
 19346                           
 19347                           ;interrupt.c: 424: {
 19348                           ;interrupt.c: 426: r1_data=RCREG;
 19349  01E9  0023               	movlb	3	; select bank3
 19350  01EA  0819               	movf	25,w	;volatile
 19351  01EB  0020               	movlb	0	; select bank0
 19352  01EC  00A0               	movwf	isr@r1_data
 19353                           
 19354                           ;interrupt.c: 428: uart1_time_count=0x0A;
 19355  01ED  300A               	movlw	10
 19356  01EE  0022               	movlb	2	; select bank2
 19357  01EF  00D5               	movwf	_uart1_time_count^(0+256)
 19358                           
 19359                           ;interrupt.c: 430: if( (uart1_receive_byte_count<21)&&(uart1_receive_flag==FALSE) )
 19360  01F0  3015               	movlw	21
 19361  01F1  0021               	movlb	1	; select bank1
 19362  01F2  0245               	subwf	_uart1_receive_byte_count^(0+128),w
 19363  01F3  1803               	skipnc
 19364  01F4  2A09               	goto	i1l20658
 19365  01F5  0022               	movlb	2	; select bank2
 19366  01F6  08D4               	movf	_uart1_receive_flag^(0+256),f
 19367  01F7  1D03               	skipz
 19368  01F8  2A09               	goto	i1l20658
 19369                           
 19370                           ;interrupt.c: 431: {
 19371                           ;interrupt.c: 432: uart1_rx_buf[uart1_receive_byte_count]=r1_data;
 19372  01F9  0021               	movlb	1	; select bank1
 19373  01FA  0845               	movf	_uart1_receive_byte_count^(0+128),w
 19374  01FB  3E20               	addlw	_uart1_rx_buf& (0+255)
 19375  01FC  0086               	movwf	6
 19376  01FD  3004               	movlw	4	; select bank8/9
 19377  01FE  0087               	movwf	7
 19378  01FF  0020               	movlb	0	; select bank0
 19379  0200  0820               	movf	isr@r1_data,w
 19380  0201  0081               	movwf	1
 19381                           
 19382                           ;interrupt.c: 434: if(uart1_rx_buf[0]==0x55)
 19383  0202  0028               	movlb	8	; select bank8
 19384  0203  0820               	movf	_uart1_rx_buf^(0+1024),w
 19385  0204  3A55               	xorlw	85
 19386  0205  1D03               	skipz
 19387  0206  2A09               	goto	i1l20658
 19388                           
 19389                           ;interrupt.c: 435: {
 19390                           ;interrupt.c: 436: uart1_receive_byte_count++;
 19391  0207  0021               	movlb	1	; select bank1
 19392  0208  0AC5               	incf	_uart1_receive_byte_count^(0+128),f
 19393  0209                     i1l20658:	
 19394                           
 19395                           ;interrupt.c: 437: }
 19396                           ;interrupt.c: 438: }
 19397                           ;interrupt.c: 442: }
 19398                           ;interrupt.c: 445: if(IOCIE && IOCIF)
 19399  0209  198B               	btfsc	11,3	;volatile
 19400  020A  1C0B               	btfss	11,0	;volatile
 19401  020B  0009               	retfie
 19402                           
 19403                           ;interrupt.c: 446: {
 19404                           ;interrupt.c: 447: unsigned int time_cnt;
 19405                           ;interrupt.c: 449: if(IOCBF6)
 19406  020C  0027               	movlb	7	; select bank7
 19407  020D  1B16               	btfsc	22,6	;volatile
 19408                           
 19409                           ;interrupt.c: 450: {
 19410                           ;interrupt.c: 451: IOCBF6=0;
 19411  020E  1316               	bcf	22,6	;volatile
 19412                           
 19413                           ;interrupt.c: 452: }
 19414                           ;interrupt.c: 454: if(IOCBF7)
 19415  020F  1F96               	btfss	22,7	;volatile
 19416  0210  2A7D               	goto	i1l20714
 19417                           
 19418                           ;interrupt.c: 455: {
 19419                           ;interrupt.c: 456: IOCBF7 = 0;
 19420  0211  1396               	bcf	22,7	;volatile
 19421                           
 19422                           ;interrupt.c: 458: ird_receive_time_count=150;
 19423  0212  3096               	movlw	150
 19424  0213  0022               	movlb	2	; select bank2
 19425  0214  00B9               	movwf	_ird_receive_time_count^(0+256)
 19426                           
 19427                           ;interrupt.c: 460: if((receive_bit_count<32)&&(ird_receive_flag==0x00))
 19428  0215  3020               	movlw	32
 19429  0216  024D               	subwf	_receive_bit_count^(0+256),w
 19430  0217  1803               	skipnc
 19431  0218  2A7D               	goto	i1l20714
 19432  0219  08B8               	movf	_ird_receive_flag^(0+256),f
 19433  021A  1D03               	skipz
 19434  021B  2A7D               	goto	i1l20714
 19435                           
 19436                           ;interrupt.c: 461: {
 19437                           ;interrupt.c: 462: if(ird_status==0x00)
 19438  021C  08BA               	movf	_ird_status^(0+256),f
 19439  021D  1D03               	skipz
 19440  021E  2A22               	goto	i1l20680
 19441                           
 19442                           ;interrupt.c: 463: {
 19443                           ;interrupt.c: 464: ird_status=0x01;
 19444  021F  01BA               	clrf	_ird_status^(0+256)
 19445  0220  0ABA               	incf	_ird_status^(0+256),f
 19446                           
 19447                           ;interrupt.c: 470: }
 19448  0221  2A7A               	goto	i1l20676
 19449  0222                     i1l20680:	
 19450                           
 19451                           ;interrupt.c: 471: else if(ird_status==0x01)
 19452  0222  0B3A               	decfsz	_ird_status^(0+256),w
 19453  0223  2A7D               	goto	i1l20714
 19454                           
 19455                           ;interrupt.c: 472: {
 19456                           ;interrupt.c: 473: time_cnt=TMR0;
 19457  0224  0020               	movlb	0	; select bank0
 19458  0225  0815               	movf	21,w	;volatile
 19459  0226  00A1               	movwf	isr@time_cnt
 19460  0227  01A2               	clrf	isr@time_cnt+1
 19461                           
 19462                           ;interrupt.c: 475: if(TMR0IF==1)
 19463  0228  1D0B               	btfss	11,2	;volatile
 19464  0229  2A32               	goto	i1l20692
 19465                           
 19466                           ;interrupt.c: 476: {
 19467                           ;interrupt.c: 477: receive_bit_count=0x00;
 19468  022A  0022               	movlb	2	; select bank2
 19469  022B  01CD               	clrf	_receive_bit_count^(0+256)
 19470                           
 19471                           ;interrupt.c: 479: ird_data=0x00;
 19472  022C  0025               	movlb	5	; select bank5
 19473  022D  01E6               	clrf	_ird_data^(0+640)
 19474  022E  01E7               	clrf	(_ird_data+1)^(0+640)
 19475  022F  01E8               	clrf	(_ird_data+2)^(0+640)
 19476  0230  01E9               	clrf	(_ird_data+3)^(0+640)
 19477  0231  2A7A               	goto	i1l20676
 19478  0232                     i1l20692:	
 19479                           ;interrupt.c: 481: TMR0=0;
 19480                           
 19481                           
 19482                           ;interrupt.c: 487: else if((time_cnt>20)&&(time_cnt<50))
 19483  0232  3000               	movlw	0
 19484  0233  0222               	subwf	isr@time_cnt+1,w
 19485  0234  3015               	movlw	21
 19486  0235  1903               	skipnz
 19487  0236  0221               	subwf	isr@time_cnt,w
 19488  0237  3000               	movlw	0
 19489  0238  1C03               	skipc
 19490  0239  2A49               	goto	L112
 19491  023A  0222               	subwf	isr@time_cnt+1,w
 19492  023B  3032               	movlw	50
 19493  023C  1903               	skipnz
 19494  023D  0221               	subwf	isr@time_cnt,w
 19495  023E  1803               	skipnc
 19496  023F  2A48               	goto	i1l20702
 19497                           
 19498                           ;interrupt.c: 488: {
 19499                           ;interrupt.c: 489: receive_bit_count++;
 19500  0240  0022               	movlb	2	; select bank2
 19501  0241  0ACD               	incf	_receive_bit_count^(0+256),f
 19502                           
 19503                           ;interrupt.c: 491: ird_data=ird_data<<1;
 19504  0242  0025               	movlb	5	; select bank5
 19505  0243  35E6               	lslf	_ird_data^(0+640),f
 19506  0244  0DE7               	rlf	(_ird_data+1)^(0+640),f
 19507  0245  0DE8               	rlf	(_ird_data+2)^(0+640),f
 19508  0246  0DE9               	rlf	(_ird_data+3)^(0+640),f
 19509  0247  2A7A               	goto	i1l20676
 19510  0248                     i1l20702:	
 19511                           
 19512                           ;interrupt.c: 497: else if((time_cnt>50)&&(time_cnt<90))
 19513  0248  3000               	movlw	0
 19514  0249                     L112:	
 19515  0249  0222               	subwf	isr@time_cnt+1,w
 19516  024A  3033               	movlw	51
 19517  024B  1903               	skipnz
 19518  024C  0221               	subwf	isr@time_cnt,w
 19519  024D  1C03               	skipc
 19520  024E  2A7D               	goto	i1l20714
 19521  024F  3000               	movlw	0
 19522  0250  0222               	subwf	isr@time_cnt+1,w
 19523  0251  305A               	movlw	90
 19524  0252  1903               	skipnz
 19525  0253  0221               	subwf	isr@time_cnt,w
 19526  0254  1803               	skipnc
 19527  0255  2A7D               	goto	i1l20714
 19528                           
 19529                           ;interrupt.c: 498: {
 19530                           ;interrupt.c: 499: receive_bit_count++;
 19531  0256  0022               	movlb	2	; select bank2
 19532  0257  3001               	movlw	1
 19533  0258  0ACD               	incf	_receive_bit_count^(0+256),f
 19534                           
 19535                           ;interrupt.c: 501: ird_data=(ird_data<<1)+1;
 19536  0259  00F4               	movwf	??_isr
 19537  025A  01F5               	clrf	??_isr+1
 19538  025B  01F6               	clrf	??_isr+2
 19539  025C  01F7               	clrf	??_isr+3
 19540  025D  0025               	movlb	5	; select bank5
 19541  025E  0866               	movf	_ird_data^(0+640),w
 19542  025F  00F8               	movwf	??_isr+4
 19543  0260  0867               	movf	(_ird_data+1)^(0+640),w
 19544  0261  00F9               	movwf	??_isr+5
 19545  0262  0868               	movf	(_ird_data+2)^(0+640),w
 19546  0263  00FA               	movwf	??_isr+6
 19547  0264  0869               	movf	(_ird_data+3)^(0+640),w
 19548  0265  00FB               	movwf	??_isr+7
 19549  0266  35F8               	lslf	??_isr+4,f
 19550  0267  0DF9               	rlf	??_isr+5,f
 19551  0268  0DFA               	rlf	??_isr+6,f
 19552  0269  0DFB               	rlf	??_isr+7,f
 19553  026A  0878               	movf	??_isr+4,w
 19554  026B  07F4               	addwf	??_isr,f
 19555  026C  0879               	movf	??_isr+5,w
 19556  026D  3DF5               	addwfc	??_isr+1,f
 19557  026E  087A               	movf	??_isr+6,w
 19558  026F  3DF6               	addwfc	??_isr+2,f
 19559  0270  087B               	movf	??_isr+7,w
 19560  0271  3DF7               	addwfc	??_isr+3,f
 19561  0272  0877               	movf	??_isr+3,w
 19562  0273  00E9               	movwf	(_ird_data+3)^(0+640)
 19563  0274  0876               	movf	??_isr+2,w
 19564  0275  00E8               	movwf	(_ird_data+2)^(0+640)
 19565  0276  0875               	movf	??_isr+1,w
 19566  0277  00E7               	movwf	(_ird_data+1)^(0+640)
 19567  0278  0874               	movf	??_isr,w
 19568  0279  00E6               	movwf	_ird_data^(0+640)
 19569  027A                     i1l20676:	
 19570                           
 19571                           ;interrupt.c: 466: TMR0=0;
 19572  027A  0020               	movlb	0	; select bank0
 19573  027B  0195               	clrf	21	;volatile
 19574                           
 19575                           ;interrupt.c: 468: TMR0IF = 0;
 19576  027C  110B               	bcf	11,2	;volatile
 19577  027D                     i1l20714:	
 19578                           
 19579                           ;interrupt.c: 506: }
 19580                           ;interrupt.c: 507: }
 19581                           ;interrupt.c: 508: }
 19582                           ;interrupt.c: 510: }
 19583                           ;interrupt.c: 513: if(IOCBF1)
 19584  027D  0027               	movlb	7	; select bank7
 19585  027E  1C96               	btfss	22,1	;volatile
 19586  027F  2A97               	goto	i1l20724
 19587                           
 19588                           ;interrupt.c: 514: {
 19589                           ;interrupt.c: 515: IOCBF1 = 0;
 19590  0280  1096               	bcf	22,1	;volatile
 19591                           
 19592                           ;interrupt.c: 517: handle_short1_flag=0x01;
 19593  0281  0022               	movlb	2	; select bank2
 19594  0282  3003               	movlw	3
 19595  0283  01B4               	clrf	_handle_short1_flag^(0+256)
 19596  0284  0AB4               	incf	_handle_short1_flag^(0+256),f
 19597                           
 19598                           ;interrupt.c: 519: discharge1_index=0x03;
 19599  0285  0021               	movlb	1	; select bank1
 19600  0286  00B7               	movwf	_discharge1_index^(0+128)
 19601                           
 19602                           ;interrupt.c: 521: (LATCbits.LATC3 = 0x00);
 19603  0287  0022               	movlb	2	; select bank2
 19604  0288  118E               	bcf	14,3	;volatile
 19605                           
 19606                           ;interrupt.c: 523: bost_pwm1_value=2;
 19607  0289  3002               	movlw	2
 19608  028A  0021               	movlb	1	; select bank1
 19609  028B  00A3               	movwf	_bost_pwm1_value^(0+128)
 19610  028C  01A4               	clrf	(_bost_pwm1_value+1)^(0+128)
 19611                           
 19612                           ;interrupt.c: 525: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 19613  028D  0824               	movf	(_bost_pwm1_value+1)^(0+128),w
 19614  028E  00F1               	movwf	i1Set_Bost_Pwm1_Duty@dduty+1
 19615  028F  0823               	movf	_bost_pwm1_value^(0+128),w
 19616  0290  00F0               	movwf	i1Set_Bost_Pwm1_Duty@dduty
 19617  0291  319F  27D9  3180   	fcall	i1_Set_Bost_Pwm1_Duty
 19618                           
 19619                           ;interrupt.c: 527: Disable_Bost_Pwm1();
 19620  0294  3188  2044  3180   	fcall	i1_Disable_Bost_Pwm1
 19621  0297                     i1l20724:	
 19622                           
 19623                           ;interrupt.c: 528: }
 19624                           ;interrupt.c: 530: if(IOCBF0)
 19625  0297  0027               	movlb	7	; select bank7
 19626  0298  1C16               	btfss	22,0	;volatile
 19627  0299  0009               	retfie
 19628                           
 19629                           ;interrupt.c: 531: {
 19630                           ;interrupt.c: 532: IOCBF0 = 0;
 19631  029A  1016               	bcf	22,0	;volatile
 19632                           
 19633                           ;interrupt.c: 534: handle_short2_flag=0x01;
 19634  029B  0022               	movlb	2	; select bank2
 19635  029C  3003               	movlw	3
 19636  029D  01B5               	clrf	_handle_short2_flag^(0+256)
 19637  029E  0AB5               	incf	_handle_short2_flag^(0+256),f
 19638                           
 19639                           ;interrupt.c: 536: discharge2_index=0x03;
 19640  029F  0021               	movlb	1	; select bank1
 19641  02A0  00B8               	movwf	_discharge2_index^(0+128)
 19642                           
 19643                           ;interrupt.c: 538: (LATCbits.LATC0 = 0x00);
 19644  02A1  0022               	movlb	2	; select bank2
 19645  02A2  100E               	bcf	14,0	;volatile
 19646                           
 19647                           ;interrupt.c: 540: bost_pwm2_value=2;
 19648  02A3  3002               	movlw	2
 19649  02A4  0021               	movlb	1	; select bank1
 19650  02A5  00A5               	movwf	_bost_pwm2_value^(0+128)
 19651  02A6  01A6               	clrf	(_bost_pwm2_value+1)^(0+128)
 19652                           
 19653                           ;interrupt.c: 542: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 19654  02A7  0826               	movf	(_bost_pwm2_value+1)^(0+128),w
 19655  02A8  00F1               	movwf	i1Set_Bost_Pwm2_Duty@dduty+1
 19656  02A9  0825               	movf	_bost_pwm2_value^(0+128),w
 19657  02AA  00F0               	movwf	i1Set_Bost_Pwm2_Duty@dduty
 19658  02AB  3188  20D8  3180   	fcall	i1_Set_Bost_Pwm2_Duty
 19659                           
 19660                           ;interrupt.c: 544: Disable_Bost_Pwm2();
 19661  02AE  3188  2049         	fcall	i1_Disable_Bost_Pwm2
 19662  02B0  0009               	retfie
 19663  02B1                     __end_of_isr:	
 19664                           
 19665                           	psect	text54
 19666  08D8                     __ptext54:	
 19667 ;; *************** function i1_Set_Bost_Pwm2_Duty *****************
 19668 ;; Defined at:
 19669 ;;		line 271 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;  dduty           2    0[COMMON] unsigned int 
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;		None               void
 19676 ;; Registers used:
 19677 ;;		wreg, status,2, status,0
 19678 ;; Tracked objects:
 19679 ;;		On entry : 1F/1
 19680 ;;		On exit  : 1F/6
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19687 ;;Total ram usage:        4 bytes
 19688 ;; Hardware stack levels used:    1
 19689 ;; This function calls:
 19690 ;;		Nothing
 19691 ;; This function is called by:
 19692 ;;		_isr
 19693 ;; This function uses a non-reentrant model
 19694 ;;
 19695                           
 19696                           
 19697                           ;psect for function i1_Set_Bost_Pwm2_Duty
 19698  08D8                     i1_Set_Bost_Pwm2_Duty:	
 19699                           
 19700                           ;pwm.c: 274: bost_pwm2_value=dduty;
 19701                           
 19702                           ;incstack = 0
 19703                           ; Regs used in i1_Set_Bost_Pwm2_Duty: [wreg+status,2+status,0]
 19704  08D8  0871               	movf	i1Set_Bost_Pwm2_Duty@dduty+1,w
 19705  08D9  00A6               	movwf	(_bost_pwm2_value+1)^(0+128)
 19706  08DA  0870               	movf	i1Set_Bost_Pwm2_Duty@dduty,w
 19707  08DB  00A5               	movwf	_bost_pwm2_value^(0+128)
 19708                           
 19709                           ;pwm.c: 276: if(dduty<=488)
 19710  08DC  3001               	movlw	1
 19711  08DD  0271               	subwf	i1Set_Bost_Pwm2_Duty@dduty+1,w
 19712  08DE  30E9               	movlw	233
 19713  08DF  1903               	skipnz
 19714  08E0  0270               	subwf	i1Set_Bost_Pwm2_Duty@dduty,w
 19715  08E1  1803               	skipnc
 19716  08E2  28F8               	goto	i1l20374
 19717                           
 19718                           ;pwm.c: 277: {
 19719                           ;pwm.c: 278: CCPR5L=(unsigned char)(dduty>>2);
 19720  08E3  0871               	movf	i1Set_Bost_Pwm2_Duty@dduty+1,w
 19721  08E4  00F3               	movwf	??i1_Set_Bost_Pwm2_Duty+1
 19722  08E5  0870               	movf	i1Set_Bost_Pwm2_Duty@dduty,w
 19723  08E6  00F2               	movwf	??i1_Set_Bost_Pwm2_Duty
 19724  08E7  36F3               	lsrf	??i1_Set_Bost_Pwm2_Duty+1,f
 19725  08E8  0CF2               	rrf	??i1_Set_Bost_Pwm2_Duty,f
 19726  08E9  36F3               	lsrf	??i1_Set_Bost_Pwm2_Duty+1,f
 19727  08EA  0CF2               	rrf	??i1_Set_Bost_Pwm2_Duty,f
 19728  08EB  0872               	movf	??i1_Set_Bost_Pwm2_Duty,w
 19729  08EC  0026               	movlb	6	; select bank6
 19730  08ED  009C               	movwf	28	;volatile
 19731                           
 19732                           ;pwm.c: 280: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
 19733  08EE  0870               	movf	i1Set_Bost_Pwm2_Duty@dduty,w
 19734  08EF  3903               	andlw	3
 19735  08F0  00F2               	movwf	??i1_Set_Bost_Pwm2_Duty
 19736  08F1  0EF2               	swapf	??i1_Set_Bost_Pwm2_Duty,f
 19737  08F2  081E               	movf	30,w	;volatile
 19738  08F3  0672               	xorwf	??i1_Set_Bost_Pwm2_Duty,w
 19739  08F4  39CF               	andlw	-49
 19740  08F5  0672               	xorwf	??i1_Set_Bost_Pwm2_Duty,w
 19741  08F6  009E               	movwf	30	;volatile
 19742                           
 19743                           ;pwm.c: 281: }
 19744  08F7  0008               	return
 19745  08F8                     i1l20374:	
 19746                           
 19747                           ;pwm.c: 286: CCPR5L=(unsigned char)(dduty>>2);
 19748  08F8  307A               	movlw	122
 19749  08F9  0026               	movlb	6	; select bank6
 19750  08FA  009C               	movwf	28	;volatile
 19751                           
 19752                           ;pwm.c: 288: CCP5CONbits.DC5B=(unsigned char)(dduty&0b11);
 19753  08FB  30CF               	movlw	-49
 19754  08FC  059E               	andwf	30,f	;volatile
 19755  08FD  0008               	return
 19756  08FE                     __end_ofi1_Set_Bost_Pwm2_Duty:	
 19757                           
 19758                           	psect	text56
 19759  0849                     __ptext56:	
 19760 ;; *************** function i1_Disable_Bost_Pwm2 *****************
 19761 ;; Defined at:
 19762 ;;		line 228 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 19763 ;; Parameters:    Size  Location     Type
 19764 ;;		None
 19765 ;; Auto vars:     Size  Location     Type
 19766 ;;		None
 19767 ;; Return value:  Size  Location     Type
 19768 ;;		None               void
 19769 ;; Registers used:
 19770 ;;		None
 19771 ;; Tracked objects:
 19772 ;;		On entry : 1F/6
 19773 ;;		On exit  : 1F/0
 19774 ;;		Unchanged: 0/0
 19775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19780 ;;Total ram usage:        0 bytes
 19781 ;; Hardware stack levels used:    1
 19782 ;; This function calls:
 19783 ;;		Nothing
 19784 ;; This function is called by:
 19785 ;;		_isr
 19786 ;; This function uses a non-reentrant model
 19787 ;;
 19788                           
 19789                           
 19790                           ;psect for function i1_Disable_Bost_Pwm2
 19791  0849                     i1_Disable_Bost_Pwm2:	
 19792                           
 19793                           ;pwm.c: 230: TRISAbits.TRISA4 =1;
 19794                           
 19795                           ;incstack = 0
 19796                           ; Regs used in i1_Disable_Bost_Pwm2: []
 19797  0849  0021               	movlb	1	; select bank1
 19798  084A  160C               	bsf	12,4	;volatile
 19799                           
 19800                           ;pwm.c: 232: TMR2ON=0;
 19801  084B  0020               	movlb	0	; select bank0
 19802  084C  111C               	bcf	28,2	;volatile
 19803  084D  0008               	return
 19804  084E                     __end_ofi1_Disable_Bost_Pwm2:	
 19805                           
 19806                           	psect	text57
 19807  0844                     __ptext57:	
 19808 ;; *************** function i1_Disable_Bost_Pwm1 *****************
 19809 ;; Defined at:
 19810 ;;		line 214 in file "D:\MCUProject\ZH-SL-S4080-1\src\pwm.c"
 19811 ;; Parameters:    Size  Location     Type
 19812 ;;		None
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;		None
 19815 ;; Return value:  Size  Location     Type
 19816 ;;		None               void
 19817 ;; Registers used:
 19818 ;;		None
 19819 ;; Tracked objects:
 19820 ;;		On entry : 1F/6
 19821 ;;		On exit  : 1F/8
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19828 ;;Total ram usage:        0 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; This function calls:
 19831 ;;		Nothing
 19832 ;; This function is called by:
 19833 ;;		_isr
 19834 ;; This function uses a non-reentrant model
 19835 ;;
 19836                           
 19837                           
 19838                           ;psect for function i1_Disable_Bost_Pwm1
 19839  0844                     i1_Disable_Bost_Pwm1:	
 19840                           
 19841                           ;pwm.c: 216: TRISBbits.TRISB5 =1;
 19842                           
 19843                           ;incstack = 0
 19844                           ; Regs used in i1_Disable_Bost_Pwm1: []
 19845  0844  0021               	movlb	1	; select bank1
 19846  0845  168D               	bsf	13,5	;volatile
 19847                           
 19848                           ;pwm.c: 218: TMR4ON=0;
 19849  0846  0028               	movlb	8	; select bank8
 19850  0847  1117               	bcf	23,2	;volatile
 19851  0848  0008               	return
 19852  0849                     __end_ofi1_Disable_Bost_Pwm1:	
 19853  007E                     btemp	set	126	;btemp
 19854  007E                     wtemp	set	126
 19855  007E                     wtemp0	set	126
 19856  0080                     wtemp1	set	128
 19857  0082                     wtemp2	set	130
 19858  0084                     wtemp3	set	132
 19859  0086                     wtemp4	set	134
 19860  0088                     wtemp5	set	136
 19861  007F                     wtemp6	set	127
 19862  007E                     ttemp	set	126
 19863  007E                     ttemp0	set	126
 19864  0081                     ttemp1	set	129
 19865  0084                     ttemp2	set	132
 19866  0087                     ttemp3	set	135
 19867  007F                     ttemp4	set	127
 19868  007E                     ltemp	set	126
 19869  007E                     ltemp0	set	126
 19870  0082                     ltemp1	set	130
 19871  0086                     ltemp2	set	134
 19872  0080                     ltemp3	set	128
 19873  2370                     
 19874                           	psect	text11_split_1
 19875  0637                     __end_ofPL146:	
 19876  0637                     PL148:	
 19877  0637  0022               	movlb	2	; select bank2
 19878  0638  085D               	movf	_shuchu_shortout_voltage^(0+256),w
 19879  0639  0020               	movlb	0	; select bank0
 19880  063A  00B6               	movwf	___ftmul@f2
 19881  063B  0022               	movlb	2	; select bank2
 19882  063C  085E               	movf	(_shuchu_shortout_voltage+1)^(0+256),w
 19883  063D  0020               	movlb	0	; select bank0
 19884  063E  00B7               	movwf	___ftmul@f2+1
 19885  063F  0022               	movlb	2	; select bank2
 19886  0640  085F               	movf	(_shuchu_shortout_voltage+2)^(0+256),w
 19887  0641  0020               	movlb	0	; select bank0
 19888  0642  00B8               	movwf	___ftmul@f2+2
 19889  0643  3040               	movlw	64
 19890  0644  01B3               	clrf	___ftmul@f1
 19891  0645  01B4               	clrf	___ftmul@f1+1
 19892  0646  00B5               	movwf	___ftmul@f1+2
 19893  0647  0008               	return
 19894  0648                     __end_ofPL148:	
 19895  0648                     PL152:	
 19896  0648  01B3               	clrf	___ftmul@f1
 19897  0649  00B4               	movwf	___ftmul@f1+1
 19898  064A  3041               	movlw	65
 19899  064B  00B5               	movwf	___ftmul@f1+2
 19900  064C  0024               	movlb	4	; select bank4
 19901  064D  085A               	movf	_Load2_Pmax^(0+512),w
 19902  064E  0020               	movlb	0	; select bank0
 19903  064F  00B6               	movwf	___ftmul@f2
 19904  0650  0024               	movlb	4	; select bank4
 19905  0651  085B               	movf	(_Load2_Pmax+1)^(0+512),w
 19906  0652  0020               	movlb	0	; select bank0
 19907  0653  00B7               	movwf	___ftmul@f2+1
 19908  0654  0024               	movlb	4	; select bank4
 19909  0655  085C               	movf	(_Load2_Pmax+2)^(0+512),w
 19910  0656  0020               	movlb	0	; select bank0
 19911  0657  00B8               	movwf	___ftmul@f2+2
 19912  0658  0008               	return
 19913  0659                     __end_ofPL152:	
 19914  0659                     PL154:	
 19915  0659  0863               	movf	_bt_volt_20^(0+512),w
 19916  065A  0020               	movlb	0	; select bank0
 19917  065B  00D1               	movwf	___ftge@ff1
 19918  065C  0024               	movlb	4	; select bank4
 19919  065D  0864               	movf	(_bt_volt_20+1)^(0+512),w
 19920  065E  0020               	movlb	0	; select bank0
 19921  065F  00D2               	movwf	___ftge@ff1+1
 19922  0660  0024               	movlb	4	; select bank4
 19923  0661  0865               	movf	(_bt_volt_20+2)^(0+512),w
 19924  0662  0008               	return
 19925  0663                     __end_ofPL154:	
 19926  0663                     PL156:	
 19927  0663  0866               	movf	_bt_volt_40^(0+512),w
 19928  0664  0020               	movlb	0	; select bank0
 19929  0665  00D1               	movwf	___ftge@ff1
 19930  0666  0024               	movlb	4	; select bank4
 19931  0667  0867               	movf	(_bt_volt_40+1)^(0+512),w
 19932  0668  0020               	movlb	0	; select bank0
 19933  0669  00D2               	movwf	___ftge@ff1+1
 19934  066A  0024               	movlb	4	; select bank4
 19935  066B  0868               	movf	(_bt_volt_40+2)^(0+512),w
 19936  066C  0008               	return
 19937  066D                     __end_ofPL156:	
 19938  066D                     PL158:	
 19939  066D  086C               	movf	_bt_volt_80^(0+512),w
 19940  066E  0020               	movlb	0	; select bank0
 19941  066F  00D1               	movwf	___ftge@ff1
 19942  0670  0024               	movlb	4	; select bank4
 19943  0671  086D               	movf	(_bt_volt_80+1)^(0+512),w
 19944  0672  0020               	movlb	0	; select bank0
 19945  0673  00D2               	movwf	___ftge@ff1+1
 19946  0674  0024               	movlb	4	; select bank4
 19947  0675  086E               	movf	(_bt_volt_80+2)^(0+512),w
 19948  0676  0008               	return
 19949  0677                     __end_ofPL158:	
 19950  0677                     PL160:	
 19951  0677  01D1               	clrf	___ftge@ff1
 19952  0678  01D2               	clrf	___ftge@ff1+1
 19953  0679  01D3               	clrf	___ftge@ff1+2
 19954  067A  0024               	movlb	4	; select bank4
 19955  067B  0845               	movf	_PID_CC2_discharge^(0+512),w
 19956  067C  0020               	movlb	0	; select bank0
 19957  067D  00D4               	movwf	___ftge@ff2
 19958  067E  0024               	movlb	4	; select bank4
 19959  067F  0846               	movf	(_PID_CC2_discharge+1)^(0+512),w
 19960  0680  0020               	movlb	0	; select bank0
 19961  0681  00D5               	movwf	___ftge@ff2+1
 19962  0682  0024               	movlb	4	; select bank4
 19963  0683  0847               	movf	(_PID_CC2_discharge+2)^(0+512),w
 19964  0684  0020               	movlb	0	; select bank0
 19965  0685  00D6               	movwf	___ftge@ff2+2
 19966  0686  0008               	return
 19967  0687                     __end_ofPL160:	
 19968  0687                     PL162:	
 19969  0687  0869               	movf	_bt_volt_60^(0+512),w
 19970  0688  0020               	movlb	0	; select bank0
 19971  0689  00D1               	movwf	___ftge@ff1
 19972  068A  0024               	movlb	4	; select bank4
 19973  068B  086A               	movf	(_bt_volt_60+1)^(0+512),w
 19974  068C  0020               	movlb	0	; select bank0
 19975  068D  00D2               	movwf	___ftge@ff1+1
 19976  068E  0024               	movlb	4	; select bank4
 19977  068F  086B               	movf	(_bt_volt_60+2)^(0+512),w
 19978  0690  0008               	return
 19979  0691                     __end_ofPL162:	
 19980  0691                     PL164:	
 19981  0691  01D1               	clrf	___ftge@ff1
 19982  0692  01D2               	clrf	___ftge@ff1+1
 19983  0693  01D3               	clrf	___ftge@ff1+2
 19984  0694  0023               	movlb	3	; select bank3
 19985  0695  083D               	movf	_PID_CC_discharge^(0+384),w
 19986  0696  0020               	movlb	0	; select bank0
 19987  0697  00D4               	movwf	___ftge@ff2
 19988  0698  0023               	movlb	3	; select bank3
 19989  0699  083E               	movf	(_PID_CC_discharge+1)^(0+384),w
 19990  069A  0020               	movlb	0	; select bank0
 19991  069B  00D5               	movwf	___ftge@ff2+1
 19992  069C  0023               	movlb	3	; select bank3
 19993  069D  083F               	movf	(_PID_CC_discharge+2)^(0+384),w
 19994  069E  0020               	movlb	0	; select bank0
 19995  069F  00D6               	movwf	___ftge@ff2+2
 19996  06A0  0008               	return
 19997  06A1                     __end_ofPL164:	
 19998  06A1                     PL176:	
 19999  06A1  00A9               	movwf	___lwdiv@divisor
 20000  06A2  3003               	movlw	3
 20001  06A3  00AA               	movwf	___lwdiv@divisor+1
 20002  06A4  0022               	movlb	2	; select bank2
 20003  06A5  0826               	movf	(_load_voltage2_value+1)^(0+256),w
 20004  06A6  0020               	movlb	0	; select bank0
 20005  06A7  00A4               	movwf	___wmul@multiplier+1
 20006  06A8  0022               	movlb	2	; select bank2
 20007  06A9  0825               	movf	_load_voltage2_value^(0+256),w
 20008  06AA  0020               	movlb	0	; select bank0
 20009  06AB  00A3               	movwf	___wmul@multiplier
 20010  06AC  303D               	movlw	61
 20011  06AD  00A5               	movwf	___wmul@multiplicand
 20012  06AE  01A6               	clrf	___wmul@multiplicand+1
 20013  06AF  0008               	return
 20014  06B0                     __end_ofPL176:	
 20015  06B0                     PL180:	
 20016  06B0  01C2               	clrf	___ftdiv@f2
 20017  06B1  00C3               	movwf	___ftdiv@f2+1
 20018  06B2  3042               	movlw	66
 20019  06B3  00C4               	movwf	___ftdiv@f2+2
 20020  06B4  0022               	movlb	2	; select bank2
 20021  06B5  0008               	return
 20022  06B6                     __end_ofPL180:	
 20023  06B6                     PL188:	
 20024  06B6  00A9               	movwf	___lwdiv@divisor
 20025  06B7  3003               	movlw	3
 20026  06B8  00AA               	movwf	___lwdiv@divisor+1
 20027  06B9  0021               	movlb	1	; select bank1
 20028  06BA  0830               	movf	(_load_voltage_value+1)^(0+128),w
 20029  06BB  0020               	movlb	0	; select bank0
 20030  06BC  00A4               	movwf	___wmul@multiplier+1
 20031  06BD  0021               	movlb	1	; select bank1
 20032  06BE  082F               	movf	_load_voltage_value^(0+128),w
 20033  06BF  0020               	movlb	0	; select bank0
 20034  06C0  00A3               	movwf	___wmul@multiplier
 20035  06C1  303D               	movlw	61
 20036  06C2  00A5               	movwf	___wmul@multiplicand
 20037  06C3  01A6               	clrf	___wmul@multiplicand+1
 20038  06C4  0008               	return
 20039  06C5                     __end_ofPL188:	
 20040  06C5                     PL190:	
 20041  06C5  0826               	movf	(_load_voltage2_value+1)^(0+256),w
 20042  06C6  0020               	movlb	0	; select bank0
 20043  06C7  00B1               	movwf	___lwtoft@c+1
 20044  06C8  0022               	movlb	2	; select bank2
 20045  06C9  0825               	movf	_load_voltage2_value^(0+256),w
 20046  06CA  0020               	movlb	0	; select bank0
 20047  06CB  00B0               	movwf	___lwtoft@c
 20048  06CC  0008               	return
 20049  06CD                     __end_ofPL190:	
 20050  06CD                     PL194:	
 20051  06CD  01B3               	clrf	_index_02_count^(0+640)
 20052  06CE  01B4               	clrf	(_index_02_count+1)^(0+640)
 20053  06CF  01B5               	clrf	_index_03_count^(0+640)
 20054  06D0  01B6               	clrf	(_index_03_count+1)^(0+640)
 20055  06D1  01B7               	clrf	_index_04_count^(0+640)
 20056  06D2  01B8               	clrf	(_index_04_count+1)^(0+640)
 20057  06D3  01B9               	clrf	_index_05_count^(0+640)
 20058  06D4  01BA               	clrf	(_index_05_count+1)^(0+640)
 20059  06D5  0008               	return
 20060  06D6                     __end_ofPL194:	
 20061  06D6                     PL196:	
 20062  06D6  0022               	movlb	2	; select bank2
 20063  06D7  0824               	movf	(_discharge_current2_value+1)^(0+256),w
 20064  06D8  0020               	movlb	0	; select bank0
 20065  06D9  00B1               	movwf	___lwtoft@c+1
 20066  06DA  0022               	movlb	2	; select bank2
 20067  06DB  0823               	movf	_discharge_current2_value^(0+256),w
 20068  06DC  0020               	movlb	0	; select bank0
 20069  06DD  00B0               	movwf	___lwtoft@c
 20070  06DE  0008               	return
 20071  06DF                     __end_ofPL196:	
 20072  06DF                     PL204:	
 20073  06DF  0023               	movlb	3	; select bank3
 20074  06E0  0852               	movf	_charge_i_limit^(0+384),w
 20075  06E1  0020               	movlb	0	; select bank0
 20076  06E2  00D4               	movwf	___ftge@ff2
 20077  06E3  0023               	movlb	3	; select bank3
 20078  06E4  0853               	movf	(_charge_i_limit+1)^(0+384),w
 20079  06E5  0020               	movlb	0	; select bank0
 20080  06E6  00D5               	movwf	___ftge@ff2+1
 20081  06E7  0023               	movlb	3	; select bank3
 20082  06E8  0854               	movf	(_charge_i_limit+2)^(0+384),w
 20083  06E9  0020               	movlb	0	; select bank0
 20084  06EA  00D6               	movwf	___ftge@ff2+2
 20085  06EB  0008               	return
 20086  06EC                     __end_ofPL204:	
 20087  06EC                     PL214:	
 20088  06EC  0023               	movlb	3	; select bank3
 20089  06ED  0861               	movf	_discharge_i_baohu^(0+384),w
 20090  06EE  0020               	movlb	0	; select bank0
 20091  06EF  00D1               	movwf	___ftge@ff1
 20092  06F0  0023               	movlb	3	; select bank3
 20093  06F1  0862               	movf	(_discharge_i_baohu+1)^(0+384),w
 20094  06F2  0020               	movlb	0	; select bank0
 20095  06F3  00D2               	movwf	___ftge@ff1+1
 20096  06F4  0023               	movlb	3	; select bank3
 20097  06F5  0863               	movf	(_discharge_i_baohu+2)^(0+384),w
 20098  06F6  0020               	movlb	0	; select bank0
 20099  06F7  00D3               	movwf	___ftge@ff1+2
 20100  06F8  0008               	return
 20101  06F9                     __end_ofPL214:	
 20102  06F9                     PL224:	
 20103  06F9  0833               	movf	?___ftmul,w
 20104  06FA  0025               	movlb	5	; select bank5
 20105  06FB  00E0               	movwf	_handle_ad_loop$3196^(0+640)
 20106  06FC  0020               	movlb	0	; select bank0
 20107  06FD  0834               	movf	?___ftmul+1,w
 20108  06FE  0025               	movlb	5	; select bank5
 20109  06FF  00E1               	movwf	(_handle_ad_loop$3196+1)^(0+640)
 20110  0700  0020               	movlb	0	; select bank0
 20111  0701  0835               	movf	?___ftmul+2,w
 20112  0702  0025               	movlb	5	; select bank5
 20113  0703  00E2               	movwf	(_handle_ad_loop$3196+2)^(0+640)
 20114  0704  0008               	return
 20115  0705                     __end_ofPL224:	
 20116  0705                     PL228:	
 20117  0705  0833               	movf	?___ftmul,w
 20118  0706  00D4               	movwf	___ftge@ff2
 20119  0707  0834               	movf	?___ftmul+1,w
 20120  0708  00D5               	movwf	___ftge@ff2+1
 20121  0709  0835               	movf	?___ftmul+2,w
 20122  070A  00D6               	movwf	___ftge@ff2+2
 20123  070B  0008               	return
 20124  070C                     __end_ofPL228:	
 20125  070C                     PL230:	
 20126  070C  0842               	movf	?___ftdiv,w
 20127  070D  0024               	movlb	4	; select bank4
 20128  070E  00C5               	movwf	_PID_CC2_discharge^(0+512)
 20129  070F  0020               	movlb	0	; select bank0
 20130  0710  0843               	movf	?___ftdiv+1,w
 20131  0711  0024               	movlb	4	; select bank4
 20132  0712  00C6               	movwf	(_PID_CC2_discharge+1)^(0+512)
 20133  0713  0020               	movlb	0	; select bank0
 20134  0714  0844               	movf	?___ftdiv+2,w
 20135  0715  0024               	movlb	4	; select bank4
 20136  0716  00C7               	movwf	(_PID_CC2_discharge+2)^(0+512)
 20137  0717  0008               	return
 20138  0718                     __end_ofPL230:	
 20139  0718                     PL232:	
 20140  0718  086D               	movf	_shuchu_open_voltage^(0+384),w
 20141  0719  0020               	movlb	0	; select bank0
 20142  071A  00D1               	movwf	___ftge@ff1
 20143  071B  0023               	movlb	3	; select bank3
 20144  071C  086E               	movf	(_shuchu_open_voltage+1)^(0+384),w
 20145  071D  0020               	movlb	0	; select bank0
 20146  071E  00D2               	movwf	___ftge@ff1+1
 20147  071F  0023               	movlb	3	; select bank3
 20148  0720  086F               	movf	(_shuchu_open_voltage+2)^(0+384),w
 20149  0721  0020               	movlb	0	; select bank0
 20150  0722  00D3               	movwf	___ftge@ff1+2
 20151  0723  0008               	return
 20152  0724                     __end_ofPL232:	
 20153  0724                     PL246:	
 20154  0724  0842               	movf	?___ftdiv,w
 20155  0725  0023               	movlb	3	; select bank3
 20156  0726  00BD               	movwf	_PID_CC_discharge^(0+384)
 20157  0727  0020               	movlb	0	; select bank0
 20158  0728  0843               	movf	?___ftdiv+1,w
 20159  0729  0023               	movlb	3	; select bank3
 20160  072A  00BE               	movwf	(_PID_CC_discharge+1)^(0+384)
 20161  072B  0020               	movlb	0	; select bank0
 20162  072C  0844               	movf	?___ftdiv+2,w
 20163  072D  0023               	movlb	3	; select bank3
 20164  072E  00BF               	movwf	(_PID_CC_discharge+2)^(0+384)
 20165  072F  0008               	return
 20166  0730                     __end_ofPL246:	
 20167  0730                     PL252:	
 20168  0730  0869               	movf	_step_04_load_percent^(0+256),w
 20169  0731  0020               	movlb	0	; select bank0
 20170  0732  00B3               	movwf	___ftmul@f1
 20171  0733  0022               	movlb	2	; select bank2
 20172  0734  086A               	movf	(_step_04_load_percent+1)^(0+256),w
 20173  0735  0020               	movlb	0	; select bank0
 20174  0736  00B4               	movwf	___ftmul@f1+1
 20175  0737  0022               	movlb	2	; select bank2
 20176  0738  086B               	movf	(_step_04_load_percent+2)^(0+256),w
 20177  0739  0008               	return
 20178  073A                     __end_ofPL252:	
 20179  073A                     PL254:	
 20180  073A  0866               	movf	_step_03_load_percent^(0+256),w
 20181  073B  0020               	movlb	0	; select bank0
 20182  073C  00B3               	movwf	___ftmul@f1
 20183  073D  0022               	movlb	2	; select bank2
 20184  073E  0867               	movf	(_step_03_load_percent+1)^(0+256),w
 20185  073F  0020               	movlb	0	; select bank0
 20186  0740  00B4               	movwf	___ftmul@f1+1
 20187  0741  0022               	movlb	2	; select bank2
 20188  0742  0868               	movf	(_step_03_load_percent+2)^(0+256),w
 20189  0743  0008               	return
 20190  0744                     __end_ofPL254:	
 20191  0744                     PL258:	
 20192  0744  0863               	movf	_step_02_load_percent^(0+256),w
 20193  0745  0020               	movlb	0	; select bank0
 20194  0746  00B3               	movwf	___ftmul@f1
 20195  0747  0022               	movlb	2	; select bank2
 20196  0748  0864               	movf	(_step_02_load_percent+1)^(0+256),w
 20197  0749  0020               	movlb	0	; select bank0
 20198  074A  00B4               	movwf	___ftmul@f1+1
 20199  074B  0022               	movlb	2	; select bank2
 20200  074C  0865               	movf	(_step_02_load_percent+2)^(0+256),w
 20201  074D  0008               	return
 20202  074E                     __end_ofPL258:	
 20203  074E                     PL260:	
 20204  074E  0860               	movf	_step_01_load_percent^(0+256),w
 20205  074F  0020               	movlb	0	; select bank0
 20206  0750  00B3               	movwf	___ftmul@f1
 20207  0751  0022               	movlb	2	; select bank2
 20208  0752  0861               	movf	(_step_01_load_percent+1)^(0+256),w
 20209  0753  0020               	movlb	0	; select bank0
 20210  0754  00B4               	movwf	___ftmul@f1+1
 20211  0755  0022               	movlb	2	; select bank2
 20212  0756  0862               	movf	(_step_01_load_percent+2)^(0+256),w
 20213  0757  0008               	return
 20214  0758                     __end_ofPL260:	
 20215  0758                     PL268:	
 20216  0758  30A0               	movlw	160
 20217  0759  01D1               	clrf	___ftge@ff1
 20218  075A  00D2               	movwf	___ftge@ff1+1
 20219  075B  3440               	retlw	64
 20220  075C                     __end_ofPL268:	
 20221  075C                     PL270:	
 20222  075C  01B7               	clrf	_index_04_count^(0+640)
 20223  075D  01B8               	clrf	(_index_04_count+1)^(0+640)
 20224  075E  01B9               	clrf	_index_05_count^(0+640)
 20225  075F  01BA               	clrf	(_index_05_count+1)^(0+640)
 20226  0760  01BB               	clrf	_index_06_count^(0+640)
 20227  0761  01BC               	clrf	(_index_06_count+1)^(0+640)
 20228  0762  0008               	return
 20229  0763                     __end_ofPL270:	
 20230  0763                     PL284:	
 20231  0763  0020               	movlb	0	; select bank0
 20232  0764  00B3               	movwf	___ftmul@f1
 20233  0765  304C               	movlw	76
 20234  0766  00B4               	movwf	___ftmul@f1+1
 20235  0767  343D               	retlw	61
 20236  0768                     __end_ofPL284:	
 20237  0768                     PL286:	
 20238  0768  3005               	movlw	5
 20239  0769  00A5               	movwf	___wmul@multiplicand
 20240  076A  01A6               	clrf	___wmul@multiplicand+1
 20241  076B  0021               	movlb	1	; select bank1
 20242  076C  085B               	movf	_volt_id^(0+128),w
 20243  076D  0020               	movlb	0	; select bank0
 20244  076E  00A3               	movwf	___wmul@multiplier
 20245  076F  01A4               	clrf	___wmul@multiplier+1
 20246  0770  0008               	return
 20247  0771                     __end_ofPL286:	
 20248  0771                     PL294:	
 20249  0771  0020               	movlb	0	; select bank0
 20250  0772  00D3               	movwf	___ftge@ff1+2
 20251  0773  30F4               	movlw	244
 20252  0774  01D4               	clrf	___ftge@ff2
 20253  0775  00D5               	movwf	___ftge@ff2+1
 20254  0776  3043               	movlw	67
 20255  0777  00D6               	movwf	___ftge@ff2+2
 20256  0778  0008               	return
 20257  0779                     __end_ofPL294:	
 20258  0779                     PL296:	
 20259  0779  3002               	movlw	2
 20260  077A  01A4               	clrf	_night_time_count^(0+640)
 20261  077B  01A5               	clrf	(_night_time_count+1)^(0+640)
 20262  077C  01A6               	clrf	(_night_time_count+2)^(0+640)
 20263  077D  01A7               	clrf	(_night_time_count+3)^(0+640)
 20264  077E  0022               	movlb	2	; select bank2
 20265  077F  00CC               	movwf	_pv_voltage_status^(0+256)
 20266  0780  0008               	return
 20267  0781                     __end_ofPL296:	
 20268  0781                     PL298:	
 20269  0781  0020               	movlb	0	; select bank0
 20270  0782  01A3               	clrf	delay_ms@count
 20271  0783  0AA3               	incf	delay_ms@count,f
 20272  0784  01A4               	clrf	delay_ms@count+1
 20273  0785  0008               	return
 20274  0786                     __end_ofPL298:	
 20275  0786                     PL308:	
 20276  0786  0842               	movf	?___ftadd,w
 20277  0787  00D4               	movwf	___ftge@ff2
 20278  0788  0843               	movf	?___ftadd+1,w
 20279  0789  00D5               	movwf	___ftge@ff2+1
 20280  078A  0844               	movf	?___ftadd+2,w
 20281  078B  00D6               	movwf	___ftge@ff2+2
 20282  078C  0008               	return
 20283  078D                     __end_ofPL308:	
 20284  078D                     PL318:	
 20285  078D  01A8               	clrf	_pv_time_count^(0+640)
 20286  078E  01A9               	clrf	(_pv_time_count+1)^(0+640)
 20287  078F  01AA               	clrf	(_pv_time_count+2)^(0+640)
 20288  0790  01AB               	clrf	(_pv_time_count+3)^(0+640)
 20289  0791  0022               	movlb	2	; select bank2
 20290  0792  01CC               	clrf	_pv_voltage_status^(0+256)
 20291  0793  0008               	return
 20292  0794                     __end_ofPL318:	
 20293  0794                     PL320:	
 20294  0794  0842               	movf	?___ftdiv,w
 20295  0795  00D1               	movwf	___ftge@ff1
 20296  0796  0843               	movf	?___ftdiv+1,w
 20297  0797  00D2               	movwf	___ftge@ff1+1
 20298  0798  0844               	movf	?___ftdiv+2,w
 20299  0799  00D3               	movwf	___ftge@ff1+2
 20300  079A  0008               	return
 20301  079B                     __end_ofPL320:	
 20302  079B                     PL328:	
 20303  079B  0AAF               	incf	_battery_low_time_count^(0+384),f
 20304  079C  1903               	skipnz
 20305  079D  0AB0               	incf	(_battery_low_time_count+1)^(0+384),f
 20306  079E  3003               	movlw	3
 20307  079F  0230               	subwf	(_battery_low_time_count+1)^(0+384),w
 20308  07A0  34E9               	retlw	233
 20309  07A1                     __end_ofPL328:	
 20310  07A1                     PL332:	
 20311  07A1  0AB1               	incf	_load2_short_time_count^(0+384),f
 20312  07A2  1903               	skipnz
 20313  07A3  0AB2               	incf	(_load2_short_time_count+1)^(0+384),f
 20314  07A4  3000               	movlw	0
 20315  07A5  0232               	subwf	(_load2_short_time_count+1)^(0+384),w
 20316  07A6  3433               	retlw	51
 20317  07A7                     __end_ofPL332:	
 20318  07A7                     PL334:	
 20319  07A7  0AB3               	incf	_load_short_time_count^(0+384),f
 20320  07A8  1903               	skipnz
 20321  07A9  0AB4               	incf	(_load_short_time_count+1)^(0+384),f
 20322  07AA  3000               	movlw	0
 20323  07AB  0234               	subwf	(_load_short_time_count+1)^(0+384),w
 20324  07AC  3465               	retlw	101
 20325  07AD                     __end_ofPL334:	
 20326  07AD                     PL346:	
 20327  07AD  082A               	movf	?___lwdiv+1,w
 20328  07AE  00B1               	movwf	___lwtoft@c+1
 20329  07AF  0829               	movf	?___lwdiv,w
 20330  07B0  00B0               	movwf	___lwtoft@c
 20331  07B1  0008               	return
 20332  07B2                     __end_ofPL346:	
 20333  07B2                     PL350:	
 20334  07B2  0020               	movlb	0	; select bank0
 20335  07B3  00B3               	movwf	___ftmul@f1
 20336  07B4  304C               	movlw	76
 20337  07B5  00B4               	movwf	___ftmul@f1+1
 20338  07B6  343E               	retlw	62
 20339  07B7                     __end_ofPL350:	
 20340  07B7                     PL358:	
 20341  07B7  0824               	movf	?___wmul+1,w
 20342  07B8  00AC               	movwf	___lwdiv@dividend+1
 20343  07B9  0823               	movf	?___wmul,w
 20344  07BA  00AB               	movwf	___lwdiv@dividend
 20345  07BB  0008               	return
 20346  07BC                     __end_ofPL358:	
 20347  07BC                     PL378:	
 20348  07BC  0824               	movf	?___wmul+1,w
 20349  07BD  00AC               	movwf	___awtoft@c+1
 20350  07BE  0823               	movf	?___wmul,w
 20351  07BF  00AB               	movwf	___awtoft@c
 20352  07C0  0008               	return
 20353  07C1                     __end_ofPL378:	
 20354                           
 20355                           	psect	text11_split_2
 20356  1835                     PL2:	
 20357  1835  00B5               	movwf	___ftmul@f1+2
 20358  1836  30C8               	movlw	200
 20359  1837  01C2               	clrf	___ftdiv@f2
 20360  1838  00C3               	movwf	___ftdiv@f2+1
 20361  1839  3042               	movlw	66
 20362  183A  00C4               	movwf	___ftdiv@f2+2
 20363  183B  0021               	movlb	1	; select bank1
 20364  183C  084C               	movf	_load_cc_I^(0+128),w
 20365  183D  0020               	movlb	0	; select bank0
 20366  183E  00C5               	movwf	___ftdiv@f1
 20367  183F  0021               	movlb	1	; select bank1
 20368  1840  084D               	movf	(_load_cc_I+1)^(0+128),w
 20369  1841  0020               	movlb	0	; select bank0
 20370  1842  00C6               	movwf	___ftdiv@f1+1
 20371  1843  0021               	movlb	1	; select bank1
 20372  1844  084E               	movf	(_load_cc_I+2)^(0+128),w
 20373  1845  0020               	movlb	0	; select bank0
 20374  1846  00C7               	movwf	___ftdiv@f1+2
 20375  1847  0008               	return
 20376  1848                     __end_ofPL2:	
 20377  1848                     PL4:	
 20378  1848  01C2               	clrf	___ftdiv@f2
 20379  1849  00C3               	movwf	___ftdiv@f2+1
 20380  184A  3042               	movlw	66
 20381  184B  00C4               	movwf	___ftdiv@f2+2
 20382  184C  0021               	movlb	1	; select bank1
 20383  184D  084F               	movf	_step_05_load_percent^(0+128),w
 20384  184E  0020               	movlb	0	; select bank0
 20385  184F  00B3               	movwf	___ftmul@f1
 20386  1850  0021               	movlb	1	; select bank1
 20387  1851  0850               	movf	(_step_05_load_percent+1)^(0+128),w
 20388  1852  0020               	movlb	0	; select bank0
 20389  1853  00B4               	movwf	___ftmul@f1+1
 20390  1854  0021               	movlb	1	; select bank1
 20391  1855  0851               	movf	(_step_05_load_percent+2)^(0+128),w
 20392  1856  0008               	return
 20393  1857                     __end_ofPL4:	
 20394  1857                     PL6:	
 20395  1857  084F               	movf	_step_05_load_percent^(0+128),w
 20396  1858  0020               	movlb	0	; select bank0
 20397  1859  00B3               	movwf	___ftmul@f1
 20398  185A  0021               	movlb	1	; select bank1
 20399  185B  0850               	movf	(_step_05_load_percent+1)^(0+128),w
 20400  185C  0020               	movlb	0	; select bank0
 20401  185D  00B4               	movwf	___ftmul@f1+1
 20402  185E  0021               	movlb	1	; select bank1
 20403  185F  0851               	movf	(_step_05_load_percent+2)^(0+128),w
 20404  1860  0020               	movlb	0	; select bank0
 20405  1861  0008               	return
 20406  1862                     __end_ofPL6:	
 20407  1862                     PL12:	
 20408  1862  0020               	movlb	0	; select bank0
 20409  1863  00E4               	movwf	??_handle_ad_loop
 20410  1864  01E5               	clrf	??_handle_ad_loop+1
 20411  1865  0865               	movf	??_handle_ad_loop+1,w
 20412  1866  027D               	subwf	_ho_cnt+1,w
 20413  1867  1D03               	skipz
 20414  1868  0008               	return
 20415  1869  0864               	movf	??_handle_ad_loop,w
 20416  186A  027C               	subwf	_ho_cnt,w
 20417  186B  0008               	return
 20418  186C                     __end_ofPL12:	
 20419  186C                     PL14:	
 20420  186C  30F0               	movlw	240
 20421  186D  01B3               	clrf	___ftmul@f1
 20422  186E  00B4               	movwf	___ftmul@f1+1
 20423  186F  3041               	movlw	65
 20424  1870  00B5               	movwf	___ftmul@f1+2
 20425  1871  0024               	movlb	4	; select bank4
 20426  1872  085D               	movf	_Load_Pmax^(0+512),w
 20427  1873  0020               	movlb	0	; select bank0
 20428  1874  00B6               	movwf	___ftmul@f2
 20429  1875  0024               	movlb	4	; select bank4
 20430  1876  085E               	movf	(_Load_Pmax+1)^(0+512),w
 20431  1877  0020               	movlb	0	; select bank0
 20432  1878  00B7               	movwf	___ftmul@f2+1
 20433  1879  0024               	movlb	4	; select bank4
 20434  187A  085F               	movf	(_Load_Pmax+2)^(0+512),w
 20435  187B  0020               	movlb	0	; select bank0
 20436  187C  00B8               	movwf	___ftmul@f2+2
 20437  187D  0008               	return
 20438  187E                     __end_ofPL14:	
 20439  187E                     PL34:	
 20440  187E  0830               	movf	?___lwtoft,w
 20441  187F  00D1               	movwf	___ftge@ff1
 20442  1880  0831               	movf	?___lwtoft+1,w
 20443  1881  00D2               	movwf	___ftge@ff1+1
 20444  1882  0832               	movf	?___lwtoft+2,w
 20445  1883  00D3               	movwf	___ftge@ff1+2
 20446  1884  0008               	return
 20447  1885                     __end_ofPL34:	
 20448  1885                     PL36:	
 20449  1885  0830               	movf	?___lwtoft,w
 20450  1886  00D4               	movwf	___ftge@ff2
 20451  1887  0831               	movf	?___lwtoft+1,w
 20452  1888  00D5               	movwf	___ftge@ff2+1
 20453  1889  0832               	movf	?___lwtoft+2,w
 20454  188A  00D6               	movwf	___ftge@ff2+2
 20455  188B  0008               	return
 20456  188C                     __end_ofPL36:	
 20457  188C                     PL38:	
 20458  188C  0833               	movf	?___ftmul,w
 20459  188D  0023               	movlb	3	; select bank3
 20460  188E  00BD               	movwf	_PID_CC_discharge^(0+384)
 20461  188F  0020               	movlb	0	; select bank0
 20462  1890  0834               	movf	?___ftmul+1,w
 20463  1891  0023               	movlb	3	; select bank3
 20464  1892  00BE               	movwf	(_PID_CC_discharge+1)^(0+384)
 20465  1893  0020               	movlb	0	; select bank0
 20466  1894  0835               	movf	?___ftmul+2,w
 20467  1895  0023               	movlb	3	; select bank3
 20468  1896  00BF               	movwf	(_PID_CC_discharge+2)^(0+384)
 20469  1897  0008               	return
 20470  1898                     __end_ofPL38:	
 20471  1898                     PL40:	
 20472  1898  0833               	movf	?___ftmul,w
 20473  1899  0024               	movlb	4	; select bank4
 20474  189A  00C5               	movwf	_PID_CC2_discharge^(0+512)
 20475  189B  0020               	movlb	0	; select bank0
 20476  189C  0834               	movf	?___ftmul+1,w
 20477  189D  0024               	movlb	4	; select bank4
 20478  189E  00C6               	movwf	(_PID_CC2_discharge+1)^(0+512)
 20479  189F  0020               	movlb	0	; select bank0
 20480  18A0  0835               	movf	?___ftmul+2,w
 20481  18A1  0024               	movlb	4	; select bank4
 20482  18A2  00C7               	movwf	(_PID_CC2_discharge+2)^(0+512)
 20483  18A3  0008               	return
 20484  18A4                     __end_ofPL40:	
 20485  18A4                     PL52:	
 20486  18A4  0023               	movlb	3	; select bank3
 20487  18A5  085E               	movf	_dianchi_qianya_huifu^(0+384),w
 20488  18A6  0020               	movlb	0	; select bank0
 20489  18A7  00D1               	movwf	___ftge@ff1
 20490  18A8  0023               	movlb	3	; select bank3
 20491  18A9  085F               	movf	(_dianchi_qianya_huifu+1)^(0+384),w
 20492  18AA  0020               	movlb	0	; select bank0
 20493  18AB  00D2               	movwf	___ftge@ff1+1
 20494  18AC  0023               	movlb	3	; select bank3
 20495  18AD  0860               	movf	(_dianchi_qianya_huifu+2)^(0+384),w
 20496  18AE  0020               	movlb	0	; select bank0
 20497  18AF  00D3               	movwf	___ftge@ff1+2
 20498  18B0  0869               	movf	_battery_voltage_value+1,w
 20499  18B1  00B1               	movwf	___lwtoft@c+1
 20500  18B2  0868               	movf	_battery_voltage_value,w
 20501  18B3  00B0               	movwf	___lwtoft@c
 20502  18B4  0008               	return
 20503  18B5                     __end_ofPL52:	
 20504  18B5                     PL58:	
 20505  18B5  0020               	movlb	0	; select bank0
 20506  18B6  00D3               	movwf	___ftge@ff1+2
 20507  18B7  0869               	movf	_battery_voltage_value+1,w
 20508  18B8  00B1               	movwf	___lwtoft@c+1
 20509  18B9  0868               	movf	_battery_voltage_value,w
 20510  18BA  00B0               	movwf	___lwtoft@c
 20511  18BB  0008               	return
 20512  18BC                     __end_ofPL58:	
 20513  18BC                     PL60:	
 20514  18BC  00A3               	movwf	_bost_pwm1_value^(0+128)
 20515  18BD  01A4               	clrf	(_bost_pwm1_value+1)^(0+128)
 20516  18BE  0824               	movf	(_bost_pwm1_value+1)^(0+128),w
 20517  18BF  0020               	movlb	0	; select bank0
 20518  18C0  00A4               	movwf	Set_Bost_Pwm1_Duty@dduty+1
 20519  18C1  0021               	movlb	1	; select bank1
 20520  18C2  0823               	movf	_bost_pwm1_value^(0+128),w
 20521  18C3  0020               	movlb	0	; select bank0
 20522  18C4  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 20523  18C5  0008               	return
 20524  18C6                     __end_ofPL60:	
 20525  18C6                     PL62:	
 20526  18C6  00C1               	movwf	_t1^(0+128)
 20527  18C7  0852               	movf	_step_01_time_limit^(0+128),w
 20528  18C8  0754               	addwf	_step_02_time_limit^(0+128),w
 20529  18C9  00C2               	movwf	_t2^(0+128)
 20530  18CA  0852               	movf	_step_01_time_limit^(0+128),w
 20531  18CB  0754               	addwf	_step_02_time_limit^(0+128),w
 20532  18CC  0756               	addwf	_step_03_time_limit^(0+128),w
 20533  18CD  00C3               	movwf	_t3^(0+128)
 20534  18CE  0852               	movf	_step_01_time_limit^(0+128),w
 20535  18CF  0754               	addwf	_step_02_time_limit^(0+128),w
 20536  18D0  0756               	addwf	_step_03_time_limit^(0+128),w
 20537  18D1  0758               	addwf	_step_04_time_limit^(0+128),w
 20538  18D2  00C4               	movwf	_t4^(0+128)
 20539  18D3  0852               	movf	_step_01_time_limit^(0+128),w
 20540  18D4  0754               	addwf	_step_02_time_limit^(0+128),w
 20541  18D5  0756               	addwf	_step_03_time_limit^(0+128),w
 20542  18D6  0758               	addwf	_step_04_time_limit^(0+128),w
 20543  18D7  0022               	movlb	2	; select bank2
 20544  18D8  076C               	addwf	_step_05_time_limit^(0+256),w
 20545  18D9  00D2               	movwf	_t5^(0+256)
 20546  18DA  0021               	movlb	1	; select bank1
 20547  18DB  0841               	movf	_t1^(0+128),w
 20548  18DC  0008               	return
 20549  18DD                     __end_ofPL62:	
 20550  18DD                     PL64:	
 20551  18DD  00A5               	movwf	_bost_pwm2_value^(0+128)
 20552  18DE  01A6               	clrf	(_bost_pwm2_value+1)^(0+128)
 20553  18DF  0826               	movf	(_bost_pwm2_value+1)^(0+128),w
 20554  18E0  0020               	movlb	0	; select bank0
 20555  18E1  00A4               	movwf	Set_Bost_Pwm2_Duty@dduty+1
 20556  18E2  0021               	movlb	1	; select bank1
 20557  18E3  0825               	movf	_bost_pwm2_value^(0+128),w
 20558  18E4  0020               	movlb	0	; select bank0
 20559  18E5  00A3               	movwf	Set_Bost_Pwm2_Duty@dduty
 20560  18E6  0008               	return
 20561  18E7                     __end_ofPL64:	
 20562  18E7                     PL70:	
 20563  18E7  0023               	movlb	3	; select bank3
 20564  18E8  085B               	movf	_dianchi_qianya_baohu^(0+384),w
 20565  18E9  0020               	movlb	0	; select bank0
 20566  18EA  00D4               	movwf	___ftge@ff2
 20567  18EB  0023               	movlb	3	; select bank3
 20568  18EC  085C               	movf	(_dianchi_qianya_baohu+1)^(0+384),w
 20569  18ED  0020               	movlb	0	; select bank0
 20570  18EE  00D5               	movwf	___ftge@ff2+1
 20571  18EF  0023               	movlb	3	; select bank3
 20572  18F0  085D               	movf	(_dianchi_qianya_baohu+2)^(0+384),w
 20573  18F1  0020               	movlb	0	; select bank0
 20574  18F2  00D6               	movwf	___ftge@ff2+2
 20575  18F3  0008               	return
 20576  18F4                     __end_ofPL70:	
 20577  18F4                     PL74:	
 20578  18F4  0830               	movf	?___lwtoft,w
 20579  18F5  00C2               	movwf	___ftdiv@f2
 20580  18F6  0831               	movf	?___lwtoft+1,w
 20581  18F7  00C3               	movwf	___ftdiv@f2+1
 20582  18F8  0832               	movf	?___lwtoft+2,w
 20583  18F9  00C4               	movwf	___ftdiv@f2+2
 20584  18FA  0008               	return
 20585  18FB                     __end_ofPL74:	
 20586  18FB                     PL76:	
 20587  18FB  0022               	movlb	2	; select bank2
 20588  18FC  085D               	movf	_shuchu_shortout_voltage^(0+256),w
 20589  18FD  0020               	movlb	0	; select bank0
 20590  18FE  00D4               	movwf	___ftge@ff2
 20591  18FF  0022               	movlb	2	; select bank2
 20592  1900  085E               	movf	(_shuchu_shortout_voltage+1)^(0+256),w
 20593  1901  0020               	movlb	0	; select bank0
 20594  1902  00D5               	movwf	___ftge@ff2+1
 20595  1903  0022               	movlb	2	; select bank2
 20596  1904  085F               	movf	(_shuchu_shortout_voltage+2)^(0+256),w
 20597  1905  0020               	movlb	0	; select bank0
 20598  1906  00D6               	movwf	___ftge@ff2+2
 20599  1907  0008               	return
 20600  1908                     __end_ofPL76:	
 20601  1908                     PL80:	
 20602  1908  0826               	movf	(_bost_pwm2_value+1)^(0+128),w
 20603  1909  0020               	movlb	0	; select bank0
 20604  190A  00A4               	movwf	Set_Bost_Pwm2_Duty@dduty+1
 20605  190B  0021               	movlb	1	; select bank1
 20606  190C  0825               	movf	_bost_pwm2_value^(0+128),w
 20607  190D  0020               	movlb	0	; select bank0
 20608  190E  00A3               	movwf	Set_Bost_Pwm2_Duty@dduty
 20609  190F  0008               	return
 20610  1910                     __end_ofPL80:	
 20611  1910                     PL84:	
 20612  1910  0824               	movf	(_bost_pwm1_value+1)^(0+128),w
 20613  1911  0020               	movlb	0	; select bank0
 20614  1912  00A4               	movwf	Set_Bost_Pwm1_Duty@dduty+1
 20615  1913  0021               	movlb	1	; select bank1
 20616  1914  0823               	movf	_bost_pwm1_value^(0+128),w
 20617  1915  0020               	movlb	0	; select bank0
 20618  1916  00A3               	movwf	Set_Bost_Pwm1_Duty@dduty
 20619  1917  0008               	return
 20620  1918                     __end_ofPL84:	
 20621  1918                     PL86:	
 20622  1918  00B5               	movwf	___ftmul@f1+2
 20623  1919  0025               	movlb	5	; select bank5
 20624  191A  0863               	movf	handle_ad_loop@data_cc_var^(0+640),w
 20625  191B  0020               	movlb	0	; select bank0
 20626  191C  00B6               	movwf	___ftmul@f2
 20627  191D  0025               	movlb	5	; select bank5
 20628  191E  0864               	movf	(handle_ad_loop@data_cc_var+1)^(0+640),w
 20629  191F  0020               	movlb	0	; select bank0
 20630  1920  00B7               	movwf	___ftmul@f2+1
 20631  1921  0025               	movlb	5	; select bank5
 20632  1922  0865               	movf	(handle_ad_loop@data_cc_var+2)^(0+640),w
 20633  1923  0008               	return
 20634  1924                     __end_ofPL86:	
 20635  1924                     PL88:	
 20636  1924  0864               	movf	_discharge_i_limit^(0+384),w
 20637  1925  0020               	movlb	0	; select bank0
 20638  1926  00D1               	movwf	___ftge@ff1
 20639  1927  0023               	movlb	3	; select bank3
 20640  1928  0865               	movf	(_discharge_i_limit+1)^(0+384),w
 20641  1929  0020               	movlb	0	; select bank0
 20642  192A  00D2               	movwf	___ftge@ff1+1
 20643  192B  0023               	movlb	3	; select bank3
 20644  192C  0866               	movf	(_discharge_i_limit+2)^(0+384),w
 20645  192D  0020               	movlb	0	; select bank0
 20646  192E  00D3               	movwf	___ftge@ff1+2
 20647  192F  0008               	return
 20648  1930                     __end_ofPL88:	
 20649  1930                     PL94:	
 20650  1930  0020               	movlb	0	; select bank0
 20651  1931  0869               	movf	_battery_voltage_value+1,w
 20652  1932  00B1               	movwf	___lwtoft@c+1
 20653  1933  0868               	movf	_battery_voltage_value,w
 20654  1934  00B0               	movwf	___lwtoft@c
 20655  1935  0008               	return
 20656  1936                     __end_ofPL94:	
 20657  1936                     PL102:	
 20658  1936  0021               	movlb	1	; select bank1
 20659  1937  0834               	movf	(_pv_voltage_value+1)^(0+128),w
 20660  1938  0020               	movlb	0	; select bank0
 20661  1939  00B1               	movwf	___lwtoft@c+1
 20662  193A  0021               	movlb	1	; select bank1
 20663  193B  0833               	movf	_pv_voltage_value^(0+128),w
 20664  193C  0020               	movlb	0	; select bank0
 20665  193D  00B0               	movwf	___lwtoft@c
 20666  193E  0008               	return
 20667  193F                     __end_ofPL102:	
 20668  193F                     PL104:	
 20669  193F  0833               	movf	?___ftmul,w
 20670  1940  00C5               	movwf	___ftdiv@f1
 20671  1941  0834               	movf	?___ftmul+1,w
 20672  1942  00C6               	movwf	___ftdiv@f1+1
 20673  1943  0835               	movf	?___ftmul+2,w
 20674  1944  00C7               	movwf	___ftdiv@f1+2
 20675  1945  0008               	return
 20676  1946                     __end_ofPL104:	
 20677  1946                     PL110:	
 20678  1946  086A               	movf	_light_on_pv_level^(0+384),w
 20679  1947  0020               	movlb	0	; select bank0
 20680  1948  00D1               	movwf	___ftge@ff1
 20681  1949  0023               	movlb	3	; select bank3
 20682  194A  086B               	movf	(_light_on_pv_level+1)^(0+384),w
 20683  194B  0020               	movlb	0	; select bank0
 20684  194C  00D2               	movwf	___ftge@ff1+1
 20685  194D  0023               	movlb	3	; select bank3
 20686  194E  086C               	movf	(_light_on_pv_level+2)^(0+384),w
 20687  194F  0020               	movlb	0	; select bank0
 20688  1950  00D3               	movwf	___ftge@ff1+2
 20689  1951  0008               	return
 20690  1952                     __end_ofPL110:	
 20691  1952                     PL112:	
 20692  1952  00B5               	movwf	___ftmul@f1+2
 20693  1953  0024               	movlb	4	; select bank4
 20694  1954  0845               	movf	_PID_CC2_discharge^(0+512),w
 20695  1955  0020               	movlb	0	; select bank0
 20696  1956  00B6               	movwf	___ftmul@f2
 20697  1957  0024               	movlb	4	; select bank4
 20698  1958  0846               	movf	(_PID_CC2_discharge+1)^(0+512),w
 20699  1959  0020               	movlb	0	; select bank0
 20700  195A  00B7               	movwf	___ftmul@f2+1
 20701  195B  0024               	movlb	4	; select bank4
 20702  195C  0847               	movf	(_PID_CC2_discharge+2)^(0+512),w
 20703  195D  0008               	return
 20704  195E                     __end_ofPL112:	
 20705  195E                     PL116:	
 20706  195E  00B5               	movwf	___ftmul@f1+2
 20707  195F  0023               	movlb	3	; select bank3
 20708  1960  083D               	movf	_PID_CC_discharge^(0+384),w
 20709  1961  0020               	movlb	0	; select bank0
 20710  1962  00B6               	movwf	___ftmul@f2
 20711  1963  0023               	movlb	3	; select bank3
 20712  1964  083E               	movf	(_PID_CC_discharge+1)^(0+384),w
 20713  1965  0020               	movlb	0	; select bank0
 20714  1966  00B7               	movwf	___ftmul@f2+1
 20715  1967  0023               	movlb	3	; select bank3
 20716  1968  083F               	movf	(_PID_CC_discharge+2)^(0+384),w
 20717  1969  0008               	return
 20718  196A                     __end_ofPL116:	
 20719  196A                     PL132:	
 20720  196A  082B               	movf	?___awtoft,w
 20721  196B  00C5               	movwf	___ftadd@f2
 20722  196C  082C               	movf	?___awtoft+1,w
 20723  196D  00C6               	movwf	___ftadd@f2+1
 20724  196E  082D               	movf	?___awtoft+2,w
 20725  196F  00C7               	movwf	___ftadd@f2+2
 20726  1970  0022               	movlb	2	; select bank2
 20727  1971  085A               	movf	_dianchi_guoya_baohu^(0+256),w
 20728  1972  0020               	movlb	0	; select bank0
 20729  1973  00C2               	movwf	___ftadd@f1
 20730  1974  0022               	movlb	2	; select bank2
 20731  1975  085B               	movf	(_dianchi_guoya_baohu+1)^(0+256),w
 20732  1976  0020               	movlb	0	; select bank0
 20733  1977  00C3               	movwf	___ftadd@f1+1
 20734  1978  0022               	movlb	2	; select bank2
 20735  1979  085C               	movf	(_dianchi_guoya_baohu+2)^(0+256),w
 20736  197A  0020               	movlb	0	; select bank0
 20737  197B  00C4               	movwf	___ftadd@f1+2
 20738  197C  0008               	return
 20739  197D                     __end_ofPL132:	
 20740  197D                     PL136:	
 20741  197D  0830               	movf	(_load_voltage_value+1)^(0+128),w
 20742  197E  0020               	movlb	0	; select bank0
 20743  197F  00B1               	movwf	___lwtoft@c+1
 20744  1980  0021               	movlb	1	; select bank1
 20745  1981  082F               	movf	_load_voltage_value^(0+128),w
 20746  1982  0020               	movlb	0	; select bank0
 20747  1983  00B0               	movwf	___lwtoft@c
 20748  1984  0008               	return
 20749  1985                     __end_ofPL136:	
 20750  1985                     PL138:	
 20751  1985  00B3               	movwf	___ftmul@f1
 20752  1986  3099               	movlw	153
 20753  1987  00B4               	movwf	___ftmul@f1+1
 20754  1988  303E               	movlw	62
 20755  1989  00B5               	movwf	___ftmul@f1+2
 20756  198A  0025               	movlb	5	; select bank5
 20757  198B  0860               	movf	_handle_ad_loop$3196^(0+640),w
 20758  198C  0020               	movlb	0	; select bank0
 20759  198D  00B6               	movwf	___ftmul@f2
 20760  198E  0025               	movlb	5	; select bank5
 20761  198F  0861               	movf	(_handle_ad_loop$3196+1)^(0+640),w
 20762  1990  0020               	movlb	0	; select bank0
 20763  1991  00B7               	movwf	___ftmul@f2+1
 20764  1992  0025               	movlb	5	; select bank5
 20765  1993  0862               	movf	(_handle_ad_loop$3196+2)^(0+640),w
 20766  1994  0020               	movlb	0	; select bank0
 20767  1995  00B8               	movwf	___ftmul@f2+2
 20768  1996  0008               	return
 20769  1997                     __end_ofPL138:	
 20770  1997                     PL140:	
 20771  1997  0021               	movlb	1	; select bank1
 20772  1998  082E               	movf	(_discharge_current_value+1)^(0+128),w
 20773  1999  0020               	movlb	0	; select bank0
 20774  199A  00B1               	movwf	___lwtoft@c+1
 20775  199B  0021               	movlb	1	; select bank1
 20776  199C  082D               	movf	_discharge_current_value^(0+128),w
 20777  199D  0020               	movlb	0	; select bank0
 20778  199E  00B0               	movwf	___lwtoft@c
 20779  199F  0008               	return
 20780  19A0                     __end_ofPL140:	
 20781  19A0                     PL146:	
 20782  19A0  30CD               	movlw	205
 20783  19A1  0020               	movlb	0	; select bank0
 20784  19A2  00B3               	movwf	___ftmul@f1
 20785  19A3  304C               	movlw	76
 20786  19A4  00B4               	movwf	___ftmul@f1+1
 20787  19A5  343D               	retlw	61
 20788                           
 20789                           	psect	text11_split_3
 20790  2077                     l22988:	
 20791                           
 20792                           ;task.c: 488: handle_an3_process_flag=0x00;
 20793  2077  0022               	movlb	2	; select bank2
 20794  2078  01AF               	clrf	_handle_an3_process_flag^(0+256)
 20795  2079                     l22990:	
 20796                           
 20797                           ;task.c: 490: }
 20798                           ;task.c: 497: if(handle_an4_process_flag==0x01)
 20799  2079  0B30               	decfsz	_handle_an4_process_flag^(0+256),w
 20800  207A  2966               	goto	l23072
 20801                           
 20802                           ;task.c: 498: {
 20803                           ;task.c: 499: load_voltage_value=0x00;
 20804  207B  0021               	movlb	1	; select bank1
 20805  207C  01AF               	clrf	_load_voltage_value^(0+128)
 20806  207D  01B0               	clrf	(_load_voltage_value+1)^(0+128)
 20807                           
 20808                           ;task.c: 501: if(system_status == 0x02)
 20809  207E  0840               	movf	_system_status^(0+128),w
 20810  207F  3A02               	xorlw	2
 20811  2080  1D03               	skipz
 20812  2081  2964               	goto	l1714
 20813                           
 20814                           ;task.c: 502: {
 20815                           ;task.c: 503: load_voltage_value=start_ad_convert(0b00100);
 20816  2082  3004               	movlw	4
 20817  2083  31B0  2038  31A0   	fcall	_start_ad_convert
 20818  2086  0831               	movf	?_start_ad_convert+1,w
 20819  2087  0021               	movlb	1	; select bank1
 20820  2088  00B0               	movwf	(_load_voltage_value+1)^(0+128)
 20821  2089  0020               	movlb	0	; select bank0
 20822  208A  0830               	movf	?_start_ad_convert,w
 20823  208B  0021               	movlb	1	; select bank1
 20824  208C  00AF               	movwf	_load_voltage_value^(0+128)
 20825                           
 20826                           ;task.c: 507: if((load_voltage_value<shuchu_shortout_voltage)&&(discharge1_index==0x02)&
      +                          &(PID_CC_discharge.SetPoint>0))
 20827  208D  3199  217D  31A0   	fcall	PL136	;call to abstracted procedure
 20828  2090  31B4  2461  31A0   	fcall	___lwtoft
 20829  2093  3198  207E  31A0   	fcall	PL34	;call to abstracted procedure
 20830  2096  3198  20FB  31A0   	fcall	PL76	;call to abstracted procedure
 20831  2099  31B4  2472  31A0   	fcall	___ftge
 20832  209C  1803               	btfsc	3,0
 20833  209D  28CA               	goto	l23020
 20834  209E  0021               	movlb	1	; select bank1
 20835  209F  0837               	movf	_discharge1_index^(0+128),w
 20836  20A0  3A02               	xorlw	2
 20837  20A1  1D03               	skipz
 20838  20A2  28CA               	goto	l23020
 20839  20A3  0020               	movlb	0	; select bank0
 20840  20A4  3186  2691  31A0   	fcall	PL164	;call to abstracted procedure
 20841  20A7  31B4  2472  31A0   	fcall	___ftge
 20842  20AA  1803               	btfsc	3,0
 20843  20AB  28CA               	goto	l23020
 20844                           
 20845                           ;task.c: 508: {
 20846                           ;task.c: 509: load_short_time_count++;
 20847  20AC  0023               	movlb	3	; select bank3
 20848                           
 20849                           ;task.c: 511: if(load_short_time_count>100)
 20850  20AD  3187  27A7  31A0   	fcall	PL334	;call to abstracted procedure
 20851  20B0  1903               	skipnz
 20852  20B1  0233               	subwf	_load_short_time_count^(0+384),w
 20853  20B2  1C03               	skipc
 20854  20B3  2925               	goto	l23048
 20855  20B4  3002               	movlw	2
 20856                           
 20857                           ;task.c: 512: {
 20858                           ;task.c: 513: load_short_time_count=0x00;
 20859  20B5  01B3               	clrf	_load_short_time_count^(0+384)
 20860  20B6  01B4               	clrf	(_load_short_time_count+1)^(0+384)
 20861                           
 20862                           ;task.c: 515: bost_pwm1_value=2;
 20863  20B7  0021               	movlb	1	; select bank1
 20864                           
 20865                           ;task.c: 519: discharge_led_status=0x00;
 20866  20B8  3198  20BC  31A0   	fcall	PL60	;call to abstracted procedure
 20867  20BB  319D  2513  31A0   	fcall	_Set_Bost_Pwm1_Duty
 20868                           
 20869                           ;task.c: 521: delay_ms(1);
 20870  20BE  3187  2781  31A0   	fcall	PL298	;call to abstracted procedure
 20871  20C1  319D  256C  31A0   	fcall	_delay_ms
 20872                           
 20873                           ;task.c: 523: Disable_Bost_Pwm1();
 20874  20C4  31A9  21D7  31A0   	fcall	_Disable_Bost_Pwm1
 20875                           
 20876                           ;task.c: 525: (LATCbits.LATC3 = 0x00);
 20877  20C7  0022               	movlb	2	; select bank2
 20878  20C8  118E               	bcf	14,3	;volatile
 20879  20C9                     l1717:	
 20880                           ;task.c: 527: while(1);
 20881                           
 20882  20C9  28C9               	goto	l1717
 20883  20CA                     l23020:	
 20884                           
 20885                           ;task.c: 531: else if((load_voltage_value>=shuchu_shortout_voltage)&&(load_voltage_value
      +                          <(shuchu_shortout_voltage*2))&&(discharge1_index==0x02)&&(PID_CC_discharge.SetPoint>0))
 20886  20CA  0021               	movlb	1	; select bank1
 20887  20CB  3199  217D  31A0   	fcall	PL136	;call to abstracted procedure
 20888  20CE  31B4  2461  31A0   	fcall	___lwtoft
 20889  20D1  3198  207E  31A0   	fcall	PL34	;call to abstracted procedure
 20890  20D4  3198  20FB  31A0   	fcall	PL76	;call to abstracted procedure
 20891  20D7  31B4  2472  31A0   	fcall	___ftge
 20892  20DA  1C03               	btfss	3,0
 20893  20DB  2922               	goto	l23046
 20894  20DC  0021               	movlb	1	; select bank1
 20895  20DD  3199  217D  31A0   	fcall	PL136	;call to abstracted procedure
 20896  20E0  31B4  2461  31A0   	fcall	___lwtoft
 20897  20E3  3198  207E  31A0   	fcall	PL34	;call to abstracted procedure
 20898  20E6  3186  2637  31A0   	fcall	PL148	;call to abstracted procedure
 20899  20E9  318A  22AA  31A0   	fcall	___ftmul
 20900  20EC  3187  2705  31A0   	fcall	PL228	;call to abstracted procedure
 20901  20EF  31B4  2472  31A0   	fcall	___ftge
 20902  20F2  1803               	btfsc	3,0
 20903  20F3  2922               	goto	l23046
 20904  20F4  0021               	movlb	1	; select bank1
 20905  20F5  0837               	movf	_discharge1_index^(0+128),w
 20906  20F6  3A02               	xorlw	2
 20907  20F7  1D03               	skipz
 20908  20F8  2922               	goto	l23046
 20909  20F9  0020               	movlb	0	; select bank0
 20910  20FA  3186  2691  31A0   	fcall	PL164	;call to abstracted procedure
 20911  20FD  31B4  2472  31A0   	fcall	___ftge
 20912  2100  1803               	btfsc	3,0
 20913  2101  2922               	goto	l23046
 20914                           
 20915                           ;task.c: 532: {
 20916                           ;task.c: 533: load_short_time_count++;
 20917  2102  0023               	movlb	3	; select bank3
 20918                           
 20919                           ;task.c: 535: if(load_short_time_count>100)
 20920  2103  3187  27A7  31A0   	fcall	PL334	;call to abstracted procedure
 20921  2106  1903               	skipnz
 20922  2107  0233               	subwf	_load_short_time_count^(0+384),w
 20923  2108  1C03               	skipc
 20924  2109  2925               	goto	l23048
 20925  210A  3003               	movlw	3
 20926                           
 20927                           ;task.c: 536: {
 20928                           ;task.c: 537: load_short_time_count=0x00;
 20929  210B  01B3               	clrf	_load_short_time_count^(0+384)
 20930  210C  01B4               	clrf	(_load_short_time_count+1)^(0+384)
 20931                           
 20932                           ;task.c: 539: discharge1_index=0x03;
 20933  210D  0021               	movlb	1	; select bank1
 20934  210E  00B7               	movwf	_discharge1_index^(0+128)
 20935                           
 20936                           ;task.c: 541: bost_pwm1_value=2;
 20937  210F  3002               	movlw	2
 20938                           
 20939                           ;task.c: 545: discharge_led_status=0x00;
 20940  2110  3198  20BC  31A0   	fcall	PL60	;call to abstracted procedure
 20941  2113  319D  2513  31A0   	fcall	_Set_Bost_Pwm1_Duty
 20942                           
 20943                           ;task.c: 547: delay_ms(1);
 20944  2116  3187  2781  31A0   	fcall	PL298	;call to abstracted procedure
 20945  2119  319D  256C  31A0   	fcall	_delay_ms
 20946                           
 20947                           ;task.c: 549: Disable_Bost_Pwm1();
 20948  211C  31A9  21D7  31A0   	fcall	_Disable_Bost_Pwm1
 20949                           
 20950                           ;task.c: 551: (LATCbits.LATC3 = 0x00);
 20951  211F  0022               	movlb	2	; select bank2
 20952  2120  118E               	bcf	14,3	;volatile
 20953  2121                     l1723:	
 20954                           ;task.c: 553: while(1);
 20955                           
 20956  2121  2921               	goto	l1723
 20957  2122                     l23046:	
 20958                           
 20959                           ;task.c: 557: else
 20960                           ;task.c: 558: {
 20961                           ;task.c: 559: load_short_time_count=0x00;
 20962  2122  0023               	movlb	3	; select bank3
 20963  2123  01B3               	clrf	_load_short_time_count^(0+384)
 20964  2124  01B4               	clrf	(_load_short_time_count+1)^(0+384)
 20965  2125                     l23048:	
 20966                           
 20967                           ;task.c: 560: }
 20968                           ;task.c: 563: if((load_voltage_value>shuchu_open_voltage)&&(discharge1_index==0x02))
 20969  2125  3187  2718  31A0   	fcall	PL232	;call to abstracted procedure
 20970  2128  0021               	movlb	1	; select bank1
 20971  2129  3199  217D  31A0   	fcall	PL136	;call to abstracted procedure
 20972  212C  31B4  2461  31A0   	fcall	___lwtoft
 20973  212F  3198  2085  31A0   	fcall	PL36	;call to abstracted procedure
 20974  2132  31B4  2472  31A0   	fcall	___ftge
 20975  2135  1803               	btfsc	3,0
 20976  2136  2961               	goto	l23070
 20977  2137  0021               	movlb	1	; select bank1
 20978  2138  0837               	movf	_discharge1_index^(0+128),w
 20979  2139  3A02               	xorlw	2
 20980  213A  1D03               	skipz
 20981  213B  2961               	goto	l23070
 20982                           
 20983                           ;task.c: 564: {
 20984                           ;task.c: 565: load_open_time_count++;
 20985  213C  0025               	movlb	5	; select bank5
 20986  213D  0AC1               	incf	_load_open_time_count^(0+640),f
 20987  213E  1903               	skipnz
 20988  213F  0AC2               	incf	(_load_open_time_count+1)^(0+640),f
 20989                           
 20990                           ;task.c: 567: if(load_open_time_count>20)
 20991  2140  3000               	movlw	0
 20992  2141  0242               	subwf	(_load_open_time_count+1)^(0+640),w
 20993  2142  3015               	movlw	21
 20994  2143  1903               	skipnz
 20995  2144  0241               	subwf	_load_open_time_count^(0+640),w
 20996  2145  1C03               	skipc
 20997  2146  2964               	goto	l1714
 20998                           
 20999                           ;task.c: 568: {
 21000                           ;task.c: 569: discharge1_index=0x03;
 21001  2147  3003               	movlw	3
 21002  2148  0021               	movlb	1	; select bank1
 21003  2149  00B7               	movwf	_discharge1_index^(0+128)
 21004                           
 21005                           ;task.c: 571: load_open_time_count=0x00;
 21006  214A  0025               	movlb	5	; select bank5
 21007  214B  3005               	movlw	5
 21008  214C  01C1               	clrf	_load_open_time_count^(0+640)
 21009  214D  01C2               	clrf	(_load_open_time_count+1)^(0+640)
 21010                           
 21011                           ;task.c: 573: bost_pwm1_value=5;
 21012  214E  0021               	movlb	1	; select bank1
 21013                           
 21014                           ;task.c: 577: discharge_led_status=0x00;
 21015  214F  3198  20BC  31A0   	fcall	PL60	;call to abstracted procedure
 21016  2152  319D  2513  31A0   	fcall	_Set_Bost_Pwm1_Duty
 21017                           
 21018                           ;task.c: 579: delay_ms(1);
 21019  2155  3187  2781  31A0   	fcall	PL298	;call to abstracted procedure
 21020  2158  319D  256C  31A0   	fcall	_delay_ms
 21021                           
 21022                           ;task.c: 581: Disable_Bost_Pwm1();
 21023  215B  31A9  21D7  31A0   	fcall	_Disable_Bost_Pwm1
 21024                           
 21025                           ;task.c: 583: (LATCbits.LATC3 = 0x00);
 21026  215E  0022               	movlb	2	; select bank2
 21027  215F  118E               	bcf	14,3	;volatile
 21028  2160                     l1729:	
 21029                           ;task.c: 585: while(1);
 21030                           
 21031  2160  2960               	goto	l1729
 21032  2161                     l23070:	
 21033                           
 21034                           ;task.c: 589: else
 21035                           ;task.c: 590: {
 21036                           ;task.c: 591: load_open_time_count=0x00;
 21037  2161  0025               	movlb	5	; select bank5
 21038  2162  01C1               	clrf	_load_open_time_count^(0+640)
 21039  2163  01C2               	clrf	(_load_open_time_count+1)^(0+640)
 21040  2164                     l1714:	
 21041                           
 21042                           ;task.c: 592: }
 21043                           ;task.c: 595: }
 21044                           ;task.c: 597: handle_an4_process_flag=0x00;
 21045  2164  0022               	movlb	2	; select bank2
 21046  2165  01B0               	clrf	_handle_an4_process_flag^(0+256)
 21047  2166                     l23072:	
 21048                           
 21049                           ;task.c: 599: }
 21050                           ;task.c: 603: if(handle_an0_process_flag==0x01)
 21051  2166  31A3  0B2B         	decfsz	_handle_an0_process_flag^(0+256),w
 21052  2168  2B7B               	goto	l23502
 21053                           
 21054                           ;task.c: 604: {
 21055                           ;task.c: 605: discharge_current_value=0x00;
 21056  2169  0021               	movlb	1	; select bank1
 21057  216A  01AD               	clrf	_discharge_current_value^(0+128)
 21058  216B  01AE               	clrf	(_discharge_current_value+1)^(0+128)
 21059                           
 21060                           ;task.c: 607: if(system_status == 0x02)
 21061  216C  0840               	movf	_system_status^(0+128),w
 21062  216D  3A02               	xorlw	2
 21063  216E  1D03               	skipz
 21064  216F  2B79               	goto	l1734
 21065                           
 21066                           ;task.c: 608: {
 21067                           ;task.c: 609: discharge_current_value=start_ad_convert(0b00000);
 21068  2170  3000               	movlw	0
 21069  2171  31B0  2038  31A0   	fcall	_start_ad_convert
 21070  2174  0831               	movf	?_start_ad_convert+1,w
 21071  2175  0021               	movlb	1	; select bank1
 21072  2176  00AE               	movwf	(_discharge_current_value+1)^(0+128)
 21073  2177  0020               	movlb	0	; select bank0
 21074  2178  0830               	movf	?_start_ad_convert,w
 21075  2179  0021               	movlb	1	; select bank1
 21076  217A  00AD               	movwf	_discharge_current_value^(0+128)
 21077                           
 21078                           ;task.c: 611: if((discharge_current_value>discharge_i_baohu)&&(discharge1_index==0x02))
 21079  217B  3186  26EC  31A0   	fcall	PL214	;call to abstracted procedure
 21080  217E  3199  2197  31A0   	fcall	PL140	;call to abstracted procedure
 21081  2181  31B4  2461  31A0   	fcall	___lwtoft
 21082  2184  3198  2085  31A0   	fcall	PL36	;call to abstracted procedure
 21083  2187  31B4  2472  31A0   	fcall	___ftge
 21084  218A  1803               	btfsc	3,0
 21085  218B  29B5               	goto	l23100
 21086  218C  0021               	movlb	1	; select bank1
 21087  218D  0837               	movf	_discharge1_index^(0+128),w
 21088  218E  3A02               	xorlw	2
 21089  218F  1D03               	skipz
 21090  2190  29B5               	goto	l23100
 21091                           
 21092                           ;task.c: 612: {
 21093                           ;task.c: 613: over_load1_time_count++;
 21094  2191  0025               	movlb	5	; select bank5
 21095  2192  0AC5               	incf	_over_load1_time_count^(0+640),f
 21096  2193  1903               	skipnz
 21097  2194  0AC6               	incf	(_over_load1_time_count+1)^(0+640),f
 21098                           
 21099                           ;task.c: 615: if(over_load1_time_count>20)
 21100  2195  3000               	movlw	0
 21101  2196  0246               	subwf	(_over_load1_time_count+1)^(0+640),w
 21102  2197  3015               	movlw	21
 21103  2198  1903               	skipnz
 21104  2199  0245               	subwf	_over_load1_time_count^(0+640),w
 21105  219A  1C03               	skipc
 21106  219B  29B8               	goto	l23102
 21107                           
 21108                           ;task.c: 616: {
 21109                           ;task.c: 617: discharge1_index=0x03;
 21110  219C  3003               	movlw	3
 21111  219D  0021               	movlb	1	; select bank1
 21112  219E  00B7               	movwf	_discharge1_index^(0+128)
 21113                           
 21114                           ;task.c: 619: bost_pwm1_value=2;
 21115  219F  3002               	movlw	2
 21116                           
 21117                           ;task.c: 621: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 21118  21A0  3198  20BC  31A0   	fcall	PL60	;call to abstracted procedure
 21119  21A3  319D  2513  31A0   	fcall	_Set_Bost_Pwm1_Duty
 21120                           
 21121                           ;task.c: 623: delay_ms(1);
 21122  21A6  3187  2781  31A0   	fcall	PL298	;call to abstracted procedure
 21123  21A9  319D  256C  31A0   	fcall	_delay_ms
 21124                           
 21125                           ;task.c: 625: Disable_Bost_Pwm1();
 21126  21AC  31A9  21D7  31A0   	fcall	_Disable_Bost_Pwm1
 21127                           
 21128                           ;task.c: 627: (LATCbits.LATC3 = 0x00);
 21129  21AF  0022               	movlb	2	; select bank2
 21130  21B0  118E               	bcf	14,3	;volatile
 21131                           
 21132                           ;task.c: 631: discharge_led_status=0x00;
 21133  21B1  0025               	movlb	5	; select bank5
 21134  21B2  01C5               	clrf	_over_load1_time_count^(0+640)
 21135  21B3  01C6               	clrf	(_over_load1_time_count+1)^(0+640)
 21136  21B4                     l1737:	
 21137                           ;task.c: 633: while(1);
 21138                           
 21139  21B4  29B4               	goto	l1737
 21140  21B5                     l23100:	
 21141                           
 21142                           ;task.c: 637: else
 21143                           ;task.c: 638: {
 21144                           ;task.c: 639: over_load1_time_count=0x00;
 21145  21B5  0025               	movlb	5	; select bank5
 21146  21B6  01C5               	clrf	_over_load1_time_count^(0+640)
 21147  21B7  01C6               	clrf	(_over_load1_time_count+1)^(0+640)
 21148  21B8                     l23102:	
 21149                           
 21150                           ;task.c: 640: }
 21151                           ;task.c: 642: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge1_index==0x01))
 21152  21B8  3198  20A4  31A0   	fcall	PL52	;call to abstracted procedure
 21153  21BB  31B4  2461  31A0   	fcall	___lwtoft
 21154  21BE  3198  2085  31A0   	fcall	PL36	;call to abstracted procedure
 21155  21C1  31B4  2472  31A0   	fcall	___ftge
 21156  21C4  1803               	btfsc	3,0
 21157  21C5  29D3               	goto	L114
 21158  21C6  0021               	movlb	1	; select bank1
 21159  21C7  0B37               	decfsz	_discharge1_index^(0+128),w
 21160  21C8  29D3               	goto	L115
 21161                           
 21162                           ;task.c: 646: discharge_led_status=0x01;
 21163  21C9  3002               	movlw	2
 21164  21CA  00B7               	movwf	_discharge1_index^(0+128)
 21165                           
 21166                           ;task.c: 648: open_discharge_time=0x01;
 21167  21CB  0022               	movlb	2	; select bank2
 21168  21CC  01C9               	clrf	_open_discharge_time^(0+256)
 21169  21CD  0AC9               	incf	_open_discharge_time^(0+256),f
 21170                           
 21171                           ;task.c: 650: (LATCbits.LATC3 = 0x01);
 21172  21CE  158E               	bsf	14,3	;volatile
 21173                           
 21174                           ;task.c: 652: Enable_Bost_Pwm1();
 21175  21CF  31A9  21DC         	fcall	_Enable_Bost_Pwm1
 21176                           
 21177                           ;task.c: 654: }
 21178  21D1  31B5  2D1E         	goto	l23120
 21179  21D3                     L115:	
 21180  21D3                     L114:	
 21181  21D3  31B5  2D0B         	ljmp	l23114
 21182                           
 21183                           	psect	text11_split_4
 21184  350B                     l23114:	
 21185                           
 21186                           ;task.c: 655: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge1_index==
      +                          0x01))
 21187  350B  3198  20A4  31B5   	fcall	PL52	;call to abstracted procedure
 21188  350E  31B4  2461  31B5   	fcall	___lwtoft
 21189  3511  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21190  3514  31B4  2472  31B5   	fcall	___ftge
 21191  3517  1C03               	btfss	3,0
 21192  3518  2D1E               	goto	l23120
 21193                           
 21194                           ;task.c: 656: {
 21195                           ;task.c: 657: discharge_led_status=0x00;
 21196  3519  0021               	movlb	1	; select bank1
 21197  351A  0B37               	decfsz	_discharge1_index^(0+128),w
 21198  351B  2D1E               	goto	l23120
 21199                           
 21200                           ;task.c: 659: open_discharge_time=0x00;
 21201  351C  0022               	movlb	2	; select bank2
 21202  351D  01C9               	clrf	_open_discharge_time^(0+256)
 21203  351E                     l23120:	
 21204                           
 21205                           ;task.c: 660: }
 21206                           ;task.c: 663: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge1_index==0x02))
 21207  351E  3199  2130  31B5   	fcall	PL94	;call to abstracted procedure
 21208  3521  31B4  2461  31B5   	fcall	___lwtoft
 21209  3524  3198  207E  31B5   	fcall	PL34	;call to abstracted procedure
 21210  3527  3198  20E7  31B5   	fcall	PL70	;call to abstracted procedure
 21211  352A  31B4  2472  31B5   	fcall	___ftge
 21212  352D  1C03               	btfss	3,0
 21213  352E  2FFC               	goto	L116
 21214  352F  0021               	movlb	1	; select bank1
 21215  3530  0837               	movf	_discharge1_index^(0+128),w
 21216  3531  3A02               	xorlw	2
 21217  3532  1D03               	skipz
 21218  3533  2FFC               	goto	L117
 21219                           
 21220                           ;task.c: 664: {
 21221                           ;task.c: 666: if((discharge_current_value<=discharge_i_limit)&&(discharge1_index==0x02))
 21222  3534  0023               	movlb	3	; select bank3
 21223  3535  3199  2124  31B5   	fcall	PL88	;call to abstracted procedure
 21224  3538  3199  2197  31B5   	fcall	PL140	;call to abstracted procedure
 21225  353B  31B4  2461  31B5   	fcall	___lwtoft
 21226  353E  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21227  3541  31B4  2472  31B5   	fcall	___ftge
 21228  3544  1C03               	btfss	3,0
 21229  3545  2FFE               	goto	L118
 21230  3546  0021               	movlb	1	; select bank1
 21231  3547  0837               	movf	_discharge1_index^(0+128),w
 21232  3548  3A02               	xorlw	2
 21233  3549  1D03               	skipz
 21234  354A  2FFE               	goto	L119
 21235                           
 21236                           ;task.c: 667: {
 21237                           ;task.c: 670: t1=step_01_time_limit;
 21238  354B  0852               	movf	_step_01_time_limit^(0+128),w
 21239                           
 21240                           ;task.c: 671: t2=step_01_time_limit+step_02_time_limit;
 21241                           
 21242                           ;task.c: 672: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
 21243                           
 21244                           ;task.c: 673: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit;
 21245                           
 21246                           ;task.c: 674: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_l
      +                          imit+step_05_time_limit;
 21247                           
 21248                           ;task.c: 676: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
 21249  354C  3198  20C6  31B5   	fcall	PL62	;call to abstracted procedure
 21250  354F  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21251  3552  1803               	skipnc
 21252  3553  2D5B               	goto	l23142
 21253  3554  3002               	movlw	2
 21254  3555  026A               	subwf	_Adjust_Pout_Flag,w
 21255  3556  1803               	skipnc
 21256  3557  2D5B               	goto	l23142
 21257                           
 21258                           ;task.c: 677: {
 21259                           ;task.c: 678: Adjust_Pout_Flag=0x01;
 21260  3558  01EA               	clrf	_Adjust_Pout_Flag
 21261  3559  0AEA               	incf	_Adjust_Pout_Flag,f
 21262                           
 21263                           ;task.c: 679: }
 21264  355A  2DAD               	goto	l23176
 21265  355B                     l23142:	
 21266                           
 21267                           ;task.c: 680: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
 21268  355B  0021               	movlb	1	; select bank1
 21269  355C  0841               	movf	_t1^(0+128),w
 21270  355D  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21271  3560  1C03               	skipc
 21272  3561  2D6F               	goto	l23150
 21273  3562  0021               	movlb	1	; select bank1
 21274  3563  0842               	movf	_t2^(0+128),w
 21275  3564  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21276  3567  1803               	skipnc
 21277  3568  2D6F               	goto	l23150
 21278  3569  3003               	movlw	3
 21279  356A  026A               	subwf	_Adjust_Pout_Flag,w
 21280  356B  1803               	skipnc
 21281  356C  2D6F               	goto	l23150
 21282                           
 21283                           ;task.c: 681: {
 21284                           ;task.c: 682: Adjust_Pout_Flag=0x02;
 21285  356D  3002               	movlw	2
 21286  356E  2DAA               	goto	L11
 21287  356F                     l23150:	
 21288                           ;task.c: 683: }
 21289                           
 21290                           
 21291                           ;task.c: 684: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
 21292  356F  0021               	movlb	1	; select bank1
 21293  3570  0842               	movf	_t2^(0+128),w
 21294  3571  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21295  3574  1C03               	skipc
 21296  3575  2D83               	goto	l23158
 21297  3576  0021               	movlb	1	; select bank1
 21298  3577  0843               	movf	_t3^(0+128),w
 21299  3578  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21300  357B  1803               	skipnc
 21301  357C  2D83               	goto	l23158
 21302  357D  3004               	movlw	4
 21303  357E  026A               	subwf	_Adjust_Pout_Flag,w
 21304  357F  1803               	skipnc
 21305  3580  2D83               	goto	l23158
 21306                           
 21307                           ;task.c: 685: {
 21308                           ;task.c: 686: Adjust_Pout_Flag=0x03;
 21309  3581  3003               	movlw	3
 21310  3582  2DAA               	goto	L11
 21311  3583                     l23158:	
 21312                           ;task.c: 687: }
 21313                           
 21314                           
 21315                           ;task.c: 688: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
 21316  3583  0021               	movlb	1	; select bank1
 21317  3584  0843               	movf	_t3^(0+128),w
 21318  3585  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21319  3588  1C03               	skipc
 21320  3589  2D97               	goto	l23166
 21321  358A  0021               	movlb	1	; select bank1
 21322  358B  0844               	movf	_t4^(0+128),w
 21323  358C  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21324  358F  1803               	skipnc
 21325  3590  2D97               	goto	l23166
 21326  3591  3005               	movlw	5
 21327  3592  026A               	subwf	_Adjust_Pout_Flag,w
 21328  3593  1803               	skipnc
 21329  3594  2D97               	goto	l23166
 21330                           
 21331                           ;task.c: 689: {
 21332                           ;task.c: 690: Adjust_Pout_Flag=0x04;
 21333  3595  3004               	movlw	4
 21334  3596  2DAA               	goto	L11
 21335  3597                     l23166:	
 21336                           ;task.c: 691: }
 21337                           
 21338                           
 21339                           ;task.c: 692: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
 21340  3597  0021               	movlb	1	; select bank1
 21341  3598  0844               	movf	_t4^(0+128),w
 21342  3599  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21343  359C  1C03               	skipc
 21344  359D  2DAC               	goto	l23174
 21345  359E  0022               	movlb	2	; select bank2
 21346  359F  0852               	movf	_t5^(0+256),w
 21347  35A0  3198  2062  31B5   	fcall	PL12	;call to abstracted procedure
 21348  35A3  1803               	skipnc
 21349  35A4  2DAC               	goto	l23174
 21350  35A5  3006               	movlw	6
 21351  35A6  026A               	subwf	_Adjust_Pout_Flag,w
 21352  35A7  1803               	skipnc
 21353  35A8  2DAC               	goto	l23174
 21354                           
 21355                           ;task.c: 693: {
 21356                           ;task.c: 694: Adjust_Pout_Flag=0x05;
 21357  35A9  3005               	movlw	5
 21358  35AA                     L11:	
 21359  35AA  00EA               	movwf	_Adjust_Pout_Flag
 21360                           
 21361                           ;task.c: 695: }
 21362  35AB  2DAD               	goto	l23176
 21363  35AC                     l23174:	
 21364                           
 21365                           ;task.c: 696: else
 21366                           ;task.c: 697: {
 21367                           ;task.c: 698: Adjust_Pout_Flag=0x00;
 21368  35AC  01EA               	clrf	_Adjust_Pout_Flag
 21369  35AD                     l23176:	
 21370                           
 21371                           ;task.c: 699: }
 21372                           ;task.c: 701: if(battery_voltage_value>bt_volt_80 && voltage_adjust_index<=0x01)
 21373  35AD  0024               	movlb	4	; select bank4
 21374  35AE  3186  266D  31B5   	fcall	PL158	;call to abstracted procedure
 21375  35B1  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21376  35B4  31B4  2461  31B5   	fcall	___lwtoft
 21377  35B7  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21378  35BA  31B4  2472  31B5   	fcall	___ftge
 21379  35BD  1803               	btfsc	3,0
 21380  35BE  2DDB               	goto	l23198
 21381  35BF  3002               	movlw	2
 21382  35C0  0021               	movlb	1	; select bank1
 21383  35C1  025C               	subwf	_voltage_adjust_index^(0+128),w
 21384  35C2  1803               	skipnc
 21385  35C3  2DDB               	goto	l23198
 21386                           
 21387                           ;task.c: 702: {
 21388                           ;task.c: 703: index_01_count++;
 21389  35C4  0025               	movlb	5	; select bank5
 21390  35C5  0AB1               	incf	_index_01_count^(0+640),f
 21391  35C6  1903               	skipnz
 21392  35C7  0AB2               	incf	(_index_01_count+1)^(0+640),f
 21393  35C8  3005               	movlw	5
 21394                           
 21395                           ;task.c: 704: index_02_count=0x00;
 21396                           
 21397                           ;task.c: 705: index_03_count=0x00;
 21398                           
 21399                           ;task.c: 706: index_04_count=0x00;
 21400                           
 21401                           ;task.c: 707: index_05_count=0x00;
 21402  35C9  3186  26CD  31B5   	fcall	PL194	;call to abstracted procedure
 21403                           
 21404                           ;task.c: 708: index_06_count=0x00;
 21405  35CC  01BB               	clrf	_index_06_count^(0+640)
 21406  35CD  01BC               	clrf	(_index_06_count+1)^(0+640)
 21407                           
 21408                           ;task.c: 709: if(index_01_count>1500)
 21409  35CE  0232               	subwf	(_index_01_count+1)^(0+640),w
 21410  35CF  30DD               	movlw	221
 21411  35D0  1903               	skipnz
 21412  35D1  0231               	subwf	_index_01_count^(0+640),w
 21413  35D2  1C03               	skipc
 21414  35D3  2F2B               	goto	l23318
 21415                           
 21416                           ;task.c: 710: {
 21417                           ;task.c: 711: voltage_adjust_index=0x01;
 21418  35D4  0021               	movlb	1	; select bank1
 21419  35D5  01DC               	clrf	_voltage_adjust_index^(0+128)
 21420  35D6  0ADC               	incf	_voltage_adjust_index^(0+128),f
 21421                           
 21422                           ;task.c: 712: index_01_count=0x00;
 21423  35D7  0025               	movlb	5	; select bank5
 21424  35D8  01B1               	clrf	_index_01_count^(0+640)
 21425  35D9  01B2               	clrf	(_index_01_count+1)^(0+640)
 21426  35DA  2F2B               	goto	l23318
 21427  35DB                     l23198:	
 21428                           
 21429                           ;task.c: 716: else if(battery_voltage_value>bt_volt_60 && battery_voltage_value<=bt_volt
      +                          _80 && voltage_adjust_index<=0x02)
 21430  35DB  0024               	movlb	4	; select bank4
 21431  35DC  3186  2687  31B5   	fcall	PL162	;call to abstracted procedure
 21432  35DF  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21433  35E2  31B4  2461  31B5   	fcall	___lwtoft
 21434  35E5  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21435  35E8  31B4  2472  31B5   	fcall	___ftge
 21436  35EB  1803               	btfsc	3,0
 21437  35EC  2E1D               	goto	l23222
 21438  35ED  0024               	movlb	4	; select bank4
 21439  35EE  3186  266D  31B5   	fcall	PL158	;call to abstracted procedure
 21440  35F1  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21441  35F4  31B4  2461  31B5   	fcall	___lwtoft
 21442  35F7  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21443  35FA  31B4  2472  31B5   	fcall	___ftge
 21444  35FD  1C03               	btfss	3,0
 21445  35FE  2E1D               	goto	l23222
 21446  35FF  3003               	movlw	3
 21447  3600  0021               	movlb	1	; select bank1
 21448  3601  025C               	subwf	_voltage_adjust_index^(0+128),w
 21449  3602  1803               	skipnc
 21450  3603  2E1D               	goto	l23222
 21451                           
 21452                           ;task.c: 717: {
 21453                           ;task.c: 718: index_02_count++;
 21454  3604  0025               	movlb	5	; select bank5
 21455  3605  0AB3               	incf	_index_02_count^(0+640),f
 21456  3606  1903               	skipnz
 21457  3607  0AB4               	incf	(_index_02_count+1)^(0+640),f
 21458  3608  3005               	movlw	5
 21459                           
 21460                           ;task.c: 719: index_01_count=0x00;
 21461  3609  01B1               	clrf	_index_01_count^(0+640)
 21462  360A  01B2               	clrf	(_index_01_count+1)^(0+640)
 21463                           
 21464                           ;task.c: 720: index_03_count=0x00;
 21465  360B  01B5               	clrf	_index_03_count^(0+640)
 21466  360C  01B6               	clrf	(_index_03_count+1)^(0+640)
 21467                           
 21468                           ;task.c: 721: index_04_count=0x00;
 21469                           
 21470                           ;task.c: 722: index_05_count=0x00;
 21471                           
 21472                           ;task.c: 723: index_06_count=0x00;
 21473  360D  3187  275C  31B5   	fcall	PL270	;call to abstracted procedure
 21474                           
 21475                           ;task.c: 724: if(index_02_count>1500)
 21476  3610  0234               	subwf	(_index_02_count+1)^(0+640),w
 21477  3611  30DD               	movlw	221
 21478  3612  1903               	skipnz
 21479  3613  0233               	subwf	_index_02_count^(0+640),w
 21480  3614  1C03               	skipc
 21481  3615  2F2B               	goto	l23318
 21482                           
 21483                           ;task.c: 725: {
 21484                           ;task.c: 726: voltage_adjust_index=0x02;
 21485  3616  3002               	movlw	2
 21486  3617  0021               	movlb	1	; select bank1
 21487  3618  00DC               	movwf	_voltage_adjust_index^(0+128)
 21488                           
 21489                           ;task.c: 727: index_02_count=0x00;
 21490  3619  0025               	movlb	5	; select bank5
 21491  361A  01B3               	clrf	_index_02_count^(0+640)
 21492  361B  01B4               	clrf	(_index_02_count+1)^(0+640)
 21493  361C  2F2B               	goto	l23318
 21494  361D                     l23222:	
 21495                           
 21496                           ;task.c: 730: else if(battery_voltage_value>bt_volt_40 && battery_voltage_value<=bt_volt
      +                          _60 && voltage_adjust_index<=0x03)
 21497  361D  0024               	movlb	4	; select bank4
 21498  361E  3186  2663  31B5   	fcall	PL156	;call to abstracted procedure
 21499  3621  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21500  3624  31B4  2461  31B5   	fcall	___lwtoft
 21501  3627  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21502  362A  31B4  2472  31B5   	fcall	___ftge
 21503  362D  1803               	btfsc	3,0
 21504  362E  2E5F               	goto	l23246
 21505  362F  0024               	movlb	4	; select bank4
 21506  3630  3186  2687  31B5   	fcall	PL162	;call to abstracted procedure
 21507  3633  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21508  3636  31B4  2461  31B5   	fcall	___lwtoft
 21509  3639  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21510  363C  31B4  2472  31B5   	fcall	___ftge
 21511  363F  1C03               	btfss	3,0
 21512  3640  2E5F               	goto	l23246
 21513  3641  3004               	movlw	4
 21514  3642  0021               	movlb	1	; select bank1
 21515  3643  025C               	subwf	_voltage_adjust_index^(0+128),w
 21516  3644  1803               	skipnc
 21517  3645  2E5F               	goto	l23246
 21518                           
 21519                           ;task.c: 731: {
 21520                           ;task.c: 732: index_03_count++;
 21521  3646  0025               	movlb	5	; select bank5
 21522  3647  0AB5               	incf	_index_03_count^(0+640),f
 21523  3648  1903               	skipnz
 21524  3649  0AB6               	incf	(_index_03_count+1)^(0+640),f
 21525  364A  3005               	movlw	5
 21526                           
 21527                           ;task.c: 733: index_02_count=0x00;
 21528  364B  01B3               	clrf	_index_02_count^(0+640)
 21529  364C  01B4               	clrf	(_index_02_count+1)^(0+640)
 21530                           
 21531                           ;task.c: 734: index_01_count=0x00;
 21532  364D  01B1               	clrf	_index_01_count^(0+640)
 21533  364E  01B2               	clrf	(_index_01_count+1)^(0+640)
 21534                           
 21535                           ;task.c: 735: index_04_count=0x00;
 21536                           
 21537                           ;task.c: 736: index_05_count=0x00;
 21538                           
 21539                           ;task.c: 737: index_06_count=0x00;
 21540  364F  3187  275C  31B5   	fcall	PL270	;call to abstracted procedure
 21541                           
 21542                           ;task.c: 738: if(index_03_count>1500)
 21543  3652  0236               	subwf	(_index_03_count+1)^(0+640),w
 21544  3653  30DD               	movlw	221
 21545  3654  1903               	skipnz
 21546  3655  0235               	subwf	_index_03_count^(0+640),w
 21547  3656  1C03               	skipc
 21548  3657  2F2B               	goto	l23318
 21549                           
 21550                           ;task.c: 739: {
 21551                           ;task.c: 740: voltage_adjust_index=0x03;
 21552  3658  3003               	movlw	3
 21553  3659  0021               	movlb	1	; select bank1
 21554  365A  00DC               	movwf	_voltage_adjust_index^(0+128)
 21555                           
 21556                           ;task.c: 741: index_03_count=0x00;
 21557  365B  0025               	movlb	5	; select bank5
 21558  365C  01B5               	clrf	_index_03_count^(0+640)
 21559  365D  01B6               	clrf	(_index_03_count+1)^(0+640)
 21560  365E  2F2B               	goto	l23318
 21561  365F                     l23246:	
 21562                           
 21563                           ;task.c: 744: else if(battery_voltage_value>bt_volt_20 && battery_voltage_value<=bt_volt
      +                          _40 && voltage_adjust_index<=0x04)
 21564  365F  0024               	movlb	4	; select bank4
 21565  3660  3186  2659  31B5   	fcall	PL154	;call to abstracted procedure
 21566  3663  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21567  3666  31B4  2461  31B5   	fcall	___lwtoft
 21568  3669  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21569  366C  31B4  2472  31B5   	fcall	___ftge
 21570  366F  1803               	btfsc	3,0
 21571  3670  2EA4               	goto	l23270
 21572  3671  0024               	movlb	4	; select bank4
 21573  3672  3186  2663  31B5   	fcall	PL156	;call to abstracted procedure
 21574  3675  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21575  3678  31B4  2461  31B5   	fcall	___lwtoft
 21576  367B  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21577  367E  31B4  2472  31B5   	fcall	___ftge
 21578  3681  1C03               	btfss	3,0
 21579  3682  2EA4               	goto	l23270
 21580  3683  3005               	movlw	5
 21581  3684  0021               	movlb	1	; select bank1
 21582  3685  025C               	subwf	_voltage_adjust_index^(0+128),w
 21583  3686  1803               	skipnc
 21584  3687  2EA4               	goto	l23270
 21585                           
 21586                           ;task.c: 745: {
 21587                           ;task.c: 746: index_04_count++;
 21588  3688  0025               	movlb	5	; select bank5
 21589  3689  0AB7               	incf	_index_04_count^(0+640),f
 21590  368A  1903               	skipnz
 21591  368B  0AB8               	incf	(_index_04_count+1)^(0+640),f
 21592  368C  3005               	movlw	5
 21593                           
 21594                           ;task.c: 747: index_02_count=0x00;
 21595  368D  01B3               	clrf	_index_02_count^(0+640)
 21596  368E  01B4               	clrf	(_index_02_count+1)^(0+640)
 21597                           
 21598                           ;task.c: 748: index_03_count=0x00;
 21599  368F  01B5               	clrf	_index_03_count^(0+640)
 21600  3690  01B6               	clrf	(_index_03_count+1)^(0+640)
 21601                           
 21602                           ;task.c: 749: index_01_count=0x00;
 21603  3691  01B1               	clrf	_index_01_count^(0+640)
 21604  3692  01B2               	clrf	(_index_01_count+1)^(0+640)
 21605                           
 21606                           ;task.c: 750: index_05_count=0x00;
 21607  3693  01B9               	clrf	_index_05_count^(0+640)
 21608  3694  01BA               	clrf	(_index_05_count+1)^(0+640)
 21609                           
 21610                           ;task.c: 751: index_06_count=0x00;
 21611  3695  01BB               	clrf	_index_06_count^(0+640)
 21612  3696  01BC               	clrf	(_index_06_count+1)^(0+640)
 21613                           
 21614                           ;task.c: 752: if(index_04_count>1500)
 21615  3697  0238               	subwf	(_index_04_count+1)^(0+640),w
 21616  3698  30DD               	movlw	221
 21617  3699  1903               	skipnz
 21618  369A  0237               	subwf	_index_04_count^(0+640),w
 21619  369B  1C03               	skipc
 21620  369C  2F2B               	goto	l23318
 21621                           
 21622                           ;task.c: 753: {
 21623                           ;task.c: 754: voltage_adjust_index=0x04;
 21624  369D  3004               	movlw	4
 21625  369E  0021               	movlb	1	; select bank1
 21626  369F  00DC               	movwf	_voltage_adjust_index^(0+128)
 21627                           
 21628                           ;task.c: 755: index_04_count=0x00;
 21629  36A0  0025               	movlb	5	; select bank5
 21630  36A1  01B7               	clrf	_index_04_count^(0+640)
 21631  36A2  01B8               	clrf	(_index_04_count+1)^(0+640)
 21632  36A3  2F2B               	goto	l23318
 21633  36A4                     l23270:	
 21634                           
 21635                           ;task.c: 758: else if(battery_voltage_value>bt_volt_00 && battery_voltage_value<=bt_volt
      +                          _20 && voltage_adjust_index<=0x05)
 21636  36A4  0024               	movlb	4	; select bank4
 21637  36A5  0860               	movf	_bt_volt_00^(0+512),w
 21638  36A6  0020               	movlb	0	; select bank0
 21639  36A7  00D1               	movwf	___ftge@ff1
 21640  36A8  0024               	movlb	4	; select bank4
 21641  36A9  0861               	movf	(_bt_volt_00+1)^(0+512),w
 21642  36AA  0020               	movlb	0	; select bank0
 21643  36AB  00D2               	movwf	___ftge@ff1+1
 21644  36AC  0024               	movlb	4	; select bank4
 21645  36AD  0862               	movf	(_bt_volt_00+2)^(0+512),w
 21646  36AE  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21647  36B1  31B4  2461  31B5   	fcall	___lwtoft
 21648  36B4  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21649  36B7  31B4  2472  31B5   	fcall	___ftge
 21650  36BA  1803               	btfsc	3,0
 21651  36BB  2EEF               	goto	l23294
 21652  36BC  0024               	movlb	4	; select bank4
 21653  36BD  3186  2659  31B5   	fcall	PL154	;call to abstracted procedure
 21654  36C0  3198  20B5  31B5   	fcall	PL58	;call to abstracted procedure
 21655  36C3  31B4  2461  31B5   	fcall	___lwtoft
 21656  36C6  3198  2085  31B5   	fcall	PL36	;call to abstracted procedure
 21657  36C9  31B4  2472  31B5   	fcall	___ftge
 21658  36CC  1C03               	btfss	3,0
 21659  36CD  2EEF               	goto	l23294
 21660  36CE  3006               	movlw	6
 21661  36CF  0021               	movlb	1	; select bank1
 21662  36D0  025C               	subwf	_voltage_adjust_index^(0+128),w
 21663  36D1  1803               	skipnc
 21664  36D2  2EEF               	goto	l23294
 21665                           
 21666                           ;task.c: 759: {
 21667                           ;task.c: 760: index_05_count++;
 21668  36D3  0025               	movlb	5	; select bank5
 21669  36D4  0AB9               	incf	_index_05_count^(0+640),f
 21670  36D5  1903               	skipnz
 21671  36D6  0ABA               	incf	(_index_05_count+1)^(0+640),f
 21672  36D7  3005               	movlw	5
 21673                           
 21674                           ;task.c: 761: index_02_count=0x00;
 21675  36D8  01B3               	clrf	_index_02_count^(0+640)
 21676  36D9  01B4               	clrf	(_index_02_count+1)^(0+640)
 21677                           
 21678                           ;task.c: 762: index_03_count=0x00;
 21679  36DA  01B5               	clrf	_index_03_count^(0+640)
 21680  36DB  01B6               	clrf	(_index_03_count+1)^(0+640)
 21681                           
 21682                           ;task.c: 763: index_04_count=0x00;
 21683  36DC  01B7               	clrf	_index_04_count^(0+640)
 21684  36DD  01B8               	clrf	(_index_04_count+1)^(0+640)
 21685                           
 21686                           ;task.c: 764: index_01_count=0x00;
 21687  36DE  01B1               	clrf	_index_01_count^(0+640)
 21688  36DF  01B2               	clrf	(_index_01_count+1)^(0+640)
 21689                           
 21690                           ;task.c: 765: index_06_count=0x00;
 21691  36E0  01BB               	clrf	_index_06_count^(0+640)
 21692  36E1  01BC               	clrf	(_index_06_count+1)^(0+640)
 21693                           
 21694                           ;task.c: 766: if(index_05_count>1500)
 21695  36E2  023A               	subwf	(_index_05_count+1)^(0+640),w
 21696  36E3  30DD               	movlw	221
 21697  36E4  1903               	skipnz
 21698  36E5  0239               	subwf	_index_05_count^(0+640),w
 21699  36E6  1C03               	skipc
 21700  36E7  2F2B               	goto	l23318
 21701                           
 21702                           ;task.c: 767: {
 21703                           ;task.c: 768: voltage_adjust_index=0x05;
 21704  36E8  3005               	movlw	5
 21705  36E9  0021               	movlb	1	; select bank1
 21706  36EA  00DC               	movwf	_voltage_adjust_index^(0+128)
 21707                           
 21708                           ;task.c: 769: index_05_count=0x00;
 21709  36EB  0025               	movlb	5	; select bank5
 21710  36EC  01B9               	clrf	_index_05_count^(0+640)
 21711  36ED  01BA               	clrf	(_index_05_count+1)^(0+640)
 21712  36EE  2F2B               	goto	l23318
 21713  36EF                     l23294:	
 21714                           
 21715                           ;task.c: 772: else if(battery_voltage_value<bt_volt_00 && voltage_adjust_index<=0x06)
 21716  36EF  3199  2130  31B5   	fcall	PL94	;call to abstracted procedure
 21717  36F2  31B4  2461  31B5   	fcall	___lwtoft
 21718  36F5  3198  207E  31B5   	fcall	PL34	;call to abstracted procedure
 21719  36F8  0024               	movlb	4	; select bank4
 21720  36F9  0860               	movf	_bt_volt_00^(0+512),w
 21721  36FA  0020               	movlb	0	; select bank0
 21722  36FB  00D4               	movwf	___ftge@ff2
 21723  36FC  0024               	movlb	4	; select bank4
 21724  36FD  0861               	movf	(_bt_volt_00+1)^(0+512),w
 21725  36FE  0020               	movlb	0	; select bank0
 21726  36FF  00D5               	movwf	___ftge@ff2+1
 21727  3700  0024               	movlb	4	; select bank4
 21728  3701  0862               	movf	(_bt_volt_00+2)^(0+512),w
 21729  3702  0020               	movlb	0	; select bank0
 21730  3703  00D6               	movwf	___ftge@ff2+2
 21731  3704  31B4  2472  31B5   	fcall	___ftge
 21732  3707  1803               	btfsc	3,0
 21733  3708  2F23               	goto	l23316
 21734  3709  3007               	movlw	7
 21735  370A  0021               	movlb	1	; select bank1
 21736  370B  025C               	subwf	_voltage_adjust_index^(0+128),w
 21737  370C  1803               	skipnc
 21738  370D  2F23               	goto	l23316
 21739                           
 21740                           ;task.c: 773: {
 21741                           ;task.c: 774: index_06_count++;
 21742  370E  0025               	movlb	5	; select bank5
 21743  370F  0ABB               	incf	_index_06_count^(0+640),f
 21744  3710  1903               	skipnz
 21745  3711  0ABC               	incf	(_index_06_count+1)^(0+640),f
 21746  3712  3005               	movlw	5
 21747                           
 21748                           ;task.c: 775: index_02_count=0x00;
 21749                           
 21750                           ;task.c: 776: index_03_count=0x00;
 21751                           
 21752                           ;task.c: 777: index_04_count=0x00;
 21753                           
 21754                           ;task.c: 778: index_05_count=0x00;
 21755  3713  3186  26CD  31B5   	fcall	PL194	;call to abstracted procedure
 21756                           
 21757                           ;task.c: 779: index_01_count=0x00;
 21758  3716  01B1               	clrf	_index_01_count^(0+640)
 21759  3717  01B2               	clrf	(_index_01_count+1)^(0+640)
 21760                           
 21761                           ;task.c: 780: if(index_06_count>1500)
 21762  3718  023C               	subwf	(_index_06_count+1)^(0+640),w
 21763  3719  30DD               	movlw	221
 21764  371A  1903               	skipnz
 21765  371B  023B               	subwf	_index_06_count^(0+640),w
 21766  371C  1C03               	skipc
 21767  371D  2F2B               	goto	l23318
 21768                           
 21769                           ;task.c: 781: {
 21770                           ;task.c: 782: voltage_adjust_index=0x06;
 21771  371E  3006               	movlw	6
 21772  371F  0021               	movlb	1	; select bank1
 21773  3720  00DC               	movwf	_voltage_adjust_index^(0+128)
 21774                           
 21775                           ;task.c: 783: index_06_count=0x00;
 21776  3721  0025               	movlb	5	; select bank5
 21777  3722  2F29               	goto	L12
 21778  3723                     l23316:	
 21779                           
 21780                           ;task.c: 786: else
 21781                           ;task.c: 787: {
 21782                           ;task.c: 788: index_01_count=0x00;
 21783  3723  0025               	movlb	5	; select bank5
 21784  3724  01B1               	clrf	_index_01_count^(0+640)
 21785  3725  01B2               	clrf	(_index_01_count+1)^(0+640)
 21786                           
 21787                           ;task.c: 789: index_02_count=0x00;
 21788                           
 21789                           ;task.c: 790: index_03_count=0x00;
 21790                           
 21791                           ;task.c: 791: index_04_count=0x00;
 21792                           
 21793                           ;task.c: 792: index_05_count=0x00;
 21794  3726  3186  26CD  31B5   	fcall	PL194	;call to abstracted procedure
 21795  3729                     L12:	
 21796                           
 21797                           ;task.c: 793: index_06_count=0x00;
 21798  3729  01BB               	clrf	_index_06_count^(0+640)
 21799  372A  01BC               	clrf	(_index_06_count+1)^(0+640)
 21800  372B                     l23318:	
 21801                           
 21802                           ;task.c: 794: }
 21803                           ;task.c: 796: if( ((load_cc_I/100)*30) > (Load_Pmax*30/(load_voltage_value*61/1000)) )
 21804  372B  30E8               	movlw	232
 21805  372C  0020               	movlb	0	; select bank0
 21806  372D  3186  26B6  31B5   	fcall	PL188	;call to abstracted procedure
 21807  3730  3188  207A  31B5   	fcall	___wmul
 21808  3733  3187  27B7  31B5   	fcall	PL358	;call to abstracted procedure
 21809  3736  31B1  21B3  31B5   	fcall	___lwdiv
 21810  3739  3187  27AD  31B5   	fcall	PL346	;call to abstracted procedure
 21811  373C  31B4  2461  31B5   	fcall	___lwtoft
 21812  373F  3198  20F4  31B5   	fcall	PL74	;call to abstracted procedure
 21813  3742  3198  206C  31B5   	fcall	PL14	;call to abstracted procedure
 21814  3745  318A  22AA  31B5   	fcall	___ftmul
 21815  3748  3199  213F  31B5   	fcall	PL104	;call to abstracted procedure
 21816  374B  319D  258F  31B5   	fcall	___ftdiv
 21817  374E  3187  2794  31B5   	fcall	PL320	;call to abstracted procedure
 21818  3751  30F0               	movlw	240
 21819  3752  01B3               	clrf	___ftmul@f1
 21820  3753  00B4               	movwf	___ftmul@f1+1
 21821  3754  3041               	movlw	65
 21822  3755  3198  2035  31B5   	fcall	PL2	;call to abstracted procedure
 21823  3758  319D  258F  31B5   	fcall	___ftdiv
 21824  375B  3197  2707  31B5   	fcall	PL48	;call to abstracted procedure
 21825  375E  318A  22AA  31B5   	fcall	___ftmul
 21826  3761  3187  2705  31B5   	fcall	PL228	;call to abstracted procedure
 21827  3764  31B4  2472  31B5   	fcall	___ftge
 21828  3767  1803               	btfsc	3,0
 21829  3768  2F93               	goto	l23350
 21830                           
 21831                           ;task.c: 797: {
 21832                           ;task.c: 798: PID_CC_discharge.SetPoint=(Load_Pmax*30)/(load_voltage_value*61/1000);
 21833  3769  30E8               	movlw	232
 21834  376A  3186  26B6  31B5   	fcall	PL188	;call to abstracted procedure
 21835  376D  3188  207A  31B5   	fcall	___wmul
 21836  3770  3187  27B7  31B5   	fcall	PL358	;call to abstracted procedure
 21837  3773  31B1  21B3  31B5   	fcall	___lwdiv
 21838  3776  3187  27AD  31B5   	fcall	PL346	;call to abstracted procedure
 21839  3779  31B4  2461  31B5   	fcall	___lwtoft
 21840  377C  3198  20F4  31B5   	fcall	PL74	;call to abstracted procedure
 21841  377F  3198  206C  31B5   	fcall	PL14	;call to abstracted procedure
 21842  3782  318A  22AA  31B5   	fcall	___ftmul
 21843  3785  3199  213F  31B5   	fcall	PL104	;call to abstracted procedure
 21844  3788  319D  258F  31B5   	fcall	___ftdiv
 21845  378B  3187  2724  31B5   	fcall	PL246	;call to abstracted procedure
 21846                           
 21847                           ;task.c: 800: limit_power_pid_flag=0x01;
 21848  378E  0022               	movlb	2	; select bank2
 21849  378F  01BE               	clrf	_limit_power_pid_flag^(0+256)
 21850  3790  0ABE               	incf	_limit_power_pid_flag^(0+256),f
 21851                           
 21852                           ;task.c: 802: data_cc_var = PID_CC_discharge.SetPoint;
 21853  3791  0023               	movlb	3	; select bank3
 21854  3792  2FA6               	goto	L80
 21855  3793                     l23350:	
 21856                           ;task.c: 825: {
 21857                           ;task.c: 826: PID_CC_discharge.SetPoint =0;
 21858                           
 21859                           ;task.c: 824: else if(Adjust_Pout_Flag==0x00)
 21860                           
 21861                           ;task.c: 823: }
 21862                           
 21863                           ;task.c: 821: {
 21864                           ;task.c: 822: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 21865                           
 21866                           ;task.c: 820: else if(Adjust_Pout_Flag==0x05)
 21867                           
 21868                           ;task.c: 819: }
 21869                           
 21870                           ;task.c: 817: {
 21871                           ;task.c: 818: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 21872                           
 21873                           ;task.c: 816: else if(Adjust_Pout_Flag==0x04)
 21874                           
 21875                           ;task.c: 815: }
 21876                           
 21877                           ;task.c: 813: {
 21878                           ;task.c: 814: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 21879                           
 21880                           ;task.c: 812: else if(Adjust_Pout_Flag==0x03)
 21881                           
 21882                           ;task.c: 811: }
 21883                           
 21884                           ;task.c: 809: {
 21885                           ;task.c: 810: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 21886                           
 21887                           ;task.c: 808: else if(Adjust_Pout_Flag==0x02)
 21888                           
 21889                           ;task.c: 807: }
 21890                           
 21891                           ;task.c: 805: {
 21892                           ;task.c: 806: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 21893                           
 21894                           ;task.c: 804: if(Adjust_Pout_Flag==0x01)
 21895                           
 21896                           
 21897                           ;task.c: 831: else
 21898                           ;task.c: 832: {
 21899                           ;task.c: 833: PID_CC_discharge.SetPoint=(load_cc_I/100)*30;
 21900  3793  30F0               	movlw	240
 21901  3794  01B3               	clrf	___ftmul@f1
 21902  3795  00B4               	movwf	___ftmul@f1+1
 21903  3796  3041               	movlw	65
 21904  3797  3198  2035  31B5   	fcall	PL2	;call to abstracted procedure
 21905  379A  319D  258F  31B5   	fcall	___ftdiv
 21906  379D  3197  2707  31B5   	fcall	PL48	;call to abstracted procedure
 21907  37A0  318A  22AA  31B5   	fcall	___ftmul
 21908  37A3  3198  208C  31B5   	fcall	PL38	;call to abstracted procedure
 21909  37A6                     L80:	
 21910                           
 21911                           ;task.c: 835: data_cc_var = PID_CC_discharge.SetPoint;
 21912  37A6  083D               	movf	_PID_CC_discharge^(0+384),w
 21913  37A7  0025               	movlb	5	; select bank5
 21914  37A8  00E3               	movwf	handle_ad_loop@data_cc_var^(0+640)
 21915  37A9  0023               	movlb	3	; select bank3
 21916  37AA  083E               	movf	(_PID_CC_discharge+1)^(0+384),w
 21917  37AB  0025               	movlb	5	; select bank5
 21918  37AC  00E4               	movwf	(handle_ad_loop@data_cc_var+1)^(0+640)
 21919  37AD  0023               	movlb	3	; select bank3
 21920  37AE  083F               	movf	(_PID_CC_discharge+2)^(0+384),w
 21921  37AF  0025               	movlb	5	; select bank5
 21922  37B0  00E5               	movwf	(handle_ad_loop@data_cc_var+2)^(0+640)
 21923                           
 21924                           ;task.c: 837: if(Adjust_Pout_Flag==0x01)
 21925  37B1  0020               	movlb	0	; select bank0
 21926  37B2  0B6A               	decfsz	_Adjust_Pout_Flag,w
 21927  37B3  2FBC               	goto	l23358
 21928                           
 21929                           ;task.c: 838: {
 21930                           ;task.c: 839: PID_CC_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 21931  37B4  30C8               	movlw	200
 21932  37B5  3186  26B0  31B5   	fcall	PL180	;call to abstracted procedure
 21933  37B8  3187  274E  31B5   	fcall	PL260	;call to abstracted procedure
 21934  37BB  2FE9               	goto	L58
 21935  37BC                     l23358:	
 21936                           ;task.c: 840: }
 21937                           
 21938                           
 21939                           ;task.c: 841: else if(Adjust_Pout_Flag==0x02)
 21940  37BC  086A               	movf	_Adjust_Pout_Flag,w
 21941  37BD  3A02               	xorlw	2
 21942  37BE  1D03               	skipz
 21943  37BF  2FC8               	goto	l23362
 21944                           
 21945                           ;task.c: 842: {
 21946                           ;task.c: 843: PID_CC_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 21947  37C0  30C8               	movlw	200
 21948  37C1  3186  26B0  31B5   	fcall	PL180	;call to abstracted procedure
 21949  37C4  3187  2744  31B5   	fcall	PL258	;call to abstracted procedure
 21950  37C7  2FE9               	goto	L58
 21951  37C8                     l23362:	
 21952                           ;task.c: 844: }
 21953                           
 21954                           
 21955                           ;task.c: 845: else if(Adjust_Pout_Flag==0x03)
 21956  37C8  086A               	movf	_Adjust_Pout_Flag,w
 21957  37C9  3A03               	xorlw	3
 21958  37CA  1D03               	skipz
 21959  37CB  2FD4               	goto	l23366
 21960                           
 21961                           ;task.c: 846: {
 21962                           ;task.c: 847: PID_CC_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 21963  37CC  30C8               	movlw	200
 21964  37CD  3186  26B0  31B5   	fcall	PL180	;call to abstracted procedure
 21965  37D0  3187  273A  31B5   	fcall	PL254	;call to abstracted procedure
 21966  37D3  2FE9               	goto	L58
 21967  37D4                     l23366:	
 21968                           ;task.c: 848: }
 21969                           
 21970                           
 21971                           ;task.c: 849: else if(Adjust_Pout_Flag==0x04)
 21972  37D4  086A               	movf	_Adjust_Pout_Flag,w
 21973  37D5  3A04               	xorlw	4
 21974  37D6  1D03               	skipz
 21975  37D7  2FE0               	goto	l23370
 21976                           
 21977                           ;task.c: 850: {
 21978                           ;task.c: 851: PID_CC_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 21979  37D8  30C8               	movlw	200
 21980  37D9  3186  26B0  31B5   	fcall	PL180	;call to abstracted procedure
 21981  37DC  3187  2730  31B5   	fcall	PL252	;call to abstracted procedure
 21982  37DF  2FE9               	goto	L58
 21983  37E0                     l23370:	
 21984                           ;task.c: 852: }
 21985                           
 21986                           
 21987                           ;task.c: 853: else if(Adjust_Pout_Flag==0x05)
 21988  37E0  086A               	movf	_Adjust_Pout_Flag,w
 21989  37E1  3A05               	xorlw	5
 21990  37E2  31A1  1D03         	skipz
 21991  37E4  29D5               	goto	l23374
 21992                           
 21993                           ;task.c: 854: {
 21994                           ;task.c: 855: PID_CC_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 21995  37E5  30C8               	movlw	200
 21996  37E6  3198  2048  31B5   	fcall	PL4	;call to abstracted procedure
 21997  37E9                     L58:	
 21998  37E9  0020               	movlb	0	; select bank0
 21999  37EA  3199  2118  31B5   	fcall	PL86	;call to abstracted procedure
 22000  37ED  0020               	movlb	0	; select bank0
 22001  37EE  00B8               	movwf	___ftmul@f2+2
 22002  37EF  318A  22AA  31B5   	fcall	___ftmul
 22003  37F2  3199  213F  31B5   	fcall	PL104	;call to abstracted procedure
 22004  37F5  319D  258F  31B5   	fcall	___ftdiv
 22005  37F8  3187  2724         	fcall	PL246	;call to abstracted procedure
 22006                           
 22007                           ;task.c: 856: }
 22008  37FA  31A1  29DC         	goto	l23378
 22009  37FC                     L117:	
 22010  37FC                     L116:	
 22011  37FC  31A3  2B4D         	ljmp	l23486
 22012  37FE                     L119:	
 22013  37FE                     L118:	
 22014  37FE  31A3  2B22         	ljmp	l23474
 22015                           
 22016                           	psect	text11_split_5
 22017  21D5                     l23374:	
 22018                           
 22019                           ;task.c: 857: else if(Adjust_Pout_Flag==0x00)
 22020  21D5  08EA               	movf	_Adjust_Pout_Flag,f
 22021  21D6  1D03               	skipz
 22022  21D7  29DC               	goto	l23378
 22023                           
 22024                           ;task.c: 858: {
 22025                           ;task.c: 859: PID_CC_discharge.SetPoint =0;
 22026  21D8  0023               	movlb	3	; select bank3
 22027  21D9  01BD               	clrf	_PID_CC_discharge^(0+384)
 22028  21DA  01BE               	clrf	(_PID_CC_discharge+1)^(0+384)
 22029  21DB  01BF               	clrf	(_PID_CC_discharge+2)^(0+384)
 22030  21DC                     l23378:	
 22031                           
 22032                           ;task.c: 860: }
 22033                           ;task.c: 862: }
 22034                           ;task.c: 864: if(voltage_adjust_index==0x01)
 22035  21DC  0021               	movlb	1	; select bank1
 22036  21DD  0B5C               	decfsz	_voltage_adjust_index^(0+128),w
 22037  21DE  29E3               	goto	l23382
 22038                           
 22039                           ;task.c: 865: {
 22040                           ;task.c: 866: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*1.0;
 22041  21DF  0020               	movlb	0	; select bank0
 22042  21E0  3080               	movlw	128
 22043  21E1  01B3               	clrf	___ftmul@f1
 22044  21E2  29EA               	goto	L67
 22045  21E3                     l23382:	
 22046                           ;task.c: 867: }
 22047                           
 22048                           
 22049                           ;task.c: 868: else if(voltage_adjust_index==0x02)
 22050  21E3  085C               	movf	_voltage_adjust_index^(0+128),w
 22051  21E4  3A02               	xorlw	2
 22052  21E5  1D03               	skipz
 22053  21E6  29ED               	goto	l23386
 22054                           
 22055                           ;task.c: 869: {
 22056                           ;task.c: 870: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.70;
 22057  21E7  3033               	movlw	51
 22058  21E8  0020               	movlb	0	; select bank0
 22059  21E9  00B3               	movwf	___ftmul@f1
 22060  21EA                     L67:	
 22061  21EA  00B4               	movwf	___ftmul@f1+1
 22062  21EB  303F               	movlw	63
 22063  21EC  2A11               	goto	L54
 22064  21ED                     l23386:	
 22065                           ;task.c: 871: }
 22066                           
 22067                           
 22068                           ;task.c: 872: else if(voltage_adjust_index==0x03)
 22069  21ED  085C               	movf	_voltage_adjust_index^(0+128),w
 22070  21EE  3A03               	xorlw	3
 22071  21EF  1D03               	skipz
 22072  21F0  29F6               	goto	l23390
 22073                           
 22074                           ;task.c: 873: {
 22075                           ;task.c: 874: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.45;
 22076  21F1  3066               	movlw	102
 22077  21F2  0020               	movlb	0	; select bank0
 22078  21F3  00B3               	movwf	___ftmul@f1
 22079  21F4  30E6               	movlw	230
 22080  21F5  2A06               	goto	L61
 22081  21F6                     l23390:	
 22082                           ;task.c: 875: }
 22083                           
 22084                           
 22085                           ;task.c: 876: else if(voltage_adjust_index==0x04)
 22086  21F6  085C               	movf	_voltage_adjust_index^(0+128),w
 22087  21F7  3A04               	xorlw	4
 22088  21F8  1D03               	skipz
 22089  21F9  29FE               	goto	l23394
 22090                           
 22091                           ;task.c: 877: {
 22092                           ;task.c: 878: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.25;
 22093  21FA  0020               	movlb	0	; select bank0
 22094  21FB  3080               	movlw	128
 22095  21FC  01B3               	clrf	___ftmul@f1
 22096  21FD  2A06               	goto	L61
 22097  21FE                     l23394:	
 22098                           ;task.c: 879: }
 22099                           
 22100                           
 22101                           ;task.c: 880: else if(voltage_adjust_index==0x05)
 22102  21FE  085C               	movf	_voltage_adjust_index^(0+128),w
 22103  21FF  3A05               	xorlw	5
 22104  2200  1D03               	skipz
 22105  2201  2A09               	goto	l23398
 22106                           
 22107                           ;task.c: 881: {
 22108                           ;task.c: 882: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.15;
 22109  2202  309A               	movlw	154
 22110  2203  0020               	movlb	0	; select bank0
 22111  2204  00B3               	movwf	___ftmul@f1
 22112  2205  3019               	movlw	25
 22113  2206                     L61:	
 22114  2206  00B4               	movwf	___ftmul@f1+1
 22115  2207  303E               	movlw	62
 22116  2208  2A11               	goto	L54
 22117  2209                     l23398:	
 22118                           ;task.c: 883: }
 22119                           
 22120                           
 22121                           ;task.c: 884: else if(voltage_adjust_index==0x06)
 22122  2209  085C               	movf	_voltage_adjust_index^(0+128),w
 22123  220A  3A06               	xorlw	6
 22124  220B  1D03               	skipz
 22125  220C  2A1C               	goto	l23402
 22126                           
 22127                           ;task.c: 885: {
 22128                           ;task.c: 886: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.05;
 22129  220D  30CD               	movlw	205
 22130  220E  3187  2763  31A1   	fcall	PL284	;call to abstracted procedure
 22131  2211                     L54:	
 22132  2211  3199  215E  31A1   	fcall	PL116	;call to abstracted procedure
 22133  2214  0020               	movlb	0	; select bank0
 22134  2215  00B8               	movwf	___ftmul@f2+2
 22135  2216  318A  22AA  31A1   	fcall	___ftmul
 22136  2219  3198  208C  31A1   	fcall	PL38	;call to abstracted procedure
 22137  221C                     l23402:	
 22138                           
 22139                           ;task.c: 887: }
 22140                           ;task.c: 890: if(mcu_temp_index==0x01)
 22141  221C  0021               	movlb	1	; select bank1
 22142  221D  0B3E               	decfsz	_mcu_temp_index^(0+128),w
 22143  221E  2A24               	goto	l23406
 22144                           
 22145                           ;task.c: 891: {
 22146                           ;task.c: 892: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 22147  221F  0020               	movlb	0	; select bank0
 22148  2220  303F               	movlw	63
 22149  2221  01B3               	clrf	___ftmul@f1
 22150  2222  01B4               	clrf	___ftmul@f1+1
 22151  2223  2A2C               	goto	L50
 22152  2224                     l23406:	
 22153                           ;task.c: 893: }
 22154                           
 22155                           
 22156                           ;task.c: 894: else if(mcu_temp_index==0x02)
 22157  2224  083E               	movf	_mcu_temp_index^(0+128),w
 22158  2225  3A02               	xorlw	2
 22159  2226  1D03               	skipz
 22160  2227  2A38               	goto	l23410
 22161                           
 22162                           ;task.c: 895: {
 22163                           ;task.c: 896: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.2;
 22164  2228  30CD               	movlw	205
 22165  2229  3187  27B2  31A1   	fcall	PL350	;call to abstracted procedure
 22166  222C                     L50:	
 22167  222C  3199  215E  31A1   	fcall	PL116	;call to abstracted procedure
 22168  222F  0020               	movlb	0	; select bank0
 22169  2230  00B8               	movwf	___ftmul@f2+2
 22170  2231  318A  22AA  31A1   	fcall	___ftmul
 22171  2234  3198  208C  31A1   	fcall	PL38	;call to abstracted procedure
 22172                           
 22173                           ;task.c: 897: }
 22174  2237  2A40               	goto	l23414
 22175  2238                     l23410:	
 22176                           
 22177                           ;task.c: 898: else if(mcu_temp_index==0x03)
 22178  2238  083E               	movf	_mcu_temp_index^(0+128),w
 22179  2239  3A03               	xorlw	3
 22180  223A  1D03               	skipz
 22181  223B  2A40               	goto	l23414
 22182                           
 22183                           ;task.c: 899: {
 22184                           ;task.c: 900: PID_CC_discharge.SetPoint =0;
 22185  223C  0023               	movlb	3	; select bank3
 22186  223D  01BD               	clrf	_PID_CC_discharge^(0+384)
 22187  223E  01BE               	clrf	(_PID_CC_discharge+1)^(0+384)
 22188  223F  01BF               	clrf	(_PID_CC_discharge+2)^(0+384)
 22189  2240                     l23414:	
 22190                           
 22191                           ;task.c: 901: }
 22192                           ;task.c: 903: if(light_mode==0x00 && work_mode==0x00)
 22193  2240  0021               	movlb	1	; select bank1
 22194  2241  08BD               	movf	_light_mode^(0+128),f
 22195  2242  1D03               	skipz
 22196  2243  2A49               	goto	l23420
 22197  2244  08C6               	movf	_work_mode^(0+128),f
 22198  2245  1D03               	skipz
 22199  2246  2A49               	goto	l23420
 22200                           
 22201                           ;task.c: 904: {
 22202                           ;task.c: 905: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 22203  2247  0020               	movlb	0	; select bank0
 22204  2248  2A5F               	goto	L51
 22205  2249                     l23420:	
 22206                           ;task.c: 906: }
 22207                           
 22208                           
 22209                           ;task.c: 907: else if(light_mode==0x01 && work_mode==0x00)
 22210  2249  0B3D               	decfsz	_light_mode^(0+128),w
 22211  224A  2A55               	goto	l23430
 22212  224B  08C6               	movf	_work_mode^(0+128),f
 22213  224C  1D03               	skipz
 22214  224D  2A55               	goto	l23430
 22215  224E                     L55:	
 22216                           
 22217                           ;task.c: 908: {
 22218                           ;task.c: 909: if(have_person1_flag==0x01 || have_person2_flag==0x01)
 22219  224E  0339               	decf	_have_person1_flag^(0+128),w
 22220  224F  1903               	skipnz
 22221  2250  2A53               	goto	l1819
 22222  2251  0B3A               	decfsz	_have_person2_flag^(0+128),w
 22223  2252  2A6C               	goto	l23444
 22224  2253                     l1819:	
 22225                           
 22226                           ;task.c: 910: {
 22227                           ;task.c: 911: __nop();
 22228  2253  0000               	nop
 22229                           
 22230                           ;task.c: 912: }
 22231  2254  2A7A               	goto	l23446
 22232  2255                     l23430:	
 22233                           ;task.c: 913: else
 22234                           ;task.c: 914: {
 22235                           ;task.c: 915: PID_CC_discharge.SetPoint = data_cc_var*0.05;
 22236                           
 22237                           
 22238                           ;task.c: 918: else if(light_mode==0x02 && work_mode==0x00)
 22239  2255  083D               	movf	_light_mode^(0+128),w
 22240  2256  3A02               	xorlw	2
 22241  2257  1D03               	skipz
 22242  2258  2A7A               	goto	l23446
 22243  2259  08C6               	movf	_work_mode^(0+128),f
 22244  225A  1D03               	skipz
 22245  225B  2A7A               	goto	l23446
 22246                           
 22247                           ;task.c: 919: {
 22248                           ;task.c: 920: if(Adjust_Pout_Flag==0x01)
 22249  225C  0020               	movlb	0	; select bank0
 22250  225D  0B6A               	decfsz	_Adjust_Pout_Flag,w
 22251  225E  2A66               	goto	l23438
 22252  225F                     L51:	
 22253                           
 22254                           ;task.c: 921: {
 22255                           ;task.c: 922: PID_CC_discharge.SetPoint = PID_CC_discharge.SetPoint*0.5;
 22256  225F  303F               	movlw	63
 22257  2260  01B3               	clrf	___ftmul@f1
 22258  2261  01B4               	clrf	___ftmul@f1+1
 22259  2262  3199  215E  31A1   	fcall	PL116	;call to abstracted procedure
 22260  2265  2A72               	goto	L28
 22261  2266                     l23438:	
 22262                           ;task.c: 923: }
 22263                           
 22264                           
 22265                           ;task.c: 924: else if(Adjust_Pout_Flag>=0x02)
 22266  2266  3002               	movlw	2
 22267  2267  026A               	subwf	_Adjust_Pout_Flag,w
 22268  2268  1C03               	skipc
 22269  2269  2A7A               	goto	l23446
 22270                           
 22271                           ;task.c: 925: {
 22272                           ;task.c: 926: if(have_person1_flag==0x01 || have_person2_flag==0x01)
 22273  226A  0021               	movlb	1	; select bank1
 22274  226B  2A4E               	goto	L55
 22275  226C                     l23444:	
 22276                           
 22277                           ;task.c: 930: else
 22278                           ;task.c: 931: {
 22279                           ;task.c: 932: PID_CC_discharge.SetPoint = data_cc_var*0.05;
 22280  226C  3199  21A0  31A1   	fcall	PL146	;call to abstracted procedure
 22281  226F  3199  2118  31A1   	fcall	PL86	;call to abstracted procedure
 22282  2272                     L28:	
 22283  2272  0020               	movlb	0	; select bank0
 22284  2273  00B8               	movwf	___ftmul@f2+2
 22285  2274  318A  22AA  31A1   	fcall	___ftmul
 22286  2277  3198  208C  31A1   	fcall	PL38	;call to abstracted procedure
 22287  227A                     l23446:	
 22288                           
 22289                           ;task.c: 934: }
 22290                           ;task.c: 935: }
 22291                           ;task.c: 936: }
 22292                           ;task.c: 938: if(led_out_ctrl==0x01 && work_mode==0x00)
 22293  227A  0021               	movlb	1	; select bank1
 22294  227B  0B3B               	decfsz	_led_out_ctrl^(0+128),w
 22295  227C  2A84               	goto	l1830
 22296  227D  08C6               	movf	_work_mode^(0+128),f
 22297  227E  1D03               	skipz
 22298  227F  2A84               	goto	l1830
 22299                           
 22300                           ;task.c: 939: {
 22301                           ;task.c: 940: PID_CC_discharge.SetPoint = 0;
 22302  2280  0023               	movlb	3	; select bank3
 22303  2281  01BD               	clrf	_PID_CC_discharge^(0+384)
 22304  2282  01BE               	clrf	(_PID_CC_discharge+1)^(0+384)
 22305  2283  01BF               	clrf	(_PID_CC_discharge+2)^(0+384)
 22306  2284                     l1830:	
 22307                           
 22308                           ;task.c: 941: }
 22309                           ;task.c: 944: pid_index = 0x01;
 22310  2284  0021               	movlb	1	; select bank1
 22311  2285  30BD               	movlw	low _PID_CC_discharge
 22312  2286  01BF               	clrf	_pid_index^(0+128)
 22313  2287  0ABF               	incf	_pid_index^(0+128),f
 22314                           
 22315                           ;task.c: 946: PWM_I=pid_calc(&PID_CC_discharge,discharge_current_value);
 22316  2288  0020               	movlb	0	; select bank0
 22317  2289  00D7               	movwf	pid_calc@pp
 22318  228A  3001               	movlw	high _PID_CC_discharge
 22319  228B  00D8               	movwf	pid_calc@pp+1
 22320  228C  0021               	movlb	1	; select bank1
 22321  228D  082E               	movf	(_discharge_current_value+1)^(0+128),w
 22322  228E  0020               	movlb	0	; select bank0
 22323  228F  00DA               	movwf	pid_calc@NowPoint+1
 22324  2290  0021               	movlb	1	; select bank1
 22325  2291  082D               	movf	_discharge_current_value^(0+128),w
 22326  2292  0020               	movlb	0	; select bank0
 22327  2293  00D9               	movwf	pid_calc@NowPoint
 22328  2294  31AC  2481  31A1   	fcall	_pid_calc
 22329  2297  0857               	movf	?_pid_calc,w
 22330  2298  0024               	movlb	4	; select bank4
 22331  2299  00A0               	movwf	_PWM_I^(0+512)
 22332  229A  0020               	movlb	0	; select bank0
 22333  229B  0858               	movf	?_pid_calc+1,w
 22334  229C  0024               	movlb	4	; select bank4
 22335  229D  00A1               	movwf	(_PWM_I+1)^(0+512)
 22336  229E  0020               	movlb	0	; select bank0
 22337  229F  0859               	movf	?_pid_calc+2,w
 22338  22A0  0024               	movlb	4	; select bank4
 22339  22A1  00A2               	movwf	(_PWM_I+2)^(0+512)
 22340                           
 22341                           ;task.c: 948: PWM = PWM+PWM_I;
 22342  22A2  0820               	movf	_PWM_I^(0+512),w
 22343  22A3  0020               	movlb	0	; select bank0
 22344  22A4  00C2               	movwf	___ftadd@f1
 22345  22A5  0024               	movlb	4	; select bank4
 22346  22A6  0821               	movf	(_PWM_I+1)^(0+512),w
 22347  22A7  0020               	movlb	0	; select bank0
 22348  22A8  00C3               	movwf	___ftadd@f1+1
 22349  22A9  0024               	movlb	4	; select bank4
 22350  22AA  0822               	movf	(_PWM_I+2)^(0+512),w
 22351  22AB  0020               	movlb	0	; select bank0
 22352  22AC  00C4               	movwf	___ftadd@f1+2
 22353  22AD  0021               	movlb	1	; select bank1
 22354  22AE  0820               	movf	_PWM^(0+128),w
 22355  22AF  0020               	movlb	0	; select bank0
 22356  22B0  00C5               	movwf	___ftadd@f2
 22357  22B1  0021               	movlb	1	; select bank1
 22358  22B2  0821               	movf	(_PWM+1)^(0+128),w
 22359  22B3  0020               	movlb	0	; select bank0
 22360  22B4  00C6               	movwf	___ftadd@f2+1
 22361  22B5  0021               	movlb	1	; select bank1
 22362  22B6  0822               	movf	(_PWM+2)^(0+128),w
 22363  22B7  0020               	movlb	0	; select bank0
 22364  22B8  00C7               	movwf	___ftadd@f2+2
 22365  22B9  318B  230F  31A1   	fcall	___ftadd
 22366  22BC  0842               	movf	?___ftadd,w
 22367  22BD  0021               	movlb	1	; select bank1
 22368  22BE  00A0               	movwf	_PWM^(0+128)
 22369  22BF  0020               	movlb	0	; select bank0
 22370  22C0  0843               	movf	?___ftadd+1,w
 22371  22C1  0021               	movlb	1	; select bank1
 22372  22C2  00A1               	movwf	(_PWM+1)^(0+128)
 22373  22C3  0020               	movlb	0	; select bank0
 22374  22C4  0844               	movf	?___ftadd+2,w
 22375  22C5  0021               	movlb	1	; select bank1
 22376  22C6  00A2               	movwf	(_PWM+2)^(0+128)
 22377                           
 22378                           ;task.c: 950: if( PWM>=488)
 22379  22C7  0820               	movf	_PWM^(0+128),w
 22380  22C8  0020               	movlb	0	; select bank0
 22381  22C9  00D1               	movwf	___ftge@ff1
 22382  22CA  0021               	movlb	1	; select bank1
 22383  22CB  0821               	movf	(_PWM+1)^(0+128),w
 22384  22CC  0020               	movlb	0	; select bank0
 22385  22CD  00D2               	movwf	___ftge@ff1+1
 22386  22CE  0021               	movlb	1	; select bank1
 22387  22CF  0822               	movf	(_PWM+2)^(0+128),w
 22388  22D0  3187  2771  31A1   	fcall	PL294	;call to abstracted procedure
 22389  22D3  31B4  2472  31A1   	fcall	___ftge
 22390  22D6  1C03               	btfss	3,0
 22391  22D7  2ADE               	goto	l23460
 22392                           
 22393                           ;task.c: 951: {
 22394                           ;task.c: 952: PWM=488;
 22395  22D8  0021               	movlb	1	; select bank1
 22396  22D9  30F4               	movlw	244
 22397  22DA  01A0               	clrf	_PWM^(0+128)
 22398  22DB  00A1               	movwf	(_PWM+1)^(0+128)
 22399  22DC  3043               	movlw	67
 22400  22DD  2AF8               	goto	L29
 22401  22DE                     l23460:	
 22402                           ;task.c: 953: }
 22403                           
 22404                           
 22405                           ;task.c: 954: else if(PWM<=5)
 22406  22DE  3187  2758  31A1   	fcall	PL268	;call to abstracted procedure
 22407  22E1  00D3               	movwf	___ftge@ff1+2
 22408  22E2  0021               	movlb	1	; select bank1
 22409  22E3  0820               	movf	_PWM^(0+128),w
 22410  22E4  0020               	movlb	0	; select bank0
 22411  22E5  00D4               	movwf	___ftge@ff2
 22412  22E6  0021               	movlb	1	; select bank1
 22413  22E7  0821               	movf	(_PWM+1)^(0+128),w
 22414  22E8  0020               	movlb	0	; select bank0
 22415  22E9  00D5               	movwf	___ftge@ff2+1
 22416  22EA  0021               	movlb	1	; select bank1
 22417  22EB  0822               	movf	(_PWM+2)^(0+128),w
 22418  22EC  0020               	movlb	0	; select bank0
 22419  22ED  00D6               	movwf	___ftge@ff2+2
 22420  22EE  31B4  2472  31A1   	fcall	___ftge
 22421  22F1  1C03               	btfss	3,0
 22422  22F2  2AF9               	goto	l23464
 22423                           
 22424                           ;task.c: 955: {
 22425                           ;task.c: 956: PWM=5;
 22426  22F3  0021               	movlb	1	; select bank1
 22427  22F4  30A0               	movlw	160
 22428  22F5  01A0               	clrf	_PWM^(0+128)
 22429  22F6  00A1               	movwf	(_PWM+1)^(0+128)
 22430  22F7  3040               	movlw	64
 22431  22F8                     L29:	
 22432  22F8  00A2               	movwf	(_PWM+2)^(0+128)
 22433  22F9                     l23464:	
 22434                           
 22435                           ;task.c: 957: }
 22436                           ;task.c: 959: bost_pwm1_value = (unsigned int)PWM;
 22437  22F9  0021               	movlb	1	; select bank1
 22438  22FA  0820               	movf	_PWM^(0+128),w
 22439  22FB  0020               	movlb	0	; select bank0
 22440  22FC  00D1               	movwf	___fttol@f1
 22441  22FD  0021               	movlb	1	; select bank1
 22442  22FE  0821               	movf	(_PWM+1)^(0+128),w
 22443  22FF  0020               	movlb	0	; select bank0
 22444  2300  00D2               	movwf	___fttol@f1+1
 22445  2301  0021               	movlb	1	; select bank1
 22446  2302  0822               	movf	(_PWM+2)^(0+128),w
 22447  2303  0020               	movlb	0	; select bank0
 22448  2304  00D3               	movwf	___fttol@f1+2
 22449  2305  319E  2600  31A1   	fcall	___fttol
 22450  2308  0852               	movf	?___fttol+1,w
 22451  2309  0021               	movlb	1	; select bank1
 22452  230A  00A4               	movwf	(_bost_pwm1_value+1)^(0+128)
 22453  230B  0020               	movlb	0	; select bank0
 22454  230C  0851               	movf	?___fttol,w
 22455  230D  0021               	movlb	1	; select bank1
 22456  230E  00A3               	movwf	_bost_pwm1_value^(0+128)
 22457                           
 22458                           ;task.c: 963: if(PID_CC_discharge.SetPoint==0)
 22459  230F  0023               	movlb	3	; select bank3
 22460  2310  083F               	movf	(_PID_CC_discharge+2)^(0+384),w
 22461  2311  043E               	iorwf	(_PID_CC_discharge+1)^(0+384),w
 22462  2312  043D               	iorwf	_PID_CC_discharge^(0+384),w
 22463  2313  1D03               	skipz
 22464  2314  2B18               	goto	l23470
 22465                           
 22466                           ;task.c: 964: {
 22467                           ;task.c: 965: bost_pwm1_value = 0;
 22468  2315  0021               	movlb	1	; select bank1
 22469  2316  01A3               	clrf	_bost_pwm1_value^(0+128)
 22470  2317  01A4               	clrf	(_bost_pwm1_value+1)^(0+128)
 22471  2318                     l23470:	
 22472                           
 22473                           ;task.c: 966: }
 22474                           ;task.c: 968: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 22475  2318  0021               	movlb	1	; select bank1
 22476  2319  3199  2110  31A1   	fcall	PL84	;call to abstracted procedure
 22477  231C  319D  2513  31A1   	fcall	_Set_Bost_Pwm1_Duty
 22478                           
 22479                           ;task.c: 970: limit_power_pid_flag=0x00;
 22480  231F  0022               	movlb	2	; select bank2
 22481  2320  01BE               	clrf	_limit_power_pid_flag^(0+256)
 22482                           
 22483                           ;task.c: 973: }
 22484  2321  2B49               	goto	l23484
 22485  2322                     l23474:	
 22486                           
 22487                           ;task.c: 974: else if((discharge_current_value>discharge_i_limit)&&(discharge1_index==0x
      +                          02))
 22488  2322  0023               	movlb	3	; select bank3
 22489  2323  3199  2124  31A1   	fcall	PL88	;call to abstracted procedure
 22490  2326  3199  2197  31A1   	fcall	PL140	;call to abstracted procedure
 22491  2329  31B4  2461  31A1   	fcall	___lwtoft
 22492  232C  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 22493  232F  31B4  2472  31A1   	fcall	___ftge
 22494  2332  1803               	btfsc	3,0
 22495  2333  2B49               	goto	l23484
 22496  2334  0021               	movlb	1	; select bank1
 22497  2335  0837               	movf	_discharge1_index^(0+128),w
 22498  2336  3A02               	xorlw	2
 22499  2337  1D03               	skipz
 22500  2338  2B49               	goto	l23484
 22501                           
 22502                           ;task.c: 975: {
 22503                           ;task.c: 976: if(bost_pwm1_value>10)
 22504  2339  3000               	movlw	0
 22505  233A  0224               	subwf	(_bost_pwm1_value+1)^(0+128),w
 22506  233B  300B               	movlw	11
 22507  233C  1903               	skipnz
 22508  233D  0223               	subwf	_bost_pwm1_value^(0+128),w
 22509  233E  1C03               	skipc
 22510  233F  2B43               	goto	l23482
 22511                           
 22512                           ;task.c: 977: {
 22513                           ;task.c: 978: bost_pwm1_value = bost_pwm1_value-1;
 22514  2340  30FF               	movlw	255
 22515  2341  07A3               	addwf	_bost_pwm1_value^(0+128),f
 22516  2342  3DA4               	addwfc	(_bost_pwm1_value+1)^(0+128),f
 22517  2343                     l23482:	
 22518                           
 22519                           ;task.c: 979: }
 22520                           ;task.c: 981: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 22521  2343  3199  2110  31A1   	fcall	PL84	;call to abstracted procedure
 22522  2346  319D  2513  31A1   	fcall	_Set_Bost_Pwm1_Duty
 22523  2349                     l23484:	
 22524                           
 22525                           ;task.c: 982: }
 22526                           ;task.c: 984: battery_low_time_count=0;
 22527  2349  0023               	movlb	3	; select bank3
 22528  234A  01AF               	clrf	_battery_low_time_count^(0+384)
 22529  234B  01B0               	clrf	(_battery_low_time_count+1)^(0+384)
 22530                           
 22531                           ;task.c: 986: }
 22532  234C  2B79               	goto	l1734
 22533  234D                     l23486:	
 22534                           
 22535                           ;task.c: 987: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge1_index==0
      +                          x02))
 22536  234D  3199  2130  31A1   	fcall	PL94	;call to abstracted procedure
 22537  2350  31B4  2461  31A1   	fcall	___lwtoft
 22538  2353  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 22539  2356  3198  20E7  31A1   	fcall	PL70	;call to abstracted procedure
 22540  2359  31B4  2472  31A1   	fcall	___ftge
 22541  235C  1803               	btfsc	3,0
 22542  235D  2B49               	goto	l23484
 22543  235E  0021               	movlb	1	; select bank1
 22544  235F  0837               	movf	_discharge1_index^(0+128),w
 22545  2360  3A02               	xorlw	2
 22546  2361  1D03               	skipz
 22547  2362  2B49               	goto	l23484
 22548                           
 22549                           ;task.c: 988: {
 22550                           ;task.c: 990: battery_low_time_count++;
 22551  2363  0023               	movlb	3	; select bank3
 22552                           
 22553                           ;task.c: 992: if(battery_low_time_count>1000)
 22554  2364  3187  279B  31A1   	fcall	PL328	;call to abstracted procedure
 22555  2367  1903               	skipnz
 22556  2368  022F               	subwf	_battery_low_time_count^(0+384),w
 22557  2369  1C03               	skipc
 22558  236A  2B79               	goto	l1734
 22559                           
 22560                           ;task.c: 993: {
 22561                           ;task.c: 994: discharge1_index=0x03;
 22562  236B  3003               	movlw	3
 22563  236C  0021               	movlb	1	; select bank1
 22564  236D  00B7               	movwf	_discharge1_index^(0+128)
 22565                           
 22566                           ;task.c: 996: bost_pwm1_value=2;
 22567  236E  3002               	movlw	2
 22568                           
 22569                           ;task.c: 998: Set_Bost_Pwm1_Duty(bost_pwm1_value);
 22570  236F  3198  20BC  31A1   	fcall	PL60	;call to abstracted procedure
 22571  2372  319D  2513  31A1   	fcall	_Set_Bost_Pwm1_Duty
 22572                           
 22573                           ;task.c: 1002: discharge_led_status=0x00;
 22574  2375  0023               	movlb	3	; select bank3
 22575  2376  01AF               	clrf	_battery_low_time_count^(0+384)
 22576  2377  01B0               	clrf	(_battery_low_time_count+1)^(0+384)
 22577  2378                     l1841:	
 22578                           ;task.c: 1004: while(1);
 22579                           
 22580  2378  2B78               	goto	l1841
 22581  2379                     l1734:	
 22582                           
 22583                           ;task.c: 1011: }
 22584                           ;task.c: 1013: }
 22585                           ;task.c: 1015: handle_an0_process_flag=0x00;
 22586  2379  0022               	movlb	2	; select bank2
 22587  237A  01AB               	clrf	_handle_an0_process_flag^(0+256)
 22588  237B                     l23502:	
 22589                           
 22590                           ;task.c: 1017: }
 22591                           ;task.c: 1019: if(handle_an11_process_flag==0x01)
 22592  237B  0B2C               	decfsz	_handle_an11_process_flag^(0+256),w
 22593  237C  2C68               	goto	l23584
 22594                           
 22595                           ;task.c: 1020: {
 22596                           ;task.c: 1021: load_voltage2_value=0x00;
 22597  237D  01A5               	clrf	_load_voltage2_value^(0+256)
 22598  237E  01A6               	clrf	(_load_voltage2_value+1)^(0+256)
 22599                           
 22600                           ;task.c: 1023: if(system_status == 0x02)
 22601  237F  0021               	movlb	1	; select bank1
 22602  2380  0840               	movf	_system_status^(0+128),w
 22603  2381  3A02               	xorlw	2
 22604  2382  1D03               	skipz
 22605  2383  2C66               	goto	l1846
 22606                           
 22607                           ;task.c: 1024: {
 22608                           ;task.c: 1025: load_voltage2_value=start_ad_convert(0b01011);
 22609  2384  300B               	movlw	11
 22610  2385  31B0  2038  31A1   	fcall	_start_ad_convert
 22611  2388  0831               	movf	?_start_ad_convert+1,w
 22612  2389  0022               	movlb	2	; select bank2
 22613  238A  00A6               	movwf	(_load_voltage2_value+1)^(0+256)
 22614  238B  0020               	movlb	0	; select bank0
 22615  238C  0830               	movf	?_start_ad_convert,w
 22616  238D  0022               	movlb	2	; select bank2
 22617  238E  00A5               	movwf	_load_voltage2_value^(0+256)
 22618                           
 22619                           ;task.c: 1028: if((load_voltage2_value<shuchu_shortout_voltage)&&(discharge2_index==0x02
      +                          )&&(PID_CC2_discharge.SetPoint>0))
 22620  238F  3186  26C5  31A1   	fcall	PL190	;call to abstracted procedure
 22621  2392  31B4  2461  31A1   	fcall	___lwtoft
 22622  2395  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 22623  2398  3198  20FB  31A1   	fcall	PL76	;call to abstracted procedure
 22624  239B  31B4  2472  31A1   	fcall	___ftge
 22625  239E  1803               	btfsc	3,0
 22626  239F  2BCC               	goto	l23532
 22627  23A0  0021               	movlb	1	; select bank1
 22628  23A1  0838               	movf	_discharge2_index^(0+128),w
 22629  23A2  3A02               	xorlw	2
 22630  23A3  1D03               	skipz
 22631  23A4  2BCC               	goto	l23532
 22632  23A5  0020               	movlb	0	; select bank0
 22633  23A6  3186  2677  31A1   	fcall	PL160	;call to abstracted procedure
 22634  23A9  31B4  2472  31A1   	fcall	___ftge
 22635  23AC  1803               	btfsc	3,0
 22636  23AD  2BCC               	goto	l23532
 22637                           
 22638                           ;task.c: 1029: {
 22639                           ;task.c: 1030: load2_short_time_count++;
 22640  23AE  0023               	movlb	3	; select bank3
 22641                           
 22642                           ;task.c: 1032: if(load2_short_time_count>50)
 22643  23AF  3187  27A1  31A1   	fcall	PL332	;call to abstracted procedure
 22644  23B2  1903               	skipnz
 22645  23B3  0231               	subwf	_load2_short_time_count^(0+384),w
 22646  23B4  1C03               	skipc
 22647  23B5  2C27               	goto	l23560
 22648  23B6  3002               	movlw	2
 22649                           
 22650                           ;task.c: 1033: {
 22651                           ;task.c: 1034: load2_short_time_count=0x00;
 22652  23B7  01B1               	clrf	_load2_short_time_count^(0+384)
 22653  23B8  01B2               	clrf	(_load2_short_time_count+1)^(0+384)
 22654                           
 22655                           ;task.c: 1036: bost_pwm2_value=2;
 22656  23B9  0021               	movlb	1	; select bank1
 22657                           
 22658                           ;task.c: 1040: discharge_led_status=0x00;
 22659  23BA  3198  20DD  31A1   	fcall	PL64	;call to abstracted procedure
 22660  23BD  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 22661                           
 22662                           ;task.c: 1042: delay_ms(1);
 22663  23C0  3187  2781  31A1   	fcall	PL298	;call to abstracted procedure
 22664  23C3  319D  256C  31A1   	fcall	_delay_ms
 22665                           
 22666                           ;task.c: 1044: Disable_Bost_Pwm2();
 22667  23C6  319D  25F1  31A1   	fcall	_Disable_Bost_Pwm2
 22668                           
 22669                           ;task.c: 1046: (LATCbits.LATC0 = 0x00);
 22670  23C9  0022               	movlb	2	; select bank2
 22671  23CA  100E               	bcf	14,0	;volatile
 22672  23CB                     l1849:	
 22673                           ;task.c: 1048: while(1);
 22674                           
 22675  23CB  2BCB               	goto	l1849
 22676  23CC                     l23532:	
 22677                           
 22678                           ;task.c: 1052: else if((load_voltage2_value>=shuchu_shortout_voltage)&&(load_voltage2_va
      +                          lue<(shuchu_shortout_voltage*2))&&(discharge2_index==0x02)&&(PID_CC2_discharge.SetPoint>
      +                          0))
 22679  23CC  0022               	movlb	2	; select bank2
 22680  23CD  3186  26C5  31A1   	fcall	PL190	;call to abstracted procedure
 22681  23D0  31B4  2461  31A1   	fcall	___lwtoft
 22682  23D3  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 22683  23D6  3198  20FB  31A1   	fcall	PL76	;call to abstracted procedure
 22684  23D9  31B4  2472  31A1   	fcall	___ftge
 22685  23DC  1C03               	btfss	3,0
 22686  23DD  2C24               	goto	l23558
 22687  23DE  0022               	movlb	2	; select bank2
 22688  23DF  3186  26C5  31A1   	fcall	PL190	;call to abstracted procedure
 22689  23E2  31B4  2461  31A1   	fcall	___lwtoft
 22690  23E5  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 22691  23E8  3186  2637  31A1   	fcall	PL148	;call to abstracted procedure
 22692  23EB  318A  22AA  31A1   	fcall	___ftmul
 22693  23EE  3187  2705  31A1   	fcall	PL228	;call to abstracted procedure
 22694  23F1  31B4  2472  31A1   	fcall	___ftge
 22695  23F4  1803               	btfsc	3,0
 22696  23F5  2C24               	goto	l23558
 22697  23F6  0021               	movlb	1	; select bank1
 22698  23F7  0838               	movf	_discharge2_index^(0+128),w
 22699  23F8  3A02               	xorlw	2
 22700  23F9  1D03               	skipz
 22701  23FA  2C24               	goto	l23558
 22702  23FB  0020               	movlb	0	; select bank0
 22703  23FC  3186  2677  31A1   	fcall	PL160	;call to abstracted procedure
 22704  23FF  31B4  2472  31A1   	fcall	___ftge
 22705  2402  1803               	btfsc	3,0
 22706  2403  2C24               	goto	l23558
 22707                           
 22708                           ;task.c: 1053: {
 22709                           ;task.c: 1054: load2_short_time_count++;
 22710  2404  0023               	movlb	3	; select bank3
 22711                           
 22712                           ;task.c: 1056: if(load2_short_time_count>50)
 22713  2405  3187  27A1  31A1   	fcall	PL332	;call to abstracted procedure
 22714  2408  1903               	skipnz
 22715  2409  0231               	subwf	_load2_short_time_count^(0+384),w
 22716  240A  1C03               	skipc
 22717  240B  2C27               	goto	l23560
 22718  240C  3003               	movlw	3
 22719                           
 22720                           ;task.c: 1057: {
 22721                           ;task.c: 1058: load2_short_time_count=0x00;
 22722  240D  01B1               	clrf	_load2_short_time_count^(0+384)
 22723  240E  01B2               	clrf	(_load2_short_time_count+1)^(0+384)
 22724                           
 22725                           ;task.c: 1060: discharge2_index=0x03;
 22726  240F  0021               	movlb	1	; select bank1
 22727  2410  00B8               	movwf	_discharge2_index^(0+128)
 22728                           
 22729                           ;task.c: 1062: bost_pwm2_value=2;
 22730  2411  3002               	movlw	2
 22731                           
 22732                           ;task.c: 1066: discharge_led_status=0x00;
 22733  2412  3198  20DD  31A1   	fcall	PL64	;call to abstracted procedure
 22734  2415  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 22735                           
 22736                           ;task.c: 1068: delay_ms(1);
 22737  2418  3187  2781  31A1   	fcall	PL298	;call to abstracted procedure
 22738  241B  319D  256C  31A1   	fcall	_delay_ms
 22739                           
 22740                           ;task.c: 1070: Disable_Bost_Pwm2();
 22741  241E  319D  25F1  31A1   	fcall	_Disable_Bost_Pwm2
 22742                           
 22743                           ;task.c: 1072: (LATCbits.LATC0 = 0x00);
 22744  2421  0022               	movlb	2	; select bank2
 22745  2422  100E               	bcf	14,0	;volatile
 22746  2423                     l1855:	
 22747                           ;task.c: 1074: while(1);
 22748                           
 22749  2423  2C23               	goto	l1855
 22750  2424                     l23558:	
 22751                           
 22752                           ;task.c: 1078: else
 22753                           ;task.c: 1079: {
 22754                           ;task.c: 1080: load2_short_time_count=0x00;
 22755  2424  0023               	movlb	3	; select bank3
 22756  2425  01B1               	clrf	_load2_short_time_count^(0+384)
 22757  2426  01B2               	clrf	(_load2_short_time_count+1)^(0+384)
 22758  2427                     l23560:	
 22759                           
 22760                           ;task.c: 1081: }
 22761                           ;task.c: 1084: if((load_voltage2_value>shuchu_open_voltage)&&(discharge2_index==0x02))
 22762  2427  3187  2718  31A1   	fcall	PL232	;call to abstracted procedure
 22763  242A  0022               	movlb	2	; select bank2
 22764  242B  3186  26C5  31A1   	fcall	PL190	;call to abstracted procedure
 22765  242E  31B4  2461  31A1   	fcall	___lwtoft
 22766  2431  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 22767  2434  31B4  2472  31A1   	fcall	___ftge
 22768  2437  1803               	btfsc	3,0
 22769  2438  2C63               	goto	l23582
 22770  2439  0021               	movlb	1	; select bank1
 22771  243A  0838               	movf	_discharge2_index^(0+128),w
 22772  243B  3A02               	xorlw	2
 22773  243C  1D03               	skipz
 22774  243D  2C63               	goto	l23582
 22775                           
 22776                           ;task.c: 1085: {
 22777                           ;task.c: 1086: load2_open_time_count++;
 22778  243E  0025               	movlb	5	; select bank5
 22779  243F  0ABF               	incf	_load2_open_time_count^(0+640),f
 22780  2440  1903               	skipnz
 22781  2441  0AC0               	incf	(_load2_open_time_count+1)^(0+640),f
 22782                           
 22783                           ;task.c: 1088: if(load2_open_time_count>20)
 22784  2442  3000               	movlw	0
 22785  2443  0240               	subwf	(_load2_open_time_count+1)^(0+640),w
 22786  2444  3015               	movlw	21
 22787  2445  1903               	skipnz
 22788  2446  023F               	subwf	_load2_open_time_count^(0+640),w
 22789  2447  1C03               	skipc
 22790  2448  2C66               	goto	l1846
 22791                           
 22792                           ;task.c: 1089: {
 22793                           ;task.c: 1090: discharge2_index=0x03;
 22794  2449  3003               	movlw	3
 22795  244A  0021               	movlb	1	; select bank1
 22796  244B  00B8               	movwf	_discharge2_index^(0+128)
 22797                           
 22798                           ;task.c: 1092: load2_open_time_count=0x00;
 22799  244C  0025               	movlb	5	; select bank5
 22800  244D  3005               	movlw	5
 22801  244E  01BF               	clrf	_load2_open_time_count^(0+640)
 22802  244F  01C0               	clrf	(_load2_open_time_count+1)^(0+640)
 22803                           
 22804                           ;task.c: 1094: bost_pwm2_value=5;
 22805  2450  0021               	movlb	1	; select bank1
 22806                           
 22807                           ;task.c: 1098: discharge_led_status=0x00;
 22808  2451  3198  20DD  31A1   	fcall	PL64	;call to abstracted procedure
 22809  2454  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 22810                           
 22811                           ;task.c: 1100: delay_ms(1);
 22812  2457  3187  2781  31A1   	fcall	PL298	;call to abstracted procedure
 22813  245A  319D  256C  31A1   	fcall	_delay_ms
 22814                           
 22815                           ;task.c: 1102: Disable_Bost_Pwm2();
 22816  245D  319D  25F1  31A1   	fcall	_Disable_Bost_Pwm2
 22817                           
 22818                           ;task.c: 1104: (LATCbits.LATC0 = 0x00);
 22819  2460  0022               	movlb	2	; select bank2
 22820  2461  100E               	bcf	14,0	;volatile
 22821  2462                     l1861:	
 22822                           ;task.c: 1106: while(1);
 22823                           
 22824  2462  2C62               	goto	l1861
 22825  2463                     l23582:	
 22826                           
 22827                           ;task.c: 1110: else
 22828                           ;task.c: 1111: {
 22829                           ;task.c: 1112: load2_open_time_count=0x00;
 22830  2463  0025               	movlb	5	; select bank5
 22831  2464  01BF               	clrf	_load2_open_time_count^(0+640)
 22832  2465  01C0               	clrf	(_load2_open_time_count+1)^(0+640)
 22833  2466                     l1846:	
 22834                           
 22835                           ;task.c: 1113: }
 22836                           ;task.c: 1116: }
 22837                           ;task.c: 1118: handle_an11_process_flag=0x00;
 22838  2466  0022               	movlb	2	; select bank2
 22839  2467  01AC               	clrf	_handle_an11_process_flag^(0+256)
 22840  2468                     l23584:	
 22841                           
 22842                           ;task.c: 1120: }
 22843                           ;task.c: 1122: if(handle_an8_process_flag==0x01)
 22844  2468  0B31               	decfsz	_handle_an8_process_flag^(0+256),w
 22845  2469  0008               	return
 22846                           
 22847                           ;task.c: 1123: {
 22848                           ;task.c: 1124: discharge_current2_value=0x00;
 22849  246A  01A3               	clrf	_discharge_current2_value^(0+256)
 22850  246B  01A4               	clrf	(_discharge_current2_value+1)^(0+256)
 22851                           
 22852                           ;task.c: 1126: if(system_status == 0x02)
 22853  246C  0021               	movlb	1	; select bank1
 22854  246D  0840               	movf	_system_status^(0+128),w
 22855  246E  3A02               	xorlw	2
 22856  246F  1D03               	skipz
 22857  2470  2FFD               	goto	l1866
 22858                           
 22859                           ;task.c: 1127: {
 22860                           ;task.c: 1128: discharge_current2_value=start_ad_convert(0b01000);
 22861  2471  3008               	movlw	8
 22862  2472  31B0  2038  31A1   	fcall	_start_ad_convert
 22863  2475  0831               	movf	?_start_ad_convert+1,w
 22864  2476  0022               	movlb	2	; select bank2
 22865  2477  00A4               	movwf	(_discharge_current2_value+1)^(0+256)
 22866  2478  0020               	movlb	0	; select bank0
 22867  2479  0830               	movf	?_start_ad_convert,w
 22868  247A  0022               	movlb	2	; select bank2
 22869  247B  00A3               	movwf	_discharge_current2_value^(0+256)
 22870                           
 22871                           ;task.c: 1130: if((discharge_current2_value>discharge_i_baohu)&&(discharge2_index==0x02))
 22872  247C  3186  26EC  31A1   	fcall	PL214	;call to abstracted procedure
 22873  247F  3186  26D6  31A1   	fcall	PL196	;call to abstracted procedure
 22874  2482  31B4  2461  31A1   	fcall	___lwtoft
 22875  2485  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 22876  2488  31B4  2472  31A1   	fcall	___ftge
 22877  248B  1803               	btfsc	3,0
 22878  248C  2CB6               	goto	l23612
 22879  248D  0021               	movlb	1	; select bank1
 22880  248E  0838               	movf	_discharge2_index^(0+128),w
 22881  248F  3A02               	xorlw	2
 22882  2490  1D03               	skipz
 22883  2491  2CB6               	goto	l23612
 22884                           
 22885                           ;task.c: 1131: {
 22886                           ;task.c: 1132: over_load2_time_count++;
 22887  2492  0025               	movlb	5	; select bank5
 22888  2493  0AC7               	incf	_over_load2_time_count^(0+640),f
 22889  2494  1903               	skipnz
 22890  2495  0AC8               	incf	(_over_load2_time_count+1)^(0+640),f
 22891                           
 22892                           ;task.c: 1134: if(over_load2_time_count>20)
 22893  2496  3000               	movlw	0
 22894  2497  0248               	subwf	(_over_load2_time_count+1)^(0+640),w
 22895  2498  3015               	movlw	21
 22896  2499  1903               	skipnz
 22897  249A  0247               	subwf	_over_load2_time_count^(0+640),w
 22898  249B  1C03               	skipc
 22899  249C  2CB9               	goto	l23614
 22900                           
 22901                           ;task.c: 1135: {
 22902                           ;task.c: 1136: discharge2_index=0x03;
 22903  249D  3003               	movlw	3
 22904  249E  0021               	movlb	1	; select bank1
 22905  249F  00B8               	movwf	_discharge2_index^(0+128)
 22906                           
 22907                           ;task.c: 1138: bost_pwm2_value=2;
 22908  24A0  3002               	movlw	2
 22909                           
 22910                           ;task.c: 1140: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 22911  24A1  3198  20DD  31A1   	fcall	PL64	;call to abstracted procedure
 22912  24A4  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 22913                           
 22914                           ;task.c: 1142: delay_ms(1);
 22915  24A7  3187  2781  31A1   	fcall	PL298	;call to abstracted procedure
 22916  24AA  319D  256C  31A1   	fcall	_delay_ms
 22917                           
 22918                           ;task.c: 1144: Disable_Bost_Pwm2();
 22919  24AD  319D  25F1  31A1   	fcall	_Disable_Bost_Pwm2
 22920                           
 22921                           ;task.c: 1146: (LATCbits.LATC0 = 0x00);
 22922  24B0  0022               	movlb	2	; select bank2
 22923  24B1  100E               	bcf	14,0	;volatile
 22924                           
 22925                           ;task.c: 1150: discharge_led_status=0x00;
 22926  24B2  0025               	movlb	5	; select bank5
 22927  24B3  01C7               	clrf	_over_load2_time_count^(0+640)
 22928  24B4  01C8               	clrf	(_over_load2_time_count+1)^(0+640)
 22929  24B5                     l1869:	
 22930                           ;task.c: 1152: while(1);
 22931                           
 22932  24B5  2CB5               	goto	l1869
 22933  24B6                     l23612:	
 22934                           
 22935                           ;task.c: 1156: else
 22936                           ;task.c: 1157: {
 22937                           ;task.c: 1158: over_load2_time_count=0x00;
 22938  24B6  0025               	movlb	5	; select bank5
 22939  24B7  01C7               	clrf	_over_load2_time_count^(0+640)
 22940  24B8  01C8               	clrf	(_over_load2_time_count+1)^(0+640)
 22941  24B9                     l23614:	
 22942                           
 22943                           ;task.c: 1159: }
 22944                           ;task.c: 1161: if((battery_voltage_value>dianchi_qianya_huifu)&&(discharge2_index==0x01))
 22945  24B9  3198  20A4  31A1   	fcall	PL52	;call to abstracted procedure
 22946  24BC  31B4  2461  31A1   	fcall	___lwtoft
 22947  24BF  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 22948  24C2  31B4  2472  31A1   	fcall	___ftge
 22949  24C5  1803               	btfsc	3,0
 22950  24C6  2CD4               	goto	l23626
 22951  24C7  0021               	movlb	1	; select bank1
 22952  24C8  0B38               	decfsz	_discharge2_index^(0+128),w
 22953  24C9  2CD4               	goto	l23626
 22954                           
 22955                           ;task.c: 1165: discharge_led_status=0x01;
 22956  24CA  3002               	movlw	2
 22957  24CB  00B8               	movwf	_discharge2_index^(0+128)
 22958                           
 22959                           ;task.c: 1167: open_discharge_time=0x01;
 22960  24CC  0022               	movlb	2	; select bank2
 22961  24CD  01C9               	clrf	_open_discharge_time^(0+256)
 22962  24CE  0AC9               	incf	_open_discharge_time^(0+256),f
 22963                           
 22964                           ;task.c: 1169: (LATCbits.LATC0 = 0x01);
 22965  24CF  140E               	bsf	14,0	;volatile
 22966                           
 22967                           ;task.c: 1171: Enable_Bost_Pwm2();
 22968  24D0  31A9  21E1  31A1   	fcall	_Enable_Bost_Pwm2
 22969                           
 22970                           ;task.c: 1173: }
 22971  24D3  2CE7               	goto	l23632
 22972  24D4                     l23626:	
 22973                           
 22974                           ;task.c: 1174: else if((battery_voltage_value<=dianchi_qianya_huifu)&&(discharge2_index=
      +                          =0x01))
 22975  24D4  3198  20A4  31A1   	fcall	PL52	;call to abstracted procedure
 22976  24D7  31B4  2461  31A1   	fcall	___lwtoft
 22977  24DA  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 22978  24DD  31B4  2472  31A1   	fcall	___ftge
 22979  24E0  1C03               	btfss	3,0
 22980  24E1  2CE7               	goto	l23632
 22981                           
 22982                           ;task.c: 1175: {
 22983                           ;task.c: 1176: discharge_led_status=0x00;
 22984  24E2  0021               	movlb	1	; select bank1
 22985  24E3  0B38               	decfsz	_discharge2_index^(0+128),w
 22986  24E4  2CE7               	goto	l23632
 22987                           
 22988                           ;task.c: 1178: open_discharge_time=0x00;
 22989  24E5  0022               	movlb	2	; select bank2
 22990  24E6  01C9               	clrf	_open_discharge_time^(0+256)
 22991  24E7                     l23632:	
 22992                           
 22993                           ;task.c: 1179: }
 22994                           ;task.c: 1182: if((battery_voltage_value>=dianchi_qianya_baohu)&&(discharge2_index==0x02
      +                          ))
 22995  24E7  3199  2130  31A1   	fcall	PL94	;call to abstracted procedure
 22996  24EA  31B4  2461  31A1   	fcall	___lwtoft
 22997  24ED  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 22998  24F0  3198  20E7  31A1   	fcall	PL70	;call to abstracted procedure
 22999  24F3  31B4  2472  31A1   	fcall	___ftge
 23000  24F6  1C03               	btfss	3,0
 23001  24F7  2FD1               	goto	l23858
 23002  24F8  0021               	movlb	1	; select bank1
 23003  24F9  0838               	movf	_discharge2_index^(0+128),w
 23004  24FA  3A02               	xorlw	2
 23005  24FB  1D03               	skipz
 23006  24FC  2FD1               	goto	l23858
 23007                           
 23008                           ;task.c: 1183: {
 23009                           ;task.c: 1185: if((discharge_current2_value<=discharge_i_limit)&&(discharge2_index==0x02
      +                          ))
 23010  24FD  0023               	movlb	3	; select bank3
 23011  24FE  3199  2124  31A1   	fcall	PL88	;call to abstracted procedure
 23012  2501  3186  26D6  31A1   	fcall	PL196	;call to abstracted procedure
 23013  2504  31B4  2461  31A1   	fcall	___lwtoft
 23014  2507  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 23015  250A  31B4  2472  31A1   	fcall	___ftge
 23016  250D  1C03               	btfss	3,0
 23017  250E  2FA6               	goto	l23846
 23018  250F  0021               	movlb	1	; select bank1
 23019  2510  0838               	movf	_discharge2_index^(0+128),w
 23020  2511  3A02               	xorlw	2
 23021  2512  1D03               	skipz
 23022  2513  2FA6               	goto	l23846
 23023                           
 23024                           ;task.c: 1186: {
 23025                           ;task.c: 1189: t1=step_01_time_limit;
 23026  2514  0852               	movf	_step_01_time_limit^(0+128),w
 23027                           
 23028                           ;task.c: 1190: t2=step_01_time_limit+step_02_time_limit;
 23029                           
 23030                           ;task.c: 1191: t3=step_01_time_limit+step_02_time_limit+step_03_time_limit;
 23031                           
 23032                           ;task.c: 1192: t4=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_
      +                          limit;
 23033                           
 23034                           ;task.c: 1193: t5=step_01_time_limit+step_02_time_limit+step_03_time_limit+step_04_time_
      +                          limit+step_05_time_limit;
 23035                           
 23036                           ;task.c: 1195: if((ho_cnt<t1) && (Adjust_Pout_Flag<=0x01))
 23037  2515  3198  20C6  31A1   	fcall	PL62	;call to abstracted procedure
 23038  2518  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23039  251B  1803               	skipnc
 23040  251C  2D24               	goto	l23654
 23041  251D  3002               	movlw	2
 23042  251E  026A               	subwf	_Adjust_Pout_Flag,w
 23043  251F  1803               	skipnc
 23044  2520  2D24               	goto	l23654
 23045                           
 23046                           ;task.c: 1196: {
 23047                           ;task.c: 1197: Adjust_Pout_Flag=0x01;
 23048  2521  01EA               	clrf	_Adjust_Pout_Flag
 23049  2522  0AEA               	incf	_Adjust_Pout_Flag,f
 23050                           
 23051                           ;task.c: 1198: }
 23052  2523  2D76               	goto	l23688
 23053  2524                     l23654:	
 23054                           
 23055                           ;task.c: 1199: else if((ho_cnt>=t1) && (ho_cnt<t2) && (Adjust_Pout_Flag<=0x02))
 23056  2524  0021               	movlb	1	; select bank1
 23057  2525  0841               	movf	_t1^(0+128),w
 23058  2526  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23059  2529  1C03               	skipc
 23060  252A  2D38               	goto	l23662
 23061  252B  0021               	movlb	1	; select bank1
 23062  252C  0842               	movf	_t2^(0+128),w
 23063  252D  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23064  2530  1803               	skipnc
 23065  2531  2D38               	goto	l23662
 23066  2532  3003               	movlw	3
 23067  2533  026A               	subwf	_Adjust_Pout_Flag,w
 23068  2534  1803               	skipnc
 23069  2535  2D38               	goto	l23662
 23070                           
 23071                           ;task.c: 1200: {
 23072                           ;task.c: 1201: Adjust_Pout_Flag=0x02;
 23073  2536  3002               	movlw	2
 23074  2537  2D73               	goto	L32
 23075  2538                     l23662:	
 23076                           ;task.c: 1202: }
 23077                           
 23078                           
 23079                           ;task.c: 1203: else if((ho_cnt>=t2) && (ho_cnt<t3) && (Adjust_Pout_Flag<=0x03))
 23080  2538  0021               	movlb	1	; select bank1
 23081  2539  0842               	movf	_t2^(0+128),w
 23082  253A  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23083  253D  1C03               	skipc
 23084  253E  2D4C               	goto	l23670
 23085  253F  0021               	movlb	1	; select bank1
 23086  2540  0843               	movf	_t3^(0+128),w
 23087  2541  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23088  2544  1803               	skipnc
 23089  2545  2D4C               	goto	l23670
 23090  2546  3004               	movlw	4
 23091  2547  026A               	subwf	_Adjust_Pout_Flag,w
 23092  2548  1803               	skipnc
 23093  2549  2D4C               	goto	l23670
 23094                           
 23095                           ;task.c: 1204: {
 23096                           ;task.c: 1205: Adjust_Pout_Flag=0x03;
 23097  254A  3003               	movlw	3
 23098  254B  2D73               	goto	L32
 23099  254C                     l23670:	
 23100                           ;task.c: 1206: }
 23101                           
 23102                           
 23103                           ;task.c: 1207: else if((ho_cnt>=t3) && (ho_cnt<t4) && (Adjust_Pout_Flag<=0x04))
 23104  254C  0021               	movlb	1	; select bank1
 23105  254D  0843               	movf	_t3^(0+128),w
 23106  254E  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23107  2551  1C03               	skipc
 23108  2552  2D60               	goto	l23678
 23109  2553  0021               	movlb	1	; select bank1
 23110  2554  0844               	movf	_t4^(0+128),w
 23111  2555  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23112  2558  1803               	skipnc
 23113  2559  2D60               	goto	l23678
 23114  255A  3005               	movlw	5
 23115  255B  026A               	subwf	_Adjust_Pout_Flag,w
 23116  255C  1803               	skipnc
 23117  255D  2D60               	goto	l23678
 23118                           
 23119                           ;task.c: 1208: {
 23120                           ;task.c: 1209: Adjust_Pout_Flag=0x04;
 23121  255E  3004               	movlw	4
 23122  255F  2D73               	goto	L32
 23123  2560                     l23678:	
 23124                           ;task.c: 1210: }
 23125                           
 23126                           
 23127                           ;task.c: 1211: else if((ho_cnt>=t4) && (ho_cnt<t5) && (Adjust_Pout_Flag<=0x05))
 23128  2560  0021               	movlb	1	; select bank1
 23129  2561  0844               	movf	_t4^(0+128),w
 23130  2562  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23131  2565  1C03               	skipc
 23132  2566  2D75               	goto	l23686
 23133  2567  0022               	movlb	2	; select bank2
 23134  2568  0852               	movf	_t5^(0+256),w
 23135  2569  3198  2062  31A1   	fcall	PL12	;call to abstracted procedure
 23136  256C  1803               	skipnc
 23137  256D  2D75               	goto	l23686
 23138  256E  3006               	movlw	6
 23139  256F  026A               	subwf	_Adjust_Pout_Flag,w
 23140  2570  1803               	skipnc
 23141  2571  2D75               	goto	l23686
 23142                           
 23143                           ;task.c: 1212: {
 23144                           ;task.c: 1213: Adjust_Pout_Flag=0x05;
 23145  2572  3005               	movlw	5
 23146  2573                     L32:	
 23147  2573  00EA               	movwf	_Adjust_Pout_Flag
 23148                           
 23149                           ;task.c: 1214: }
 23150  2574  2D76               	goto	l23688
 23151  2575                     l23686:	
 23152                           
 23153                           ;task.c: 1215: else
 23154                           ;task.c: 1216: {
 23155                           ;task.c: 1217: Adjust_Pout_Flag=0x00;
 23156  2575  01EA               	clrf	_Adjust_Pout_Flag
 23157  2576                     l23688:	
 23158                           
 23159                           ;task.c: 1218: }
 23160                           ;task.c: 1221: if( ((load_cc_I/100)*0.30*step_05_load_percent) > (Load2_Pmax*30/(load_vo
      +                          ltage2_value*61/1000)) )
 23161  2576  0021               	movlb	1	; select bank1
 23162  2577  3198  2057  31A1   	fcall	PL6	;call to abstracted procedure
 23163  257A  3198  2035  31A1   	fcall	PL2	;call to abstracted procedure
 23164  257D  319D  258F  31A1   	fcall	___ftdiv
 23165  2580  3197  2707  31A1   	fcall	PL48	;call to abstracted procedure
 23166  2583  318A  22AA  31A1   	fcall	___ftmul
 23167  2586  3186  26F9  31A1   	fcall	PL224	;call to abstracted procedure
 23168                           
 23169                           ;task.c: 1218: }
 23170                           ;task.c: 1221: if( ((load_cc_I/100)*0.30*step_05_load_percent) > (Load2_Pmax*30/(load_vo
      +                          ltage2_value*61/1000)) )
 23171  2589  30E8               	movlw	232
 23172  258A  0020               	movlb	0	; select bank0
 23173  258B  3186  26A1  31A1   	fcall	PL176	;call to abstracted procedure
 23174  258E  3188  207A  31A1   	fcall	___wmul
 23175  2591  3187  27B7  31A1   	fcall	PL358	;call to abstracted procedure
 23176  2594  31B1  21B3  31A1   	fcall	___lwdiv
 23177  2597  3187  27AD  31A1   	fcall	PL346	;call to abstracted procedure
 23178  259A  31B4  2461  31A1   	fcall	___lwtoft
 23179  259D  3198  20F4  31A1   	fcall	PL74	;call to abstracted procedure
 23180  25A0  30F0               	movlw	240
 23181  25A1  3186  2648  31A1   	fcall	PL152	;call to abstracted procedure
 23182  25A4  318A  22AA  31A1   	fcall	___ftmul
 23183  25A7  3199  213F  31A1   	fcall	PL104	;call to abstracted procedure
 23184  25AA  319D  258F  31A1   	fcall	___ftdiv
 23185  25AD  3187  2794  31A1   	fcall	PL320	;call to abstracted procedure
 23186  25B0  309A               	movlw	154
 23187  25B1  3199  2185  31A1   	fcall	PL138	;call to abstracted procedure
 23188  25B4  318A  22AA  31A1   	fcall	___ftmul
 23189  25B7  3187  2705  31A1   	fcall	PL228	;call to abstracted procedure
 23190  25BA  31B4  2472  31A1   	fcall	___ftge
 23191  25BD  1803               	btfsc	3,0
 23192  25BE  2DEA               	goto	l23722
 23193                           
 23194                           ;task.c: 1222: {
 23195                           ;task.c: 1223: PID_CC2_discharge.SetPoint=(Load2_Pmax*30)/(load_voltage2_value*61/1000);
 23196  25BF  30E8               	movlw	232
 23197  25C0  3186  26A1  31A1   	fcall	PL176	;call to abstracted procedure
 23198  25C3  3188  207A  31A1   	fcall	___wmul
 23199  25C6  3187  27B7  31A1   	fcall	PL358	;call to abstracted procedure
 23200  25C9  31B1  21B3  31A1   	fcall	___lwdiv
 23201  25CC  3187  27AD  31A1   	fcall	PL346	;call to abstracted procedure
 23202  25CF  31B4  2461  31A1   	fcall	___lwtoft
 23203  25D2  3198  20F4  31A1   	fcall	PL74	;call to abstracted procedure
 23204  25D5  30F0               	movlw	240
 23205  25D6  3186  2648  31A1   	fcall	PL152	;call to abstracted procedure
 23206  25D9  318A  22AA  31A1   	fcall	___ftmul
 23207  25DC  3199  213F  31A1   	fcall	PL104	;call to abstracted procedure
 23208  25DF  319D  258F  31A1   	fcall	___ftdiv
 23209  25E2  3187  270C  31A1   	fcall	PL230	;call to abstracted procedure
 23210                           
 23211                           ;task.c: 1225: limit_power_pid2_flag=0x01;
 23212  25E5  0022               	movlb	2	; select bank2
 23213  25E6  01BD               	clrf	_limit_power_pid2_flag^(0+256)
 23214  25E7  0ABD               	incf	_limit_power_pid2_flag^(0+256),f
 23215                           
 23216                           ;task.c: 1227: data_cc_var = PID_CC2_discharge.SetPoint;
 23217  25E8  0024               	movlb	4	; select bank4
 23218  25E9  2E08               	goto	L81
 23219  25EA                     l23722:	
 23220                           ;task.c: 1250: {
 23221                           ;task.c: 1251: PID_CC2_discharge.SetPoint =0;
 23222                           
 23223                           ;task.c: 1249: else if(Adjust_Pout_Flag==0x00)
 23224                           
 23225                           ;task.c: 1248: }
 23226                           
 23227                           ;task.c: 1246: {
 23228                           ;task.c: 1247: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 23229                           
 23230                           ;task.c: 1245: else if(Adjust_Pout_Flag==0x05)
 23231                           
 23232                           ;task.c: 1244: }
 23233                           
 23234                           ;task.c: 1242: {
 23235                           ;task.c: 1243: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 23236                           
 23237                           ;task.c: 1241: else if(Adjust_Pout_Flag==0x04)
 23238                           
 23239                           ;task.c: 1240: }
 23240                           
 23241                           ;task.c: 1238: {
 23242                           ;task.c: 1239: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 23243                           
 23244                           ;task.c: 1237: else if(Adjust_Pout_Flag==0x03)
 23245                           
 23246                           ;task.c: 1236: }
 23247                           
 23248                           ;task.c: 1234: {
 23249                           ;task.c: 1235: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 23250                           
 23251                           ;task.c: 1233: else if(Adjust_Pout_Flag==0x02)
 23252                           
 23253                           ;task.c: 1232: }
 23254                           
 23255                           ;task.c: 1230: {
 23256                           ;task.c: 1231: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 23257                           
 23258                           ;task.c: 1229: if(Adjust_Pout_Flag==0x01)
 23259                           
 23260                           
 23261                           ;task.c: 1255: else
 23262                           ;task.c: 1256: {
 23263                           ;task.c: 1257: PID_CC2_discharge.SetPoint=(load_cc_I/100)*0.30*step_05_load_percent;
 23264  25EA  0021               	movlb	1	; select bank1
 23265  25EB  3198  2057  31A1   	fcall	PL6	;call to abstracted procedure
 23266  25EE  3198  2035  31A1   	fcall	PL2	;call to abstracted procedure
 23267  25F1  319D  258F  31A1   	fcall	___ftdiv
 23268  25F4  3197  2707  31A1   	fcall	PL48	;call to abstracted procedure
 23269  25F7  318A  22AA  31A1   	fcall	___ftmul
 23270  25FA  3186  26F9  31A1   	fcall	PL224	;call to abstracted procedure
 23271                           
 23272                           ;task.c: 1255: else
 23273                           ;task.c: 1256: {
 23274                           ;task.c: 1257: PID_CC2_discharge.SetPoint=(load_cc_I/100)*0.30*step_05_load_percent;
 23275  25FD  309A               	movlw	154
 23276  25FE  0020               	movlb	0	; select bank0
 23277  25FF  3199  2185  31A1   	fcall	PL138	;call to abstracted procedure
 23278  2602  318A  22AA  31A1   	fcall	___ftmul
 23279  2605  3198  2098  31A1   	fcall	PL40	;call to abstracted procedure
 23280  2608                     L81:	
 23281                           
 23282                           ;task.c: 1259: data_cc_var = PID_CC2_discharge.SetPoint;
 23283  2608  0845               	movf	_PID_CC2_discharge^(0+512),w
 23284  2609  0025               	movlb	5	; select bank5
 23285  260A  00E3               	movwf	handle_ad_loop@data_cc_var^(0+640)
 23286  260B  0024               	movlb	4	; select bank4
 23287  260C  0846               	movf	(_PID_CC2_discharge+1)^(0+512),w
 23288  260D  0025               	movlb	5	; select bank5
 23289  260E  00E4               	movwf	(handle_ad_loop@data_cc_var+1)^(0+640)
 23290  260F  0024               	movlb	4	; select bank4
 23291  2610  0847               	movf	(_PID_CC2_discharge+2)^(0+512),w
 23292  2611  0025               	movlb	5	; select bank5
 23293  2612  00E5               	movwf	(handle_ad_loop@data_cc_var+2)^(0+640)
 23294                           
 23295                           ;task.c: 1261: if(Adjust_Pout_Flag==0x01)
 23296  2613  0020               	movlb	0	; select bank0
 23297  2614  0B6A               	decfsz	_Adjust_Pout_Flag,w
 23298  2615  2E1E               	goto	l23730
 23299                           
 23300                           ;task.c: 1262: {
 23301                           ;task.c: 1263: PID_CC2_discharge.SetPoint = (data_cc_var)*step_01_load_percent/100;
 23302  2616  30C8               	movlw	200
 23303  2617  3186  26B0  31A1   	fcall	PL180	;call to abstracted procedure
 23304  261A  3187  274E  31A1   	fcall	PL260	;call to abstracted procedure
 23305  261D  2E4A               	goto	L59
 23306  261E                     l23730:	
 23307                           ;task.c: 1264: }
 23308                           
 23309                           
 23310                           ;task.c: 1265: else if(Adjust_Pout_Flag==0x02)
 23311  261E  086A               	movf	_Adjust_Pout_Flag,w
 23312  261F  3A02               	xorlw	2
 23313  2620  1D03               	skipz
 23314  2621  2E2A               	goto	l23734
 23315                           
 23316                           ;task.c: 1266: {
 23317                           ;task.c: 1267: PID_CC2_discharge.SetPoint = (data_cc_var)*step_02_load_percent/100;
 23318  2622  30C8               	movlw	200
 23319  2623  3186  26B0  31A1   	fcall	PL180	;call to abstracted procedure
 23320  2626  3187  2744  31A1   	fcall	PL258	;call to abstracted procedure
 23321  2629  2E4A               	goto	L59
 23322  262A                     l23734:	
 23323                           ;task.c: 1268: }
 23324                           
 23325                           
 23326                           ;task.c: 1269: else if(Adjust_Pout_Flag==0x03)
 23327  262A  086A               	movf	_Adjust_Pout_Flag,w
 23328  262B  3A03               	xorlw	3
 23329  262C  1D03               	skipz
 23330  262D  2E36               	goto	l23738
 23331                           
 23332                           ;task.c: 1270: {
 23333                           ;task.c: 1271: PID_CC2_discharge.SetPoint = (data_cc_var)*step_03_load_percent/100;
 23334  262E  30C8               	movlw	200
 23335  262F  3186  26B0  31A1   	fcall	PL180	;call to abstracted procedure
 23336  2632  3187  273A  31A1   	fcall	PL254	;call to abstracted procedure
 23337  2635  2E4A               	goto	L59
 23338  2636                     l23738:	
 23339                           ;task.c: 1272: }
 23340                           
 23341                           
 23342                           ;task.c: 1273: else if(Adjust_Pout_Flag==0x04)
 23343  2636  086A               	movf	_Adjust_Pout_Flag,w
 23344  2637  3A04               	xorlw	4
 23345  2638  1D03               	skipz
 23346  2639  2E42               	goto	l23742
 23347                           
 23348                           ;task.c: 1274: {
 23349                           ;task.c: 1275: PID_CC2_discharge.SetPoint = (data_cc_var)*step_04_load_percent/100;
 23350  263A  30C8               	movlw	200
 23351  263B  3186  26B0  31A1   	fcall	PL180	;call to abstracted procedure
 23352  263E  3187  2730  31A1   	fcall	PL252	;call to abstracted procedure
 23353  2641  2E4A               	goto	L59
 23354  2642                     l23742:	
 23355                           ;task.c: 1276: }
 23356                           
 23357                           
 23358                           ;task.c: 1277: else if(Adjust_Pout_Flag==0x05)
 23359  2642  086A               	movf	_Adjust_Pout_Flag,w
 23360  2643  3A05               	xorlw	5
 23361  2644  1D03               	skipz
 23362  2645  2E5D               	goto	l23746
 23363                           
 23364                           ;task.c: 1278: {
 23365                           ;task.c: 1279: PID_CC2_discharge.SetPoint = (data_cc_var)*step_05_load_percent/100;
 23366  2646  30C8               	movlw	200
 23367  2647  3198  2048  31A1   	fcall	PL4	;call to abstracted procedure
 23368  264A                     L59:	
 23369  264A  0020               	movlb	0	; select bank0
 23370  264B  3199  2118  31A1   	fcall	PL86	;call to abstracted procedure
 23371  264E  0020               	movlb	0	; select bank0
 23372  264F  00B8               	movwf	___ftmul@f2+2
 23373  2650  318A  22AA  31A1   	fcall	___ftmul
 23374  2653  3199  213F  31A1   	fcall	PL104	;call to abstracted procedure
 23375  2656  319D  258F  31A1   	fcall	___ftdiv
 23376  2659  3187  270C  31A1   	fcall	PL230	;call to abstracted procedure
 23377                           
 23378                           ;task.c: 1280: }
 23379  265C  2E64               	goto	l23750
 23380  265D                     l23746:	
 23381                           
 23382                           ;task.c: 1281: else if(Adjust_Pout_Flag==0x00)
 23383  265D  08EA               	movf	_Adjust_Pout_Flag,f
 23384  265E  1D03               	skipz
 23385  265F  2E64               	goto	l23750
 23386                           
 23387                           ;task.c: 1282: {
 23388                           ;task.c: 1283: PID_CC2_discharge.SetPoint =0;
 23389  2660  0024               	movlb	4	; select bank4
 23390  2661  01C5               	clrf	_PID_CC2_discharge^(0+512)
 23391  2662  01C6               	clrf	(_PID_CC2_discharge+1)^(0+512)
 23392  2663  01C7               	clrf	(_PID_CC2_discharge+2)^(0+512)
 23393  2664                     l23750:	
 23394                           
 23395                           ;task.c: 1284: }
 23396                           ;task.c: 1286: }
 23397                           ;task.c: 1288: if(voltage_adjust_index==0x01)
 23398  2664  0021               	movlb	1	; select bank1
 23399  2665  0B5C               	decfsz	_voltage_adjust_index^(0+128),w
 23400  2666  2E6B               	goto	l23754
 23401                           
 23402                           ;task.c: 1289: {
 23403                           ;task.c: 1290: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*1.0;
 23404  2667  0020               	movlb	0	; select bank0
 23405  2668  3080               	movlw	128
 23406  2669  01B3               	clrf	___ftmul@f1
 23407  266A  2E72               	goto	L71
 23408  266B                     l23754:	
 23409                           ;task.c: 1291: }
 23410                           
 23411                           
 23412                           ;task.c: 1292: else if(voltage_adjust_index==0x02)
 23413  266B  085C               	movf	_voltage_adjust_index^(0+128),w
 23414  266C  3A02               	xorlw	2
 23415  266D  1D03               	skipz
 23416  266E  2E75               	goto	l23758
 23417                           
 23418                           ;task.c: 1293: {
 23419                           ;task.c: 1294: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.70;
 23420  266F  3033               	movlw	51
 23421  2670  0020               	movlb	0	; select bank0
 23422  2671  00B3               	movwf	___ftmul@f1
 23423  2672                     L71:	
 23424  2672  00B4               	movwf	___ftmul@f1+1
 23425  2673  303F               	movlw	63
 23426  2674  2E99               	goto	L56
 23427  2675                     l23758:	
 23428                           ;task.c: 1295: }
 23429                           
 23430                           
 23431                           ;task.c: 1296: else if(voltage_adjust_index==0x03)
 23432  2675  085C               	movf	_voltage_adjust_index^(0+128),w
 23433  2676  3A03               	xorlw	3
 23434  2677  1D03               	skipz
 23435  2678  2E7E               	goto	l23762
 23436                           
 23437                           ;task.c: 1297: {
 23438                           ;task.c: 1298: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.45;
 23439  2679  3066               	movlw	102
 23440  267A  0020               	movlb	0	; select bank0
 23441  267B  00B3               	movwf	___ftmul@f1
 23442  267C  30E6               	movlw	230
 23443  267D  2E8E               	goto	L63
 23444  267E                     l23762:	
 23445                           ;task.c: 1299: }
 23446                           
 23447                           
 23448                           ;task.c: 1300: else if(voltage_adjust_index==0x04)
 23449  267E  085C               	movf	_voltage_adjust_index^(0+128),w
 23450  267F  3A04               	xorlw	4
 23451  2680  1D03               	skipz
 23452  2681  2E86               	goto	l23766
 23453                           
 23454                           ;task.c: 1301: {
 23455                           ;task.c: 1302: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.25;
 23456  2682  0020               	movlb	0	; select bank0
 23457  2683  3080               	movlw	128
 23458  2684  01B3               	clrf	___ftmul@f1
 23459  2685  2E8E               	goto	L63
 23460  2686                     l23766:	
 23461                           ;task.c: 1303: }
 23462                           
 23463                           
 23464                           ;task.c: 1304: else if(voltage_adjust_index==0x05)
 23465  2686  085C               	movf	_voltage_adjust_index^(0+128),w
 23466  2687  3A05               	xorlw	5
 23467  2688  1D03               	skipz
 23468  2689  2E91               	goto	l23770
 23469                           
 23470                           ;task.c: 1305: {
 23471                           ;task.c: 1306: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.15;
 23472  268A  309A               	movlw	154
 23473  268B  0020               	movlb	0	; select bank0
 23474  268C  00B3               	movwf	___ftmul@f1
 23475  268D  3019               	movlw	25
 23476  268E                     L63:	
 23477  268E  00B4               	movwf	___ftmul@f1+1
 23478  268F  303E               	movlw	62
 23479  2690  2E99               	goto	L56
 23480  2691                     l23770:	
 23481                           ;task.c: 1307: }
 23482                           
 23483                           
 23484                           ;task.c: 1308: else if(voltage_adjust_index==0x06)
 23485  2691  085C               	movf	_voltage_adjust_index^(0+128),w
 23486  2692  3A06               	xorlw	6
 23487  2693  1D03               	skipz
 23488  2694  2EA4               	goto	l23774
 23489                           
 23490                           ;task.c: 1309: {
 23491                           ;task.c: 1310: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.05;
 23492  2695  30CD               	movlw	205
 23493  2696  3187  2763  31A1   	fcall	PL284	;call to abstracted procedure
 23494  2699                     L56:	
 23495  2699  3199  2152  31A1   	fcall	PL112	;call to abstracted procedure
 23496  269C  0020               	movlb	0	; select bank0
 23497  269D  00B8               	movwf	___ftmul@f2+2
 23498  269E  318A  22AA  31A1   	fcall	___ftmul
 23499  26A1  3198  2098  31A1   	fcall	PL40	;call to abstracted procedure
 23500  26A4                     l23774:	
 23501                           
 23502                           ;task.c: 1311: }
 23503                           ;task.c: 1313: if(mcu_temp_index==0x01)
 23504  26A4  0021               	movlb	1	; select bank1
 23505  26A5  0B3E               	decfsz	_mcu_temp_index^(0+128),w
 23506  26A6  2EAC               	goto	l23778
 23507                           
 23508                           ;task.c: 1314: {
 23509                           ;task.c: 1315: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
 23510  26A7  0020               	movlb	0	; select bank0
 23511  26A8  303F               	movlw	63
 23512  26A9  01B3               	clrf	___ftmul@f1
 23513  26AA  01B4               	clrf	___ftmul@f1+1
 23514  26AB  2EB4               	goto	L52
 23515  26AC                     l23778:	
 23516                           ;task.c: 1316: }
 23517                           
 23518                           
 23519                           ;task.c: 1317: else if(mcu_temp_index==0x02)
 23520  26AC  083E               	movf	_mcu_temp_index^(0+128),w
 23521  26AD  3A02               	xorlw	2
 23522  26AE  1D03               	skipz
 23523  26AF  2EC0               	goto	l23782
 23524                           
 23525                           ;task.c: 1318: {
 23526                           ;task.c: 1319: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.2;
 23527  26B0  30CD               	movlw	205
 23528  26B1  3187  27B2  31A1   	fcall	PL350	;call to abstracted procedure
 23529  26B4                     L52:	
 23530  26B4  3199  2152  31A1   	fcall	PL112	;call to abstracted procedure
 23531  26B7  0020               	movlb	0	; select bank0
 23532  26B8  00B8               	movwf	___ftmul@f2+2
 23533  26B9  318A  22AA  31A1   	fcall	___ftmul
 23534  26BC  3198  2098  31A1   	fcall	PL40	;call to abstracted procedure
 23535                           
 23536                           ;task.c: 1320: }
 23537  26BF  2EC8               	goto	l23786
 23538  26C0                     l23782:	
 23539                           
 23540                           ;task.c: 1321: else if(mcu_temp_index==0x03)
 23541  26C0  083E               	movf	_mcu_temp_index^(0+128),w
 23542  26C1  3A03               	xorlw	3
 23543  26C2  1D03               	skipz
 23544  26C3  2EC8               	goto	l23786
 23545                           
 23546                           ;task.c: 1322: {
 23547                           ;task.c: 1323: PID_CC2_discharge.SetPoint =0;
 23548  26C4  0024               	movlb	4	; select bank4
 23549  26C5  01C5               	clrf	_PID_CC2_discharge^(0+512)
 23550  26C6  01C6               	clrf	(_PID_CC2_discharge+1)^(0+512)
 23551  26C7  01C7               	clrf	(_PID_CC2_discharge+2)^(0+512)
 23552  26C8                     l23786:	
 23553                           
 23554                           ;task.c: 1324: }
 23555                           ;task.c: 1326: if(light2_mode==0x00 && work_mode==0x00)
 23556  26C8  0021               	movlb	1	; select bank1
 23557  26C9  08BC               	movf	_light2_mode^(0+128),f
 23558  26CA  1D03               	skipz
 23559  26CB  2ED1               	goto	l23792
 23560  26CC  08C6               	movf	_work_mode^(0+128),f
 23561  26CD  1D03               	skipz
 23562  26CE  2ED1               	goto	l23792
 23563                           
 23564                           ;task.c: 1327: {
 23565                           ;task.c: 1328: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
 23566  26CF  0020               	movlb	0	; select bank0
 23567  26D0  2EE7               	goto	L53
 23568  26D1                     l23792:	
 23569                           ;task.c: 1329: }
 23570                           
 23571                           
 23572                           ;task.c: 1330: else if(light2_mode==0x01 && work_mode==0x00)
 23573  26D1  0B3C               	decfsz	_light2_mode^(0+128),w
 23574  26D2  2EDD               	goto	l23802
 23575  26D3  08C6               	movf	_work_mode^(0+128),f
 23576  26D4  1D03               	skipz
 23577  26D5  2EDD               	goto	l23802
 23578  26D6                     L57:	
 23579                           
 23580                           ;task.c: 1331: {
 23581                           ;task.c: 1332: if(have_person1_flag==0x01 || have_person2_flag==0x01)
 23582  26D6  0339               	decf	_have_person1_flag^(0+128),w
 23583  26D7  1903               	skipnz
 23584  26D8  2EDB               	goto	l1933
 23585  26D9  0B3A               	decfsz	_have_person2_flag^(0+128),w
 23586  26DA  2EF4               	goto	l23816
 23587  26DB                     l1933:	
 23588                           
 23589                           ;task.c: 1333: {
 23590                           ;task.c: 1334: __nop();
 23591  26DB  0000               	nop
 23592                           
 23593                           ;task.c: 1335: }
 23594  26DC  2F02               	goto	l23818
 23595  26DD                     l23802:	
 23596                           ;task.c: 1336: else
 23597                           ;task.c: 1337: {
 23598                           ;task.c: 1338: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
 23599                           
 23600                           
 23601                           ;task.c: 1341: else if(light2_mode==0x02 && work_mode==0x00)
 23602  26DD  083C               	movf	_light2_mode^(0+128),w
 23603  26DE  3A02               	xorlw	2
 23604  26DF  1D03               	skipz
 23605  26E0  2F02               	goto	l23818
 23606  26E1  08C6               	movf	_work_mode^(0+128),f
 23607  26E2  1D03               	skipz
 23608  26E3  2F02               	goto	l23818
 23609                           
 23610                           ;task.c: 1342: {
 23611                           ;task.c: 1343: if(Adjust_Pout_Flag==0x01)
 23612  26E4  0020               	movlb	0	; select bank0
 23613  26E5  0B6A               	decfsz	_Adjust_Pout_Flag,w
 23614  26E6  2EEE               	goto	l23810
 23615  26E7                     L53:	
 23616                           
 23617                           ;task.c: 1344: {
 23618                           ;task.c: 1345: PID_CC2_discharge.SetPoint = PID_CC2_discharge.SetPoint*0.5;
 23619  26E7  303F               	movlw	63
 23620  26E8  01B3               	clrf	___ftmul@f1
 23621  26E9  01B4               	clrf	___ftmul@f1+1
 23622  26EA  3199  2152  31A1   	fcall	PL112	;call to abstracted procedure
 23623  26ED  2EFA               	goto	L48
 23624  26EE                     l23810:	
 23625                           ;task.c: 1346: }
 23626                           
 23627                           
 23628                           ;task.c: 1347: else if(Adjust_Pout_Flag>=0x02)
 23629  26EE  3002               	movlw	2
 23630  26EF  026A               	subwf	_Adjust_Pout_Flag,w
 23631  26F0  1C03               	skipc
 23632  26F1  2F02               	goto	l23818
 23633                           
 23634                           ;task.c: 1348: {
 23635                           ;task.c: 1349: if(have_person1_flag==0x01 || have_person2_flag==0x01)
 23636  26F2  0021               	movlb	1	; select bank1
 23637  26F3  2ED6               	goto	L57
 23638  26F4                     l23816:	
 23639                           
 23640                           ;task.c: 1353: else
 23641                           ;task.c: 1354: {
 23642                           ;task.c: 1355: PID_CC2_discharge.SetPoint = data_cc_var*0.05;
 23643  26F4  3199  21A0  31A1   	fcall	PL146	;call to abstracted procedure
 23644  26F7  3199  2118  31A1   	fcall	PL86	;call to abstracted procedure
 23645  26FA                     L48:	
 23646  26FA  0020               	movlb	0	; select bank0
 23647  26FB  00B8               	movwf	___ftmul@f2+2
 23648  26FC  318A  22AA  31A1   	fcall	___ftmul
 23649  26FF  3198  2098  31A1   	fcall	PL40	;call to abstracted procedure
 23650  2702                     l23818:	
 23651                           
 23652                           ;task.c: 1356: }
 23653                           ;task.c: 1357: }
 23654                           ;task.c: 1358: }
 23655                           ;task.c: 1360: if(led_out_ctrl==0x01 && work_mode==0x00)
 23656  2702  0021               	movlb	1	; select bank1
 23657  2703  0B3B               	decfsz	_led_out_ctrl^(0+128),w
 23658  2704  2F0C               	goto	l1944
 23659  2705  08C6               	movf	_work_mode^(0+128),f
 23660  2706  1D03               	skipz
 23661  2707  2F0C               	goto	l1944
 23662                           
 23663                           ;task.c: 1361: {
 23664                           ;task.c: 1362: PID_CC2_discharge.SetPoint = 0;
 23665  2708  0024               	movlb	4	; select bank4
 23666  2709  01C5               	clrf	_PID_CC2_discharge^(0+512)
 23667  270A  01C6               	clrf	(_PID_CC2_discharge+1)^(0+512)
 23668  270B  01C7               	clrf	(_PID_CC2_discharge+2)^(0+512)
 23669  270C                     l1944:	
 23670                           
 23671                           ;task.c: 1363: }
 23672                           ;task.c: 1365: pid_index = 0x01;
 23673  270C  0021               	movlb	1	; select bank1
 23674  270D  01BF               	clrf	_pid_index^(0+128)
 23675  270E  0ABF               	incf	_pid_index^(0+128),f
 23676                           
 23677                           ;task.c: 1367: PWM_I2=pid_calc_2(&PID_CC2_discharge,discharge_current2_value);
 23678  270F  0022               	movlb	2	; select bank2
 23679  2710  0824               	movf	(_discharge_current2_value+1)^(0+256),w
 23680  2711  0020               	movlb	0	; select bank0
 23681  2712  00D8               	movwf	pid_calc_2@NowPoint+1
 23682  2713  0022               	movlb	2	; select bank2
 23683  2714  0823               	movf	_discharge_current2_value^(0+256),w
 23684  2715  0020               	movlb	0	; select bank0
 23685  2716  00D7               	movwf	pid_calc_2@NowPoint
 23686  2717  3045               	movlw	_PID_CC2_discharge& (0+255)
 23687  2718  31AA  221E  31A1   	fcall	_pid_calc_2
 23688  271B  0857               	movf	?_pid_calc_2,w
 23689  271C  0025               	movlb	5	; select bank5
 23690  271D  00AC               	movwf	_PWM_I2^(0+640)
 23691  271E  0020               	movlb	0	; select bank0
 23692  271F  0858               	movf	?_pid_calc_2+1,w
 23693  2720  0025               	movlb	5	; select bank5
 23694  2721  00AD               	movwf	(_PWM_I2+1)^(0+640)
 23695  2722  0020               	movlb	0	; select bank0
 23696  2723  0859               	movf	?_pid_calc_2+2,w
 23697  2724  0025               	movlb	5	; select bank5
 23698  2725  00AE               	movwf	(_PWM_I2+2)^(0+640)
 23699                           
 23700                           ;task.c: 1369: PWM2 = PWM2+PWM_I2;
 23701  2726  082C               	movf	_PWM_I2^(0+640),w
 23702  2727  0020               	movlb	0	; select bank0
 23703  2728  00C2               	movwf	___ftadd@f1
 23704  2729  0025               	movlb	5	; select bank5
 23705  272A  082D               	movf	(_PWM_I2+1)^(0+640),w
 23706  272B  0020               	movlb	0	; select bank0
 23707  272C  00C3               	movwf	___ftadd@f1+1
 23708  272D  0025               	movlb	5	; select bank5
 23709  272E  082E               	movf	(_PWM_I2+2)^(0+640),w
 23710  272F  0020               	movlb	0	; select bank0
 23711  2730  00C4               	movwf	___ftadd@f1+2
 23712  2731  0023               	movlb	3	; select bank3
 23713  2732  0824               	movf	_PWM2^(0+384),w
 23714  2733  0020               	movlb	0	; select bank0
 23715  2734  00C5               	movwf	___ftadd@f2
 23716  2735  0023               	movlb	3	; select bank3
 23717  2736  0825               	movf	(_PWM2+1)^(0+384),w
 23718  2737  0020               	movlb	0	; select bank0
 23719  2738  00C6               	movwf	___ftadd@f2+1
 23720  2739  0023               	movlb	3	; select bank3
 23721  273A  0826               	movf	(_PWM2+2)^(0+384),w
 23722  273B  0020               	movlb	0	; select bank0
 23723  273C  00C7               	movwf	___ftadd@f2+2
 23724  273D  318B  230F  31A1   	fcall	___ftadd
 23725  2740  0842               	movf	?___ftadd,w
 23726  2741  0023               	movlb	3	; select bank3
 23727  2742  00A4               	movwf	_PWM2^(0+384)
 23728  2743  0020               	movlb	0	; select bank0
 23729  2744  0843               	movf	?___ftadd+1,w
 23730  2745  0023               	movlb	3	; select bank3
 23731  2746  00A5               	movwf	(_PWM2+1)^(0+384)
 23732  2747  0020               	movlb	0	; select bank0
 23733  2748  0844               	movf	?___ftadd+2,w
 23734  2749  0023               	movlb	3	; select bank3
 23735  274A  00A6               	movwf	(_PWM2+2)^(0+384)
 23736                           
 23737                           ;task.c: 1371: if( PWM2>=488)
 23738  274B  0824               	movf	_PWM2^(0+384),w
 23739  274C  0020               	movlb	0	; select bank0
 23740  274D  00D1               	movwf	___ftge@ff1
 23741  274E  0023               	movlb	3	; select bank3
 23742  274F  0825               	movf	(_PWM2+1)^(0+384),w
 23743  2750  0020               	movlb	0	; select bank0
 23744  2751  00D2               	movwf	___ftge@ff1+1
 23745  2752  0023               	movlb	3	; select bank3
 23746  2753  0826               	movf	(_PWM2+2)^(0+384),w
 23747  2754  3187  2771  31A1   	fcall	PL294	;call to abstracted procedure
 23748  2757  31B4  2472  31A1   	fcall	___ftge
 23749  275A  1C03               	btfss	3,0
 23750  275B  2F62               	goto	l23832
 23751                           
 23752                           ;task.c: 1372: {
 23753                           ;task.c: 1373: PWM2=488;
 23754  275C  0023               	movlb	3	; select bank3
 23755  275D  30F4               	movlw	244
 23756  275E  01A4               	clrf	_PWM2^(0+384)
 23757  275F  00A5               	movwf	(_PWM2+1)^(0+384)
 23758  2760  3043               	movlw	67
 23759  2761  2F7C               	goto	L49
 23760  2762                     l23832:	
 23761                           ;task.c: 1374: }
 23762                           
 23763                           
 23764                           ;task.c: 1375: else if(PWM2<=5)
 23765  2762  3187  2758  31A1   	fcall	PL268	;call to abstracted procedure
 23766  2765  00D3               	movwf	___ftge@ff1+2
 23767  2766  0023               	movlb	3	; select bank3
 23768  2767  0824               	movf	_PWM2^(0+384),w
 23769  2768  0020               	movlb	0	; select bank0
 23770  2769  00D4               	movwf	___ftge@ff2
 23771  276A  0023               	movlb	3	; select bank3
 23772  276B  0825               	movf	(_PWM2+1)^(0+384),w
 23773  276C  0020               	movlb	0	; select bank0
 23774  276D  00D5               	movwf	___ftge@ff2+1
 23775  276E  0023               	movlb	3	; select bank3
 23776  276F  0826               	movf	(_PWM2+2)^(0+384),w
 23777  2770  0020               	movlb	0	; select bank0
 23778  2771  00D6               	movwf	___ftge@ff2+2
 23779  2772  31B4  2472  31A1   	fcall	___ftge
 23780  2775  1C03               	btfss	3,0
 23781  2776  2F7D               	goto	l23836
 23782                           
 23783                           ;task.c: 1376: {
 23784                           ;task.c: 1377: PWM2=5;
 23785  2777  0023               	movlb	3	; select bank3
 23786  2778  30A0               	movlw	160
 23787  2779  01A4               	clrf	_PWM2^(0+384)
 23788  277A  00A5               	movwf	(_PWM2+1)^(0+384)
 23789  277B  3040               	movlw	64
 23790  277C                     L49:	
 23791  277C  00A6               	movwf	(_PWM2+2)^(0+384)
 23792  277D                     l23836:	
 23793                           
 23794                           ;task.c: 1378: }
 23795                           ;task.c: 1380: bost_pwm2_value = (unsigned int)PWM2;
 23796  277D  0023               	movlb	3	; select bank3
 23797  277E  0824               	movf	_PWM2^(0+384),w
 23798  277F  0020               	movlb	0	; select bank0
 23799  2780  00D1               	movwf	___fttol@f1
 23800  2781  0023               	movlb	3	; select bank3
 23801  2782  0825               	movf	(_PWM2+1)^(0+384),w
 23802  2783  0020               	movlb	0	; select bank0
 23803  2784  00D2               	movwf	___fttol@f1+1
 23804  2785  0023               	movlb	3	; select bank3
 23805  2786  0826               	movf	(_PWM2+2)^(0+384),w
 23806  2787  0020               	movlb	0	; select bank0
 23807  2788  00D3               	movwf	___fttol@f1+2
 23808  2789  319E  2600  31A1   	fcall	___fttol
 23809  278C  0852               	movf	?___fttol+1,w
 23810  278D  0021               	movlb	1	; select bank1
 23811  278E  00A6               	movwf	(_bost_pwm2_value+1)^(0+128)
 23812  278F  0020               	movlb	0	; select bank0
 23813  2790  0851               	movf	?___fttol,w
 23814  2791  0021               	movlb	1	; select bank1
 23815  2792  00A5               	movwf	_bost_pwm2_value^(0+128)
 23816                           
 23817                           ;task.c: 1382: if(PID_CC2_discharge.SetPoint==0)
 23818  2793  0024               	movlb	4	; select bank4
 23819  2794  0847               	movf	(_PID_CC2_discharge+2)^(0+512),w
 23820  2795  0446               	iorwf	(_PID_CC2_discharge+1)^(0+512),w
 23821  2796  0445               	iorwf	_PID_CC2_discharge^(0+512),w
 23822  2797  1D03               	skipz
 23823  2798  2F9C               	goto	l23842
 23824                           
 23825                           ;task.c: 1383: {
 23826                           ;task.c: 1384: bost_pwm2_value = 0;
 23827  2799  0021               	movlb	1	; select bank1
 23828  279A  01A5               	clrf	_bost_pwm2_value^(0+128)
 23829  279B  01A6               	clrf	(_bost_pwm2_value+1)^(0+128)
 23830  279C                     l23842:	
 23831                           
 23832                           ;task.c: 1385: }
 23833                           ;task.c: 1387: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 23834  279C  0021               	movlb	1	; select bank1
 23835  279D  3199  2108  31A1   	fcall	PL80	;call to abstracted procedure
 23836  27A0  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 23837                           
 23838                           ;task.c: 1389: limit_power_pid2_flag=0x00;
 23839  27A3  0022               	movlb	2	; select bank2
 23840  27A4  01BD               	clrf	_limit_power_pid2_flag^(0+256)
 23841                           
 23842                           ;task.c: 1392: }
 23843  27A5  2FCD               	goto	l23856
 23844  27A6                     l23846:	
 23845                           
 23846                           ;task.c: 1393: else if((discharge_current2_value>discharge_i_limit)&&(discharge2_index==
      +                          0x02))
 23847  27A6  0023               	movlb	3	; select bank3
 23848  27A7  3199  2124  31A1   	fcall	PL88	;call to abstracted procedure
 23849  27AA  3186  26D6  31A1   	fcall	PL196	;call to abstracted procedure
 23850  27AD  31B4  2461  31A1   	fcall	___lwtoft
 23851  27B0  3198  2085  31A1   	fcall	PL36	;call to abstracted procedure
 23852  27B3  31B4  2472  31A1   	fcall	___ftge
 23853  27B6  1803               	btfsc	3,0
 23854  27B7  2FCD               	goto	l23856
 23855  27B8  0021               	movlb	1	; select bank1
 23856  27B9  0838               	movf	_discharge2_index^(0+128),w
 23857  27BA  3A02               	xorlw	2
 23858  27BB  1D03               	skipz
 23859  27BC  2FCD               	goto	l23856
 23860                           
 23861                           ;task.c: 1394: {
 23862                           ;task.c: 1395: if(bost_pwm2_value>10)
 23863  27BD  3000               	movlw	0
 23864  27BE  0226               	subwf	(_bost_pwm2_value+1)^(0+128),w
 23865  27BF  300B               	movlw	11
 23866  27C0  1903               	skipnz
 23867  27C1  0225               	subwf	_bost_pwm2_value^(0+128),w
 23868  27C2  1C03               	skipc
 23869  27C3  2FC7               	goto	l23854
 23870                           
 23871                           ;task.c: 1396: {
 23872                           ;task.c: 1397: bost_pwm2_value = bost_pwm2_value-1;
 23873  27C4  30FF               	movlw	255
 23874  27C5  07A5               	addwf	_bost_pwm2_value^(0+128),f
 23875  27C6  3DA6               	addwfc	(_bost_pwm2_value+1)^(0+128),f
 23876  27C7                     l23854:	
 23877                           
 23878                           ;task.c: 1398: }
 23879                           ;task.c: 1400: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 23880  27C7  3199  2108  31A1   	fcall	PL80	;call to abstracted procedure
 23881  27CA  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 23882  27CD                     l23856:	
 23883                           
 23884                           ;task.c: 1401: }
 23885                           ;task.c: 1403: battery_low_time_count=0;
 23886  27CD  0023               	movlb	3	; select bank3
 23887  27CE  01AF               	clrf	_battery_low_time_count^(0+384)
 23888  27CF  01B0               	clrf	(_battery_low_time_count+1)^(0+384)
 23889                           
 23890                           ;task.c: 1405: }
 23891  27D0  2FFD               	goto	l1866
 23892  27D1                     l23858:	
 23893                           
 23894                           ;task.c: 1406: else if((battery_voltage_value<dianchi_qianya_baohu)&&(discharge2_index==
      +                          0x02))
 23895  27D1  3199  2130  31A1   	fcall	PL94	;call to abstracted procedure
 23896  27D4  31B4  2461  31A1   	fcall	___lwtoft
 23897  27D7  3198  207E  31A1   	fcall	PL34	;call to abstracted procedure
 23898  27DA  3198  20E7  31A1   	fcall	PL70	;call to abstracted procedure
 23899  27DD  31B4  2472  31A1   	fcall	___ftge
 23900  27E0  1803               	btfsc	3,0
 23901  27E1  2FCD               	goto	l23856
 23902  27E2  0021               	movlb	1	; select bank1
 23903  27E3  0838               	movf	_discharge2_index^(0+128),w
 23904  27E4  3A02               	xorlw	2
 23905  27E5  1D03               	skipz
 23906  27E6  2FCD               	goto	l23856
 23907                           
 23908                           ;task.c: 1407: {
 23909                           ;task.c: 1409: battery_low_time_count++;
 23910  27E7  0023               	movlb	3	; select bank3
 23911                           
 23912                           ;task.c: 1411: if(battery_low_time_count>1000)
 23913  27E8  3187  279B  31A1   	fcall	PL328	;call to abstracted procedure
 23914  27EB  1903               	skipnz
 23915  27EC  022F               	subwf	_battery_low_time_count^(0+384),w
 23916  27ED  1C03               	skipc
 23917  27EE  2FFD               	goto	l1866
 23918                           
 23919                           ;task.c: 1412: {
 23920                           ;task.c: 1413: discharge2_index=0x03;
 23921  27EF  3003               	movlw	3
 23922  27F0  0021               	movlb	1	; select bank1
 23923  27F1  00B8               	movwf	_discharge2_index^(0+128)
 23924                           
 23925                           ;task.c: 1415: bost_pwm2_value=2;
 23926  27F2  3002               	movlw	2
 23927                           
 23928                           ;task.c: 1417: Set_Bost_Pwm2_Duty(bost_pwm2_value);
 23929  27F3  3198  20DD  31A1   	fcall	PL64	;call to abstracted procedure
 23930  27F6  319D  253E  31A1   	fcall	_Set_Bost_Pwm2_Duty
 23931                           
 23932                           ;task.c: 1421: discharge_led_status=0x00;
 23933  27F9  0023               	movlb	3	; select bank3
 23934  27FA  01AF               	clrf	_battery_low_time_count^(0+384)
 23935  27FB  01B0               	clrf	(_battery_low_time_count+1)^(0+384)
 23936  27FC                     l1955:	
 23937                           ;task.c: 1423: while(1);
 23938                           
 23939  27FC  2FFC               	goto	l1955
 23940  27FD                     l1866:	
 23941                           
 23942                           ;task.c: 1430: }
 23943                           ;task.c: 1432: }
 23944                           ;task.c: 1434: handle_an8_process_flag=0x00;
 23945  27FD  0022               	movlb	2	; select bank2
 23946  27FE  01B1               	clrf	_handle_an8_process_flag^(0+256)
 23947  27FF  0008               	return
 23948  2800                     __end_of_handle_ad_loop:	


Data Sizes:
    Strings     0
    Constant    512
    Data        97
    BSS         458
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      76
    BANK1            80     19      80
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0      79
    BANK5            80      6      74
    BANK6            80      0      21
    BANK7            80      0      80
    BANK8            80      0      80
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 80
		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
		 -> uart1_rx_buf(BANK8[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
		 -> uart1_rx_buf(BANK8[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 
		 -> uart1_rx_buf(BANK8[80]), 

    pid_init@pp	PTR struct PID_VAR size(2) Largest target is 21
		 -> PID_CC2_discharge(BANK4[21]), PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 

    pid_calc_2@pp	PTR struct PID_VAR size(1) Largest target is 21
		 -> PID_CC2_discharge(BANK4[21]), 

    pid_calc@pp	PTR struct PID_VAR size(2) Largest target is 21
		 -> PID_CC_discharge(BANK3[21]), PID_CV_charge(BANK5[21]), PID_CC_charge(BANK6[21]), 

    crc16@puchMsg	PTR volatile unsigned char  size(2) Largest target is 80
		 -> uart1_tx_buf(BANK7[80]), uart1_rx_buf(BANK8[80]), 

    uart_send_point	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_Set_Bost_Pwm1_Duty
    _isr->i1_Set_Bost_Pwm2_Duty

Critical Paths under _main in BANK0

    _main->_scan_key_value
    _scan_key_value->_eeprom_write
    _middle_init->_auto_system
    _read_param_eeprom->___ftdiv
    _auto_system->_start_ad_convert
    _handle_uart_rx_buf->_eeprom_write
    ___lbtoft->___ftpack
    _handle_task_process->_eeprom_write
    _handle_ad_loop->_start_ad_convert
    _start_ad_convert->___lwdiv
    ___lwdiv->___wmul
    _pid_calc_2->___ftge
    _Mppt_Charge->___fttol
    _Mppt_Charge->_pid_calc
    _pid_calc->___ftge
    ___ftsub->___ftadd
    ___ftge->___ftdiv
    ___awtoft->___ftpack
    ___lwtoft->___lwdiv
    ___fttol->___ftdiv
    _application_init->___ftdiv
    _pid_init->_memset
    _Key_Menu->_eeprom_write
    _eeprom_write->___fttol
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _auto_system->_start_ad_convert
    _handle_ad_loop->_pid_calc_2
    _Mppt_Charge->_pid_calc

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_handle_ad_loop

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  631005
                           _Key_Menu
                   _application_init
                        _driver_init
                     _handle_ad_loop
                _handle_task_process
                 _handle_uart_rx_buf
                        _middle_init
                     _scan_key_value
 ---------------------------------------------------------------------------------
 (1) _scan_key_value                                       8     8      0   18123
                                             64 BANK0      8     8      0
                  _Disable_Bost_Pwm1
                  _Disable_Bost_Pwm2
                   _Disable_Buck_Pwm
                   _Enable_Bost_Pwm1
                   _Enable_Bost_Pwm2
                 _Set_Bost_Pwm1_Duty
                 _Set_Bost_Pwm2_Duty
                  _Set_Buck_Pwm_Duty
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _middle_init                                          0     0      0  102737
                        _auto_system
                  _read_param_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_param_eeprom                                    2     2      0   37610
                                             49 BANK0      2     2      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                           ___lbtoft
                             ___lmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _auto_system                                          3     3      0   65127
                                             68 BANK0      3     3      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lwtoft
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (1) _handle_uart_rx_buf                                   8     8      0   88380
                                             64 BANK0      5     5      0
                  _Disable_Bost_Pwm1
                  _Disable_Bost_Pwm2
                   _Disable_Buck_Pwm
                   _Enable_Bost_Pwm1
                   _Enable_Bost_Pwm2
                 _Set_Bost_Pwm1_Duty
                 _Set_Bost_Pwm2_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lbtoft
                             ___lmul
                           ___lwtoft
                              _crc16
                           _delay_ms
                        _eeprom_read
                       _eeprom_write
                             _memset
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _crc16                                                9     6      3    1132
                                              3 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     348
                                              3 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             5     1      4    2584
                                             11 BANK0      5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _handle_task_process                                  6     6      0   57434
                                             64 BANK0      3     3      0
                  _Disable_Bost_Pwm1
                  _Disable_Bost_Pwm2
                   _Disable_Buck_Pwm
                   _Enable_Bost_Pwm1
                   _Enable_Bost_Pwm2
                 _Set_Bost_Pwm1_Duty
                 _Set_Bost_Pwm2_Duty
                  _Set_Buck_Pwm_Duty
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           _delay_ms
                       _eeprom_write
                           _pid_init
 ---------------------------------------------------------------------------------
 (1) _handle_ad_loop                                      11    11      0  310640
                                             68 BANK0      2     2      0
                                              0 BANK5      6     6      0
                  _Disable_Bost_Pwm1
                  _Disable_Bost_Pwm2
                   _Disable_Buck_Pwm
                   _Enable_Bost_Pwm1
                   _Enable_Bost_Pwm2
                    _Enable_Buck_Pwm
                        _Mppt_Charge
                 _Set_Bost_Pwm1_Duty
                 _Set_Bost_Pwm2_Duty
                  _Set_Buck_Pwm_Duty
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                            ___lldiv
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                           _delay_ms
                           _pid_calc
                         _pid_calc_2
                   _start_ad_convert
 ---------------------------------------------------------------------------------
 (3) _start_ad_convert                                    63    61      2    2218
                                             16 BANK0     52    50      2
                                              0 BANK1     10    10      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1011
                                              9 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _pid_calc_2                                          25    22      3   58464
                                             55 BANK0      6     3      3
                                              0 BANK1     19    19      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1060
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     395
                                              3 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _Mppt_Charge                                          0     0      0  100662
                  _Set_Buck_Pwm_Duty
                            ___ftadd
                             ___ftge
                            ___fttol
                           ___lwtoft
                           _pid_calc
 ---------------------------------------------------------------------------------
 (2) _pid_calc                                            25    21      4   58762
                                             55 BANK0      7     3      4
                                              0 BANK1     18    18      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    7613
                                             46 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               6     0      6   21244
                                             49 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    5092
                                             11 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    7931
                                             16 BANK0      3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4    3796
                                             49 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _Enable_Buck_Pwm                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _driver_init                                          0     0      0       0
                           _Init_Ird
                           _init_adc
                     _init_interrupt
                           _init_key
                           _init_osc
                          _init_port
                           _init_pwm
                        _init_timer1
                         _init_uart1
 ---------------------------------------------------------------------------------
 (2) _init_uart1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Ird                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _application_init                                     3     3      0   35583
                                             49 BANK0      3     3      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           _pid_init
 ---------------------------------------------------------------------------------
 (2) _pid_init                                             2     0      2     889
                                             11 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     414
                                              3 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _Key_Menu                                             7     3      4   18108
                                             64 BANK0      5     1      4
                  _Disable_Bost_Pwm1
                  _Disable_Bost_Pwm2
                   _Disable_Buck_Pwm
                   _Enable_Bost_Pwm1
                   _Enable_Bost_Pwm2
                 _Set_Bost_Pwm1_Duty
                 _Set_Bost_Pwm2_Duty
                  _Set_Buck_Pwm_Duty
                           _delay_ms
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         2     1      1    3500
                                             62 BANK0      2     1      1
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    2292
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Set_Buck_Pwm_Duty                                    4     2      2    1997
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Set_Bost_Pwm2_Duty                                   4     2      2    5082
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Set_Bost_Pwm1_Duty                                   4     2      2    5082
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Enable_Bost_Pwm2                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Enable_Bost_Pwm1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Buck_Pwm                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Bost_Pwm2                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Disable_Bost_Pwm1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6   15823
                                             19 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6   11905
                                             34 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    6932
                                             34 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2553
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2553
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 12    12      0    1082
                                              4 COMMON     8     8      0
                                              0 BANK0      3     3      0
                i1_Disable_Bost_Pwm1
                i1_Disable_Bost_Pwm2
               i1_Set_Bost_Pwm1_Duty
               i1_Set_Bost_Pwm2_Duty
 ---------------------------------------------------------------------------------
 (8) i1_Set_Bost_Pwm2_Duty                                 4     2      2     485
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_Set_Bost_Pwm1_Duty                                 4     2      2     485
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) i1_Disable_Bost_Pwm2                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_Disable_Bost_Pwm1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Key_Menu
     _Disable_Bost_Pwm1
     _Disable_Bost_Pwm2
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm1
     _Enable_Bost_Pwm2
     _Set_Bost_Pwm1_Duty
     _Set_Bost_Pwm2_Duty
     _Set_Buck_Pwm_Duty
     _delay_ms
     _eeprom_write
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
   _application_init
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _pid_init
       _memset
   _driver_init
     _Init_Ird
     _init_adc
     _init_interrupt
     _init_key
     _init_osc
     _init_port
     _init_pwm
     _init_timer1
     _init_uart1
   _handle_ad_loop
     _Disable_Bost_Pwm1
     _Disable_Bost_Pwm2
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm1
     _Enable_Bost_Pwm2
     _Enable_Buck_Pwm
     _Mppt_Charge
       _Set_Buck_Pwm_Duty
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtoft
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _pid_calc
         ___awtoft
           ___ftpack
           ___wmul (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftge
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
     _Set_Bost_Pwm1_Duty
     _Set_Bost_Pwm2_Duty
     _Set_Buck_Pwm_Duty
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lldiv
     ___lwdiv
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _delay_ms
     _pid_calc
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _pid_calc_2
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _start_ad_convert
       ___lwdiv
         ___wmul (ARG)
   _handle_task_process
     _Disable_Bost_Pwm1
     _Disable_Bost_Pwm2
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm1
     _Enable_Bost_Pwm2
     _Set_Bost_Pwm1_Duty
     _Set_Bost_Pwm2_Duty
     _Set_Buck_Pwm_Duty
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     _delay_ms
     _eeprom_write
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _pid_init
       _memset
   _handle_uart_rx_buf
     _Disable_Bost_Pwm1
     _Disable_Bost_Pwm2
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm1
     _Enable_Bost_Pwm2
     _Set_Bost_Pwm1_Duty
     _Set_Bost_Pwm2_Duty
     _Set_Buck_Pwm_Duty
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftge
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
     ___lbtoft
       ___ftpack
     ___lmul
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _crc16
     _delay_ms
     _eeprom_read
     _eeprom_write
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
     _memset
   _middle_init
     _auto_system
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftge
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lwtoft
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
       _eeprom_read
       _eeprom_write
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___fttol (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
       _start_ad_convert
         ___lwdiv
           ___wmul (ARG)
     _read_param_eeprom
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___lbtoft
         ___ftpack
       ___lmul
       _eeprom_read
   _scan_key_value
     _Disable_Bost_Pwm1
     _Disable_Bost_Pwm2
     _Disable_Buck_Pwm
     _Enable_Bost_Pwm1
     _Enable_Bost_Pwm2
     _Set_Bost_Pwm1_Duty
     _Set_Bost_Pwm2_Duty
     _Set_Buck_Pwm_Duty
     _delay_ms
     _eeprom_write
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)

 _isr (ROOT)
   i1_Disable_Bost_Pwm1
   i1_Disable_Bost_Pwm2
   i1_Set_Bost_Pwm1_Duty
   i1_Set_Bost_Pwm2_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     13      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4F      13       98.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      6      4A      15       92.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      15      17       26.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      50      19      100.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     298      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0      50      22      100.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     298      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Nov 13 15:42:33 2018

      Set_Bost_Pwm1_Duty@dduty 0023           _step_01_load_percent 0160                    __CFG_CP$OFF 0000  
                           PL2 1835                             PL4 1848                             PL6 1857  
                           PL8 31D8       __end_of_Enable_Bost_Pwm1 29E1       __end_of_Enable_Bost_Pwm2 29E6  
             ??_init_interrupt 0023                             l75 1D78                             _RD 0CA8  
                           _WR 0CA9                             _t1 00C1                             _t2 00C2  
                           _t3 00C3                             _t4 00C4                             _t5 0152  
          ___wmul@multiplicand 0025                   ___ftadd@exp1 004D                   ___ftadd@exp2 004C  
                          PL10 16ED                            PL20 2EE6                            PL12 1862  
                          PL30 0FC0                            PL22 2EF4                            PL14 186C  
                          PL40 1898                            PL32 3250                            PL24 1F17  
                          PL16 1ED6                            PL50 325E                            PL42 29E6  
                          PL34 187E                            PL26 2F02                            PL18 1F08  
                          PL60 18BC                            PL52 18A4                            PL44 16FF  
                          PL36 1885                            PL28 2F0E                            PL70 18E7  
                          PL62 18C6                            PL54 1F29                            PL46 325A  
                          PL38 188C                    __CFG_LVP$ON 0000                            PL80 1908  
                          PL72 1F3F                            PL64 18DD                            PL56 170E  
                          PL48 1707                            PL90 1715                            PL82 1F56  
                          PL74 18F4                            PL66 29FA                            PL58 18B5  
                          PL92 2F20                            PL84 1910                            PL76 18FB  
                          PL68 349E                            PL94 1930                            PL86 1918  
                          PL78 2F1A                            PL96 2F2B                            PL88 1924  
                          PL98 2F36                   ___ftadd@sign 004B                            l623 19A9  
                          l607 32E2                            l637 1AB2                            l772 288A  
                          l764 285D                            l769 2927                            l994 09DA  
                          _GIE 005F                            l999 0A10                            _RC1 0071  
                          _RA7 0067                            _PR2 001B                            _PR4 0416  
                 __CFG_CPD$OFF 0000                            _PR6 041D                            _PSA 04AB  
                          _PWM 00A0                            _b_v 0120                            _p_v 022C  
                          _isr 0004                  _rx_frame_kind 014E              _receive_bit_count 014D  
    i1Set_Bost_Pwm1_Duty@dduty 0070                   __CFG_BORV$LO 0000                            wreg 0009  
                         PL100 2F44                           PL110 1946                           PL102 1936  
                         PL200 1765                           PL120 1725                           PL112 1952  
                         PL104 193F                           PL210 178C                           PL202 3289  
                         PL130 1F76                           PL122 1F5E                           PL114 2A03  
                         PL106 34AB                           PL300 17EC                           PL220 2F64  
                         PL212 1799                           PL204 06DF                           PL140 1997  
                         PL132 196A                           PL124 1F64                           PL116 195E  
                         PL108 171B                           PL310 17F2                           PL302 2F94  
                         PL230 070C                           PL222 1F93                           PL214 06EC  
                         PL206 1772                           PL150 1F89                           PL142 2F52  
                         PL134 172C                           PL126 34C4                           PL118 34B8  
      Set_Bost_Pwm2_Duty@dduty 0023                           PL320 0794                           PL312 2FA7  
                         PL304 2F9A                           PL240 1F9F                           PL232 0718  
                         PL224 06F9                           PL216 17A6                           PL208 177F  
                         PL160 0677                           PL152 0648                           PL144 1730  
                         PL136 197D                           PL128 1F70                           PL330 0FC8  
                         PL322 1FC3                           PL314 2FAC                           PL306 2FA0  
                         PL250 34EC                           PL242 2F71                           PL234 2F6A  
                         PL226 34E0                           PL218 17B3                           PL170 1741  
                         PL162 0687                           PL154 0659                           PL146 19A0  
                         PL138 1985                           PL340 2FBA                           PL332 07A1  
                         PL324 1FCA                           PL316 1FBC                           PL308 0786  
                         PL260 074E                           PL252 0730                           PL244 17CB  
                         PL236 2A0A                           PL228 0705                           PL180 06B0  
                         PL172 34D8                           PL164 0691                           PL156 0663  
                         PL148 0637                           PL350 07B2                           PL342 0FCF  
                         PL334 07A7                           PL326 3504                           PL318 078D  
                         PL270 075C                           PL262 34F4                           PL254 073A  
                         PL246 0724                           PL238 17C0                           PL190 06C5  
                         PL182 1753                           PL174 1747                           PL166 34D0  
                         PL158 066D                           PL360 0FD5                           PL352 2FCB  
                         PL344 2FC0                           PL336 2FB3                           PL328 079B  
                         PL280 2F88                           PL272 2A0F                           PL264 34FE  
                         PL256 2F7D                           PL248 2F77                           PL192 2F56  
                         PL184 1759                           PL176 06A1                           PL168 173B  
                         PL370 2A1A                           PL362 1FCE                           PL354 2FD1  
                         PL346 07AD                           PL338 17F9                           PL290 17E4  
                         PL282 2F8E                           PL274 1FAB                           PL266 17D7  
                         PL258 0744                           PL194 06CD                           PL186 175F  
                         PL178 174D                           PL380 2FEC                           PL372 1FFC  
                         PL364 2FDC                           PL356 2FD6                           PL348 2FC6  
                         PL292 1FB5                           PL284 0763                           PL276 17DE  
                         PL268 0758                           PL196 06D6                           PL188 06B6  
                         PL382 2FF1                           PL374 2FE2                           PL366 1FD4  
                         PL358 07B7                           PL294 0771                           PL286 0768  
                         PL278 2F82                           PL198 2F5E                           PL384 2FF6  
                         PL376 2FE7                           PL368 2A15                           PL296 0779  
                         PL288 1FB0                           PL386 2FFB                           PL378 07BC  
                         PL298 0781                   ___ftdiv@cntr 004B                   ___ftdiv@sign 0050  
                         l1003 0A23                           l1129 2EC2                           l2019 1D12  
                         l1180 2C74                           l1710 0636                           l1714 2164  
                         l1723 2121                           l1717 20C9                           l1830 2284  
                         l1734 2379                           l2358 1645                           l1663 035A  
                         l2375 0F36                           l2625 1E8D                           l1841 2378  
                         l1737 21B4                           l1729 2160                           l1819 2253  
                         l1684 0465                           l2397 29BB                           l1933 26DB  
                         l1861 2462                           l2718 1E35                           l1846 2466  
                         l1678 03EC                           l1855 2423                           l1687 04A3  
                         l1944 270C                           l1849 23CB                           l1866 27FD  
                         l2659 0B87                           l1955 27FC                           l2677 1DB1  
                         l1869 24B5                           l2773 0FDF                           l1967 305C  
                         l1991 1ABA                           l1979 317A                           l1995 1AC2  
                         ?_isr 0070                           _PEIE 005E                           _RCIE 048D  
                         _RCIF 008D                           u5891 0F35                           _TMR0 0015  
                         _PWM2 01A4                           _TXIE 048C                           _WREN 0CAA  
                         _TXIF 008C                 ??_eeprom_write 005F                   __CFG_WRT$OFF 0000  
                         _main 09D4                   ___ftpack@arg 0023                   ___ftpack@exp 0026  
                 ?_driver_init 0070                           fsr0h 0005                           fsr1h 0007  
                         fsr0l 0004                           indf0 0000                           indf1 0001  
                         fsr1l 0006                           btemp 007E       handle_uart_rx_buf@crc_in 0063  
                __CFG_BOREN$ON 0000                           ltemp 007E             _uart_send_end_flag 0158  
                         start 02B1                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000      i1Set_Bost_Pwm2_Duty@dduty 0070                   ?_auto_system 0070  
                __CFG_MCLRE$ON 0000                   ___ftmul@cntr 0040          _load_short_time_count 01B3  
                 ___ftmul@sign 0041          _battery_voltage_value 0068      __size_of_application_init 007A  
                 ?_middle_init 0070              start_ad_convert@i 00E6              start_ad_convert@j 00E5  
                 ___fttol@exp1 005D                   ___fttol@lval 0059                          ??_isr 0074  
                __CFG_PLLEN$ON 0000                _an11_time_count 0231                          l20300 0FE9  
                        l22110 1A29                          l22044 1A1C                          l23100 21B5  
                        l23020 20CA                          l22118 1A36                          l23102 21B8  
                        l22302 286A                          l22310 2882                          l23120 351E  
                        l23114 350B              _temper_time_count 0153                          l22308 286C  
                        l23222 361D                          l23150 356F                          l23142 355B  
                        l23070 2161                          l23046 2122                          l22318 288E  
                        l25000 1E91                          l22264 1AA1                          l23048 2125  
                        l23072 2166                          l22520 2924                          l25010 1EAC  
                        l25002 1E95                          l22274 1E82                          l22178 1A3D  
                        l23410 2238                          l23402 221C                          l22530 2934  
                        l22450 2908                          l25004 1E9A                          l22268 1E5A  
                        l21900 3197                          l21812 3054                          l23420 2249  
                        l23316 3723                          l24132 1C45                          l22292 285A  
                        l25006 1EA3                          l21670 1D6E                          l23430 2255  
                        l23414 2240                          l23406 2224                          l23350 3793  
                        l23270 36A4                          l23246 365F                          l23318 372B  
                        l23174 35AC                          l23166 3597                          l23158 3583  
                        l23502 237B                          l24070 1BFF                          l21734 0E64  
                        l22622 29B4                          l22614 29AB                          l22518 2916  
                        l22294 2861                          l25008 1EA8                          l25040 0B32  
                        l25200 0AE5                          l21912 19AB                          l23176 35AD  
                        l21760 0F30                          l21744 0E77                          l21736 0E65  
                        l22616 29AC                          l22384 28FA                          l22296 2864  
                        l22720 0A18                          l22712 0A05                          l25106 0BB1  
                        l25050 0B48                          l25114 1DA0                          l21690 1D66  
                        l21850 3068                          l21818 3055                          l23370 37E0  
                        l23362 37C8                          l22554 294C                          l22298 2868  
                        l25044 0B39                          l25212 0AF4                          l16500 0C52  
                        l25028 0F53                          l21852 3079                          l21860 3171  
                        l23612 24B6                          l23532 23CC                          l23460 22DE  
                        l23444 226C                          l22812 0340                          l24252 1AD5  
                        l21780 32E4                          l25070 0B68                          l25062 0B56  
                        l25142 1DDA                          l21678 1D3B                          l25230 1E09  
                        l21838 3067                          l23614 24B9                          l23470 2318  
                        l23438 2266                          l23446 227A                          l23390 21F6  
                        l23382 21E3                          l23374 21D5                          l23366 37D4  
                        l23358 37BC                          l23294 36EF                          l23198 35DB  
                        l22910 04E3                          l22830 035C                          l24190 1CA7  
                        l21790 32FA                          l25080 0B7F                          l25072 0B6D  
                        l25136 1DC4                          l25208 0AEF                          l25232 1E0E  
                        l21848 324D                          l23632 24E7                          l23560 2427  
                        l23464 22F9                          l22912 04E5                          l24424 133F  
                        l24256 1016                          l21696 0C5F                          l22728 0A2B  
                        l25082 0B83                          l25074 0B71                          l25154 3481  
                        l25314 31CF                          l25306 31C0                          l21866 3172  
                        l23810 26EE                          l23802 26DD                          l23730 261E  
                        l23722 25EA                          l23626 24D4                          l23482 2343  
                        l23394 21FE                          l23386 21ED                          l23378 21DC  
                        l23474 2322                          l25068 0B64                          l25252 1E31  
                        l25332 0882                          l23484 2349                          l22932 054E  
                        l22908 04DD                          l22860 03F0                          l22828 0355  
                        l22756 02E6                          l22748 02DA                          l25094 0B9D  
                        l25174 0ABB                          l25262 1E4C                          l25158 3490  
                        l24702 2D11                          l24710 2D2E                          l25318 31D3  
                        l21886 3185                          l23742 2642                          l23734 262A  
                        l23750 2664                          l23670 254C                          l23662 2538  
                        l23654 2524                          l23582 2463                          l23558 2424  
                        l23398 2209                          l23486 234D                          l22870 0458  
                        l23910 1AF7                          l23902 1AEE                          l25088 0B92  
                        l25248 1E2A                          l24720 2D6C                          l24704 2D16  
                        l25280 07D4                          l25328 087C                          l24800 2A6C  
                        l23832 2762                          l23816 26F4                          l23584 2468  
                        l22952 05BA                          l22848 03A7                          l22776 030A  
                        l23904 1AF1                          l24560 164D                          l24376 12B5  
                        l22696 09E3                          l25178 0ACC                          l21978 1A0F  
                        l25258 1E3E                          l21898 3186                          l23842 279C  
                        l23818 2702                          l23770 2691                          l23762 267E  
                        l23754 266B                          l23746 265D                          l23738 2636  
                        l22970 05FF                          l22946 0597                          l22938 057A  
                        l22890 04A8                          l22794 0326                          l23906 1AF4  
                        l24482 14D4                          l24538 1632                          l25362 2871  
                        l25196 0AE0                          l24740 2E46                          l24716 2D5A  
                        l24708 2D28                          l25292 07F7                          l23836 277D  
                        l22972 0603                          l22876 0469                          l22892 04AA  
                        l23916 1AFC                          l24572 1655                          l24652 16CB  
                        l24670 2CBB                          l24830 2AC5                          l23854 27C7  
                        l23782 26C0                          l23766 2686                          l23758 2675  
                        l23774 26A4                          l23686 2575                          l23678 2560  
                        l23846 27A6                          l22990 2079                          l24654 16DF  
                        l24760 2E8C                          l24752 2E64                          l24736 2E33  
                        l25288 07F1                          l24824 2AAE                          l24816 2A92  
                        l24808 2A81                          l24832 2ACB                          l23856 27CD  
                        l23792 26D1                          l23688 2576                          l24496 15E5  
                        l24770 2EA8                          l24930 334F                          l24842 2B10  
                        l24826 2AB3                          l24818 2A98                          l23786 26C8  
                        l23778 26AC                          l23858 27D1                          l23882 1AC3  
                        l24756 2E74                          l24748 2E52                          l22988 2077  
                        l23892 1AD3                          l24774 2EB4                          l24766 2E9C  
                        l24694 2CF5                          l24686 2CE4                          l24678 2CCF  
                        l24918 3379                          l24870 2C04                          l24862 2BF8  
                        l24838 2AFB                          l23990 1B7B                          l23894 1AE0  
                        l23878 1ABB                          l24696 2CFB                          l24792 2A58  
                        l24954 3384                          l24882 2C3E                          l24874 2C16  
                        l24858 2BE5                          l24972 33C8                          l24956 3388  
                        l24892 2C5A                          l24990 344D                          l24878 2C26  
                        l24896 2C66                          l24888 2C4E                          l24986 3432  
                        l19900 1EC3                          l19646 0923       _uart1_receive_byte_count 00C5  
                        l19894 1EBF                          ?_main 0070                          _EEADR 0191  
              __end_of___ftadd 0BC4                          _CARRY 0018                          _ANSA0 0C60  
                        _ANSA1 0C61                          _ANSA2 0C62                          _ANSA3 0C63  
                        _ANSB2 0C6A                __end_of___ftdiv 1DF1                          _ANSB3 0C6B  
                        _ANSA5 0C65                          _ANSB4 0C6C                __end_of___lldiv 0800  
              __end_of___ftmul 0B0F                          _T1CON 0018                __end_of___ftsub 2EE6  
              __end_of___fttol 1E55                          u12405 0449                          _CRCHi 3801  
                        u11625 1D74                          u12355 03A0                          u12445 049B  
                        u11815 31FA                          u12375 03E2                          _CRCLo 3901  
                        u16155 1DD1                          u16405 31C8                          u16275 1E11  
                        _IOCIE 005B                          _IOCIF 0058                          u15725 332C  
                        u16365 07E6                          u16447 3058                          u16457 3175  
                        u15755 3359                          u14875 135B                __end_of___lwdiv 31D8  
                        i1l340 0194                          i1l344 0199                          i1l353 01E3  
                        i1l356 01E2                          _RCREG 0199                          _RCSTA 019D  
                        _TMR1H 0017                          _TMR1L 0016                          _PWM_I 0220  
                        _TXREG 019A                          _TXSTA 019E                   ?_init_timer1 0070  
          ___lmul@multiplicand 0027                 __CFG_FCMEN$OFF 0000                          _crc16 08FE  
                ___awtoft@sign 002E                          _bt_id 00DA     __end_of_Set_Bost_Pwm1_Duty 1D3E  
   __end_of_Set_Bost_Pwm2_Duty 1D6C               _Disable_Buck_Pwm 1E55   __size_of_handle_task_process 0260  
                   _Load2_Pmax 025A                  ___ftpack@sign 0027                 _charge_i_limit 01D2  
                 Key_Menu@code 0064                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          status 0003                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
                 __end_ofPL100 2F52                   __end_ofPL110 1952                   __end_ofPL102 193F  
                 __end_ofPL200 1772                   __end_ofPL120 172C                   __end_ofPL112 195E  
                 __end_ofPL104 1946                   __end_ofPL210 1799                   __end_ofPL202 3296  
                 __end_ofPL130 1F89                   __end_ofPL122 1F64                   __end_ofPL114 2A0A  
                 __end_ofPL106 34B8                   __end_ofPL300 17F2                   __end_ofPL220 2F6A  
                 __end_ofPL212 17A6                   __end_ofPL204 06EC                   __end_ofPL140 19A0  
                 __end_ofPL132 197D                   __end_ofPL124 1F70                   __end_ofPL116 196A  
                 __end_ofPL108 1725                   __end_ofPL310 17F9                   __end_ofPL302 2F9A  
                 __end_ofPL230 0718                   __end_ofPL222 1F9F                   __end_ofPL214 06F9  
                 __end_ofPL206 177F                   __end_ofPL150 1F93                   __end_ofPL142 2F56  
                 __end_ofPL134 1730                   __end_ofPL126 34D0                   __end_ofPL118 34C4  
                 __end_ofPL320 079B                   __end_ofPL312 2FAC                   __end_ofPL304 2FA0  
                 __end_ofPL240 1FAB                   __end_ofPL232 0724                   __end_ofPL224 0705  
                 __end_ofPL216 17B3                   __end_ofPL208 178C                   __end_ofPL160 0687  
                 __end_ofPL152 0659                   __end_ofPL144 173B                   __end_ofPL136 1985  
                 __end_ofPL128 1F76                   __end_ofPL330 0FCF                   __end_ofPL322 1FCA  
                 __end_ofPL314 2FB3                   __end_ofPL306 2FA7                   __end_ofPL250 34F4  
                 __end_ofPL242 2F77                   __end_ofPL234 2F71                   __end_ofPL226 34EC  
                 __end_ofPL218 17C0                   __end_ofPL170 1747                   __end_ofPL162 0691  
                 __end_ofPL154 0663                   __end_ofPL146 0637                   __end_ofPL138 1997  
                 __end_ofPL340 2FC0                   __end_ofPL332 07A7                   __end_ofPL324 1FCE  
                 __end_ofPL316 1FC3                   __end_ofPL308 078D                   __end_ofPL260 0758  
                 __end_ofPL252 073A                   __end_ofPL244 17D7                   __end_ofPL236 2A0F  
                 __end_ofPL228 070C                   __end_ofPL180 06B6                   __end_ofPL172 34E0  
                 __end_ofPL164 06A1                   __end_ofPL156 066D                   __end_ofPL148 0648  
                 __end_ofPL350 07B7                   __end_ofPL342 0FD5                   __end_ofPL334 07AD  
                 __end_ofPL326 350B                   __end_ofPL318 0794                   __end_ofPL270 0763  
                 __end_ofPL262 34FE                   __end_ofPL254 0744                   __end_ofPL246 0730  
                 __end_ofPL238 17CB                   __end_ofPL190 06CD                   __end_ofPL182 1759  
                 __end_ofPL174 174D                   __end_ofPL166 34D8                   __end_ofPL158 0677  
                 __end_ofPL360 0FDB                   __end_ofPL352 2FD1                   __end_ofPL344 2FC6  
                 __end_ofPL336 2FBA                   __end_ofPL328 07A1                   __end_ofPL280 2F8E  
                 __end_ofPL272 2A15                   __end_ofPL264 3504                   __end_ofPL256 2F82  
                 __end_ofPL248 2F7D                   __end_ofPL192 2F5E                   __end_ofPL184 175F  
                 __end_ofPL176 06B0                   __end_ofPL168 1741                   __end_ofPL370 2A1E  
                 __end_ofPL362 1FD4                   __end_ofPL354 2FD6                   __end_ofPL346 07B2  
                 __end_ofPL338 1800                   __end_ofPL290 17EC                   __end_ofPL282 2F94  
                 __end_ofPL274 1FB0                   __end_ofPL266 17DE                   __end_ofPL258 074E  
                 __end_ofPL194 06D6                   __end_ofPL186 1765                   __end_ofPL178 1753  
                 __end_ofPL380 2FF1                   __end_ofPL372 2000                   __end_ofPL364 2FE2  
                 __end_ofPL356 2FDC                   __end_ofPL348 2FCB                   __end_ofPL292 1FBC  
                 __end_ofPL284 0768                   __end_ofPL276 17E4                   __end_ofPL268 075C  
                 __end_ofPL196 06DF                   __end_ofPL188 06C5                   __end_ofPL382 2FF6  
                 __end_ofPL374 2FE7                   __end_ofPL366 1FD9                   __end_ofPL358 07BC  
                 __end_ofPL294 0779                   __end_ofPL286 0771                   __end_ofPL278 2F88  
                 __end_ofPL198 2F64                   __end_ofPL384 2FFB                   __end_ofPL376 2FEC  
                 __end_ofPL368 2A1A                   __end_ofPL296 0781                   __end_ofPL288 1FB5  
                 __end_ofPL386 3000                   __end_ofPL378 07C1                   __end_ofPL298 0786  
         i1_Set_Bost_Pwm1_Duty 1FD9           i1_Set_Bost_Pwm2_Duty 08D8                __initialization 0929  
              _mppt_time_count 02C3                   __end_of_main 0A30       _discharge_current2_value 0123  
            ??_Enable_Buck_Pwm 0023               __end_of_Key_Menu 1AB3         _battery_voltage_status 012A  
         _step_02_load_percent 0163               __end_of_Init_Ird 0BEA             start_ad_convert@ch 00DD  
                       ??_main 0068                  ___fttol@sign1 0058          start_ad_convert@ad_ch 00E4  
                       ?_crc16 0023                 _index_01_count 02B1                 _index_02_count 02B3  
               _index_03_count 02B5                 _index_04_count 02B7                 _index_05_count 02B9  
                       _ADRESH 009C                         _ADRESL 009B                         _EEDATA 0193  
                       _CCPR1L 0291                         _CCPR3L 0311                         _CCPR5L 031C  
                       _EECON1 0195                         _EECON2 0196                  ??_Mppt_Charge 005E  
               _index_06_count 02BB               __end_of___awtoft 0F65                         _ANSELA 018C  
                       _ANSELB 018D               __end_of___ftpack 1EBF               __end_of___lbtoft 0F76  
                       _IOCBF0 1CB0                         _IOCBF1 1CB1                         _IOCBF6 1CB6  
                       _IOCBF7 1CB7               __end_of___lwtoft 3472              _temperature_value 0127  
                       _OSCCON 0099                         _TMR0IE 005D                         _TMR0IF 005A  
                       _TMR0CS 04AD                         _TMR1IE 0488                         _TMR1IF 0088  
                       _TMR2IF 0089                         _TMR4IF 0099                         _TMR6IF 009B  
                       _TMR1ON 00C0                         _TMR2ON 00E2                         _TMR4ON 20BA  
                       _TMR6ON 20F2                         _PWM_I2 02AC              ?_start_ad_convert 0030  
             __end_of_delay_ms 1D8F             _handle_short1_flag 0134                         _I_prev 01AD  
        ?i1_Set_Bost_Pwm1_Duty 0070             _handle_short2_flag 0135                 __CFG_PWRTE$OFF 0000  
        ?i1_Set_Bost_Pwm2_Duty 0070                _bost_pwm1_value 00A3                _bost_pwm2_value 00A5  
         __size_of_eeprom_read 0017             ??_start_ad_convert 0032                   _CCPTMRS0bits 029E  
                 _CCPTMRS1bits 029F             _handle_uart_rx_buf 1015                         ___ftge 3472  
                  isr@time_cnt 0021                         ___lmul 0FDB                 _open_an11_time 0142  
                       ___wmul 087A                      ??___ftadd 0048                 __CFG_STVREN$ON 0000  
                    ??___ftdiv 0048                      ??___lldiv 002B                      ??___ftmul 0039  
                    ??___ftsub 0054                      ??___fttol 0055                      ??___lwdiv 002D  
                       _ho_cnt 007C                         _mi_cnt 023F                         _load_I 0226  
             __end_of_init_adc 0C09                         _load_v 0229               __end_of_init_key 0C0F  
                       _memset 1EBF               __end_of_init_osc 0C17                         _se_cnt 0243  
             __end_of_init_pwm 0FC0               __end_of_pid_calc 2ECF                         _ms_cnt 0241  
             __end_of_pid_init 1E00           __end_of_eeprom_write 29D7            ?_handle_uart_rx_buf 0070  
            _Disable_Bost_Pwm1 29D7              _Disable_Bost_Pwm2 1DF1          ___ftmul@f3_as_product 003D  
           ?_Disable_Bost_Pwm1 0070             ?_Disable_Bost_Pwm2 0070               ??_scan_key_value 0060  
          ??_Disable_Bost_Pwm1 0023            ??_Disable_Bost_Pwm2 0023               _sleep_time_count 02C9  
                 crc16@puchMsg 0023           ??_handle_uart_rx_buf 0060        __end_of__initialization 09D2  
              eeprom_read@addr 0023                     ___ftadd@f1 0042                     ___ftadd@f2 0045  
                   ___ftge@ff1 0051                     ___ftge@ff2 0054               _light_time_level 01A0  
                __end_of_CRCHi 3901                     ___ftdiv@f1 0045                     ___ftdiv@f2 0042  
                   ___ftdiv@f3 004C                  __end_of_CRCLo 3A01            __end_of_Mppt_Charge 3461  
                   ___awtoft@c 002B                     ___lbtoft@c 002F           __size_of_driver_init 0011  
                   ___ftmul@f1 0033                     ___ftmul@f2 0036                     ___ftsub@f1 0051  
                   ___ftsub@f2 004E                     ___fttol@f1 0051          Set_Buck_Pwm_Duty@duty 0023  
               __pcstackCOMMON 0070               _application_init 0A30                   __pidataBANK1 0866  
                 __pidataBANK2 08A4                   __pidataBANK3 08BA                   __pidataBANK4 088F  
                 __pidataBANK5 0000                     _adc_buffer 2370                  __end_of_crc16 0929  
         __size_of_auto_system 0076             _mcu_t00_time_count 01B8           _step_03_load_percent 0166  
    __end_of_Disable_Bost_Pwm1 29DC      __end_of_Disable_Bost_Pwm2 1DF6                   _charge_index 00B5  
            ?_Enable_Bost_Pwm1 0070              ?_Enable_Bost_Pwm2 0070           __size_of_middle_init 0004  
                   __end_ofPL2 1848                     __end_ofPL4 1857                     __end_ofPL6 1862  
                   __end_ofPL8 3250            _shuchu_open_voltage 01ED                     ___lwtoft@c 0030  
           ??_Enable_Bost_Pwm1 0023             ??_Enable_Bost_Pwm2 0023           _uart_send_byte_count 0156  
               _OPTION_REGbits 0095              eeprom_write@value 005E                        ??_crc16 0026  
         __size_of_init_timer1 000D             _mcu_t01_time_count 01B9                     __pbssBANK0 0068  
                   __pbssBANK1 00A0                     __pbssBANK2 0120                     __pbssBANK3 01A0  
                   __pbssBANK4 0220                     __pbssBANK5 02A0                     __pbssBANK6 0320  
                   __pbssBANK7 03A0                     __pbssBANK8 0420                      ?_Key_Menu 0060  
              _pid_calc_2$3194 00E0                _pid_calc_2$3195 00E3                  _pid_calc$3192 00E0  
                _pid_calc$3193 00E3                      ?_Init_Ird 0070                __CFG_VCAPEN$OFF 0000  
       ??i1_Set_Bost_Pwm1_Duty 0072         ??i1_Set_Bost_Pwm2_Duty 0072             __size_of_init_port 0019  
                   __pmaintext 09D4                        ?___ftge 0051                        ?___lmul 0023  
             _night_time_count 02A4                        ?___wmul 0023       __end_of_Disable_Buck_Pwm 1E5A  
          _handle_task_process 1AB3                  _PID_CC_charge 0320             _mcu_t02_time_count 01BA  
                   __pintentry 0004        _handle_an0_process_flag 012B                        _BAUDCON 019F  
                      ?_memset 0023                 ___lmul@product 002B                      ?___awtoft 002B  
                    ?___ftpack 0023                      ?___lbtoft 002B   __size_ofi1_Disable_Bost_Pwm1 0005  
 __size_ofi1_Disable_Bost_Pwm2 0005        __size_of_handle_ad_loop 254D                      ?___lwtoft 0030  
                   _key1_index 013B                        i1l20400 002C                        i1l20408 0038  
                      i1l20424 0050                        i1l20432 0059                        i1l20610 01AB  
                      i1l20602 01A1                        i1l20450 0081                        i1l20364 1FF9  
                      i1l20604 01A3                        i1l20508 00EF                        i1l20444 0074  
                      i1l20374 08F8                        i1l20702 0248                        i1l20550 0140  
                      i1l20518 0102                        i1l20438 0067                        i1l20630 01C6  
                      i1l20616 01B3                        i1l20560 0154                        i1l20528 0115  
                      i1l20456 008E                        i1l20714 027D                        i1l20642 01DA  
                      i1l20626 01C1                        i1l20570 0164                        i1l20538 0128  
                      i1l20458 0090                        i1l20724 0297                        i1l20580 0174  
                      i1l20468 00A3                        i1l20590 0184                        i1l20558 0151  
                      i1l20478 00B6                        i1l20680 0222                        i1l20488 00C9  
                      i1l20658 0209                        i1l20498 00DC                        i1l20692 0232  
                      i1l20676 027A                        _SP1BRGH 019C                        _SP1BRGL 019B  
                    ?_delay_ms 0023                     _bt_volt_00 0260                     _bt_volt_20 0263  
                   _bt_volt_40 0266                     _bt_volt_60 0269                     _bt_volt_80 026C  
         ?_handle_task_process 0070             _mcu_t03_time_count 01BB                     __stringtab 3800  
                  _Mppt_Charge 330C                     ??_Key_Menu 0064                  _PID_CV_charge 02CB  
         _handle_scan_key_flag 0133                     ??_Init_Ird 0023                _Enable_Buck_Pwm 0840  
       scan_key_value@key_temp 0066                      ?_init_adc 0070                _uart_send_point 0159  
                    ?_init_key 0070                      ?_init_osc 0070                      ?_init_pwm 0070  
                    ?_pid_calc 0057                      ?_pid_init 002B          _over_load1_time_count 02C5  
           _Set_Bost_Pwm1_Duty 1D13             _Set_Bost_Pwm2_Duty 1D3E        _have_person1_time_count 0136  
        __size_of_eeprom_write 001D                __size_of___ftge 002C                __size_of___lmul 0025  
                      ___ftadd 0B0F                        ___ftdiv 1D8F                        ___lldiv 07C1  
              __size_of___wmul 0015                        ___ftmul 0AAA                        ___ftsub 2ECF  
                      ___fttol 1E00                     _light_mode 00BD                        ___lwdiv 31B3  
                   _light_time 00C7                     _ird_status 013A     __size_of_Disable_Bost_Pwm1 0005  
   __size_of_Disable_Bost_Pwm2 0005           _step_04_load_percent 0169            ?_Set_Bost_Pwm1_Duty 0023  
               _day_time_count 02A0            ?_Set_Bost_Pwm2_Duty 0023                     _init_uart1 0C3D  
                   ??___awtoft 002E                     ??___ftpack 0028                     ??___lbtoft 002F  
              __size_of_memset 0017                 _an0_time_count 022F                     _pid_calc_2 2A1E  
                      __ptext1 2845                        __ptext2 0C4E                        __ptext3 0C5F  
                      __ptext4 3296                        __ptext5 1015                        __ptext6 0F32  
                      __ptext7 08FE                        __ptext8 0FDB                        __ptext9 0F65  
                   ??___lwtoft 0033                      _T2CONbits 001C                   __size_of_isr 02AD  
            __end_of_init_port 0C30        _handle_an8_process_flag 0131                      _T4CONbits 0417  
        _load2_open_time_count 02BF          _over_load2_time_count 02C7                      _IOCBFbits 0396  
                   ??_delay_ms 0025          _uart_send_delay_timer 0157                      _IOCBNbits 0395  
                    _T6CONbits 041E                      _IOCBPbits 0394        _have_person2_time_count 0137  
      __size_of_init_interrupt 000D          ??_handle_task_process 0060                        clrloop0 085B  
                      _volt_id 00DB           end_of_initialization 09D2           ??_Set_Bost_Pwm1_Duty 0025  
         ??_Set_Bost_Pwm2_Duty 0025                _key1_time_count 013C                 _an1_time_count 0233  
            _light_on_pv_level 01EA                        init_ram 084E                        memset@c 0025  
                   ??_init_adc 0023                        memset@n 0027                        memset@p 0029  
                 _eeprom_write 29BA                     ??_init_key 0023                     ??_init_osc 0023  
                      initloop 084F                     ??_init_pwm 0023                      _KEY_VALUE 016E  
                   ??_pid_calc 005B                      _KEY_STATE 0129                     ??_pid_init 002D  
              ___lldiv@divisor 0023        _handle_uart_rx_buf$3198 0060                ___lldiv@counter 002F  
                 pid_calc_2@dk 00E6                   pid_calc_2@pp 00EC                      _RCSTAbits 019D  
                      psplit$0 2A005A                        psplit$1 2A005B                        psplit$2 2A005C  
                      psplit$3 5C005D                        psplit$4 5D005E                   __pstringtext 3800  
                crc16@uchCRCHi 002A                  crc16@uchCRCLo 002B        _handle_an1_process_flag 012D  
             pid_calc@NowPoint 0059                 _an2_time_count 0235                      _PORTBbits 000D  
                    _PORTCbits 000E      __size_of_start_ad_convert 017B           _limit_power_pid_flag 013E  
             pid_calc_2@dError 00DD           _voltage_adjust_index 00DC               __CFG_FOSC$INTOSC 0000  
                    _TRISAbits 008C                      _TRISBbits 008D                      _TRISCbits 008E  
      __end_of_Enable_Buck_Pwm 0844              _have_person1_flag 00B9       __end_of_application_init 0AAA  
            _have_person2_flag 00BA            _scan_key_time_count 014F                 _an3_time_count 0237  
                 _led_out_ctrl 00BB                    _CCP1CONbits 0293                    ___ftdiv@exp 004F  
                ??_eeprom_read 0023                      _TXSTAbits 019E                    _CCP3CONbits 0313  
                  _CCP5CONbits 031E                    ___ftmul@exp 003C                 __end_of___ftge 349E  
               __end_of___lmul 1000                 __end_of___wmul 088F                  delay_ms@count 0023  
                  ?_init_uart1 0070           _step_05_load_percent 00CF              _read_param_eeprom 0C5F  
                  ?_pid_calc_2 0057                 _handle_ad_loop 02B3                 _an4_time_count 0239  
               __end_of_memset 1ED6                  _system_status 00C0             ?_read_param_eeprom 0070  
         _charge_current_value 00A9           _dianchi_qianya_baohu 01DB                    __end_ofPL10 16FF  
                  __end_ofPL20 2EF4                    __end_ofPL12 186C                    __end_ofPL30 0FC8  
                  __end_ofPL22 2F02                    __end_ofPL14 187E                    __end_ofPL40 18A4  
                  __end_ofPL32 325A                    __end_ofPL24 1F29                    __end_ofPL16 1F08  
                  __end_ofPL50 3289                    __end_ofPL42 29FA                    __end_ofPL34 1885  
                  __end_ofPL26 2F0E                    __end_ofPL18 1F17                    __end_ofPL60 18C6  
                  __end_ofPL52 18B5                    __end_ofPL44 1707                    __end_ofPL36 188C  
                  __end_ofPL28 2F1A                    __end_ofPL70 18F4                    __end_ofPL62 18DD  
                  __end_ofPL54 1F3F                    __end_ofPL46 325E                    __end_ofPL38 1898  
                  __end_ofPL80 1910                    __end_ofPL72 1F56                    __end_ofPL64 18E7  
                  __end_ofPL56 1715                    __end_ofPL48 170E                    __end_ofPL90 171B  
                  __end_ofPL82 1F5E                    __end_ofPL74 18FB                    __end_ofPL66 2A03  
                  __end_ofPL58 18BC                    __end_ofPL92 2F2B                    __end_ofPL84 1918  
                  __end_ofPL76 1908                    __end_ofPL68 34AB                    __end_ofPL94 1936  
                  __end_ofPL86 1924                    __end_ofPL78 2F20                    __end_ofPL96 2F36  
                  __end_ofPL88 1930                    __end_ofPL98 2F44            start_initialization 0929  
         _dianchi_qianya_huifu 01DE        _handle_an9_process_flag 0132                      _Load_Pmax 025D  
            _Set_Buck_Pwm_Duty 1E5A                     isr@r1_data 0020                    __end_of_isr 02B1  
          ??_read_param_eeprom 0051             ?_Set_Buck_Pwm_Duty 0023              _discharge_i_baohu 01E1  
    __size_of_Enable_Bost_Pwm1 0005      __size_of_Enable_Bost_Pwm2 0005              _discharge_i_limit 01E4  
          _handle_ad_loop$3196 02E0           start_ad_convert@ad_h 00DE           start_ad_convert@ad_l 00E0  
                ??_driver_init 0023    __size_of_handle_uart_rx_buf 06D8            i1_Disable_Bost_Pwm1 0844  
          i1_Disable_Bost_Pwm2 0849           start_ad_convert@temp 00E2              __size_of_Key_Menu 010D  
          ??_Set_Buck_Pwm_Duty 0025              __size_of_Init_Ird 0015                  ??_auto_system 0064  
      _discharge_current_value 00AD                  ??_middle_init 0067                       ??___ftge 0057  
                     ??___lmul 002B                       ??___wmul 0027            __end_of_eeprom_read 0F49  
    __end_of_read_param_eeprom 0F32         __end_of_handle_ad_loop 2800              ?_Disable_Buck_Pwm 0070  
          _load_voltage2_value 0125                    __pdataBANK1 00C9                    __pdataBANK2 015A  
                  __pdataBANK3 01D2                    __pdataBANK4 025A                    __pdataBANK5 02E6  
            Key_Menu@key_value 0060                       ??_memset 0029        _handle_an2_process_flag 012E  
                _open_an0_time 0141                  _open_an1_time 0143                     pid_calc@dk 00E6  
                _open_an2_time 0144             ??_Disable_Buck_Pwm 0023                     pid_calc@pp 0057  
                  crc16@uIndex 0026           ?i1_Disable_Bost_Pwm1 0070           ?i1_Disable_Bost_Pwm2 0070  
                _open_an3_time 0145                  _open_an4_time 0146                  _open_an8_time 0147  
                _open_an9_time 0148      __end_of_Set_Buck_Pwm_Duty 1E85              __size_of___awtoft 001C  
            __size_of___ftpack 003A              __size_of___lbtoft 0011                    __pbssBIGRAM 2370  
               _mcu_temp_index 00BE                  ??_init_timer1 0023          _application_init$3191 0051  
                  __pbssCOMMON 007C                      ___latbits 0003              _pv_voltage_status 014C  
            __size_of___lwtoft 0011                  __pcstackBANK0 0020                  __pcstackBANK1 00DD  
                __pcstackBANK5 02E0                     pid_init@pp 002B                 _init_interrupt 0C52  
             ?_Enable_Buck_Pwm 0070       _handle_an11_process_flag 012C              __size_of_delay_ms 0023  
                 ?_Mppt_Charge 0070               eeprom_write@addr 005F            __size_of_init_uart1 0011  
          __size_of_pid_calc_2 0263              __size_of_init_adc 001F        __size_of_scan_key_value 0175  
            __size_of_init_key 0006              _PID_CC2_discharge 0245  __size_ofi1_Set_Bost_Pwm1_Duty 0023  
            __size_of_init_osc 0008              __size_of_init_pwm 004A  __size_ofi1_Set_Bost_Pwm2_Duty 0026  
            __size_of_pid_calc 024E               ___lwdiv@dividend 002B              __size_of_pid_init 000A  
            _system_check_time 0151            __end_of_driver_init 0BD5                       ?___ftadd 0042  
                     ?___ftdiv 0042                       ?___lldiv 0023                       ?___ftmul 0033  
                     ?___ftsub 004E                       ?___fttol 0051                ?_handle_ad_loop 0070  
                     ?___lwdiv 0029            __end_of_auto_system 330C          ??i1_Disable_Bost_Pwm1 0070  
        ??i1_Disable_Bost_Pwm2 0070                 _an8_time_count 023B            __end_of_middle_init 0C52  
             _start_ad_convert 3038         __end_of_init_interrupt 0C5F               __CFG_WDTE$NSLEEP 0000  
                    _load_cc_I 00CC                 __size_of_crc16 002B               ___lwdiv@quotient 002E  
                   pnum$text11 002A                      _mcu_value 00B1                      _init_port 0C17  
                    _pid_index 00BF            __end_of_init_timer1 0C3D                 ___wmul@product 0027  
                     _LATAbits 010C                       _LATCbits 010E                 _an9_time_count 023D  
              pid_calc@PWM_var 00E9                      delay_ms@i 0025                      delay_ms@j 0027  
                    clear_ram0 085A                    _eeprom_read 0F32                       _PIE1bits 0091  
              _open_sleep_time 014A                      _nop_index 0140                _sys_temper_flag 016F  
                     _PIR1bits 0011               _discharge1_index 00B7               _discharge2_index 00B8  
   __size_of_read_param_eeprom 02D3                pid_calc_2@Error 00ED               _PID_CC_discharge 01BD  
          _open_discharge_time 0149        _handle_an3_process_flag 012F                     _ADCON0bits 009D  
                   _ADCON1bits 009E              ___wmul@multiplier 0023    __end_of_handle_task_process 1D13  
   __size_of_Set_Buck_Pwm_Duty 002B                ?_init_interrupt 0070             _light_off_pv_level 01E7  
          _dianchi_guoya_baohu 015A            _cv_level_time_count 02AF                      _work_mode 00C6  
          _dianchi_guoya_huifu 01D8              ?_application_init 0070              ___lmul@multiplier 0023  
                   ?_init_port 0070               _Enable_Bost_Pwm1 29DC               _Enable_Bost_Pwm2 29E1  
                     _Key_Menu 19A6    __size_of_Set_Bost_Pwm1_Duty 002B    __size_of_Set_Bost_Pwm2_Duty 002E  
           ??_application_init 0051                       _Init_Ird 0BD5                    _driver_init 0BC4  
                  _light2_mode 00BC        read_param_eeprom@byte_h 0051        read_param_eeprom@byte_l 0052  
                _device_status 00B6                    _auto_system 3296             _uart1_receive_flag 0154  
                   _APFCONbits 011D                    _middle_init 0C4E               __size_of___ftadd 00B5  
             __size_of___ftdiv 0062               __size_of___lldiv 003F               __size_of___ftmul 0065  
             __size_of___ftsub 0017               __size_of___fttol 0055                   ??_init_uart1 0023  
                 _uart1_rx_buf 0420               _pv_voltage_value 00B3               __size_of___lwdiv 0025  
                     _bt_00_hv 01A7                   _uart1_tx_buf 03A0                       _bt_00_lv 01AA  
                 ??_pid_calc_2 005A                       ___awtoft 0F49                       ___ftpack 1E85  
                     ___lbtoft 0F65             __end_of__stringtab 3801             _step_01_time_limit 00D2  
                     ___lwtoft 3461         _over_temper_time_count 01BC                       _charge_I 0223  
                  _init_timer1 0C30              _system_time_count 01B5                       _delay_ms 1D6C  
           _load_voltage_value 00AF                ___lwdiv@divisor 0029                ___lwdiv@counter 002D  
                     _crc_data 00AB                       __ptext10 1AB3                       __ptext11 02B3  
                     __ptext20 3472                       __ptext12 3038                       __ptext21 0F49  
                     __ptext13 31B3                     _T1GCONbits 0019                       __ptext30 0C0F  
                     __ptext22 3461                       __ptext14 2A1E                       __ptext31 0C09  
                     __ptext23 1E00                       __ptext15 087A                       __ptext40 1D6C  
                     __ptext32 0C52                       __ptext24 0840                       __ptext16 07C1  
                     __ptext41 1E5A                       __ptext33 0BEA                       __ptext25 0BC4  
                     __ptext17 330C                       __ptext50 1D8F                       __ptext42 1D3E  
                     __ptext34 0BD5                       __ptext26 0C3D                       __ptext18 2C81  
                     __ptext51 0B0F                       __ptext43 1D13                       __ptext35 0A30  
                     __ptext27 0C30                       __ptext19 2ECF                       __ptext52 1E85  
                     __ptext44 29E1                       __ptext36 1DF6                       __ptext28 0F76  
                     __ptext45 29DC                       __ptext37 1EBF                       __ptext29 0C17  
                     __ptext54 08D8                       __ptext46 1E55                       __ptext38 19A6  
                     __ptext55 1FD9                       __ptext47 1DF1                       __ptext39 29BA  
                     __ptext56 0849                       __ptext48 29D7                       __ptext57 0844  
                     __ptext49 0AAA                 _buck_pwm_value 00A7      auto_system@sys_bt_voltage 0064  
                     _ird_data 02E6                       _init_adc 0BEA                       _light_pv 00C9  
         __size_of_Mppt_Charge 0155                       _init_key 0C09                  __size_of_main 005C  
           _step_02_time_limit 00D4                       _init_osc 0C0F                       _init_pwm 0F76  
                     _pid_calc 2C81        _shuchu_shortout_voltage 015D             __end_of_init_uart1 0C4E  
                     _pid_init 1DF6             __end_of_pid_calc_2 2C81                 _scan_key_value 2845  
           pnum$text11_split_1 005A             pnum$text11_split_2 005B             pnum$text11_split_3 005C  
           pnum$text11_split_4 005D             pnum$text11_split_5 005E                       _pv_index 014B  
               pid_calc@dError 00DD       _handle_task_process$3197 0060        _handle_an4_process_flag 0130  
           _step_03_time_limit 00D6                       _sys_mode 0150                     _FVRCONbits 0117  
                     memset@p1 0023                  _bt_time_count 01B7      __size_of_Disable_Buck_Pwm 0005  
                  ??_init_port 0023         _ird_receive_time_count 0139     __end_of_handle_uart_rx_buf 16ED  
                     intlevel1 0000         __end_of_scan_key_value 29BA               ___lldiv@dividend 0027  
                _pv_time_count 02A8             _step_04_time_limit 00D8       __end_of_start_ad_convert 31B3  
            __CFG_CLKOUTEN$OFF 0000               ??_handle_ad_loop 0064      handle_ad_loop@data_cc_var 02E3  
                pid_calc@Error 00EC               _ird_receive_flag 0138         _load2_short_time_count 01B1  
           _involid_time_count 02BD                    _mppt_status 013F          _limit_power_pid2_flag 013D  
             _dianchi_cv_level 01D5             _step_05_time_limit 016C               _Adjust_Pout_Flag 006A  
 __end_ofi1_Set_Bost_Pwm1_Duty 1FFC   __end_ofi1_Set_Bost_Pwm2_Duty 08FE               ___lldiv@quotient 002B  
            pid_calc_2@PWM_var 00E9             pid_calc_2@NowPoint 0057                     _WDTCONbits 0097  
                  _today_index 006B         _battery_low_time_count 01AF                  ?_eeprom_write 005E  
              ?_scan_key_value 0070                 crc16@usDataLen 0025       __size_of_Enable_Buck_Pwm 0004  
                 ?_eeprom_read 0070           _load_open_time_count 02C1               _uart1_time_count 0155  
  __end_ofi1_Disable_Bost_Pwm1 0849    __end_ofi1_Disable_Bost_Pwm2 084E  
